//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Thu Jul 31 17:24:10 2014 by ROOT version 5.34/19
// from TTree HeavyIonD3PD/HeavyIonD3PD
// found on file: NTUP_HI.01397074._000239.root.1
//////////////////////////////////////////////////////////

#ifndef MonteCarlo_h
#define MonteCarlo_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

// Header file for the classes stored in the TTree if any.
#include <vector>
#include <vector>
#include <vector>
#include <vector>
#include <vector>
#include <vector>
#include <vector>
#include <vector>

// Fixed size dimensions of array or collections stored in the TTree if any.

class MonteCarlo {
public :
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //!current Tree number in a TChain

   // Declaration of leaf types
   Bool_t          EF_2e5_loose1;
   Bool_t          EF_2e5_medium1;
   Bool_t          EF_2e5_tight1;
   Bool_t          EF_2g10_loose;
   Bool_t          EF_2g10_medium;
   Bool_t          EF_2g5_loose;
   Bool_t          EF_2g5_medium;
   Bool_t          EF_2g7_loose;
   Bool_t          EF_2g7_medium;
   Bool_t          EF_2j10_a4hi_EFFS_2L1J5;
   Bool_t          EF_2j10_a4hi_EFFS_2L1J5_L1TE90;
   Bool_t          EF_2j10_a4hi_EFFS_L1TE100;
   Bool_t          EF_2j10_a4hi_EFFS_L1TE90;
   Bool_t          EF_2j10_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_2j10_a4hi_deta40_L2mbMbts;
   Bool_t          EF_2j10_a4hi_eta50_deta40;
   Bool_t          EF_2j10_a4hi_eta50_deta40_L2mbMbts;
   Bool_t          EF_2j10_a4tchad_EFFS_L1RD0;
   Bool_t          EF_2j10_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_2j10_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_2j10_a4tchad_deta40_L1RD0;
   Bool_t          EF_2j10_a4tchad_deta40_L2mbMbts;
   Bool_t          EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0;
   Bool_t          EF_2j10_a4tchad_deta40_L2te_L1RD0;
   Bool_t          EF_2j10_a4tchad_eta50_deta40_L1RD0;
   Bool_t          EF_2j10_a4tchad_eta50_deta40_L2mbMbts;
   Bool_t          EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0;
   Bool_t          EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0;
   Bool_t          EF_2j15_a4hi_EFFS_2L1J5;
   Bool_t          EF_2j15_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_2j15_a4hi_deta40_L2mbMbts;
   Bool_t          EF_2j15_a4hi_eta50_deta40;
   Bool_t          EF_2j15_a4hi_eta50_deta40_L2mbMbts;
   Bool_t          EF_2j15_a4tchad_EFFS_L1RD0;
   Bool_t          EF_2j15_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_2j15_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_2j15_a4tchad_L2FS;
   Bool_t          EF_2j15_a4tchad_deta40_L2mbMbts;
   Bool_t          EF_2j15_a4tchad_eta50_deta40_L2mbMbts;
   Bool_t          EF_2j20_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_2j20_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_2j7_a4hi_EFFS_2L1J5;
   Bool_t          EF_2j7_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_2j7_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_2mu2_EFFS;
   Bool_t          EF_2mu2_EFFS_L1MU0;
   Bool_t          EF_2mu2_MSonly_EFFS_L1MBTS;
   Bool_t          EF_2mu2_MSonly_EFFS_L1MU0;
   Bool_t          EF_2mu2_MSonly_EFFS_L1ZDC_OR;
   Bool_t          EF_2mu4;
   Bool_t          EF_2mu4T_MSonly;
   Bool_t          EF_2mu4_Jpsimumu_IDTrkNoCut;
   Bool_t          EF_2mu4_MSonly;
   Bool_t          EF_2mu4_MSonly_EFFS_L1MU0;
   Bool_t          EF_2mu6T_MSonly;
   Bool_t          EF_2mu6_MSonly;
   Bool_t          EF_3j15_a4tchad_EFFS_L1RD0;
   Bool_t          EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_3j15_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_3j15_a4tchad_L2FS;
   Bool_t          EF_3j15_a4tchad_L2FS_2L1J5;
   Bool_t          EF_Background;
   Bool_t          EF_Background_RD0_EMPTY;
   Bool_t          EF_Background_RD0_UNPAIRED_ISO;
   Bool_t          EF_Background_RD0_UNPAIRED_NONISO;
   Bool_t          EF_CosmicsAllTeEFID;
   Bool_t          EF_CosmicsAllTeIDSCAN_AllPhysics_4Hits_TrkHypo;
   Bool_t          EF_CosmicsAllTeIDSCAN_AllPhysics_TrkHypo;
   Bool_t          EF_CosmicsAllTeSiTrack_AllPhysics_4Hits_TrkHypo;
   Bool_t          EF_CosmicsAllTeSiTrack_AllPhysics_TrkHypo;
   Bool_t          EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics;
   Bool_t          EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics_NoField;
   Bool_t          EF_CosmicsAllTeTRTxK_TRTTrkHypo_Pixel;
   Bool_t          EF_HLTTimeBurner;
   Bool_t          EF_InDetMon_FS;
   Bool_t          EF_L1EM10_NoAlg;
   Bool_t          EF_L1EM12_NoAlg;
   Bool_t          EF_L1EM14_NoAlg;
   Bool_t          EF_L1EM16_NoAlg;
   Bool_t          EF_L1EM3_NoAlg;
   Bool_t          EF_L1EM3_VTE20_hip_loose2_upc;
   Bool_t          EF_L1EM3_VTE50_hip_loose2_upc;
   Bool_t          EF_L1FJ0_empty_NoAlg;
   Bool_t          EF_L1FJ5_empty_NoAlg;
   Bool_t          EF_L1ItemStreamer_L1_2EM3;
   Bool_t          EF_L1ItemStreamer_L1_2EM5;
   Bool_t          EF_L1ItemStreamer_L1_2J10;
   Bool_t          EF_L1ItemStreamer_L1_2J5;
   Bool_t          EF_L1ItemStreamer_L1_2J5_TE90;
   Bool_t          EF_L1ItemStreamer_L1_2MU0;
   Bool_t          EF_L1ItemStreamer_L1_2MU0_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_2MU11;
   Bool_t          EF_L1ItemStreamer_L1_2MU4;
   Bool_t          EF_L1ItemStreamer_L1_2MU4_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_2MU6;
   Bool_t          EF_L1ItemStreamer_L1_2MU6_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_BCM_AC_CA_BGRP0;
   Bool_t          EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_BCM_HT_BGRP0;
   Bool_t          EF_L1ItemStreamer_L1_BCM_Wide_BGRP0;
   Bool_t          EF_L1ItemStreamer_L1_BCM_Wide_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_BGRP1;
   Bool_t          EF_L1ItemStreamer_L1_BGRP7;
   Bool_t          EF_L1ItemStreamer_L1_BPTX0_BGRP0;
   Bool_t          EF_L1ItemStreamer_L1_BPTX1_BGRP0;
   Bool_t          EF_L1ItemStreamer_L1_EM10;
   Bool_t          EF_L1ItemStreamer_L1_EM12;
   Bool_t          EF_L1ItemStreamer_L1_EM14;
   Bool_t          EF_L1ItemStreamer_L1_EM16;
   Bool_t          EF_L1ItemStreamer_L1_EM3;
   Bool_t          EF_L1ItemStreamer_L1_EM3_2J5;
   Bool_t          EF_L1ItemStreamer_L1_EM3_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_EM3_MV_VTE50;
   Bool_t          EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_EM3_VTE20;
   Bool_t          EF_L1ItemStreamer_L1_EM3_VTE50;
   Bool_t          EF_L1ItemStreamer_L1_EM4;
   Bool_t          EF_L1ItemStreamer_L1_EM5;
   Bool_t          EF_L1ItemStreamer_L1_EM5_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_EM7;
   Bool_t          EF_L1ItemStreamer_L1_FJ0;
   Bool_t          EF_L1ItemStreamer_L1_FJ0_A;
   Bool_t          EF_L1ItemStreamer_L1_FJ0_C;
   Bool_t          EF_L1ItemStreamer_L1_FJ0_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_FJ0_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_FJ10;
   Bool_t          EF_L1ItemStreamer_L1_FJ10_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_FJ15;
   Bool_t          EF_L1ItemStreamer_L1_FJ5;
   Bool_t          EF_L1ItemStreamer_L1_FJ5_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_FJ5_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_J10;
   Bool_t          EF_L1ItemStreamer_L1_J10_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_J10_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_J10_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_J10_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_J15;
   Bool_t          EF_L1ItemStreamer_L1_J18;
   Bool_t          EF_L1ItemStreamer_L1_J20;
   Bool_t          EF_L1ItemStreamer_L1_J30;
   Bool_t          EF_L1ItemStreamer_L1_J30_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_J30_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_J30_UNPAIRED;
   Bool_t          EF_L1ItemStreamer_L1_J5;
   Bool_t          EF_L1ItemStreamer_L1_J50;
   Bool_t          EF_L1ItemStreamer_L1_J5_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_J5_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_J5_TE90;
   Bool_t          EF_L1ItemStreamer_L1_J5_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_J5_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_J5_win6;
   Bool_t          EF_L1ItemStreamer_L1_L1A_Mon;
   Bool_t          EF_L1ItemStreamer_L1_LHCF;
   Bool_t          EF_L1ItemStreamer_L1_LUCID;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_A;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_A_C;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_A_C_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_BGRP7;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_C;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_COMM;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_COMM_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_LUCID_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA0;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA1;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA10;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA11;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA12;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA13;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA14;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA15;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA2;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA3;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA4;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA5;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA6;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA7;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA8;
   Bool_t          EF_L1ItemStreamer_L1_MBTSA9;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC0;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC1;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC10;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC11;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC12;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC13;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC14;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC15;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC2;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC3;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC4;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC5;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC6;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC7;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC8;
   Bool_t          EF_L1ItemStreamer_L1_MBTSC9;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_1;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_1_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_1_OVERLAY;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_1_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_2;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_2_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_2_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_BGRP7;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_3_3;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_3_3_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_3_3_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_4_4;
   Bool_t          EF_L1ItemStreamer_L1_MBTS_4_4_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MU0;
   Bool_t          EF_L1ItemStreamer_L1_MU0_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MU0_MV_VTE50;
   Bool_t          EF_L1ItemStreamer_L1_MU0_TE50;
   Bool_t          EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_MU0_VTE20;
   Bool_t          EF_L1ItemStreamer_L1_MU0_VTE50;
   Bool_t          EF_L1ItemStreamer_L1_MU11;
   Bool_t          EF_L1ItemStreamer_L1_MU11_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MU15;
   Bool_t          EF_L1ItemStreamer_L1_MU20;
   Bool_t          EF_L1ItemStreamer_L1_MU4;
   Bool_t          EF_L1ItemStreamer_L1_MU4_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_MU4_MV_VTE50;
   Bool_t          EF_L1ItemStreamer_L1_MU4_TE50;
   Bool_t          EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_MU4_VTE50;
   Bool_t          EF_L1ItemStreamer_L1_MU6;
   Bool_t          EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_NIM_S8C2B21;
   Bool_t          EF_L1ItemStreamer_L1_NIM_S8C2B22;
   Bool_t          EF_L1ItemStreamer_L1_NIM_S8C2B23;
   Bool_t          EF_L1ItemStreamer_L1_RD0_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_RD0_FILLED;
   Bool_t          EF_L1ItemStreamer_L1_RD0_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_RD0_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_RD0_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_RD1_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_RD1_FILLED;
   Bool_t          EF_L1ItemStreamer_L1_TAU3;
   Bool_t          EF_L1ItemStreamer_L1_TAU8_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_TAU8_FIRSTEMPTY;
   Bool_t          EF_L1ItemStreamer_L1_TAU8_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_TAU8_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_TE0;
   Bool_t          EF_L1ItemStreamer_L1_TE10;
   Bool_t          EF_L1ItemStreamer_L1_TE100;
   Bool_t          EF_L1ItemStreamer_L1_TE20;
   Bool_t          EF_L1ItemStreamer_L1_TE35;
   Bool_t          EF_L1ItemStreamer_L1_TE50;
   Bool_t          EF_L1ItemStreamer_L1_TE65;
   Bool_t          EF_L1ItemStreamer_L1_TE90;
   Bool_t          EF_L1ItemStreamer_L1_TRT;
   Bool_t          EF_L1ItemStreamer_L1_ZB;
   Bool_t          EF_L1ItemStreamer_L1_ZDC;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_AND;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A_BGRP7;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A_C;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A_C_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_NONISO;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_A_VTE20;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_C;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_C_BGRP7;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_C_VTE20;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_EMPTY;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_MBTS_1;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_MBTS_1_1;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_MBTS_2;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_MBTS_2_2;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_UNPAIRED_ISO;
   Bool_t          EF_L1ItemStreamer_L1_ZDC_UNPAIRED_NONISO;
   Bool_t          EF_L1J10_NoAlg;
   Bool_t          EF_L1J10_empty_NoAlg;
   Bool_t          EF_L1J10_firstempty_NoAlg;
   Bool_t          EF_L1J30_empty_NoAlg;
   Bool_t          EF_L1J30_firstempty_NoAlg;
   Bool_t          EF_L1J5_NoAlg;
   Bool_t          EF_L1J5_empty_NoAlg;
   Bool_t          EF_L1J5_firstempty_NoAlg;
   Bool_t          EF_L1LHCF_NoAlg;
   Bool_t          EF_L1MBTS_1_1_NoAlg;
   Bool_t          EF_L1MBTS_1_1_overlay_NoAlg;
   Bool_t          EF_L1MBTS_2_NoAlg;
   Bool_t          EF_L1MU0_NoAlg;
   Bool_t          EF_L1MU0_VTE20_hip_loose2_upc;
   Bool_t          EF_L1MU11_NoAlg;
   Bool_t          EF_L1MU15_NoAlg;
   Bool_t          EF_L1MU20_NoAlg;
   Bool_t          EF_L1MU4_NoAlg;
   Bool_t          EF_L1TAU3_NoAlg;
   Bool_t          EF_L1TE0_NoAlg;
   Bool_t          EF_L1TE100_NoAlg;
   Bool_t          EF_L1TE10_NoAlg;
   Bool_t          EF_L1TE20_NoAlg;
   Bool_t          EF_L1TE35_NoAlg;
   Bool_t          EF_L1TE50_NoAlg;
   Bool_t          EF_L1TE65_NoAlg;
   Bool_t          EF_L1TE90_NoAlg;
   Bool_t          EF_L1ZDC_A_NoAlg;
   Bool_t          EF_L1ZDC_A_VTE20_hip_loose2_upc;
   Bool_t          EF_L1ZDC_C_NoAlg;
   Bool_t          EF_L1ZDC_C_VTE20_hip_loose2_upc;
   Bool_t          EF_L1ZDC_NoAlg;
   Bool_t          EF_PreS_L1EM3_empty;
   Bool_t          EF_PreS_L1EM5_empty;
   Bool_t          EF_PreS_L1J10_empty;
   Bool_t          EF_PreS_L1J10_firstempty;
   Bool_t          EF_PreS_L1J30_empty;
   Bool_t          EF_PreS_L1J30_firstempty;
   Bool_t          EF_PreS_L1J5_empty;
   Bool_t          EF_PreS_L1TAU8_empty;
   Bool_t          EF_ROBRequestMon;
   Bool_t          EF_ROBRequestMonUnseeded;
   Bool_t          EF_SeededStreamerBCM_LUCID_ZDC;
   Bool_t          EF_SeededStreamerL1Calo;
   Bool_t          EF_SeededStreamerMBTS;
   Bool_t          EF_SeededStreamerMinBias;
   Bool_t          EF_SeededStreamerMuonswBeam;
   Bool_t          EF_SeededStreamerRNDM;
   Bool_t          EF_Standby;
   Bool_t          EF_TileCalib_laser;
   Bool_t          EF_allL1_NoAlg;
   Bool_t          EF_centrality100_60;
   Bool_t          EF_centrality80_60;
   Bool_t          EF_cost_monitor;
   Bool_t          EF_e10_loose1;
   Bool_t          EF_e10_medium1;
   Bool_t          EF_e14_tight1;
   Bool_t          EF_e15_loose0;
   Bool_t          EF_e15_loose1;
   Bool_t          EF_e15_loose1_IDTrkNoCut;
   Bool_t          EF_e15_medium1;
   Bool_t          EF_e5_loose1;
   Bool_t          EF_e5_medium1;
   Bool_t          EF_e5_medium1_IDTrkNoCut;
   Bool_t          EF_e5_tight1;
   Bool_t          EF_e5_tight1_e5_NoCut;
   Bool_t          EF_e7_loose1;
   Bool_t          EF_e7_medium1;
   Bool_t          EF_e7_tight1;
   Bool_t          EF_e9_tight1;
   Bool_t          EF_e9_tight1_e5_etcut;
   Bool_t          EF_fj10_a4hi_EFFS_L1FJ0;
   Bool_t          EF_fj10_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_fj10_a4tchad_EFFS_L1FJ0;
   Bool_t          EF_fj10_a4tchad_EFFS_L1RD0;
   Bool_t          EF_fj10_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_fj10_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_fj15_a4hi_EFFS_L1FJ0;
   Bool_t          EF_fj15_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_fj15_a4tchad_EFFS_L1FJ0;
   Bool_t          EF_fj15_a4tchad_EFFS_L1RD0;
   Bool_t          EF_fj15_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_fj15_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_fj7_a4hi_EFFS_L1FJ0;
   Bool_t          EF_fj7_a4tchad_EFFS_L1FJ0;
   Bool_t          EF_fte75_veto;
   Bool_t          EF_fte75_veto_mbMbts_2_2;
   Bool_t          EF_g10_loose;
   Bool_t          EF_g10_loose_larcalib;
   Bool_t          EF_g10_medium;
   Bool_t          EF_g10_medium_2j10_a4hi_EFFS_L1EM5;
   Bool_t          EF_g10_medium_2j10_a4tchad_EFFS_L1EM5;
   Bool_t          EF_g10_tight;
   Bool_t          EF_g12_loose;
   Bool_t          EF_g12_medium;
   Bool_t          EF_g12_tight;
   Bool_t          EF_g15_loose;
   Bool_t          EF_g15_medium;
   Bool_t          EF_g15_tight;
   Bool_t          EF_g20_loose;
   Bool_t          EF_g20_medium;
   Bool_t          EF_g5_NoCut_cosmic;
   Bool_t          EF_g5_loose;
   Bool_t          EF_g5_loose_2L1J5;
   Bool_t          EF_g5_loose_larcalib;
   Bool_t          EF_g5_medium;
   Bool_t          EF_g5_medium_2L1J5;
   Bool_t          EF_g5_tight;
   Bool_t          EF_g7_loose;
   Bool_t          EF_g7_medium;
   Bool_t          EF_g7_medium_2j10_a4hi_EFFS_L1EM3;
   Bool_t          EF_g7_medium_2j10_a4tchad_EFFS_L1EM3;
   Bool_t          EF_g7_tight;
   Bool_t          EF_g9_etcut;
   Bool_t          EF_g9_tight;
   Bool_t          EF_j100_a4hi_EFFS_L1J20;
   Bool_t          EF_j100_a4tchad_EFFS_L1J20;
   Bool_t          EF_j10_a4hi_EFFS_L1EM3;
   Bool_t          EF_j10_a4hi_EFFS_L1J5;
   Bool_t          EF_j10_a4hi_EFFS_L1TAU3;
   Bool_t          EF_j10_a4hi_EFFS_L1TE100;
   Bool_t          EF_j10_a4hi_EFFS_L1TE90;
   Bool_t          EF_j10_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_j10_a4tchad_EFFS_L1J5;
   Bool_t          EF_j10_a4tchad_EFFS_L1RD0;
   Bool_t          EF_j10_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_j10_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_j10_u0uchad_LArNoiseBurst;
   Bool_t          EF_j10_u0uchad_empty_LArNoiseBurst;
   Bool_t          EF_j10_u0uchad_firstempty_LArNoiseBurst;
   Bool_t          EF_j15_Ecorr;
   Bool_t          EF_j15_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_j15_a4tchad_EFFS_L1RD0;
   Bool_t          EF_j15_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_j15_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_j15_a4tj_EFFS_L1ZDC;
   Bool_t          EF_j20_Ecorr;
   Bool_t          EF_j20_a4hi_EFFS_L1J10;
   Bool_t          EF_j20_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_j20_a4tchad_EFFS_L1J5;
   Bool_t          EF_j20_a4tchad_EFFS_L1RD0;
   Bool_t          EF_j20_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_j20_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_j20_a4tj_EFFS_L1ZDC;
   Bool_t          EF_j30_a4hi_EFFS_L1J10;
   Bool_t          EF_j30_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_j30_a4tchad_EFFS_L1J5;
   Bool_t          EF_j30_a4tchad_EFFS_L1RD0;
   Bool_t          EF_j30_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0;
   Bool_t          EF_j30_a4tchad_EFFS_L2te_L1RD0;
   Bool_t          EF_j30_u0uchad_empty_LArNoiseBurst;
   Bool_t          EF_j40_a4hi_EFFS_L1J10;
   Bool_t          EF_j40_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_j40_a4tchad_EFFS_L1J5;
   Bool_t          EF_j40_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j40_a4tj_EFFS_L1ZDC;
   Bool_t          EF_j50_a4hi_EFFS_L1J10;
   Bool_t          EF_j50_a4hi_EFFS_L2mbMbts;
   Bool_t          EF_j50_a4tchad_EFFS_L1J10;
   Bool_t          EF_j50_a4tchad_EFFS_L1J15;
   Bool_t          EF_j50_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j60_a4hi_EFFS_L1J15;
   Bool_t          EF_j60_a4tchad_EFFS_L1J10;
   Bool_t          EF_j60_a4tchad_EFFS_L1J15;
   Bool_t          EF_j75_a4hi_EFFS_L1J10;
   Bool_t          EF_j75_a4hi_EFFS_L1J15;
   Bool_t          EF_j75_a4tchad_EFFS_L1J10;
   Bool_t          EF_j75_a4tchad_EFFS_L1J15;
   Bool_t          EF_j75_a4tj_EFFS_L1ZDC;
   Bool_t          EF_j7_a4tchad_EFFS_L1J5;
   Bool_t          EF_j7_a4tchad_EFFS_L2mbMbts;
   Bool_t          EF_j80_a4hi_EFFS_L1J15;
   Bool_t          EF_j80_a4tchad_EFFS_L1J15;
   Bool_t          EF_j90_a4hi_EFFS_L1J15;
   Bool_t          EF_j90_a4tchad_EFFS_L1J15;
   Bool_t          EF_mbLucid_eff;
   Bool_t          EF_mbLucid_eff_unpaired_iso;
   Bool_t          EF_mbMbts_1_1;
   Bool_t          EF_mbMbts_1_1_eff;
   Bool_t          EF_mbMbts_1_1_eff_unpaired_iso;
   Bool_t          EF_mbMbts_1_1_overlay;
   Bool_t          EF_mbMbts_1_1_unpaired_iso;
   Bool_t          EF_mbMbts_2;
   Bool_t          EF_mbMbts_2_2;
   Bool_t          EF_mbMbts_2_2_eff;
   Bool_t          EF_mbMbts_2_2_eff_unpaired_iso;
   Bool_t          EF_mbMbts_2_2_unpaired_iso;
   Bool_t          EF_mbMbts_2_eff;
   Bool_t          EF_mbMbts_2_eff_unpaired_iso;
   Bool_t          EF_mbMbts_2_unpaired_iso;
   Bool_t          EF_mbMbts_3_3;
   Bool_t          EF_mbMbts_3_3_eff;
   Bool_t          EF_mbMbts_3_3_eff_unpaired_iso;
   Bool_t          EF_mbMbts_3_3_unpaired_iso;
   Bool_t          EF_mbMbts_4_4;
   Bool_t          EF_mbMbts_4_4_eff;
   Bool_t          EF_mbMbts_4_4_eff_unpaired_iso;
   Bool_t          EF_mbMbts_4_4_unpaired_iso;
   Bool_t          EF_mbRd0_eff_unpaired_iso;
   Bool_t          EF_mbRd1_eff;
   Bool_t          EF_mbSpBg_noiseSup_unpaired_iso;
   Bool_t          EF_mbSpBg_unpaired_iso;
   Bool_t          EF_mbSpTrk;
   Bool_t          EF_mbSpTrkVtxMh;
   Bool_t          EF_mbSpTrkVtxMh_eff;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk100_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk110_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk120_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk130_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk140_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk140_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk140_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk150_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk150_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk155_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk155_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk160_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk160_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk160_L1TE50_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk170_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk170_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk175_L1MBTS;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk175_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk175_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk180_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk180_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk180_L1TE50_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk180_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk190_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk190_L1TE50;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk190_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk200_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk200_L1TE65_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk200_L1TE90;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk210_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk210_L1TE90;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk220_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk220_L1TE90;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk225_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk230_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk230_L1TE90;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk240_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk240_L1TE90;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk240_L1TE90_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk245_L1TE65;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk260_L1TE90;
   Bool_t          EF_mbSpTrkVtxMh_hip_trk260_L1TE90_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE0;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk100_L1TE35_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk110_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk110_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk110_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk110_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk110_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk110_L1TE35_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk120_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk120_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk120_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk120_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk120_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk120_L1TE35_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk130_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk130_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk130_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk130_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk130_L1TE35;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk130_L1TE35_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk30_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk30_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk30_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk50_L1MBTS;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk50_L1MBTS_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk50_L1TE0;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk50_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk50_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk50_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk60_L1MBTS;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk60_L1MBTS_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk60_L1TE0;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk60_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk60_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk60_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk70_L1TE0;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk70_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk70_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk70_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk70_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk70_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk80_L1TE0;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk80_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk80_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk80_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk80_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk80_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk90_L1TE0;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk90_L1TE0_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk90_L1TE10;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk90_L1TE10_pileupSup;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk90_L1TE20;
   Bool_t          EF_mbSpTrkVtxMh_pp_trk90_L1TE20_pileupSup;
   Bool_t          EF_mbSpTrk_L1FJ0;
   Bool_t          EF_mbSpTrk_L1FJ0_A;
   Bool_t          EF_mbSpTrk_L1FJ0_C;
   Bool_t          EF_mbSpTrk_L1LHCF;
   Bool_t          EF_mbSpTrk_L1MBTS_1;
   Bool_t          EF_mbSpTrk_L1MBTS_1_1;
   Bool_t          EF_mbSpTrk_L1MBTS_2;
   Bool_t          EF_mbSpTrk_L1TE0;
   Bool_t          EF_mbSpTrk_L1ZDC;
   Bool_t          EF_mbSpTrk_L1ZDC_A;
   Bool_t          EF_mbSpTrk_L1ZDC_C;
   Bool_t          EF_mbSpTrk_empty;
   Bool_t          EF_mbSpTrk_noiseSup;
   Bool_t          EF_mbSpTrk_noiseSup_unpaired_iso;
   Bool_t          EF_mbSpTrk_unpaired_iso;
   Bool_t          EF_mbSp_L1BGRP1;
   Bool_t          EF_mbZdc_HG_eff;
   Bool_t          EF_mbZdc_HG_eff_L1MBTS2;
   Bool_t          EF_mbZdc_HG_sideA;
   Bool_t          EF_mbZdc_HG_sideC;
   Bool_t          EF_mbZdc_LG_eff;
   Bool_t          EF_mbZdc_LG_sideA;
   Bool_t          EF_mbZdc_LG_sideA_L1MBTS2;
   Bool_t          EF_mbZdc_LG_sideC;
   Bool_t          EF_mbZdc_LG_sideC_L1MBTS2;
   Bool_t          EF_mbZdc_a_c_L2Zdc_eff;
   Bool_t          EF_mbZdc_a_c_Mbts_1_1;
   Bool_t          EF_mbZdc_a_c_Mbts_2_2;
   Bool_t          EF_mbZdc_a_c_NoAlg;
   Bool_t          EF_mbZdc_a_c_cosmic_NoAlg;
   Bool_t          EF_mbZdc_a_c_eff;
   Bool_t          EF_mbZdc_a_c_eff_unpaired_iso;
   Bool_t          EF_mbZdc_and_Mbts_1_1;
   Bool_t          EF_mbZdc_and_Mbts_2_2;
   Bool_t          EF_mu10;
   Bool_t          EF_mu10T_MSonly;
   Bool_t          EF_mu10_IDTrkNoCut;
   Bool_t          EF_mu10_MSonly;
   Bool_t          EF_mu13T_MSonly;
   Bool_t          EF_mu13_MSonly;
   Bool_t          EF_mu2;
   Bool_t          EF_mu4;
   Bool_t          EF_mu4T;
   Bool_t          EF_mu4T_IDTrkNoCut;
   Bool_t          EF_mu4T_MSonly;
   Bool_t          EF_mu4T_MSonly_barrel;
   Bool_t          EF_mu4T_MSonly_cosmic;
   Bool_t          EF_mu4T_cosmic;
   Bool_t          EF_mu4_IDTrkNoCut;
   Bool_t          EF_mu4_MSonly;
   Bool_t          EF_mu4_MSonly_EFFS_L1MBTS;
   Bool_t          EF_mu4_MSonly_EFFS_L1ZDC_OR;
   Bool_t          EF_mu4_MSonly_barrel;
   Bool_t          EF_mu4_MSonly_cosmic;
   Bool_t          EF_mu4_MSonly_j15_a2hi_EFFS_matched;
   Bool_t          EF_mu4_MSonly_j15_a4tchad_EFFS_matched;
   Bool_t          EF_mu4_cosmic;
   Bool_t          EF_mu4_j10_a4hi_EFFS_matched;
   Bool_t          EF_mu4_j10_a4tchad_EFFS_matched;
   Bool_t          EF_mu4_j15_a4hi_EFFS_matched;
   Bool_t          EF_mu4_j15_a4tchad_EFFS_matched;
   Bool_t          EF_mu4_j20_a4hi_EFFS_matched;
   Bool_t          EF_mu4_j20_a4tchad_EFFS_matched;
   Bool_t          EF_mu4_j30_a4hi_EFFS_matched;
   Bool_t          EF_mu4_j30_a4tchad_EFFS_matched;
   Bool_t          EF_mu4_j40_a4hi_EFFS_matched;
   Bool_t          EF_mu4_j40_a4tchad_EFFS_matched;
   Bool_t          EF_mu4_mu2_EFFS;
   Bool_t          EF_mu4_mu2_EFFS_L1MU0;
   Bool_t          EF_mu6;
   Bool_t          EF_mu6T;
   Bool_t          EF_mu6T_IDTrkNoCut;
   Bool_t          EF_mu6T_MSonly;
   Bool_t          EF_mu6_IDTrkNoCut;
   Bool_t          EF_mu6_MSonly;
   Bool_t          EF_mu8;
   Bool_t          EF_mu8_IDTrkNoCut;
   Bool_t          EF_rd0_empty_NoAlg;
   Bool_t          EF_rd0_filled_NoAlg;
   Bool_t          EF_rd1_empty_NoAlg;
   Bool_t          EF_tauNoCut_cosmic;
   Bool_t          EF_xe20_FEB_L1EM5;
   Bool_t          EF_xe20_FEB_L1J10;
   Bool_t          EF_xe20_FEB_L1MU0;
   Bool_t          EF_xe20_FEB_L1TE65;
   Bool_t          EF_xe20_FEB_L1TE90;
   Bool_t          EF_xe25_FEB_L1TE65;
   Bool_t          EF_xe25_FEB_L1TE90;
   Bool_t          EF_xe30_FEB_L1EM5;
   Bool_t          EF_xe30_FEB_L1J10;
   Bool_t          EF_xe30_FEB_L1MU0;
   Bool_t          EF_xe30_FEB_L1TE65;
   Bool_t          EF_xe30_FEB_L1TE90;
   Bool_t          EF_xe40_FEB_L1EM5;
   Bool_t          EF_xe40_FEB_L1J10;
   Bool_t          EF_xe40_FEB_L1MU0;
   Bool_t          EF_xe40_FEB_L1TE65;
   Bool_t          EF_xe40_FEB_L1TE90;
   Bool_t          EF_zerobias_NoAlg;
   Bool_t          EF_zerobias_Overlay_L2mbMbts;
   Bool_t          EF_zerobias_Overlay_L2te;
   Bool_t          EF_zerobias_Overlay_NoAlg;
   Bool_t          L1_2EM3;
   Bool_t          L1_2EM5;
   Bool_t          L1_2MU0;
   Bool_t          L1_2MU0_EMPTY;
   Bool_t          L1_2MU11;
   Bool_t          L1_2MU20;
   Bool_t          L1_2MU4;
   Bool_t          L1_2MU4_EMPTY;
   Bool_t          L1_2MU6;
   Bool_t          L1_2MU6_EMPTY;
   Bool_t          L1_2MU6_FIRSTEMPTY;
   Bool_t          L1_2MU6_UNPAIRED_ISO;
   Bool_t          L1_2MU6_UNPAIRED_NONISO;
   Bool_t          L1_EM10;
   Bool_t          L1_EM12;
   Bool_t          L1_EM14;
   Bool_t          L1_EM16;
   Bool_t          L1_EM3;
   Bool_t          L1_EM3_2J5;
   Bool_t          L1_EM3_EMPTY;
   Bool_t          L1_EM3_FIRSTEMPTY;
   Bool_t          L1_EM3_MV_VTE50;
   Bool_t          L1_EM3_UNPAIRED_ISO;
   Bool_t          L1_EM3_UNPAIRED_NONISO;
   Bool_t          L1_EM3_VTE20;
   Bool_t          L1_EM3_VTE50;
   Bool_t          L1_EM4;
   Bool_t          L1_EM5;
   Bool_t          L1_EM5_EMPTY;
   Bool_t          L1_EM7;
   Bool_t          L1_MU0;
   Bool_t          L1_MU0_EMPTY;
   Bool_t          L1_MU0_FIRSTEMPTY;
   Bool_t          L1_MU0_MV_VTE50;
   Bool_t          L1_MU0_TE50;
   Bool_t          L1_MU0_UNPAIRED_ISO;
   Bool_t          L1_MU0_UNPAIRED_NONISO;
   Bool_t          L1_MU0_VTE20;
   Bool_t          L1_MU0_VTE50;
   Bool_t          L1_MU11;
   Bool_t          L1_MU11_EMPTY;
   Bool_t          L1_MU15;
   Bool_t          L1_MU20;
   Bool_t          L1_MU4;
   Bool_t          L1_MU4_EMPTY;
   Bool_t          L1_MU4_FIRSTEMPTY;
   Bool_t          L1_MU4_MV_VTE50;
   Bool_t          L1_MU4_TE50;
   Bool_t          L1_MU4_UNPAIRED_ISO;
   Bool_t          L1_MU4_UNPAIRED_NONISO;
   Bool_t          L1_MU4_VTE50;
   Bool_t          L1_MU6;
   Bool_t          L1_MU6_FIRSTEMPTY;
   Bool_t          L2_2e5_loose1;
   Bool_t          L2_2e5_medium1;
   Bool_t          L2_2e5_tight1;
   Bool_t          L2_2g10_loose;
   Bool_t          L2_2g10_medium;
   Bool_t          L2_2g5_loose;
   Bool_t          L2_2g5_medium;
   Bool_t          L2_2g7_loose;
   Bool_t          L2_2g7_medium;
   Bool_t          L2_2mu2_EFFS_L1MU0;
   Bool_t          L2_2mu2_MSonly_EFFS_L1MBTS;
   Bool_t          L2_2mu2_MSonly_EFFS_L1MU0;
   Bool_t          L2_2mu2_MSonly_EFFS_L1ZDC_OR;
   Bool_t          L2_2mu4;
   Bool_t          L2_2mu4T_MSonly;
   Bool_t          L2_2mu4_Jpsimumu_IDTrkNoCut;
   Bool_t          L2_2mu4_MSonly;
   Bool_t          L2_2mu4_MSonly_EFFS_L1MU0;
   Bool_t          L2_2mu6T_MSonly;
   Bool_t          L2_2mu6_MSonly;
   Bool_t          L2_L1ItemStreamer_L1_2EM3;
   Bool_t          L2_L1ItemStreamer_L1_2EM5;
   Bool_t          L2_L1ItemStreamer_L1_2MU0;
   Bool_t          L2_L1ItemStreamer_L1_2MU0_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_2MU11;
   Bool_t          L2_L1ItemStreamer_L1_2MU4;
   Bool_t          L2_L1ItemStreamer_L1_2MU4_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_2MU6;
   Bool_t          L2_L1ItemStreamer_L1_2MU6_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY;
   Bool_t          L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO;
   Bool_t          L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO;
   Bool_t          L2_L1ItemStreamer_L1_EM10;
   Bool_t          L2_L1ItemStreamer_L1_EM12;
   Bool_t          L2_L1ItemStreamer_L1_EM14;
   Bool_t          L2_L1ItemStreamer_L1_EM16;
   Bool_t          L2_L1ItemStreamer_L1_EM3;
   Bool_t          L2_L1ItemStreamer_L1_EM3_2J5;
   Bool_t          L2_L1ItemStreamer_L1_EM3_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY;
   Bool_t          L2_L1ItemStreamer_L1_EM3_MV_VTE50;
   Bool_t          L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;
   Bool_t          L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;
   Bool_t          L2_L1ItemStreamer_L1_EM3_VTE20;
   Bool_t          L2_L1ItemStreamer_L1_EM3_VTE50;
   Bool_t          L2_L1ItemStreamer_L1_EM4;
   Bool_t          L2_L1ItemStreamer_L1_EM5;
   Bool_t          L2_L1ItemStreamer_L1_EM5_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_EM7;
   Bool_t          L2_L1ItemStreamer_L1_MU0;
   Bool_t          L2_L1ItemStreamer_L1_MU0_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY;
   Bool_t          L2_L1ItemStreamer_L1_MU0_MV_VTE50;
   Bool_t          L2_L1ItemStreamer_L1_MU0_TE50;
   Bool_t          L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO;
   Bool_t          L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO;
   Bool_t          L2_L1ItemStreamer_L1_MU0_VTE20;
   Bool_t          L2_L1ItemStreamer_L1_MU0_VTE50;
   Bool_t          L2_L1ItemStreamer_L1_MU11;
   Bool_t          L2_L1ItemStreamer_L1_MU11_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_MU15;
   Bool_t          L2_L1ItemStreamer_L1_MU20;
   Bool_t          L2_L1ItemStreamer_L1_MU4;
   Bool_t          L2_L1ItemStreamer_L1_MU4_EMPTY;
   Bool_t          L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY;
   Bool_t          L2_L1ItemStreamer_L1_MU4_MV_VTE50;
   Bool_t          L2_L1ItemStreamer_L1_MU4_TE50;
   Bool_t          L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO;
   Bool_t          L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO;
   Bool_t          L2_L1ItemStreamer_L1_MU4_VTE50;
   Bool_t          L2_L1ItemStreamer_L1_MU6;
   Bool_t          L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY;
   Bool_t          L2_SeededStreamerL1Calo;
   Bool_t          L2_e10_loose1;
   Bool_t          L2_e10_medium1;
   Bool_t          L2_e14_tight1;
   Bool_t          L2_e15_loose0;
   Bool_t          L2_e15_loose1;
   Bool_t          L2_e15_loose1_IDTrkNoCut;
   Bool_t          L2_e15_medium1;
   Bool_t          L2_e5_loose1;
   Bool_t          L2_e5_medium1;
   Bool_t          L2_e5_medium1_IDTrkNoCut;
   Bool_t          L2_e5_tight1;
   Bool_t          L2_e5_tight1_e5_NoCut;
   Bool_t          L2_e7_loose1;
   Bool_t          L2_e7_medium1;
   Bool_t          L2_e7_tight1;
   Bool_t          L2_e9_tight1;
   Bool_t          L2_e9_tight1_e5_etcut;
   Bool_t          L2_em3_empty_larcalib;
   Bool_t          L2_em5_empty_larcalib;
   Bool_t          L2_g10_loose;
   Bool_t          L2_g10_medium;
   Bool_t          L2_g10_medium_2j10_a4hi_EFFS_L1EM5;
   Bool_t          L2_g10_medium_2j10_a4tchad_EFFS_L1EM5;
   Bool_t          L2_g10_tight;
   Bool_t          L2_g12_loose;
   Bool_t          L2_g12_medium;
   Bool_t          L2_g12_tight;
   Bool_t          L2_g15_loose;
   Bool_t          L2_g15_medium;
   Bool_t          L2_g15_tight;
   Bool_t          L2_g20_loose;
   Bool_t          L2_g20_medium;
   Bool_t          L2_g5_NoCut_cosmic;
   Bool_t          L2_g5_loose;
   Bool_t          L2_g5_loose_2L1J5;
   Bool_t          L2_g5_medium;
   Bool_t          L2_g5_medium_2L1J5;
   Bool_t          L2_g5_tight;
   Bool_t          L2_g7_loose;
   Bool_t          L2_g7_medium;
   Bool_t          L2_g7_medium_2j10_a4hi_EFFS_L1EM3;
   Bool_t          L2_g7_medium_2j10_a4tchad_EFFS_L1EM3;
   Bool_t          L2_g7_tight;
   Bool_t          L2_g9_etcut;
   Bool_t          L2_g9_tight;
   Bool_t          L2_mu10;
   Bool_t          L2_mu10T_MSonly;
   Bool_t          L2_mu10_IDTrkNoCut;
   Bool_t          L2_mu10_MSonly;
   Bool_t          L2_mu13T_MSonly;
   Bool_t          L2_mu13_MSonly;
   Bool_t          L2_mu2;
   Bool_t          L2_mu4;
   Bool_t          L2_mu4T;
   Bool_t          L2_mu4T_IDTrkNoCut;
   Bool_t          L2_mu4T_MSonly;
   Bool_t          L2_mu4T_MSonly_barrel;
   Bool_t          L2_mu4T_MSonly_cosmic;
   Bool_t          L2_mu4T_cosmic;
   Bool_t          L2_mu4T_l2cal;
   Bool_t          L2_mu4_IDTrkNoCut;
   Bool_t          L2_mu4_MSonly;
   Bool_t          L2_mu4_MSonly_EFFS_L1MBTS;
   Bool_t          L2_mu4_MSonly_EFFS_L1ZDC_OR;
   Bool_t          L2_mu4_MSonly_barrel;
   Bool_t          L2_mu4_MSonly_cosmic;
   Bool_t          L2_mu4_cosmic;
   Bool_t          L2_mu4_l2cal_empty;
   Bool_t          L2_mu4_mu2_EFFS_L1MU0;
   Bool_t          L2_mu6;
   Bool_t          L2_mu6T;
   Bool_t          L2_mu6T_IDTrkNoCut;
   Bool_t          L2_mu6T_MSonly;
   Bool_t          L2_mu6_IDTrkNoCut;
   Bool_t          L2_mu6_MSonly;
   Bool_t          L2_mu6_l2cal;
   Bool_t          L2_mu8;
   Bool_t          L2_mu8_IDTrkNoCut;
   Bool_t          L2_xe20_FEB_L1EM5;
   Bool_t          L2_xe20_FEB_L1J10;
   Bool_t          L2_xe20_FEB_L1MU0;
   Bool_t          L2_xe20_FEB_L1TE65;
   Bool_t          L2_xe20_FEB_L1TE90;
   Bool_t          L2_xe25_FEB_L1TE65;
   Bool_t          L2_xe25_FEB_L1TE90;
   Bool_t          L2_xe30_FEB_L1EM5;
   Bool_t          L2_xe30_FEB_L1J10;
   Bool_t          L2_xe30_FEB_L1MU0;
   Bool_t          L2_xe30_FEB_L1TE65;
   Bool_t          L2_xe30_FEB_L1TE90;
   Bool_t          L2_xe40_FEB_L1EM5;
   Bool_t          L2_xe40_FEB_L1J10;
   Bool_t          L2_xe40_FEB_L1MU0;
   Bool_t          L2_xe40_FEB_L1TE65;
   Bool_t          L2_xe40_FEB_L1TE90;
   vector<int>     *trig_EF_ph_EF_2g10_loose;
   vector<int>     *trig_EF_ph_EF_2g10_medium;
   vector<int>     *trig_EF_ph_EF_2g5_loose;
   vector<int>     *trig_EF_ph_EF_2g5_medium;
   vector<int>     *trig_EF_ph_EF_2g7_loose;
   vector<int>     *trig_EF_ph_EF_2g7_medium;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM10;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM12;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM14;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM16;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_2J5;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_EMPTY;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_MV_VTE50;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE20;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE50;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM4;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM5;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM5_EMPTY;
   vector<int>     *trig_EF_ph_EF_L1ItemStreamer_L1_EM7;
   vector<int>     *trig_EF_ph_EF_SeededStreamerL1Calo;
   vector<int>     *trig_EF_ph_EF_g10_loose;
   vector<int>     *trig_EF_ph_EF_g10_loose_larcalib;
   vector<int>     *trig_EF_ph_EF_g10_medium;
   vector<int>     *trig_EF_ph_EF_g10_medium_2j10_a4hi_EFFS_L1EM5;
   vector<int>     *trig_EF_ph_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5;
   vector<int>     *trig_EF_ph_EF_g10_tight;
   vector<int>     *trig_EF_ph_EF_g12_loose;
   vector<int>     *trig_EF_ph_EF_g12_medium;
   vector<int>     *trig_EF_ph_EF_g12_tight;
   vector<int>     *trig_EF_ph_EF_g15_loose;
   vector<int>     *trig_EF_ph_EF_g15_medium;
   vector<int>     *trig_EF_ph_EF_g15_tight;
   vector<int>     *trig_EF_ph_EF_g20_loose;
   vector<int>     *trig_EF_ph_EF_g20_medium;
   vector<int>     *trig_EF_ph_EF_g5_NoCut_cosmic;
   vector<int>     *trig_EF_ph_EF_g5_loose;
   vector<int>     *trig_EF_ph_EF_g5_loose_2L1J5;
   vector<int>     *trig_EF_ph_EF_g5_loose_larcalib;
   vector<int>     *trig_EF_ph_EF_g5_medium;
   vector<int>     *trig_EF_ph_EF_g5_medium_2L1J5;
   vector<int>     *trig_EF_ph_EF_g5_tight;
   vector<int>     *trig_EF_ph_EF_g7_loose;
   vector<int>     *trig_EF_ph_EF_g7_medium;
   vector<int>     *trig_EF_ph_EF_g7_medium_2j10_a4hi_EFFS_L1EM3;
   vector<int>     *trig_EF_ph_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3;
   vector<int>     *trig_EF_ph_EF_g7_tight;
   vector<int>     *trig_EF_ph_EF_g9_etcut;
   vector<int>     *trig_EF_ph_EF_g9_tight;
   vector<int>     *trig_EF_el_EF_2e5_loose1;
   vector<int>     *trig_EF_el_EF_2e5_medium1;
   vector<int>     *trig_EF_el_EF_2e5_tight1;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM10;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM12;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM14;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM16;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_2J5;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_EMPTY;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_MV_VTE50;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE20;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE50;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM4;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM5;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM5_EMPTY;
   vector<int>     *trig_EF_el_EF_L1ItemStreamer_L1_EM7;
   vector<int>     *trig_EF_el_EF_SeededStreamerL1Calo;
   vector<int>     *trig_EF_el_EF_e10_loose1;
   vector<int>     *trig_EF_el_EF_e10_medium1;
   vector<int>     *trig_EF_el_EF_e14_tight1;
   vector<int>     *trig_EF_el_EF_e15_loose0;
   vector<int>     *trig_EF_el_EF_e15_loose1;
   vector<int>     *trig_EF_el_EF_e15_loose1_IDTrkNoCut;
   vector<int>     *trig_EF_el_EF_e15_medium1;
   vector<int>     *trig_EF_el_EF_e5_loose1;
   vector<int>     *trig_EF_el_EF_e5_medium1;
   vector<int>     *trig_EF_el_EF_e5_medium1_IDTrkNoCut;
   vector<int>     *trig_EF_el_EF_e5_tight1;
   vector<int>     *trig_EF_el_EF_e5_tight1_e5_NoCut;
   vector<int>     *trig_EF_el_EF_e7_loose1;
   vector<int>     *trig_EF_el_EF_e7_medium1;
   vector<int>     *trig_EF_el_EF_e7_tight1;
   vector<int>     *trig_EF_el_EF_e9_tight1;
   vector<int>     *trig_EF_el_EF_e9_tight1_e5_etcut;
   vector<int>     *trig_EF_trigmuonef_EF_2mu2_EFFS;
   vector<int>     *trig_EF_trigmuonef_EF_2mu2_EFFS_L1MU0;
   vector<int>     *trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS;
   vector<int>     *trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MU0;
   vector<int>     *trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR;
   vector<int>     *trig_EF_trigmuonef_EF_2mu4;
   vector<int>     *trig_EF_trigmuonef_EF_2mu4T_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_2mu4_Jpsimumu_IDTrkNoCut;
   vector<int>     *trig_EF_trigmuonef_EF_2mu4_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0;
   vector<int>     *trig_EF_trigmuonef_EF_2mu6T_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_2mu6_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE20;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6;
   vector<int>     *trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY;
   vector<int>     *trig_EF_trigmuonef_EF_mu10;
   vector<int>     *trig_EF_trigmuonef_EF_mu10T_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu10_IDTrkNoCut;
   vector<int>     *trig_EF_trigmuonef_EF_mu10_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu13T_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu13_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu2;
   vector<int>     *trig_EF_trigmuonef_EF_mu4;
   vector<int>     *trig_EF_trigmuonef_EF_mu4T;
   vector<int>     *trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut;
   vector<int>     *trig_EF_trigmuonef_EF_mu4T_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu4T_MSonly_barrel;
   vector<int>     *trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic;
   vector<int>     *trig_EF_trigmuonef_EF_mu4T_cosmic;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_IDTrkNoCut;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly_barrel;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly_cosmic;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_MSonly_j15_a4tchad_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_cosmic;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j10_a4hi_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j10_a4tchad_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j15_a4hi_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j15_a4tchad_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j20_a4hi_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j20_a4tchad_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j30_a4hi_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j30_a4tchad_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_j40_a4tchad_EFFS_matched;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_mu2_EFFS;
   vector<int>     *trig_EF_trigmuonef_EF_mu4_mu2_EFFS_L1MU0;
   vector<int>     *trig_EF_trigmuonef_EF_mu6;
   vector<int>     *trig_EF_trigmuonef_EF_mu6T;
   vector<int>     *trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut;
   vector<int>     *trig_EF_trigmuonef_EF_mu6T_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu6_IDTrkNoCut;
   vector<int>     *trig_EF_trigmuonef_EF_mu6_MSonly;
   vector<int>     *trig_EF_trigmuonef_EF_mu8;
   vector<int>     *trig_EF_trigmuonef_EF_mu8_IDTrkNoCut;
   UInt_t          RunNumber;
   UInt_t          EventNumber;
   UInt_t          timestamp;
   UInt_t          timestamp_ns;
   UInt_t          lbn;
   UInt_t          bcid;
   UInt_t          detmask0;
   UInt_t          detmask1;
   Float_t         actualIntPerXing;
   Float_t         averageIntPerXing;
   UInt_t          mc_channel_number;
   UInt_t          mc_event_number;
   Float_t         mc_event_weight;
   UInt_t          pixelFlags;
   UInt_t          sctFlags;
   UInt_t          trtFlags;
   UInt_t          larFlags;
   UInt_t          tileFlags;
   UInt_t          muonFlags;
   UInt_t          fwdFlags;
   UInt_t          coreFlags;
   UInt_t          pixelError;
   UInt_t          sctError;
   UInt_t          trtError;
   UInt_t          larError;
   UInt_t          tileError;
   UInt_t          muonError;
   UInt_t          fwdError;
   UInt_t          coreError;
   Bool_t          isSimulation;
   Bool_t          isCalibration;
   Bool_t          isTestBeam;
   Int_t           mb_n;
   vector<float>   *mb_E;
   vector<float>   *mb_eta;
   vector<float>   *mb_phi;
   vector<float>   *mb_time;
   vector<int>     *mb_quality;
   vector<int>     *mb_type;
   vector<int>     *mb_module;
   vector<int>     *mb_channel;
   Float_t         mbtime_timeDiff;
   Float_t         mbtime_timeA;
   Float_t         mbtime_timeC;
   Int_t           mbtime_countA;
   Int_t           mbtime_countC;
   ULong64_t       alfa_DCS_BLM;
   ULong64_t       alfa_DCS_HVCHANNEL;
   ULong64_t       alfa_DCS_LOCALMONITORING;
   ULong64_t       alfa_DCS_MOVEMENT;
   ULong64_t       alfa_DCS_RADMON;
   ULong64_t       alfa_DCS_TRIGGERRATES;
   ULong64_t       alfa_DCS_FECONFIGURATION;
   ULong64_t       alfa_DCS_TRIGGERSETTINGS;
   vector<int>     *alfa_Scaler;
   Int_t           alfa_BCId;
   Int_t           alfa_TimeStp;
   Int_t           alfa_TimeStp_ns;
   vector<int>     *alfa_TrigPat;
   vector<int>     *alfa_FiberHitsMD;
   vector<int>     *alfa_MultiMD;
   vector<int>     *alfa_FiberHitsODPos;
   vector<int>     *alfa_FiberHitsODNeg;
   vector<int>     *alfa_MultiODPos;
   vector<int>     *alfa_MultiODNeg;
   vector<float>   *alfa_x_Det;
   vector<float>   *alfa_y_Det;
   vector<int>     *alfa_Detector;
   Int_t           alfa_NumTrack;
   vector<float>   *alfa_OverU;
   vector<float>   *alfa_OverV;
   vector<float>   *alfa_OverY;
   vector<int>     *alfa_NU;
   vector<int>     *alfa_NV;
   vector<int>     *alfa_NY;
   vector<int>     *alfa_Fib_SelMD;
   vector<int>     *alfa_Fib_SelOD;
   vector<float>   *alfa_x_LHC;
   vector<float>   *alfa_y_LHC;
   vector<float>   *alfa_z_LHC;
   vector<float>   *alfa_x_Pot;
   vector<float>   *alfa_y_Pot;
   vector<float>   *alfa_x_Stat;
   vector<float>   *alfa_y_Stat;
   vector<float>   *alfa_x_Beam;
   vector<float>   *alfa_y_Beam;
   Int_t           cc_fcal_n;
   vector<float>   *cc_fcal_E;
   vector<float>   *cc_fcal_pt;
   vector<float>   *cc_fcal_eta;
   vector<float>   *cc_fcal_phi;
   vector<int>     *cc_fcal_QCells;
   vector<int>     *cc_fcal_GainCells;
   vector<int>     *cc_fcal_DetCells;
   vector<float>   *cc_fcal_TimeCells;
   vector<float>   *cc_fcal_xCells;
   vector<float>   *cc_fcal_yCells;
   vector<float>   *cc_fcal_zCells;
   vector<int>     *cc_fcal_BadCells;
   vector<unsigned int> *cc_fcal_IdCells;
   vector<float>   *cc_fcal_Sigma;
   Int_t           ccc_Nh_Calo;
   Float_t         ccc_Eh_Calo;
   Int_t           ccc_Nh_EM;
   Float_t         ccc_Eh_EM;
   Int_t           ccc_Nh_HAD;
   Float_t         ccc_Eh_HAD;
   Int_t           ccc_Nh_PresB;
   vector<float>   *ccc_Eh_PresB;
   Int_t           ccc_Nh_EMB;
   vector<float>   *ccc_Eh_EMB;
   Int_t           ccc_Nh_EMEC;
   vector<float>   *ccc_Eh_EMEC;
   Int_t           ccc_Nh_Tile;
   vector<float>   *ccc_Eh_Tile;
   Int_t           ccc_Nh_TileGap;
   vector<float>   *ccc_Eh_TileGap;
   Int_t           ccc_Nh_HEC;
   vector<float>   *ccc_Eh_HEC;
   Int_t           ccc_Nh_FCal;
   vector<float>   *ccc_Eh_FCal;
   Int_t           ccc_Nh_PresE;
   vector<float>   *ccc_Eh_PresE;
   Int_t           ccc_Nh_Scint;
   vector<float>   *ccc_Eh_Scint;
   Int_t           cccEt_Et_Nh_Calo;
   Float_t         cccEt_Et_Eh_Calo;
   Int_t           cccEt_Et_Nh_EM;
   Float_t         cccEt_Et_Eh_EM;
   Int_t           cccEt_Et_Nh_HAD;
   Float_t         cccEt_Et_Eh_HAD;
   Int_t           cccEt_Et_Nh_PresB;
   vector<float>   *cccEt_Et_Eh_PresB;
   Int_t           cccEt_Et_Nh_EMB;
   vector<float>   *cccEt_Et_Eh_EMB;
   Int_t           cccEt_Et_Nh_EMEC;
   vector<float>   *cccEt_Et_Eh_EMEC;
   Int_t           cccEt_Et_Nh_Tile;
   vector<float>   *cccEt_Et_Eh_Tile;
   Int_t           cccEt_Et_Nh_TileGap;
   vector<float>   *cccEt_Et_Eh_TileGap;
   Int_t           cccEt_Et_Nh_HEC;
   vector<float>   *cccEt_Et_Eh_HEC;
   Int_t           cccEt_Et_Nh_FCal;
   vector<float>   *cccEt_Et_Eh_FCal;
   Int_t           cccEt_Et_Nh_PresE;
   vector<float>   *cccEt_Et_Eh_PresE;
   Int_t           cccEt_Et_Nh_Scint;
   vector<float>   *cccEt_Et_Eh_Scint;
   Int_t           cccEt_p_Nh_Calo;
   Float_t         cccEt_p_Eh_Calo;
   Int_t           cccEt_p_Nh_EM;
   Float_t         cccEt_p_Eh_EM;
   Int_t           cccEt_p_Nh_HAD;
   Float_t         cccEt_p_Eh_HAD;
   Int_t           cccEt_p_Nh_PresB;
   vector<float>   *cccEt_p_Eh_PresB;
   Int_t           cccEt_p_Nh_EMB;
   vector<float>   *cccEt_p_Eh_EMB;
   Int_t           cccEt_p_Nh_EMEC;
   vector<float>   *cccEt_p_Eh_EMEC;
   Int_t           cccEt_p_Nh_Tile;
   vector<float>   *cccEt_p_Eh_Tile;
   Int_t           cccEt_p_Nh_TileGap;
   vector<float>   *cccEt_p_Eh_TileGap;
   Int_t           cccEt_p_Nh_HEC;
   vector<float>   *cccEt_p_Eh_HEC;
   Int_t           cccEt_p_Nh_FCal;
   vector<float>   *cccEt_p_Eh_FCal;
   Int_t           cccEt_p_Nh_PresE;
   vector<float>   *cccEt_p_Eh_PresE;
   Int_t           cccEt_p_Nh_Scint;
   vector<float>   *cccEt_p_Eh_Scint;
   Int_t           cccEt_n_Nh_Calo;
   Float_t         cccEt_n_Eh_Calo;
   Int_t           cccEt_n_Nh_EM;
   Float_t         cccEt_n_Eh_EM;
   Int_t           cccEt_n_Nh_HAD;
   Float_t         cccEt_n_Eh_HAD;
   Int_t           cccEt_n_Nh_PresB;
   vector<float>   *cccEt_n_Eh_PresB;
   Int_t           cccEt_n_Nh_EMB;
   vector<float>   *cccEt_n_Eh_EMB;
   Int_t           cccEt_n_Nh_EMEC;
   vector<float>   *cccEt_n_Eh_EMEC;
   Int_t           cccEt_n_Nh_Tile;
   vector<float>   *cccEt_n_Eh_Tile;
   Int_t           cccEt_n_Nh_TileGap;
   vector<float>   *cccEt_n_Eh_TileGap;
   Int_t           cccEt_n_Nh_HEC;
   vector<float>   *cccEt_n_Eh_HEC;
   Int_t           cccEt_n_Nh_FCal;
   vector<float>   *cccEt_n_Eh_FCal;
   Int_t           cccEt_n_Nh_PresE;
   vector<float>   *cccEt_n_Eh_PresE;
   Int_t           cccEt_n_Nh_Scint;
   vector<float>   *cccEt_n_Eh_Scint;
   Int_t           lar_ncellA;
   Int_t           lar_ncellC;
   Float_t         lar_energyA;
   Float_t         lar_energyC;
   Float_t         lar_timeA;
   Float_t         lar_timeC;
   Float_t         lar_timeDiff;
   Int_t           TotalEt_n;
   vector<float>   *TotalEt_layer_eta;
   vector<float>   *TotalEt_layer_phi;
   vector<vector<float> > *TotalEt_layer_area;
   vector<vector<float> > *TotalEt_layer_sampling;
   vector<vector<float> > *TotalEt_layer_sampling_calib;
   Int_t           trk_n;
   vector<float>   *trk_d0;
   vector<float>   *trk_z0;
   vector<float>   *trk_phi;
   vector<float>   *trk_theta;
   vector<float>   *trk_qoverp;
   vector<float>   *trk_pt;
   vector<float>   *trk_eta;
   vector<float>   *trk_err_d0;
   vector<float>   *trk_err_z0;
   vector<float>   *trk_err_phi;
   vector<float>   *trk_err_theta;
   vector<float>   *trk_err_qoverp;
   vector<float>   *trk_cov_d0_z0;
   vector<float>   *trk_cov_d0_phi;
   vector<float>   *trk_cov_d0_theta;
   vector<float>   *trk_cov_d0_qoverp;
   vector<float>   *trk_cov_z0_phi;
   vector<float>   *trk_cov_z0_theta;
   vector<float>   *trk_cov_z0_qoverp;
   vector<float>   *trk_cov_phi_theta;
   vector<float>   *trk_cov_phi_qoverp;
   vector<float>   *trk_cov_theta_qoverp;
   vector<float>   *trk_d0_wrtPV;
   vector<float>   *trk_z0_wrtPV;
   vector<float>   *trk_phi_wrtPV;
   vector<float>   *trk_err_d0_wrtPV;
   vector<float>   *trk_err_z0_wrtPV;
   vector<float>   *trk_err_phi_wrtPV;
   vector<float>   *trk_err_theta_wrtPV;
   vector<float>   *trk_err_qoverp_wrtPV;
   vector<float>   *trk_cov_d0_z0_wrtPV;
   vector<float>   *trk_cov_d0_phi_wrtPV;
   vector<float>   *trk_cov_d0_theta_wrtPV;
   vector<float>   *trk_cov_d0_qoverp_wrtPV;
   vector<float>   *trk_cov_z0_phi_wrtPV;
   vector<float>   *trk_cov_z0_theta_wrtPV;
   vector<float>   *trk_cov_z0_qoverp_wrtPV;
   vector<float>   *trk_cov_phi_theta_wrtPV;
   vector<float>   *trk_cov_phi_qoverp_wrtPV;
   vector<float>   *trk_cov_theta_qoverp_wrtPV;
   vector<float>   *trk_d0_wrtBS;
   vector<float>   *trk_z0_wrtBS;
   vector<float>   *trk_phi_wrtBS;
   vector<float>   *trk_err_d0_wrtBS;
   vector<float>   *trk_err_z0_wrtBS;
   vector<float>   *trk_err_phi_wrtBS;
   vector<float>   *trk_err_theta_wrtBS;
   vector<float>   *trk_err_qoverp_wrtBS;
   vector<float>   *trk_cov_d0_z0_wrtBS;
   vector<float>   *trk_cov_d0_phi_wrtBS;
   vector<float>   *trk_cov_d0_theta_wrtBS;
   vector<float>   *trk_cov_d0_qoverp_wrtBS;
   vector<float>   *trk_cov_z0_phi_wrtBS;
   vector<float>   *trk_cov_z0_theta_wrtBS;
   vector<float>   *trk_cov_z0_qoverp_wrtBS;
   vector<float>   *trk_cov_phi_theta_wrtBS;
   vector<float>   *trk_cov_phi_qoverp_wrtBS;
   vector<float>   *trk_cov_theta_qoverp_wrtBS;
   vector<float>   *trk_d0_wrtBL;
   vector<float>   *trk_z0_wrtBL;
   vector<float>   *trk_phi_wrtBL;
   vector<float>   *trk_d0_err_wrtBL;
   vector<float>   *trk_z0_err_wrtBL;
   vector<float>   *trk_phi_err_wrtBL;
   vector<float>   *trk_theta_err_wrtBL;
   vector<float>   *trk_qoverp_err_wrtBL;
   vector<float>   *trk_d0_z0_err_wrtBL;
   vector<float>   *trk_d0_phi_err_wrtBL;
   vector<float>   *trk_d0_theta_err_wrtBL;
   vector<float>   *trk_d0_qoverp_err_wrtBL;
   vector<float>   *trk_z0_phi_err_wrtBL;
   vector<float>   *trk_z0_theta_err_wrtBL;
   vector<float>   *trk_z0_qoverp_err_wrtBL;
   vector<float>   *trk_phi_theta_err_wrtBL;
   vector<float>   *trk_phi_qoverp_err_wrtBL;
   vector<float>   *trk_theta_qoverp_err_wrtBL;
   vector<float>   *trk_chi2;
   vector<int>     *trk_ndof;
   vector<int>     *trk_nBLHits;
   vector<int>     *trk_nPixHits;
   vector<int>     *trk_nSCTHits;
   vector<int>     *trk_nTRTHits;
   vector<int>     *trk_nTRTHighTHits;
   vector<int>     *trk_nTRTXenonHits;
   vector<int>     *trk_nPixHoles;
   vector<int>     *trk_nSCTHoles;
   vector<int>     *trk_nTRTHoles;
   vector<int>     *trk_nPixelDeadSensors;
   vector<int>     *trk_nSCTDeadSensors;
   vector<int>     *trk_nBLSharedHits;
   vector<int>     *trk_nPixSharedHits;
   vector<int>     *trk_nSCTSharedHits;
   vector<int>     *trk_nBLayerSplitHits;
   vector<int>     *trk_nPixSplitHits;
   vector<int>     *trk_expectBLayerHit;
   vector<int>     *trk_nMDTHits;
   vector<int>     *trk_nCSCEtaHits;
   vector<int>     *trk_nCSCPhiHits;
   vector<int>     *trk_nRPCEtaHits;
   vector<int>     *trk_nRPCPhiHits;
   vector<int>     *trk_nTGCEtaHits;
   vector<int>     *trk_nTGCPhiHits;
   vector<int>     *trk_nHits;
   vector<int>     *trk_nHoles;
   vector<int>     *trk_hitPattern;
   vector<float>   *trk_TRTHighTHitsRatio;
   vector<float>   *trk_TRTHighTOutliersRatio;
   vector<float>   *trk_pixeldEdx;
   vector<int>     *trk_nGoodHitsPixeldEdx;
   vector<float>   *trk_massPixeldEdx;
   vector<vector<float> > *trk_likelihoodsPixeldEdx;
   vector<int>     *trk_fitter;
   vector<int>     *trk_patternReco1;
   vector<int>     *trk_patternReco2;
   vector<int>     *trk_trackProperties;
   vector<int>     *trk_particleHypothesis;
   vector<vector<float> > *trk_blayerPrediction_x;
   vector<vector<float> > *trk_blayerPrediction_y;
   vector<vector<float> > *trk_blayerPrediction_z;
   vector<vector<float> > *trk_blayerPrediction_locX;
   vector<vector<float> > *trk_blayerPrediction_locY;
   vector<vector<float> > *trk_blayerPrediction_err_locX;
   vector<vector<float> > *trk_blayerPrediction_err_locY;
   vector<vector<float> > *trk_blayerPrediction_etaDistToEdge;
   vector<vector<float> > *trk_blayerPrediction_phiDistToEdge;
   vector<vector<unsigned int> > *trk_blayerPrediction_detElementId;
   vector<vector<int> > *trk_blayerPrediction_row;
   vector<vector<int> > *trk_blayerPrediction_col;
   vector<vector<int> > *trk_blayerPrediction_type;
   vector<float>   *trk_mc_probability;
   vector<int>     *trk_mc_barcode;
   vector<int>     *trk_mc_index;
   vector<vector<float> > *ItrEMBkgrlayer_CaloBkgrEt;
   vector<vector<float> > *ItrEMBkgrlayer_CaloBkgrRMS;
   vector<vector<int> > *ItrEMBkgrlayer_CaloBkgrCounts;
   vector<float>   *ItrEMBkgrlayer_CaloBkgrEta;
   Int_t           ItrSeedJets_n;
   vector<float>   *ItrSeedJets_E;
   vector<float>   *ItrSeedJets_Et;
   vector<float>   *ItrSeedJets_pt;
   vector<float>   *ItrSeedJets_m;
   vector<float>   *ItrSeedJets_eta;
   vector<float>   *ItrSeedJets_phi;
   Int_t           antikt4Track_n;
   vector<float>   *antikt4Track_E;
   vector<float>   *antikt4Track_pt;
   vector<float>   *antikt4Track_m;
   vector<float>   *antikt4Track_eta;
   vector<float>   *antikt4Track_phi;
   vector<int>     *antikt4Track_const_n;
   vector<vector<float> > *antikt4Track_const_pt;
   vector<vector<float> > *antikt4Track_const_eta;
   vector<vector<float> > *antikt4Track_const_phi;
   vector<vector<float> > *antikt4Track_const_chi2;
   vector<vector<float> > *antikt4Track_const_d0_wrtPV;
   vector<vector<float> > *antikt4Track_const_z0_wrtPV;
   vector<vector<float> > *antikt4Track_const_phi0_wrtPV;
   vector<vector<float> > *antikt4Track_const_theta_wrtPV;
   vector<vector<float> > *antikt4Track_const_qop;
   vector<vector<int> > *antikt4Track_const_ndof;
   vector<vector<int> > *antikt4Track_const_nBLayerHits;
   vector<vector<int> > *antikt4Track_const_nPixelHits;
   vector<vector<int> > *antikt4Track_const_nSCTHits;
   vector<vector<int> > *antikt4Track_const_nTRTHits;
   Int_t           antikt2HIItrEM_n;
   vector<float>   *antikt2HIItrEM_E;
   vector<float>   *antikt2HIItrEM_Et;
   vector<float>   *antikt2HIItrEM_pt;
   vector<float>   *antikt2HIItrEM_m;
   vector<float>   *antikt2HIItrEM_eta;
   vector<float>   *antikt2HIItrEM_phi;
   vector<float>   *antikt2HIItrEM_SubtractedEt;
   vector<float>   *antikt2HIItrEM_NoFlow;
   vector<float>   *antikt2HIItrEM_UncalibEt;
   vector<float>   *antikt2HIItrEM_PassedFR;
   vector<int>     *antikt2HIItrEM_const_n;
   vector<vector<float> > *antikt2HIItrEM_const_et;
   vector<vector<float> > *antikt2HIItrEM_const_eta;
   vector<vector<float> > *antikt2HIItrEM_const_phi;
   vector<vector<float> > *antikt2HIItrEM_sampling_et;
   vector<vector<float> > *antikt2HIItrEM_sampling_et_unsubtr;
   vector<vector<int> > *antikt2HIItrEM_bad_cell_n;
   vector<vector<float> > *antikt2HIItrEM_bad_cell_et;
   vector<vector<float> > *antikt2HIItrEM_bad_cell_area;
   vector<vector<int> > *antikt2HIItrEM_empty_cell_n;
   vector<vector<float> > *antikt2HIItrEM_empty_cell_et;
   vector<vector<float> > *antikt2HIItrEM_empty_cell_area;
   vector<vector<int> > *antikt2HIItrEM_total_cell_n;
   vector<vector<float> > *antikt2HIItrEM_total_cell_et;
   vector<vector<float> > *antikt2HIItrEM_total_cell_area;
   vector<float>   *antikt2HIItrEM_n90;
   vector<float>   *antikt2HIItrEM_fracSamplingMax;
   vector<float>   *antikt2HIItrEM_SamplingMax;
   vector<float>   *antikt2HIItrEM_n90constituents;
   vector<float>   *antikt2HIItrEM_Timing;
   vector<float>   *antikt2HIItrEM_LArQuality;
   vector<float>   *antikt2HIItrEM_HECQuality;
   vector<float>   *antikt2HIItrEM_TileQuality;
   vector<float>   *antikt2HIItrEM_NegativeE;
   vector<float>   *antikt2HIItrEM_AverageLArQF;
   vector<float>   *antikt2HIItrEM_sumPtTrk;
   vector<float>   *antikt2HIItrEM_BCH_CORR_CELL;
   vector<float>   *antikt2HIItrEM_BCH_CORR_DOTX;
   vector<float>   *antikt2HIItrEM_BCH_CORR_JET;
   vector<float>   *antikt2HIItrEM_BCH_CORR_JET_FORCELL;
   vector<float>   *antikt2HIItrEM_ENG_BAD_CELLS;
   vector<float>   *antikt2HIItrEM_N_BAD_CELLS;
   vector<float>   *antikt2HIItrEM_N_BAD_CELLS_CORR;
   vector<float>   *antikt2HIItrEM_BAD_CELLS_CORR_E;
   vector<float>   *antikt2HIItrEM_emfrac;
   vector<float>   *antikt2HIItrEM_hecf;
   vector<float>   *antikt2HIItrEM_tgap3f;
   vector<int>     *antikt2HIItrEM_isUgly;
   vector<int>     *antikt2HIItrEM_isBadLooseMinus;
   vector<int>     *antikt2HIItrEM_isBadLoose;
   vector<int>     *antikt2HIItrEM_isBadMedium;
   vector<int>     *antikt2HIItrEM_isBadTight;
   vector<float>   *antikt2HIItrEM_jvtx_x;
   vector<float>   *antikt2HIItrEM_jvtx_y;
   vector<float>   *antikt2HIItrEM_jvtx_z;
   vector<float>   *antikt2HIItrEM_jvtxf;
   vector<float>   *antikt2HIItrEM_flavor_weight_Comb;
   vector<float>   *antikt2HIItrEM_flavor_weight_IP2D;
   vector<float>   *antikt2HIItrEM_flavor_weight_IP3D;
   vector<float>   *antikt2HIItrEM_flavor_weight_SV0;
   vector<float>   *antikt2HIItrEM_flavor_weight_SV1;
   vector<float>   *antikt2HIItrEM_flavor_weight_SV2;
   vector<float>   *antikt2HIItrEM_flavor_weight_SoftMuonTagChi2;
   vector<float>   *antikt2HIItrEM_flavor_weight_SecondSoftMuonTagChi2;
   vector<float>   *antikt2HIItrEM_flavor_weight_JetFitterTagNN;
   vector<float>   *antikt2HIItrEM_flavor_weight_JetFitterCOMBNN;
   vector<float>   *antikt2HIItrEM_flavor_weight_MV1;
   vector<float>   *antikt2HIItrEM_flavor_weight_MV2;
   vector<float>   *antikt2HIItrEM_flavor_weight_GbbNN;
   vector<int>     *antikt2HIItrEM_flavor_truth_label;
   vector<float>   *antikt2HIItrEM_flavor_truth_dRminToB;
   vector<float>   *antikt2HIItrEM_flavor_truth_dRminToC;
   vector<float>   *antikt2HIItrEM_flavor_truth_dRminToT;
   vector<int>     *antikt2HIItrEM_flavor_truth_BHadronpdg;
   vector<float>   *antikt2HIItrEM_flavor_truth_vx_x;
   vector<float>   *antikt2HIItrEM_flavor_truth_vx_y;
   vector<float>   *antikt2HIItrEM_flavor_truth_vx_z;
   vector<vector<int> > *antikt2HIItrEM_flavor_component_assoctrk_signOfIP;
   vector<vector<int> > *antikt2HIItrEM_flavor_component_assoctrk_signOfZIP;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;
   vector<vector<short> > *antikt2HIItrEM_flavor_component_gentruthlepton_origin;
   vector<vector<int> > *antikt2HIItrEM_flavor_component_gentruthlepton_slbarcode;
   vector<float>   *antikt2HIItrEM_flavor_component_ip2d_pu;
   vector<float>   *antikt2HIItrEM_flavor_component_ip2d_pb;
   vector<int>     *antikt2HIItrEM_flavor_component_ip2d_isValid;
   vector<int>     *antikt2HIItrEM_flavor_component_ip2d_ntrk;
   vector<float>   *antikt2HIItrEM_flavor_component_ip3d_pu;
   vector<float>   *antikt2HIItrEM_flavor_component_ip3d_pb;
   vector<int>     *antikt2HIItrEM_flavor_component_ip3d_isValid;
   vector<int>     *antikt2HIItrEM_flavor_component_ip3d_ntrk;
   vector<int>     *antikt2HIItrEM_flavor_component_jetprob_ntrk;
   vector<float>   *antikt2HIItrEM_flavor_component_sv1_pu;
   vector<float>   *antikt2HIItrEM_flavor_component_sv1_pb;
   vector<int>     *antikt2HIItrEM_flavor_component_sv1_isValid;
   vector<float>   *antikt2HIItrEM_flavor_component_sv2_pu;
   vector<float>   *antikt2HIItrEM_flavor_component_sv2_pb;
   vector<int>     *antikt2HIItrEM_flavor_component_sv2_isValid;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_pu;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_pb;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_pc;
   vector<int>     *antikt2HIItrEM_flavor_component_jfit_isValid;
   vector<float>   *antikt2HIItrEM_flavor_component_jfitcomb_pu;
   vector<float>   *antikt2HIItrEM_flavor_component_jfitcomb_pb;
   vector<float>   *antikt2HIItrEM_flavor_component_jfitcomb_pc;
   vector<int>     *antikt2HIItrEM_flavor_component_jfitcomb_isValid;
   vector<int>     *antikt2HIItrEM_flavor_component_gbbnn_nMatchingTracks;
   vector<double>  *antikt2HIItrEM_flavor_component_gbbnn_trkJetWidth;
   vector<double>  *antikt2HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;
   vector<int>     *antikt2HIItrEM_flavor_component_jfit_nvtx;
   vector<int>     *antikt2HIItrEM_flavor_component_jfit_nvtx1t;
   vector<int>     *antikt2HIItrEM_flavor_component_jfit_ntrkAtVx;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_efrc;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_mass;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_sig3d;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_deltaPhi;
   vector<float>   *antikt2HIItrEM_flavor_component_jfit_deltaEta;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_d0val;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_d0sig;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_z0val;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_z0sig;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_w2D;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_w3D;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_pJP;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_ipplus_trk_pJPneg;
   vector<vector<int> > *antikt2HIItrEM_flavor_component_ipplus_trk_grade;
   vector<vector<int> > *antikt2HIItrEM_flavor_component_ipplus_trk_isFromV0;
   vector<int>     *antikt2HIItrEM_flavor_component_svp_isValid;
   vector<int>     *antikt2HIItrEM_flavor_component_svp_ntrkv;
   vector<int>     *antikt2HIItrEM_flavor_component_svp_ntrkj;
   vector<int>     *antikt2HIItrEM_flavor_component_svp_n2t;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_mass;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_efrc;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_x;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_y;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_z;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_err_x;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_err_y;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_err_z;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_cov_xy;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_cov_xz;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_cov_yz;
   vector<float>   *antikt2HIItrEM_flavor_component_svp_chi2;
   vector<int>     *antikt2HIItrEM_flavor_component_svp_ndof;
   vector<int>     *antikt2HIItrEM_flavor_component_svp_ntrk;
   vector<int>     *antikt2HIItrEM_flavor_component_sv0p_isValid;
   vector<int>     *antikt2HIItrEM_flavor_component_sv0p_ntrkv;
   vector<int>     *antikt2HIItrEM_flavor_component_sv0p_ntrkj;
   vector<int>     *antikt2HIItrEM_flavor_component_sv0p_n2t;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_mass;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_efrc;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_x;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_y;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_z;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_err_x;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_err_y;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_err_z;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_cov_xy;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_cov_xz;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_cov_yz;
   vector<float>   *antikt2HIItrEM_flavor_component_sv0p_chi2;
   vector<int>     *antikt2HIItrEM_flavor_component_sv0p_ndof;
   vector<int>     *antikt2HIItrEM_flavor_component_sv0p_ntrk;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuoninfo_muon_w;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuoninfo_muon_pTRel;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuoninfo_muon_dRJet;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuon2info_muon2_w;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuon2info_muon2_pTRel;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuon2info_muon2_dRJet;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuonchi2info_muon_w;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_w;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;
   vector<vector<float> > *antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;
   vector<int>     *antikt2HIItrEM_flavor_component_msvp_isValid;
   vector<int>     *antikt2HIItrEM_flavor_component_msvp_ntrkv;
   vector<int>     *antikt2HIItrEM_flavor_component_msvp_ntrkj;
   vector<int>     *antikt2HIItrEM_flavor_component_msvp_n2t;
   vector<int>     *antikt2HIItrEM_flavor_component_msvp_nVtx;
   vector<float>   *antikt2HIItrEM_flavor_component_msvp_normWeightedDist;
   Int_t           antikt3HIItrEM_n;
   vector<float>   *antikt3HIItrEM_E;
   vector<float>   *antikt3HIItrEM_Et;
   vector<float>   *antikt3HIItrEM_pt;
   vector<float>   *antikt3HIItrEM_m;
   vector<float>   *antikt3HIItrEM_eta;
   vector<float>   *antikt3HIItrEM_phi;
   vector<float>   *antikt3HIItrEM_SubtractedEt;
   vector<float>   *antikt3HIItrEM_NoFlow;
   vector<float>   *antikt3HIItrEM_UncalibEt;
   vector<float>   *antikt3HIItrEM_PassedFR;
   vector<int>     *antikt3HIItrEM_const_n;
   vector<vector<float> > *antikt3HIItrEM_const_et;
   vector<vector<float> > *antikt3HIItrEM_const_eta;
   vector<vector<float> > *antikt3HIItrEM_const_phi;
   vector<vector<float> > *antikt3HIItrEM_sampling_et;
   vector<vector<float> > *antikt3HIItrEM_sampling_et_unsubtr;
   vector<vector<int> > *antikt3HIItrEM_bad_cell_n;
   vector<vector<float> > *antikt3HIItrEM_bad_cell_et;
   vector<vector<float> > *antikt3HIItrEM_bad_cell_area;
   vector<vector<int> > *antikt3HIItrEM_empty_cell_n;
   vector<vector<float> > *antikt3HIItrEM_empty_cell_et;
   vector<vector<float> > *antikt3HIItrEM_empty_cell_area;
   vector<vector<int> > *antikt3HIItrEM_total_cell_n;
   vector<vector<float> > *antikt3HIItrEM_total_cell_et;
   vector<vector<float> > *antikt3HIItrEM_total_cell_area;
   vector<float>   *antikt3HIItrEM_n90;
   vector<float>   *antikt3HIItrEM_fracSamplingMax;
   vector<float>   *antikt3HIItrEM_SamplingMax;
   vector<float>   *antikt3HIItrEM_n90constituents;
   vector<float>   *antikt3HIItrEM_Timing;
   vector<float>   *antikt3HIItrEM_LArQuality;
   vector<float>   *antikt3HIItrEM_HECQuality;
   vector<float>   *antikt3HIItrEM_TileQuality;
   vector<float>   *antikt3HIItrEM_NegativeE;
   vector<float>   *antikt3HIItrEM_AverageLArQF;
   vector<float>   *antikt3HIItrEM_sumPtTrk;
   vector<float>   *antikt3HIItrEM_BCH_CORR_CELL;
   vector<float>   *antikt3HIItrEM_BCH_CORR_DOTX;
   vector<float>   *antikt3HIItrEM_BCH_CORR_JET;
   vector<float>   *antikt3HIItrEM_BCH_CORR_JET_FORCELL;
   vector<float>   *antikt3HIItrEM_ENG_BAD_CELLS;
   vector<float>   *antikt3HIItrEM_N_BAD_CELLS;
   vector<float>   *antikt3HIItrEM_N_BAD_CELLS_CORR;
   vector<float>   *antikt3HIItrEM_BAD_CELLS_CORR_E;
   vector<float>   *antikt3HIItrEM_emfrac;
   vector<float>   *antikt3HIItrEM_hecf;
   vector<float>   *antikt3HIItrEM_tgap3f;
   vector<int>     *antikt3HIItrEM_isUgly;
   vector<int>     *antikt3HIItrEM_isBadLooseMinus;
   vector<int>     *antikt3HIItrEM_isBadLoose;
   vector<int>     *antikt3HIItrEM_isBadMedium;
   vector<int>     *antikt3HIItrEM_isBadTight;
   vector<float>   *antikt3HIItrEM_jvtx_x;
   vector<float>   *antikt3HIItrEM_jvtx_y;
   vector<float>   *antikt3HIItrEM_jvtx_z;
   vector<float>   *antikt3HIItrEM_jvtxf;
   vector<float>   *antikt3HIItrEM_flavor_weight_Comb;
   vector<float>   *antikt3HIItrEM_flavor_weight_IP2D;
   vector<float>   *antikt3HIItrEM_flavor_weight_IP3D;
   vector<float>   *antikt3HIItrEM_flavor_weight_SV0;
   vector<float>   *antikt3HIItrEM_flavor_weight_SV1;
   vector<float>   *antikt3HIItrEM_flavor_weight_SV2;
   vector<float>   *antikt3HIItrEM_flavor_weight_SoftMuonTagChi2;
   vector<float>   *antikt3HIItrEM_flavor_weight_SecondSoftMuonTagChi2;
   vector<float>   *antikt3HIItrEM_flavor_weight_JetFitterTagNN;
   vector<float>   *antikt3HIItrEM_flavor_weight_JetFitterCOMBNN;
   vector<float>   *antikt3HIItrEM_flavor_weight_MV1;
   vector<float>   *antikt3HIItrEM_flavor_weight_MV2;
   vector<float>   *antikt3HIItrEM_flavor_weight_GbbNN;
   vector<int>     *antikt3HIItrEM_flavor_truth_label;
   vector<float>   *antikt3HIItrEM_flavor_truth_dRminToB;
   vector<float>   *antikt3HIItrEM_flavor_truth_dRminToC;
   vector<float>   *antikt3HIItrEM_flavor_truth_dRminToT;
   vector<int>     *antikt3HIItrEM_flavor_truth_BHadronpdg;
   vector<float>   *antikt3HIItrEM_flavor_truth_vx_x;
   vector<float>   *antikt3HIItrEM_flavor_truth_vx_y;
   vector<float>   *antikt3HIItrEM_flavor_truth_vx_z;
   vector<vector<int> > *antikt3HIItrEM_flavor_component_assoctrk_signOfIP;
   vector<vector<int> > *antikt3HIItrEM_flavor_component_assoctrk_signOfZIP;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;
   vector<vector<short> > *antikt3HIItrEM_flavor_component_gentruthlepton_origin;
   vector<vector<int> > *antikt3HIItrEM_flavor_component_gentruthlepton_slbarcode;
   vector<float>   *antikt3HIItrEM_flavor_component_ip2d_pu;
   vector<float>   *antikt3HIItrEM_flavor_component_ip2d_pb;
   vector<int>     *antikt3HIItrEM_flavor_component_ip2d_isValid;
   vector<int>     *antikt3HIItrEM_flavor_component_ip2d_ntrk;
   vector<float>   *antikt3HIItrEM_flavor_component_ip3d_pu;
   vector<float>   *antikt3HIItrEM_flavor_component_ip3d_pb;
   vector<int>     *antikt3HIItrEM_flavor_component_ip3d_isValid;
   vector<int>     *antikt3HIItrEM_flavor_component_ip3d_ntrk;
   vector<int>     *antikt3HIItrEM_flavor_component_jetprob_ntrk;
   vector<float>   *antikt3HIItrEM_flavor_component_sv1_pu;
   vector<float>   *antikt3HIItrEM_flavor_component_sv1_pb;
   vector<int>     *antikt3HIItrEM_flavor_component_sv1_isValid;
   vector<float>   *antikt3HIItrEM_flavor_component_sv2_pu;
   vector<float>   *antikt3HIItrEM_flavor_component_sv2_pb;
   vector<int>     *antikt3HIItrEM_flavor_component_sv2_isValid;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_pu;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_pb;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_pc;
   vector<int>     *antikt3HIItrEM_flavor_component_jfit_isValid;
   vector<float>   *antikt3HIItrEM_flavor_component_jfitcomb_pu;
   vector<float>   *antikt3HIItrEM_flavor_component_jfitcomb_pb;
   vector<float>   *antikt3HIItrEM_flavor_component_jfitcomb_pc;
   vector<int>     *antikt3HIItrEM_flavor_component_jfitcomb_isValid;
   vector<int>     *antikt3HIItrEM_flavor_component_gbbnn_nMatchingTracks;
   vector<double>  *antikt3HIItrEM_flavor_component_gbbnn_trkJetWidth;
   vector<double>  *antikt3HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;
   vector<int>     *antikt3HIItrEM_flavor_component_jfit_nvtx;
   vector<int>     *antikt3HIItrEM_flavor_component_jfit_nvtx1t;
   vector<int>     *antikt3HIItrEM_flavor_component_jfit_ntrkAtVx;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_efrc;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_mass;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_sig3d;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_deltaPhi;
   vector<float>   *antikt3HIItrEM_flavor_component_jfit_deltaEta;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_d0val;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_d0sig;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_z0val;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_z0sig;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_w2D;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_w3D;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_pJP;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_ipplus_trk_pJPneg;
   vector<vector<int> > *antikt3HIItrEM_flavor_component_ipplus_trk_grade;
   vector<vector<int> > *antikt3HIItrEM_flavor_component_ipplus_trk_isFromV0;
   vector<int>     *antikt3HIItrEM_flavor_component_svp_isValid;
   vector<int>     *antikt3HIItrEM_flavor_component_svp_ntrkv;
   vector<int>     *antikt3HIItrEM_flavor_component_svp_ntrkj;
   vector<int>     *antikt3HIItrEM_flavor_component_svp_n2t;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_mass;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_efrc;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_x;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_y;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_z;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_err_x;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_err_y;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_err_z;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_cov_xy;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_cov_xz;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_cov_yz;
   vector<float>   *antikt3HIItrEM_flavor_component_svp_chi2;
   vector<int>     *antikt3HIItrEM_flavor_component_svp_ndof;
   vector<int>     *antikt3HIItrEM_flavor_component_svp_ntrk;
   vector<int>     *antikt3HIItrEM_flavor_component_sv0p_isValid;
   vector<int>     *antikt3HIItrEM_flavor_component_sv0p_ntrkv;
   vector<int>     *antikt3HIItrEM_flavor_component_sv0p_ntrkj;
   vector<int>     *antikt3HIItrEM_flavor_component_sv0p_n2t;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_mass;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_efrc;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_x;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_y;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_z;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_err_x;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_err_y;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_err_z;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_cov_xy;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_cov_xz;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_cov_yz;
   vector<float>   *antikt3HIItrEM_flavor_component_sv0p_chi2;
   vector<int>     *antikt3HIItrEM_flavor_component_sv0p_ndof;
   vector<int>     *antikt3HIItrEM_flavor_component_sv0p_ntrk;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuoninfo_muon_w;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuoninfo_muon_pTRel;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuoninfo_muon_dRJet;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuon2info_muon2_w;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuon2info_muon2_pTRel;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuon2info_muon2_dRJet;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuonchi2info_muon_w;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_w;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;
   vector<vector<float> > *antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;
   vector<int>     *antikt3HIItrEM_flavor_component_msvp_isValid;
   vector<int>     *antikt3HIItrEM_flavor_component_msvp_ntrkv;
   vector<int>     *antikt3HIItrEM_flavor_component_msvp_ntrkj;
   vector<int>     *antikt3HIItrEM_flavor_component_msvp_n2t;
   vector<int>     *antikt3HIItrEM_flavor_component_msvp_nVtx;
   vector<float>   *antikt3HIItrEM_flavor_component_msvp_normWeightedDist;
   Int_t           antikt4HIItrEM_n;
   vector<float>   *antikt4HIItrEM_E;
   vector<float>   *antikt4HIItrEM_Et;
   vector<float>   *antikt4HIItrEM_pt;
   vector<float>   *antikt4HIItrEM_m;
   vector<float>   *antikt4HIItrEM_eta;
   vector<float>   *antikt4HIItrEM_phi;
   vector<float>   *antikt4HIItrEM_SubtractedEt;
   vector<float>   *antikt4HIItrEM_NoFlow;
   vector<float>   *antikt4HIItrEM_UncalibEt;
   vector<float>   *antikt4HIItrEM_PassedFR;
   vector<int>     *antikt4HIItrEM_const_n;
   vector<vector<float> > *antikt4HIItrEM_const_et;
   vector<vector<float> > *antikt4HIItrEM_const_eta;
   vector<vector<float> > *antikt4HIItrEM_const_phi;
   vector<vector<float> > *antikt4HIItrEM_sampling_et;
   vector<vector<float> > *antikt4HIItrEM_sampling_et_unsubtr;
   vector<vector<int> > *antikt4HIItrEM_bad_cell_n;
   vector<vector<float> > *antikt4HIItrEM_bad_cell_et;
   vector<vector<float> > *antikt4HIItrEM_bad_cell_area;
   vector<vector<int> > *antikt4HIItrEM_empty_cell_n;
   vector<vector<float> > *antikt4HIItrEM_empty_cell_et;
   vector<vector<float> > *antikt4HIItrEM_empty_cell_area;
   vector<vector<int> > *antikt4HIItrEM_total_cell_n;
   vector<vector<float> > *antikt4HIItrEM_total_cell_et;
   vector<vector<float> > *antikt4HIItrEM_total_cell_area;
   vector<float>   *antikt4HIItrEM_n90;
   vector<float>   *antikt4HIItrEM_fracSamplingMax;
   vector<float>   *antikt4HIItrEM_SamplingMax;
   vector<float>   *antikt4HIItrEM_n90constituents;
   vector<float>   *antikt4HIItrEM_Timing;
   vector<float>   *antikt4HIItrEM_LArQuality;
   vector<float>   *antikt4HIItrEM_HECQuality;
   vector<float>   *antikt4HIItrEM_TileQuality;
   vector<float>   *antikt4HIItrEM_NegativeE;
   vector<float>   *antikt4HIItrEM_AverageLArQF;
   vector<float>   *antikt4HIItrEM_sumPtTrk;
   vector<float>   *antikt4HIItrEM_BCH_CORR_CELL;
   vector<float>   *antikt4HIItrEM_BCH_CORR_DOTX;
   vector<float>   *antikt4HIItrEM_BCH_CORR_JET;
   vector<float>   *antikt4HIItrEM_BCH_CORR_JET_FORCELL;
   vector<float>   *antikt4HIItrEM_ENG_BAD_CELLS;
   vector<float>   *antikt4HIItrEM_N_BAD_CELLS;
   vector<float>   *antikt4HIItrEM_N_BAD_CELLS_CORR;
   vector<float>   *antikt4HIItrEM_BAD_CELLS_CORR_E;
   vector<float>   *antikt4HIItrEM_emfrac;
   vector<float>   *antikt4HIItrEM_hecf;
   vector<float>   *antikt4HIItrEM_tgap3f;
   vector<int>     *antikt4HIItrEM_isUgly;
   vector<int>     *antikt4HIItrEM_isBadLooseMinus;
   vector<int>     *antikt4HIItrEM_isBadLoose;
   vector<int>     *antikt4HIItrEM_isBadMedium;
   vector<int>     *antikt4HIItrEM_isBadTight;
   vector<float>   *antikt4HIItrEM_jvtx_x;
   vector<float>   *antikt4HIItrEM_jvtx_y;
   vector<float>   *antikt4HIItrEM_jvtx_z;
   vector<float>   *antikt4HIItrEM_jvtxf;
   vector<float>   *antikt4HIItrEM_flavor_weight_Comb;
   vector<float>   *antikt4HIItrEM_flavor_weight_IP2D;
   vector<float>   *antikt4HIItrEM_flavor_weight_IP3D;
   vector<float>   *antikt4HIItrEM_flavor_weight_SV0;
   vector<float>   *antikt4HIItrEM_flavor_weight_SV1;
   vector<float>   *antikt4HIItrEM_flavor_weight_SV2;
   vector<float>   *antikt4HIItrEM_flavor_weight_SoftMuonTagChi2;
   vector<float>   *antikt4HIItrEM_flavor_weight_SecondSoftMuonTagChi2;
   vector<float>   *antikt4HIItrEM_flavor_weight_JetFitterTagNN;
   vector<float>   *antikt4HIItrEM_flavor_weight_JetFitterCOMBNN;
   vector<float>   *antikt4HIItrEM_flavor_weight_MV1;
   vector<float>   *antikt4HIItrEM_flavor_weight_MV2;
   vector<float>   *antikt4HIItrEM_flavor_weight_GbbNN;
   vector<int>     *antikt4HIItrEM_flavor_truth_label;
   vector<float>   *antikt4HIItrEM_flavor_truth_dRminToB;
   vector<float>   *antikt4HIItrEM_flavor_truth_dRminToC;
   vector<float>   *antikt4HIItrEM_flavor_truth_dRminToT;
   vector<int>     *antikt4HIItrEM_flavor_truth_BHadronpdg;
   vector<float>   *antikt4HIItrEM_flavor_truth_vx_x;
   vector<float>   *antikt4HIItrEM_flavor_truth_vx_y;
   vector<float>   *antikt4HIItrEM_flavor_truth_vx_z;
   vector<vector<int> > *antikt4HIItrEM_flavor_component_assoctrk_signOfIP;
   vector<vector<int> > *antikt4HIItrEM_flavor_component_assoctrk_signOfZIP;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;
   vector<vector<short> > *antikt4HIItrEM_flavor_component_gentruthlepton_origin;
   vector<vector<int> > *antikt4HIItrEM_flavor_component_gentruthlepton_slbarcode;
   vector<float>   *antikt4HIItrEM_flavor_component_ip2d_pu;
   vector<float>   *antikt4HIItrEM_flavor_component_ip2d_pb;
   vector<int>     *antikt4HIItrEM_flavor_component_ip2d_isValid;
   vector<int>     *antikt4HIItrEM_flavor_component_ip2d_ntrk;
   vector<float>   *antikt4HIItrEM_flavor_component_ip3d_pu;
   vector<float>   *antikt4HIItrEM_flavor_component_ip3d_pb;
   vector<int>     *antikt4HIItrEM_flavor_component_ip3d_isValid;
   vector<int>     *antikt4HIItrEM_flavor_component_ip3d_ntrk;
   vector<int>     *antikt4HIItrEM_flavor_component_jetprob_ntrk;
   vector<float>   *antikt4HIItrEM_flavor_component_sv1_pu;
   vector<float>   *antikt4HIItrEM_flavor_component_sv1_pb;
   vector<int>     *antikt4HIItrEM_flavor_component_sv1_isValid;
   vector<float>   *antikt4HIItrEM_flavor_component_sv2_pu;
   vector<float>   *antikt4HIItrEM_flavor_component_sv2_pb;
   vector<int>     *antikt4HIItrEM_flavor_component_sv2_isValid;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_pu;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_pb;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_pc;
   vector<int>     *antikt4HIItrEM_flavor_component_jfit_isValid;
   vector<float>   *antikt4HIItrEM_flavor_component_jfitcomb_pu;
   vector<float>   *antikt4HIItrEM_flavor_component_jfitcomb_pb;
   vector<float>   *antikt4HIItrEM_flavor_component_jfitcomb_pc;
   vector<int>     *antikt4HIItrEM_flavor_component_jfitcomb_isValid;
   vector<int>     *antikt4HIItrEM_flavor_component_gbbnn_nMatchingTracks;
   vector<double>  *antikt4HIItrEM_flavor_component_gbbnn_trkJetWidth;
   vector<double>  *antikt4HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;
   vector<int>     *antikt4HIItrEM_flavor_component_jfit_nvtx;
   vector<int>     *antikt4HIItrEM_flavor_component_jfit_nvtx1t;
   vector<int>     *antikt4HIItrEM_flavor_component_jfit_ntrkAtVx;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_efrc;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_mass;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_sig3d;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_deltaPhi;
   vector<float>   *antikt4HIItrEM_flavor_component_jfit_deltaEta;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_d0val;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_d0sig;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_z0val;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_z0sig;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_w2D;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_w3D;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_pJP;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_ipplus_trk_pJPneg;
   vector<vector<int> > *antikt4HIItrEM_flavor_component_ipplus_trk_grade;
   vector<vector<int> > *antikt4HIItrEM_flavor_component_ipplus_trk_isFromV0;
   vector<int>     *antikt4HIItrEM_flavor_component_svp_isValid;
   vector<int>     *antikt4HIItrEM_flavor_component_svp_ntrkv;
   vector<int>     *antikt4HIItrEM_flavor_component_svp_ntrkj;
   vector<int>     *antikt4HIItrEM_flavor_component_svp_n2t;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_mass;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_efrc;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_x;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_y;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_z;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_err_x;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_err_y;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_err_z;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_cov_xy;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_cov_xz;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_cov_yz;
   vector<float>   *antikt4HIItrEM_flavor_component_svp_chi2;
   vector<int>     *antikt4HIItrEM_flavor_component_svp_ndof;
   vector<int>     *antikt4HIItrEM_flavor_component_svp_ntrk;
   vector<int>     *antikt4HIItrEM_flavor_component_sv0p_isValid;
   vector<int>     *antikt4HIItrEM_flavor_component_sv0p_ntrkv;
   vector<int>     *antikt4HIItrEM_flavor_component_sv0p_ntrkj;
   vector<int>     *antikt4HIItrEM_flavor_component_sv0p_n2t;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_mass;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_efrc;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_x;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_y;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_z;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_err_x;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_err_y;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_err_z;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_cov_xy;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_cov_xz;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_cov_yz;
   vector<float>   *antikt4HIItrEM_flavor_component_sv0p_chi2;
   vector<int>     *antikt4HIItrEM_flavor_component_sv0p_ndof;
   vector<int>     *antikt4HIItrEM_flavor_component_sv0p_ntrk;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuoninfo_muon_w;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuoninfo_muon_pTRel;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuoninfo_muon_dRJet;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuon2info_muon2_w;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuon2info_muon2_pTRel;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuon2info_muon2_dRJet;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuonchi2info_muon_w;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_w;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;
   vector<vector<float> > *antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;
   vector<int>     *antikt4HIItrEM_flavor_component_msvp_isValid;
   vector<int>     *antikt4HIItrEM_flavor_component_msvp_ntrkv;
   vector<int>     *antikt4HIItrEM_flavor_component_msvp_ntrkj;
   vector<int>     *antikt4HIItrEM_flavor_component_msvp_n2t;
   vector<int>     *antikt4HIItrEM_flavor_component_msvp_nVtx;
   vector<float>   *antikt4HIItrEM_flavor_component_msvp_normWeightedDist;
   Int_t           antikt5HIItrEM_n;
   vector<float>   *antikt5HIItrEM_E;
   vector<float>   *antikt5HIItrEM_Et;
   vector<float>   *antikt5HIItrEM_pt;
   vector<float>   *antikt5HIItrEM_m;
   vector<float>   *antikt5HIItrEM_eta;
   vector<float>   *antikt5HIItrEM_phi;
   vector<float>   *antikt5HIItrEM_SubtractedEt;
   vector<float>   *antikt5HIItrEM_NoFlow;
   vector<float>   *antikt5HIItrEM_UncalibEt;
   vector<float>   *antikt5HIItrEM_PassedFR;
   vector<int>     *antikt5HIItrEM_const_n;
   vector<vector<float> > *antikt5HIItrEM_const_et;
   vector<vector<float> > *antikt5HIItrEM_const_eta;
   vector<vector<float> > *antikt5HIItrEM_const_phi;
   vector<vector<float> > *antikt5HIItrEM_sampling_et;
   vector<vector<float> > *antikt5HIItrEM_sampling_et_unsubtr;
   vector<vector<int> > *antikt5HIItrEM_bad_cell_n;
   vector<vector<float> > *antikt5HIItrEM_bad_cell_et;
   vector<vector<float> > *antikt5HIItrEM_bad_cell_area;
   vector<vector<int> > *antikt5HIItrEM_empty_cell_n;
   vector<vector<float> > *antikt5HIItrEM_empty_cell_et;
   vector<vector<float> > *antikt5HIItrEM_empty_cell_area;
   vector<vector<int> > *antikt5HIItrEM_total_cell_n;
   vector<vector<float> > *antikt5HIItrEM_total_cell_et;
   vector<vector<float> > *antikt5HIItrEM_total_cell_area;
   vector<float>   *antikt5HIItrEM_n90;
   vector<float>   *antikt5HIItrEM_fracSamplingMax;
   vector<float>   *antikt5HIItrEM_SamplingMax;
   vector<float>   *antikt5HIItrEM_n90constituents;
   vector<float>   *antikt5HIItrEM_Timing;
   vector<float>   *antikt5HIItrEM_LArQuality;
   vector<float>   *antikt5HIItrEM_HECQuality;
   vector<float>   *antikt5HIItrEM_TileQuality;
   vector<float>   *antikt5HIItrEM_NegativeE;
   vector<float>   *antikt5HIItrEM_AverageLArQF;
   vector<float>   *antikt5HIItrEM_sumPtTrk;
   vector<float>   *antikt5HIItrEM_BCH_CORR_CELL;
   vector<float>   *antikt5HIItrEM_BCH_CORR_DOTX;
   vector<float>   *antikt5HIItrEM_BCH_CORR_JET;
   vector<float>   *antikt5HIItrEM_BCH_CORR_JET_FORCELL;
   vector<float>   *antikt5HIItrEM_ENG_BAD_CELLS;
   vector<float>   *antikt5HIItrEM_N_BAD_CELLS;
   vector<float>   *antikt5HIItrEM_N_BAD_CELLS_CORR;
   vector<float>   *antikt5HIItrEM_BAD_CELLS_CORR_E;
   vector<float>   *antikt5HIItrEM_emfrac;
   vector<float>   *antikt5HIItrEM_hecf;
   vector<float>   *antikt5HIItrEM_tgap3f;
   vector<int>     *antikt5HIItrEM_isUgly;
   vector<int>     *antikt5HIItrEM_isBadLooseMinus;
   vector<int>     *antikt5HIItrEM_isBadLoose;
   vector<int>     *antikt5HIItrEM_isBadMedium;
   vector<int>     *antikt5HIItrEM_isBadTight;
   vector<float>   *antikt5HIItrEM_jvtx_x;
   vector<float>   *antikt5HIItrEM_jvtx_y;
   vector<float>   *antikt5HIItrEM_jvtx_z;
   vector<float>   *antikt5HIItrEM_jvtxf;
   vector<float>   *antikt5HIItrEM_flavor_weight_Comb;
   vector<float>   *antikt5HIItrEM_flavor_weight_IP2D;
   vector<float>   *antikt5HIItrEM_flavor_weight_IP3D;
   vector<float>   *antikt5HIItrEM_flavor_weight_SV0;
   vector<float>   *antikt5HIItrEM_flavor_weight_SV1;
   vector<float>   *antikt5HIItrEM_flavor_weight_SV2;
   vector<float>   *antikt5HIItrEM_flavor_weight_SoftMuonTagChi2;
   vector<float>   *antikt5HIItrEM_flavor_weight_SecondSoftMuonTagChi2;
   vector<float>   *antikt5HIItrEM_flavor_weight_JetFitterTagNN;
   vector<float>   *antikt5HIItrEM_flavor_weight_JetFitterCOMBNN;
   vector<float>   *antikt5HIItrEM_flavor_weight_MV1;
   vector<float>   *antikt5HIItrEM_flavor_weight_MV2;
   vector<float>   *antikt5HIItrEM_flavor_weight_GbbNN;
   vector<int>     *antikt5HIItrEM_flavor_truth_label;
   vector<float>   *antikt5HIItrEM_flavor_truth_dRminToB;
   vector<float>   *antikt5HIItrEM_flavor_truth_dRminToC;
   vector<float>   *antikt5HIItrEM_flavor_truth_dRminToT;
   vector<int>     *antikt5HIItrEM_flavor_truth_BHadronpdg;
   vector<float>   *antikt5HIItrEM_flavor_truth_vx_x;
   vector<float>   *antikt5HIItrEM_flavor_truth_vx_y;
   vector<float>   *antikt5HIItrEM_flavor_truth_vx_z;
   vector<vector<int> > *antikt5HIItrEM_flavor_component_assoctrk_signOfIP;
   vector<vector<int> > *antikt5HIItrEM_flavor_component_assoctrk_signOfZIP;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;
   vector<vector<short> > *antikt5HIItrEM_flavor_component_gentruthlepton_origin;
   vector<vector<int> > *antikt5HIItrEM_flavor_component_gentruthlepton_slbarcode;
   vector<float>   *antikt5HIItrEM_flavor_component_ip2d_pu;
   vector<float>   *antikt5HIItrEM_flavor_component_ip2d_pb;
   vector<int>     *antikt5HIItrEM_flavor_component_ip2d_isValid;
   vector<int>     *antikt5HIItrEM_flavor_component_ip2d_ntrk;
   vector<float>   *antikt5HIItrEM_flavor_component_ip3d_pu;
   vector<float>   *antikt5HIItrEM_flavor_component_ip3d_pb;
   vector<int>     *antikt5HIItrEM_flavor_component_ip3d_isValid;
   vector<int>     *antikt5HIItrEM_flavor_component_ip3d_ntrk;
   vector<int>     *antikt5HIItrEM_flavor_component_jetprob_ntrk;
   vector<float>   *antikt5HIItrEM_flavor_component_sv1_pu;
   vector<float>   *antikt5HIItrEM_flavor_component_sv1_pb;
   vector<int>     *antikt5HIItrEM_flavor_component_sv1_isValid;
   vector<float>   *antikt5HIItrEM_flavor_component_sv2_pu;
   vector<float>   *antikt5HIItrEM_flavor_component_sv2_pb;
   vector<int>     *antikt5HIItrEM_flavor_component_sv2_isValid;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_pu;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_pb;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_pc;
   vector<int>     *antikt5HIItrEM_flavor_component_jfit_isValid;
   vector<float>   *antikt5HIItrEM_flavor_component_jfitcomb_pu;
   vector<float>   *antikt5HIItrEM_flavor_component_jfitcomb_pb;
   vector<float>   *antikt5HIItrEM_flavor_component_jfitcomb_pc;
   vector<int>     *antikt5HIItrEM_flavor_component_jfitcomb_isValid;
   vector<int>     *antikt5HIItrEM_flavor_component_gbbnn_nMatchingTracks;
   vector<double>  *antikt5HIItrEM_flavor_component_gbbnn_trkJetWidth;
   vector<double>  *antikt5HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;
   vector<int>     *antikt5HIItrEM_flavor_component_jfit_nvtx;
   vector<int>     *antikt5HIItrEM_flavor_component_jfit_nvtx1t;
   vector<int>     *antikt5HIItrEM_flavor_component_jfit_ntrkAtVx;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_efrc;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_mass;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_sig3d;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_deltaPhi;
   vector<float>   *antikt5HIItrEM_flavor_component_jfit_deltaEta;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_d0val;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_d0sig;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_z0val;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_z0sig;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_w2D;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_w3D;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_pJP;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_ipplus_trk_pJPneg;
   vector<vector<int> > *antikt5HIItrEM_flavor_component_ipplus_trk_grade;
   vector<vector<int> > *antikt5HIItrEM_flavor_component_ipplus_trk_isFromV0;
   vector<int>     *antikt5HIItrEM_flavor_component_svp_isValid;
   vector<int>     *antikt5HIItrEM_flavor_component_svp_ntrkv;
   vector<int>     *antikt5HIItrEM_flavor_component_svp_ntrkj;
   vector<int>     *antikt5HIItrEM_flavor_component_svp_n2t;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_mass;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_efrc;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_x;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_y;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_z;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_err_x;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_err_y;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_err_z;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_cov_xy;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_cov_xz;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_cov_yz;
   vector<float>   *antikt5HIItrEM_flavor_component_svp_chi2;
   vector<int>     *antikt5HIItrEM_flavor_component_svp_ndof;
   vector<int>     *antikt5HIItrEM_flavor_component_svp_ntrk;
   vector<int>     *antikt5HIItrEM_flavor_component_sv0p_isValid;
   vector<int>     *antikt5HIItrEM_flavor_component_sv0p_ntrkv;
   vector<int>     *antikt5HIItrEM_flavor_component_sv0p_ntrkj;
   vector<int>     *antikt5HIItrEM_flavor_component_sv0p_n2t;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_mass;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_efrc;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_x;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_y;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_z;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_err_x;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_err_y;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_err_z;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_cov_xy;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_cov_xz;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_cov_yz;
   vector<float>   *antikt5HIItrEM_flavor_component_sv0p_chi2;
   vector<int>     *antikt5HIItrEM_flavor_component_sv0p_ndof;
   vector<int>     *antikt5HIItrEM_flavor_component_sv0p_ntrk;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuoninfo_muon_w;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuoninfo_muon_pTRel;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuoninfo_muon_dRJet;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuon2info_muon2_w;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuon2info_muon2_pTRel;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuon2info_muon2_dRJet;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuonchi2info_muon_w;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_w;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;
   vector<vector<float> > *antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;
   vector<int>     *antikt5HIItrEM_flavor_component_msvp_isValid;
   vector<int>     *antikt5HIItrEM_flavor_component_msvp_ntrkv;
   vector<int>     *antikt5HIItrEM_flavor_component_msvp_ntrkj;
   vector<int>     *antikt5HIItrEM_flavor_component_msvp_n2t;
   vector<int>     *antikt5HIItrEM_flavor_component_msvp_nVtx;
   vector<float>   *antikt5HIItrEM_flavor_component_msvp_normWeightedDist;
   Int_t           antikt6HIItrEM_n;
   vector<float>   *antikt6HIItrEM_E;
   vector<float>   *antikt6HIItrEM_Et;
   vector<float>   *antikt6HIItrEM_pt;
   vector<float>   *antikt6HIItrEM_m;
   vector<float>   *antikt6HIItrEM_eta;
   vector<float>   *antikt6HIItrEM_phi;
   vector<float>   *antikt6HIItrEM_SubtractedEt;
   vector<float>   *antikt6HIItrEM_NoFlow;
   vector<float>   *antikt6HIItrEM_UncalibEt;
   vector<float>   *antikt6HIItrEM_PassedFR;
   vector<int>     *antikt6HIItrEM_const_n;
   vector<vector<float> > *antikt6HIItrEM_const_et;
   vector<vector<float> > *antikt6HIItrEM_const_eta;
   vector<vector<float> > *antikt6HIItrEM_const_phi;
   vector<vector<float> > *antikt6HIItrEM_sampling_et;
   vector<vector<float> > *antikt6HIItrEM_sampling_et_unsubtr;
   vector<vector<int> > *antikt6HIItrEM_bad_cell_n;
   vector<vector<float> > *antikt6HIItrEM_bad_cell_et;
   vector<vector<float> > *antikt6HIItrEM_bad_cell_area;
   vector<vector<int> > *antikt6HIItrEM_empty_cell_n;
   vector<vector<float> > *antikt6HIItrEM_empty_cell_et;
   vector<vector<float> > *antikt6HIItrEM_empty_cell_area;
   vector<vector<int> > *antikt6HIItrEM_total_cell_n;
   vector<vector<float> > *antikt6HIItrEM_total_cell_et;
   vector<vector<float> > *antikt6HIItrEM_total_cell_area;
   vector<float>   *antikt6HIItrEM_n90;
   vector<float>   *antikt6HIItrEM_fracSamplingMax;
   vector<float>   *antikt6HIItrEM_SamplingMax;
   vector<float>   *antikt6HIItrEM_n90constituents;
   vector<float>   *antikt6HIItrEM_Timing;
   vector<float>   *antikt6HIItrEM_LArQuality;
   vector<float>   *antikt6HIItrEM_HECQuality;
   vector<float>   *antikt6HIItrEM_TileQuality;
   vector<float>   *antikt6HIItrEM_NegativeE;
   vector<float>   *antikt6HIItrEM_AverageLArQF;
   vector<float>   *antikt6HIItrEM_sumPtTrk;
   vector<float>   *antikt6HIItrEM_BCH_CORR_CELL;
   vector<float>   *antikt6HIItrEM_BCH_CORR_DOTX;
   vector<float>   *antikt6HIItrEM_BCH_CORR_JET;
   vector<float>   *antikt6HIItrEM_BCH_CORR_JET_FORCELL;
   vector<float>   *antikt6HIItrEM_ENG_BAD_CELLS;
   vector<float>   *antikt6HIItrEM_N_BAD_CELLS;
   vector<float>   *antikt6HIItrEM_N_BAD_CELLS_CORR;
   vector<float>   *antikt6HIItrEM_BAD_CELLS_CORR_E;
   vector<float>   *antikt6HIItrEM_emfrac;
   vector<float>   *antikt6HIItrEM_hecf;
   vector<float>   *antikt6HIItrEM_tgap3f;
   vector<int>     *antikt6HIItrEM_isUgly;
   vector<int>     *antikt6HIItrEM_isBadLooseMinus;
   vector<int>     *antikt6HIItrEM_isBadLoose;
   vector<int>     *antikt6HIItrEM_isBadMedium;
   vector<int>     *antikt6HIItrEM_isBadTight;
   vector<float>   *antikt6HIItrEM_jvtx_x;
   vector<float>   *antikt6HIItrEM_jvtx_y;
   vector<float>   *antikt6HIItrEM_jvtx_z;
   vector<float>   *antikt6HIItrEM_jvtxf;
   vector<float>   *antikt6HIItrEM_flavor_weight_Comb;
   vector<float>   *antikt6HIItrEM_flavor_weight_IP2D;
   vector<float>   *antikt6HIItrEM_flavor_weight_IP3D;
   vector<float>   *antikt6HIItrEM_flavor_weight_SV0;
   vector<float>   *antikt6HIItrEM_flavor_weight_SV1;
   vector<float>   *antikt6HIItrEM_flavor_weight_SV2;
   vector<float>   *antikt6HIItrEM_flavor_weight_SoftMuonTagChi2;
   vector<float>   *antikt6HIItrEM_flavor_weight_SecondSoftMuonTagChi2;
   vector<float>   *antikt6HIItrEM_flavor_weight_JetFitterTagNN;
   vector<float>   *antikt6HIItrEM_flavor_weight_JetFitterCOMBNN;
   vector<float>   *antikt6HIItrEM_flavor_weight_MV1;
   vector<float>   *antikt6HIItrEM_flavor_weight_MV2;
   vector<float>   *antikt6HIItrEM_flavor_weight_GbbNN;
   vector<int>     *antikt6HIItrEM_flavor_truth_label;
   vector<float>   *antikt6HIItrEM_flavor_truth_dRminToB;
   vector<float>   *antikt6HIItrEM_flavor_truth_dRminToC;
   vector<float>   *antikt6HIItrEM_flavor_truth_dRminToT;
   vector<int>     *antikt6HIItrEM_flavor_truth_BHadronpdg;
   vector<float>   *antikt6HIItrEM_flavor_truth_vx_x;
   vector<float>   *antikt6HIItrEM_flavor_truth_vx_y;
   vector<float>   *antikt6HIItrEM_flavor_truth_vx_z;
   vector<vector<int> > *antikt6HIItrEM_flavor_component_assoctrk_signOfIP;
   vector<vector<int> > *antikt6HIItrEM_flavor_component_assoctrk_signOfZIP;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;
   vector<vector<short> > *antikt6HIItrEM_flavor_component_gentruthlepton_origin;
   vector<vector<int> > *antikt6HIItrEM_flavor_component_gentruthlepton_slbarcode;
   vector<float>   *antikt6HIItrEM_flavor_component_ip2d_pu;
   vector<float>   *antikt6HIItrEM_flavor_component_ip2d_pb;
   vector<int>     *antikt6HIItrEM_flavor_component_ip2d_isValid;
   vector<int>     *antikt6HIItrEM_flavor_component_ip2d_ntrk;
   vector<float>   *antikt6HIItrEM_flavor_component_ip3d_pu;
   vector<float>   *antikt6HIItrEM_flavor_component_ip3d_pb;
   vector<int>     *antikt6HIItrEM_flavor_component_ip3d_isValid;
   vector<int>     *antikt6HIItrEM_flavor_component_ip3d_ntrk;
   vector<int>     *antikt6HIItrEM_flavor_component_jetprob_ntrk;
   vector<float>   *antikt6HIItrEM_flavor_component_sv1_pu;
   vector<float>   *antikt6HIItrEM_flavor_component_sv1_pb;
   vector<int>     *antikt6HIItrEM_flavor_component_sv1_isValid;
   vector<float>   *antikt6HIItrEM_flavor_component_sv2_pu;
   vector<float>   *antikt6HIItrEM_flavor_component_sv2_pb;
   vector<int>     *antikt6HIItrEM_flavor_component_sv2_isValid;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_pu;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_pb;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_pc;
   vector<int>     *antikt6HIItrEM_flavor_component_jfit_isValid;
   vector<float>   *antikt6HIItrEM_flavor_component_jfitcomb_pu;
   vector<float>   *antikt6HIItrEM_flavor_component_jfitcomb_pb;
   vector<float>   *antikt6HIItrEM_flavor_component_jfitcomb_pc;
   vector<int>     *antikt6HIItrEM_flavor_component_jfitcomb_isValid;
   vector<int>     *antikt6HIItrEM_flavor_component_gbbnn_nMatchingTracks;
   vector<double>  *antikt6HIItrEM_flavor_component_gbbnn_trkJetWidth;
   vector<double>  *antikt6HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;
   vector<int>     *antikt6HIItrEM_flavor_component_jfit_nvtx;
   vector<int>     *antikt6HIItrEM_flavor_component_jfit_nvtx1t;
   vector<int>     *antikt6HIItrEM_flavor_component_jfit_ntrkAtVx;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_efrc;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_mass;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_sig3d;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_deltaPhi;
   vector<float>   *antikt6HIItrEM_flavor_component_jfit_deltaEta;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_d0val;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_d0sig;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_z0val;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_z0sig;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_w2D;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_w3D;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_pJP;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_ipplus_trk_pJPneg;
   vector<vector<int> > *antikt6HIItrEM_flavor_component_ipplus_trk_grade;
   vector<vector<int> > *antikt6HIItrEM_flavor_component_ipplus_trk_isFromV0;
   vector<int>     *antikt6HIItrEM_flavor_component_svp_isValid;
   vector<int>     *antikt6HIItrEM_flavor_component_svp_ntrkv;
   vector<int>     *antikt6HIItrEM_flavor_component_svp_ntrkj;
   vector<int>     *antikt6HIItrEM_flavor_component_svp_n2t;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_mass;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_efrc;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_x;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_y;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_z;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_err_x;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_err_y;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_err_z;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_cov_xy;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_cov_xz;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_cov_yz;
   vector<float>   *antikt6HIItrEM_flavor_component_svp_chi2;
   vector<int>     *antikt6HIItrEM_flavor_component_svp_ndof;
   vector<int>     *antikt6HIItrEM_flavor_component_svp_ntrk;
   vector<int>     *antikt6HIItrEM_flavor_component_sv0p_isValid;
   vector<int>     *antikt6HIItrEM_flavor_component_sv0p_ntrkv;
   vector<int>     *antikt6HIItrEM_flavor_component_sv0p_ntrkj;
   vector<int>     *antikt6HIItrEM_flavor_component_sv0p_n2t;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_mass;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_efrc;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_x;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_y;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_z;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_err_x;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_err_y;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_err_z;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_cov_xy;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_cov_xz;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_cov_yz;
   vector<float>   *antikt6HIItrEM_flavor_component_sv0p_chi2;
   vector<int>     *antikt6HIItrEM_flavor_component_sv0p_ndof;
   vector<int>     *antikt6HIItrEM_flavor_component_sv0p_ntrk;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuoninfo_muon_w;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuoninfo_muon_pTRel;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuoninfo_muon_dRJet;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuon2info_muon2_w;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuon2info_muon2_pTRel;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuon2info_muon2_dRJet;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuonchi2info_muon_w;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_w;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;
   vector<vector<float> > *antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;
   vector<int>     *antikt6HIItrEM_flavor_component_msvp_isValid;
   vector<int>     *antikt6HIItrEM_flavor_component_msvp_ntrkv;
   vector<int>     *antikt6HIItrEM_flavor_component_msvp_ntrkj;
   vector<int>     *antikt6HIItrEM_flavor_component_msvp_n2t;
   vector<int>     *antikt6HIItrEM_flavor_component_msvp_nVtx;
   vector<float>   *antikt6HIItrEM_flavor_component_msvp_normWeightedDist;
   vector<vector<float> > *ItrEMFlowBkgrlayer_CaloBkgrEt;
   vector<vector<float> > *ItrEMFlowBkgrlayer_CaloBkgrRMS;
   vector<vector<int> > *ItrEMFlowBkgrlayer_CaloBkgrCounts;
   vector<float>   *ItrEMFlowBkgrlayer_CaloBkgrEta;
   Float_t         JetFlow_PsiFCAL0_w;
   Float_t         JetFlow_PsiPFCAL0_w;
   Float_t         JetFlow_PsiNFCAL0_w;
   vector<float>   *JetFlow_EtInLayer;
   vector<float>   *JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         JetFlow_AvgV2fromCalo;
   vector<float>   *JetFlow_PsiHICaloUtilLayers;
   vector<float>   *JetFlow_PsiEtHICaloUtilLayers;
   Float_t         JetFlow_PsiPtrack;
   Float_t         JetFlow_PsiNtrack;
   Float_t         JetFlow_v2FCAL0sil;
   Float_t         JetFlow_v2track;
   vector<float>   *JetFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Int_t           antikt4HIItrEMFlow_n;
   vector<float>   *antikt4HIItrEMFlow_E;
   vector<float>   *antikt4HIItrEMFlow_Et;
   vector<float>   *antikt4HIItrEMFlow_pt;
   vector<float>   *antikt4HIItrEMFlow_m;
   vector<float>   *antikt4HIItrEMFlow_eta;
   vector<float>   *antikt4HIItrEMFlow_phi;
   vector<float>   *antikt4HIItrEMFlow_SubtractedEt;
   vector<float>   *antikt4HIItrEMFlow_NoFlow;
   vector<float>   *antikt4HIItrEMFlow_UncalibEt;
   vector<float>   *antikt4HIItrEMFlow_PassedFR;
   vector<int>     *antikt4HIItrEMFlow_const_n;
   vector<vector<float> > *antikt4HIItrEMFlow_const_et;
   vector<vector<float> > *antikt4HIItrEMFlow_const_eta;
   vector<vector<float> > *antikt4HIItrEMFlow_const_phi;
   vector<vector<float> > *antikt4HIItrEMFlow_sampling_et;
   vector<vector<float> > *antikt4HIItrEMFlow_sampling_et_unsubtr;
   vector<vector<int> > *antikt4HIItrEMFlow_bad_cell_n;
   vector<vector<float> > *antikt4HIItrEMFlow_bad_cell_et;
   vector<vector<float> > *antikt4HIItrEMFlow_bad_cell_area;
   vector<vector<int> > *antikt4HIItrEMFlow_empty_cell_n;
   vector<vector<float> > *antikt4HIItrEMFlow_empty_cell_et;
   vector<vector<float> > *antikt4HIItrEMFlow_empty_cell_area;
   vector<vector<int> > *antikt4HIItrEMFlow_total_cell_n;
   vector<vector<float> > *antikt4HIItrEMFlow_total_cell_et;
   vector<vector<float> > *antikt4HIItrEMFlow_total_cell_area;
   vector<float>   *antikt4HIItrEMFlow_n90;
   vector<float>   *antikt4HIItrEMFlow_fracSamplingMax;
   vector<float>   *antikt4HIItrEMFlow_SamplingMax;
   vector<float>   *antikt4HIItrEMFlow_n90constituents;
   vector<float>   *antikt4HIItrEMFlow_Timing;
   vector<float>   *antikt4HIItrEMFlow_LArQuality;
   vector<float>   *antikt4HIItrEMFlow_HECQuality;
   vector<float>   *antikt4HIItrEMFlow_TileQuality;
   vector<float>   *antikt4HIItrEMFlow_NegativeE;
   vector<float>   *antikt4HIItrEMFlow_AverageLArQF;
   vector<float>   *antikt4HIItrEMFlow_sumPtTrk;
   vector<float>   *antikt4HIItrEMFlow_BCH_CORR_CELL;
   vector<float>   *antikt4HIItrEMFlow_BCH_CORR_DOTX;
   vector<float>   *antikt4HIItrEMFlow_BCH_CORR_JET;
   vector<float>   *antikt4HIItrEMFlow_BCH_CORR_JET_FORCELL;
   vector<float>   *antikt4HIItrEMFlow_ENG_BAD_CELLS;
   vector<float>   *antikt4HIItrEMFlow_N_BAD_CELLS;
   vector<float>   *antikt4HIItrEMFlow_N_BAD_CELLS_CORR;
   vector<float>   *antikt4HIItrEMFlow_BAD_CELLS_CORR_E;
   vector<float>   *antikt4HIItrEMFlow_emfrac;
   vector<float>   *antikt4HIItrEMFlow_hecf;
   vector<float>   *antikt4HIItrEMFlow_tgap3f;
   vector<int>     *antikt4HIItrEMFlow_isUgly;
   vector<int>     *antikt4HIItrEMFlow_isBadLooseMinus;
   vector<int>     *antikt4HIItrEMFlow_isBadLoose;
   vector<int>     *antikt4HIItrEMFlow_isBadMedium;
   vector<int>     *antikt4HIItrEMFlow_isBadTight;
   vector<float>   *antikt4HIItrEMFlow_jvtx_x;
   vector<float>   *antikt4HIItrEMFlow_jvtx_y;
   vector<float>   *antikt4HIItrEMFlow_jvtx_z;
   vector<float>   *antikt4HIItrEMFlow_jvtxf;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_Comb;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_IP2D;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_IP3D;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_SV0;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_SV1;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_SV2;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_SoftMuonTagChi2;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_SecondSoftMuonTagChi2;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_JetFitterTagNN;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_JetFitterCOMBNN;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_MV1;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_MV2;
   vector<float>   *antikt4HIItrEMFlow_flavor_weight_GbbNN;
   vector<int>     *antikt4HIItrEMFlow_flavor_truth_label;
   vector<float>   *antikt4HIItrEMFlow_flavor_truth_dRminToB;
   vector<float>   *antikt4HIItrEMFlow_flavor_truth_dRminToC;
   vector<float>   *antikt4HIItrEMFlow_flavor_truth_dRminToT;
   vector<int>     *antikt4HIItrEMFlow_flavor_truth_BHadronpdg;
   vector<float>   *antikt4HIItrEMFlow_flavor_truth_vx_x;
   vector<float>   *antikt4HIItrEMFlow_flavor_truth_vx_y;
   vector<float>   *antikt4HIItrEMFlow_flavor_truth_vx_z;
   vector<vector<int> > *antikt4HIItrEMFlow_flavor_component_assoctrk_signOfIP;
   vector<vector<int> > *antikt4HIItrEMFlow_flavor_component_assoctrk_signOfZIP;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_assoctrk_ud0wrtPriVtx;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_assoctrk_ud0ErrwrtPriVtx;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_assoctrk_uz0wrtPriVtx;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_assoctrk_uz0ErrwrtPriVtx;
   vector<vector<short> > *antikt4HIItrEMFlow_flavor_component_gentruthlepton_origin;
   vector<vector<int> > *antikt4HIItrEMFlow_flavor_component_gentruthlepton_slbarcode;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_ip2d_pu;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_ip2d_pb;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_ip2d_isValid;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_ip2d_ntrk;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_ip3d_pu;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_ip3d_pb;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_ip3d_isValid;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_ip3d_ntrk;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_jetprob_ntrk;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv1_pu;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv1_pb;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv1_isValid;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv2_pu;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv2_pb;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv2_isValid;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_pu;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_pb;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_pc;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_jfit_isValid;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfitcomb_pu;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfitcomb_pb;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfitcomb_pc;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_jfitcomb_isValid;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_gbbnn_nMatchingTracks;
   vector<double>  *antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetWidth;
   vector<double>  *antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetMaxDeltaR;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_jfit_nvtx;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_jfit_nvtx1t;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_jfit_ntrkAtVx;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_efrc;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_mass;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_sig3d;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_deltaPhi;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_jfit_deltaEta;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0val;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0sig;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0val;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0sig;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_w2D;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_w3D;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJP;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJPneg;
   vector<vector<int> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_grade;
   vector<vector<int> > *antikt4HIItrEMFlow_flavor_component_ipplus_trk_isFromV0;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_svp_isValid;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_svp_ntrkv;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_svp_ntrkj;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_svp_n2t;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_mass;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_efrc;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_x;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_y;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_z;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_err_x;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_err_y;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_err_z;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_cov_xy;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_cov_xz;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_cov_yz;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_svp_chi2;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_svp_ndof;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_svp_ntrk;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv0p_isValid;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv0p_ntrkv;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv0p_ntrkj;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv0p_n2t;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_mass;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_efrc;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_x;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_y;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_z;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_err_x;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_err_y;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_err_z;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_cov_xy;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_cov_xz;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_cov_yz;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_sv0p_chi2;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv0p_ndof;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_sv0p_ntrk;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_w;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_pTRel;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_dRJet;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_w;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_pTRel;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_dRJet;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_w;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_pTRel;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_dRJet;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_w;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_pTRel;
   vector<vector<float> > *antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_dRJet;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_msvp_isValid;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_msvp_ntrkv;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_msvp_ntrkj;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_msvp_n2t;
   vector<int>     *antikt4HIItrEMFlow_flavor_component_msvp_nVtx;
   vector<float>   *antikt4HIItrEMFlow_flavor_component_msvp_normWeightedDist;
   Int_t           antikt2Truth_n;
   vector<float>   *antikt2Truth_E;
   vector<float>   *antikt2Truth_Et;
   vector<float>   *antikt2Truth_pt;
   vector<float>   *antikt2Truth_m;
   vector<float>   *antikt2Truth_eta;
   vector<float>   *antikt2Truth_phi;
   Int_t           antikt3Truth_n;
   vector<float>   *antikt3Truth_E;
   vector<float>   *antikt3Truth_Et;
   vector<float>   *antikt3Truth_pt;
   vector<float>   *antikt3Truth_m;
   vector<float>   *antikt3Truth_eta;
   vector<float>   *antikt3Truth_phi;
   Int_t           antikt4Truth_n;
   vector<float>   *antikt4Truth_E;
   vector<float>   *antikt4Truth_Et;
   vector<float>   *antikt4Truth_pt;
   vector<float>   *antikt4Truth_m;
   vector<float>   *antikt4Truth_eta;
   vector<float>   *antikt4Truth_phi;
   Int_t           antikt5Truth_n;
   vector<float>   *antikt5Truth_E;
   vector<float>   *antikt5Truth_Et;
   vector<float>   *antikt5Truth_pt;
   vector<float>   *antikt5Truth_m;
   vector<float>   *antikt5Truth_eta;
   vector<float>   *antikt5Truth_phi;
   Int_t           antikt6Truth_n;
   vector<float>   *antikt6Truth_E;
   vector<float>   *antikt6Truth_Et;
   vector<float>   *antikt6Truth_pt;
   vector<float>   *antikt6Truth_m;
   vector<float>   *antikt6Truth_eta;
   vector<float>   *antikt6Truth_phi;
   Int_t           antikt4TruthHijing_n;
   vector<float>   *antikt4TruthHijing_E;
   vector<float>   *antikt4TruthHijing_Et;
   vector<float>   *antikt4TruthHijing_pt;
   vector<float>   *antikt4TruthHijing_m;
   vector<float>   *antikt4TruthHijing_eta;
   vector<float>   *antikt4TruthHijing_phi;
   Int_t           AntiKt4TopoEM_n;
   vector<float>   *AntiKt4TopoEM_E;
   vector<float>   *AntiKt4TopoEM_pt;
   vector<float>   *AntiKt4TopoEM_m;
   vector<float>   *AntiKt4TopoEM_eta;
   vector<float>   *AntiKt4TopoEM_phi;
   vector<float>   *AntiKt4TopoEM_EtaOrigin;
   vector<float>   *AntiKt4TopoEM_PhiOrigin;
   vector<float>   *AntiKt4TopoEM_MOrigin;
   vector<float>   *AntiKt4TopoEM_WIDTH;
   vector<float>   *AntiKt4TopoEM_n90;
   vector<float>   *AntiKt4TopoEM_Timing;
   vector<float>   *AntiKt4TopoEM_LArQuality;
   vector<float>   *AntiKt4TopoEM_nTrk;
   vector<float>   *AntiKt4TopoEM_sumPtTrk;
   vector<float>   *AntiKt4TopoEM_OriginIndex;
   vector<float>   *AntiKt4TopoEM_HECQuality;
   vector<float>   *AntiKt4TopoEM_NegativeE;
   vector<float>   *AntiKt4TopoEM_AverageLArQF;
   vector<float>   *AntiKt4TopoEM_BCH_CORR_CELL;
   vector<float>   *AntiKt4TopoEM_BCH_CORR_DOTX;
   vector<float>   *AntiKt4TopoEM_BCH_CORR_JET;
   vector<float>   *AntiKt4TopoEM_BCH_CORR_JET_FORCELL;
   vector<float>   *AntiKt4TopoEM_ENG_BAD_CELLS;
   vector<float>   *AntiKt4TopoEM_N_BAD_CELLS;
   vector<float>   *AntiKt4TopoEM_N_BAD_CELLS_CORR;
   vector<float>   *AntiKt4TopoEM_BAD_CELLS_CORR_E;
   vector<float>   *AntiKt4TopoEM_NumTowers;
   vector<float>   *AntiKt4TopoEM_ootFracCells5;
   vector<float>   *AntiKt4TopoEM_ootFracCells10;
   vector<float>   *AntiKt4TopoEM_ootFracClusters5;
   vector<float>   *AntiKt4TopoEM_ootFracClusters10;
   vector<int>     *AntiKt4TopoEM_SamplingMax;
   vector<float>   *AntiKt4TopoEM_fracSamplingMax;
   vector<float>   *AntiKt4TopoEM_hecf;
   vector<float>   *AntiKt4TopoEM_tgap3f;
   vector<int>     *AntiKt4TopoEM_isUgly;
   vector<int>     *AntiKt4TopoEM_isBadLooseMinus;
   vector<int>     *AntiKt4TopoEM_isBadLoose;
   vector<int>     *AntiKt4TopoEM_isBadMedium;
   vector<int>     *AntiKt4TopoEM_isBadTight;
   vector<float>   *AntiKt4TopoEM_emfrac;
   vector<float>   *AntiKt4TopoEM_Offset;
   vector<float>   *AntiKt4TopoEM_EMJES;
   vector<float>   *AntiKt4TopoEM_EMJES_EtaCorr;
   vector<float>   *AntiKt4TopoEM_EMJESnooffset;
   vector<float>   *AntiKt4TopoEM_LCJES;
   vector<float>   *AntiKt4TopoEM_LCJES_EtaCorr;
   vector<float>   *AntiKt4TopoEM_emscale_E;
   vector<float>   *AntiKt4TopoEM_emscale_pt;
   vector<float>   *AntiKt4TopoEM_emscale_m;
   vector<float>   *AntiKt4TopoEM_emscale_eta;
   vector<float>   *AntiKt4TopoEM_emscale_phi;
   vector<float>   *AntiKt4TopoEM_jvtx_x;
   vector<float>   *AntiKt4TopoEM_jvtx_y;
   vector<float>   *AntiKt4TopoEM_jvtx_z;
   vector<float>   *AntiKt4TopoEM_jvtxf;
   vector<float>   *AntiKt4TopoEM_GSCFactorF;
   vector<float>   *AntiKt4TopoEM_WidthFraction;
   vector<float>   *AntiKt4TopoEM_e_PreSamplerB;
   vector<float>   *AntiKt4TopoEM_e_EMB1;
   vector<float>   *AntiKt4TopoEM_e_EMB2;
   vector<float>   *AntiKt4TopoEM_e_EMB3;
   vector<float>   *AntiKt4TopoEM_e_PreSamplerE;
   vector<float>   *AntiKt4TopoEM_e_EME1;
   vector<float>   *AntiKt4TopoEM_e_EME2;
   vector<float>   *AntiKt4TopoEM_e_EME3;
   vector<float>   *AntiKt4TopoEM_e_HEC0;
   vector<float>   *AntiKt4TopoEM_e_HEC1;
   vector<float>   *AntiKt4TopoEM_e_HEC2;
   vector<float>   *AntiKt4TopoEM_e_HEC3;
   vector<float>   *AntiKt4TopoEM_e_TileBar0;
   vector<float>   *AntiKt4TopoEM_e_TileBar1;
   vector<float>   *AntiKt4TopoEM_e_TileBar2;
   vector<float>   *AntiKt4TopoEM_e_TileGap1;
   vector<float>   *AntiKt4TopoEM_e_TileGap2;
   vector<float>   *AntiKt4TopoEM_e_TileGap3;
   vector<float>   *AntiKt4TopoEM_e_TileExt0;
   vector<float>   *AntiKt4TopoEM_e_TileExt1;
   vector<float>   *AntiKt4TopoEM_e_TileExt2;
   vector<float>   *AntiKt4TopoEM_e_FCAL0;
   vector<float>   *AntiKt4TopoEM_e_FCAL1;
   vector<float>   *AntiKt4TopoEM_e_FCAL2;
   vector<vector<float> > *AntiKt4TopoEM_shapeBins;
   vector<int>     *AntiKt4TopoEM_Nconst;
   vector<vector<float> > *AntiKt4TopoEM_ptconst_default;
   vector<vector<float> > *AntiKt4TopoEM_econst_default;
   vector<vector<float> > *AntiKt4TopoEM_etaconst_default;
   vector<vector<float> > *AntiKt4TopoEM_phiconst_default;
   vector<vector<float> > *AntiKt4TopoEM_weightconst_default;
   vector<float>   *AntiKt4TopoEM_constscale_E;
   vector<float>   *AntiKt4TopoEM_constscale_pt;
   vector<float>   *AntiKt4TopoEM_constscale_m;
   vector<float>   *AntiKt4TopoEM_constscale_eta;
   vector<float>   *AntiKt4TopoEM_constscale_phi;
   vector<float>   *AntiKt4TopoEM_el_dr;
   vector<int>     *AntiKt4TopoEM_el_matched;
   vector<float>   *AntiKt4TopoEM_mu_dr;
   vector<int>     *AntiKt4TopoEM_mu_matched;
   vector<float>   *AntiKt4TopoEM_L1_dr;
   vector<int>     *AntiKt4TopoEM_L1_matched;
   vector<float>   *AntiKt4TopoEM_L2_dr;
   vector<int>     *AntiKt4TopoEM_L2_matched;
   vector<float>   *AntiKt4TopoEM_EF_dr;
   vector<int>     *AntiKt4TopoEM_EF_matched;
   Int_t           AntiKt4LCTopo_n;
   vector<float>   *AntiKt4LCTopo_E;
   vector<float>   *AntiKt4LCTopo_pt;
   vector<float>   *AntiKt4LCTopo_m;
   vector<float>   *AntiKt4LCTopo_eta;
   vector<float>   *AntiKt4LCTopo_phi;
   vector<float>   *AntiKt4LCTopo_EtaOrigin;
   vector<float>   *AntiKt4LCTopo_PhiOrigin;
   vector<float>   *AntiKt4LCTopo_MOrigin;
   vector<float>   *AntiKt4LCTopo_WIDTH;
   vector<float>   *AntiKt4LCTopo_n90;
   vector<float>   *AntiKt4LCTopo_Timing;
   vector<float>   *AntiKt4LCTopo_LArQuality;
   vector<float>   *AntiKt4LCTopo_nTrk;
   vector<float>   *AntiKt4LCTopo_sumPtTrk;
   vector<float>   *AntiKt4LCTopo_OriginIndex;
   vector<float>   *AntiKt4LCTopo_HECQuality;
   vector<float>   *AntiKt4LCTopo_NegativeE;
   vector<float>   *AntiKt4LCTopo_AverageLArQF;
   vector<float>   *AntiKt4LCTopo_BCH_CORR_CELL;
   vector<float>   *AntiKt4LCTopo_BCH_CORR_DOTX;
   vector<float>   *AntiKt4LCTopo_BCH_CORR_JET;
   vector<float>   *AntiKt4LCTopo_BCH_CORR_JET_FORCELL;
   vector<float>   *AntiKt4LCTopo_ENG_BAD_CELLS;
   vector<float>   *AntiKt4LCTopo_N_BAD_CELLS;
   vector<float>   *AntiKt4LCTopo_N_BAD_CELLS_CORR;
   vector<float>   *AntiKt4LCTopo_BAD_CELLS_CORR_E;
   vector<float>   *AntiKt4LCTopo_NumTowers;
   vector<float>   *AntiKt4LCTopo_ootFracCells5;
   vector<float>   *AntiKt4LCTopo_ootFracCells10;
   vector<float>   *AntiKt4LCTopo_ootFracClusters5;
   vector<float>   *AntiKt4LCTopo_ootFracClusters10;
   vector<int>     *AntiKt4LCTopo_SamplingMax;
   vector<float>   *AntiKt4LCTopo_fracSamplingMax;
   vector<float>   *AntiKt4LCTopo_hecf;
   vector<float>   *AntiKt4LCTopo_tgap3f;
   vector<int>     *AntiKt4LCTopo_isUgly;
   vector<int>     *AntiKt4LCTopo_isBadLooseMinus;
   vector<int>     *AntiKt4LCTopo_isBadLoose;
   vector<int>     *AntiKt4LCTopo_isBadMedium;
   vector<int>     *AntiKt4LCTopo_isBadTight;
   vector<float>   *AntiKt4LCTopo_emfrac;
   vector<float>   *AntiKt4LCTopo_Offset;
   vector<float>   *AntiKt4LCTopo_EMJES;
   vector<float>   *AntiKt4LCTopo_EMJES_EtaCorr;
   vector<float>   *AntiKt4LCTopo_EMJESnooffset;
   vector<float>   *AntiKt4LCTopo_LCJES;
   vector<float>   *AntiKt4LCTopo_LCJES_EtaCorr;
   vector<float>   *AntiKt4LCTopo_emscale_E;
   vector<float>   *AntiKt4LCTopo_emscale_pt;
   vector<float>   *AntiKt4LCTopo_emscale_m;
   vector<float>   *AntiKt4LCTopo_emscale_eta;
   vector<float>   *AntiKt4LCTopo_emscale_phi;
   vector<float>   *AntiKt4LCTopo_jvtx_x;
   vector<float>   *AntiKt4LCTopo_jvtx_y;
   vector<float>   *AntiKt4LCTopo_jvtx_z;
   vector<float>   *AntiKt4LCTopo_jvtxf;
   vector<float>   *AntiKt4LCTopo_GSCFactorF;
   vector<float>   *AntiKt4LCTopo_WidthFraction;
   vector<float>   *AntiKt4LCTopo_e_PreSamplerB;
   vector<float>   *AntiKt4LCTopo_e_EMB1;
   vector<float>   *AntiKt4LCTopo_e_EMB2;
   vector<float>   *AntiKt4LCTopo_e_EMB3;
   vector<float>   *AntiKt4LCTopo_e_PreSamplerE;
   vector<float>   *AntiKt4LCTopo_e_EME1;
   vector<float>   *AntiKt4LCTopo_e_EME2;
   vector<float>   *AntiKt4LCTopo_e_EME3;
   vector<float>   *AntiKt4LCTopo_e_HEC0;
   vector<float>   *AntiKt4LCTopo_e_HEC1;
   vector<float>   *AntiKt4LCTopo_e_HEC2;
   vector<float>   *AntiKt4LCTopo_e_HEC3;
   vector<float>   *AntiKt4LCTopo_e_TileBar0;
   vector<float>   *AntiKt4LCTopo_e_TileBar1;
   vector<float>   *AntiKt4LCTopo_e_TileBar2;
   vector<float>   *AntiKt4LCTopo_e_TileGap1;
   vector<float>   *AntiKt4LCTopo_e_TileGap2;
   vector<float>   *AntiKt4LCTopo_e_TileGap3;
   vector<float>   *AntiKt4LCTopo_e_TileExt0;
   vector<float>   *AntiKt4LCTopo_e_TileExt1;
   vector<float>   *AntiKt4LCTopo_e_TileExt2;
   vector<float>   *AntiKt4LCTopo_e_FCAL0;
   vector<float>   *AntiKt4LCTopo_e_FCAL1;
   vector<float>   *AntiKt4LCTopo_e_FCAL2;
   vector<vector<float> > *AntiKt4LCTopo_shapeBins;
   vector<int>     *AntiKt4LCTopo_Nconst;
   vector<vector<float> > *AntiKt4LCTopo_ptconst_default;
   vector<vector<float> > *AntiKt4LCTopo_econst_default;
   vector<vector<float> > *AntiKt4LCTopo_etaconst_default;
   vector<vector<float> > *AntiKt4LCTopo_phiconst_default;
   vector<vector<float> > *AntiKt4LCTopo_weightconst_default;
   vector<float>   *AntiKt4LCTopo_constscale_E;
   vector<float>   *AntiKt4LCTopo_constscale_pt;
   vector<float>   *AntiKt4LCTopo_constscale_m;
   vector<float>   *AntiKt4LCTopo_constscale_eta;
   vector<float>   *AntiKt4LCTopo_constscale_phi;
   vector<float>   *AntiKt4LCTopo_el_dr;
   vector<int>     *AntiKt4LCTopo_el_matched;
   vector<float>   *AntiKt4LCTopo_mu_dr;
   vector<int>     *AntiKt4LCTopo_mu_matched;
   vector<float>   *AntiKt4LCTopo_L1_dr;
   vector<int>     *AntiKt4LCTopo_L1_matched;
   vector<float>   *AntiKt4LCTopo_L2_dr;
   vector<int>     *AntiKt4LCTopo_L2_matched;
   vector<float>   *AntiKt4LCTopo_EF_dr;
   vector<int>     *AntiKt4LCTopo_EF_matched;
   Int_t           AntiKt6Tower_n;
   vector<float>   *AntiKt6Tower_E;
   vector<float>   *AntiKt6Tower_pt;
   vector<float>   *AntiKt6Tower_m;
   vector<float>   *AntiKt6Tower_eta;
   vector<float>   *AntiKt6Tower_phi;
   vector<float>   *AntiKt6Tower_EtaOrigin;
   vector<float>   *AntiKt6Tower_PhiOrigin;
   vector<float>   *AntiKt6Tower_MOrigin;
   vector<float>   *AntiKt6Tower_WIDTH;
   vector<float>   *AntiKt6Tower_n90;
   vector<float>   *AntiKt6Tower_Timing;
   vector<float>   *AntiKt6Tower_LArQuality;
   vector<float>   *AntiKt6Tower_nTrk;
   vector<float>   *AntiKt6Tower_sumPtTrk;
   vector<float>   *AntiKt6Tower_OriginIndex;
   vector<float>   *AntiKt6Tower_HECQuality;
   vector<float>   *AntiKt6Tower_NegativeE;
   vector<float>   *AntiKt6Tower_AverageLArQF;
   vector<float>   *AntiKt6Tower_BCH_CORR_CELL;
   vector<float>   *AntiKt6Tower_BCH_CORR_DOTX;
   vector<float>   *AntiKt6Tower_BCH_CORR_JET;
   vector<float>   *AntiKt6Tower_BCH_CORR_JET_FORCELL;
   vector<float>   *AntiKt6Tower_ENG_BAD_CELLS;
   vector<float>   *AntiKt6Tower_N_BAD_CELLS;
   vector<float>   *AntiKt6Tower_N_BAD_CELLS_CORR;
   vector<float>   *AntiKt6Tower_BAD_CELLS_CORR_E;
   vector<float>   *AntiKt6Tower_NumTowers;
   vector<float>   *AntiKt6Tower_ootFracCells5;
   vector<float>   *AntiKt6Tower_ootFracCells10;
   vector<float>   *AntiKt6Tower_ootFracClusters5;
   vector<float>   *AntiKt6Tower_ootFracClusters10;
   vector<int>     *AntiKt6Tower_SamplingMax;
   vector<float>   *AntiKt6Tower_fracSamplingMax;
   vector<float>   *AntiKt6Tower_hecf;
   vector<float>   *AntiKt6Tower_tgap3f;
   vector<int>     *AntiKt6Tower_isUgly;
   vector<int>     *AntiKt6Tower_isBadLooseMinus;
   vector<int>     *AntiKt6Tower_isBadLoose;
   vector<int>     *AntiKt6Tower_isBadMedium;
   vector<int>     *AntiKt6Tower_isBadTight;
   vector<float>   *AntiKt6Tower_emfrac;
   vector<float>   *AntiKt6Tower_Offset;
   vector<float>   *AntiKt6Tower_EMJES;
   vector<float>   *AntiKt6Tower_EMJES_EtaCorr;
   vector<float>   *AntiKt6Tower_EMJESnooffset;
   vector<float>   *AntiKt6Tower_LCJES;
   vector<float>   *AntiKt6Tower_LCJES_EtaCorr;
   vector<float>   *AntiKt6Tower_emscale_E;
   vector<float>   *AntiKt6Tower_emscale_pt;
   vector<float>   *AntiKt6Tower_emscale_m;
   vector<float>   *AntiKt6Tower_emscale_eta;
   vector<float>   *AntiKt6Tower_emscale_phi;
   vector<float>   *AntiKt6Tower_jvtx_x;
   vector<float>   *AntiKt6Tower_jvtx_y;
   vector<float>   *AntiKt6Tower_jvtx_z;
   vector<float>   *AntiKt6Tower_jvtxf;
   vector<float>   *AntiKt6Tower_GSCFactorF;
   vector<float>   *AntiKt6Tower_WidthFraction;
   vector<float>   *AntiKt6Tower_e_PreSamplerB;
   vector<float>   *AntiKt6Tower_e_EMB1;
   vector<float>   *AntiKt6Tower_e_EMB2;
   vector<float>   *AntiKt6Tower_e_EMB3;
   vector<float>   *AntiKt6Tower_e_PreSamplerE;
   vector<float>   *AntiKt6Tower_e_EME1;
   vector<float>   *AntiKt6Tower_e_EME2;
   vector<float>   *AntiKt6Tower_e_EME3;
   vector<float>   *AntiKt6Tower_e_HEC0;
   vector<float>   *AntiKt6Tower_e_HEC1;
   vector<float>   *AntiKt6Tower_e_HEC2;
   vector<float>   *AntiKt6Tower_e_HEC3;
   vector<float>   *AntiKt6Tower_e_TileBar0;
   vector<float>   *AntiKt6Tower_e_TileBar1;
   vector<float>   *AntiKt6Tower_e_TileBar2;
   vector<float>   *AntiKt6Tower_e_TileGap1;
   vector<float>   *AntiKt6Tower_e_TileGap2;
   vector<float>   *AntiKt6Tower_e_TileGap3;
   vector<float>   *AntiKt6Tower_e_TileExt0;
   vector<float>   *AntiKt6Tower_e_TileExt1;
   vector<float>   *AntiKt6Tower_e_TileExt2;
   vector<float>   *AntiKt6Tower_e_FCAL0;
   vector<float>   *AntiKt6Tower_e_FCAL1;
   vector<float>   *AntiKt6Tower_e_FCAL2;
   vector<vector<float> > *AntiKt6Tower_shapeBins;
   vector<int>     *AntiKt6Tower_Nconst;
   vector<vector<float> > *AntiKt6Tower_ptconst_default;
   vector<vector<float> > *AntiKt6Tower_econst_default;
   vector<vector<float> > *AntiKt6Tower_etaconst_default;
   vector<vector<float> > *AntiKt6Tower_phiconst_default;
   vector<vector<float> > *AntiKt6Tower_weightconst_default;
   vector<float>   *AntiKt6Tower_constscale_E;
   vector<float>   *AntiKt6Tower_constscale_pt;
   vector<float>   *AntiKt6Tower_constscale_m;
   vector<float>   *AntiKt6Tower_constscale_eta;
   vector<float>   *AntiKt6Tower_constscale_phi;
   vector<float>   *AntiKt6Tower_el_dr;
   vector<int>     *AntiKt6Tower_el_matched;
   vector<float>   *AntiKt6Tower_mu_dr;
   vector<int>     *AntiKt6Tower_mu_matched;
   vector<float>   *AntiKt6Tower_L1_dr;
   vector<int>     *AntiKt6Tower_L1_matched;
   vector<float>   *AntiKt6Tower_L2_dr;
   vector<int>     *AntiKt6Tower_L2_matched;
   vector<float>   *AntiKt6Tower_EF_dr;
   vector<int>     *AntiKt6Tower_EF_matched;
   Int_t           AntiKt6LCTopo_n;
   vector<float>   *AntiKt6LCTopo_E;
   vector<float>   *AntiKt6LCTopo_pt;
   vector<float>   *AntiKt6LCTopo_m;
   vector<float>   *AntiKt6LCTopo_eta;
   vector<float>   *AntiKt6LCTopo_phi;
   vector<float>   *AntiKt6LCTopo_EtaOrigin;
   vector<float>   *AntiKt6LCTopo_PhiOrigin;
   vector<float>   *AntiKt6LCTopo_MOrigin;
   vector<float>   *AntiKt6LCTopo_WIDTH;
   vector<float>   *AntiKt6LCTopo_n90;
   vector<float>   *AntiKt6LCTopo_Timing;
   vector<float>   *AntiKt6LCTopo_LArQuality;
   vector<float>   *AntiKt6LCTopo_nTrk;
   vector<float>   *AntiKt6LCTopo_sumPtTrk;
   vector<float>   *AntiKt6LCTopo_OriginIndex;
   vector<float>   *AntiKt6LCTopo_HECQuality;
   vector<float>   *AntiKt6LCTopo_NegativeE;
   vector<float>   *AntiKt6LCTopo_AverageLArQF;
   vector<float>   *AntiKt6LCTopo_BCH_CORR_CELL;
   vector<float>   *AntiKt6LCTopo_BCH_CORR_DOTX;
   vector<float>   *AntiKt6LCTopo_BCH_CORR_JET;
   vector<float>   *AntiKt6LCTopo_BCH_CORR_JET_FORCELL;
   vector<float>   *AntiKt6LCTopo_ENG_BAD_CELLS;
   vector<float>   *AntiKt6LCTopo_N_BAD_CELLS;
   vector<float>   *AntiKt6LCTopo_N_BAD_CELLS_CORR;
   vector<float>   *AntiKt6LCTopo_BAD_CELLS_CORR_E;
   vector<float>   *AntiKt6LCTopo_NumTowers;
   vector<float>   *AntiKt6LCTopo_ootFracCells5;
   vector<float>   *AntiKt6LCTopo_ootFracCells10;
   vector<float>   *AntiKt6LCTopo_ootFracClusters5;
   vector<float>   *AntiKt6LCTopo_ootFracClusters10;
   vector<int>     *AntiKt6LCTopo_SamplingMax;
   vector<float>   *AntiKt6LCTopo_fracSamplingMax;
   vector<float>   *AntiKt6LCTopo_hecf;
   vector<float>   *AntiKt6LCTopo_tgap3f;
   vector<int>     *AntiKt6LCTopo_isUgly;
   vector<int>     *AntiKt6LCTopo_isBadLooseMinus;
   vector<int>     *AntiKt6LCTopo_isBadLoose;
   vector<int>     *AntiKt6LCTopo_isBadMedium;
   vector<int>     *AntiKt6LCTopo_isBadTight;
   vector<float>   *AntiKt6LCTopo_emfrac;
   vector<float>   *AntiKt6LCTopo_Offset;
   vector<float>   *AntiKt6LCTopo_EMJES;
   vector<float>   *AntiKt6LCTopo_EMJES_EtaCorr;
   vector<float>   *AntiKt6LCTopo_EMJESnooffset;
   vector<float>   *AntiKt6LCTopo_LCJES;
   vector<float>   *AntiKt6LCTopo_LCJES_EtaCorr;
   vector<float>   *AntiKt6LCTopo_emscale_E;
   vector<float>   *AntiKt6LCTopo_emscale_pt;
   vector<float>   *AntiKt6LCTopo_emscale_m;
   vector<float>   *AntiKt6LCTopo_emscale_eta;
   vector<float>   *AntiKt6LCTopo_emscale_phi;
   vector<float>   *AntiKt6LCTopo_jvtx_x;
   vector<float>   *AntiKt6LCTopo_jvtx_y;
   vector<float>   *AntiKt6LCTopo_jvtx_z;
   vector<float>   *AntiKt6LCTopo_jvtxf;
   vector<float>   *AntiKt6LCTopo_GSCFactorF;
   vector<float>   *AntiKt6LCTopo_WidthFraction;
   vector<float>   *AntiKt6LCTopo_e_PreSamplerB;
   vector<float>   *AntiKt6LCTopo_e_EMB1;
   vector<float>   *AntiKt6LCTopo_e_EMB2;
   vector<float>   *AntiKt6LCTopo_e_EMB3;
   vector<float>   *AntiKt6LCTopo_e_PreSamplerE;
   vector<float>   *AntiKt6LCTopo_e_EME1;
   vector<float>   *AntiKt6LCTopo_e_EME2;
   vector<float>   *AntiKt6LCTopo_e_EME3;
   vector<float>   *AntiKt6LCTopo_e_HEC0;
   vector<float>   *AntiKt6LCTopo_e_HEC1;
   vector<float>   *AntiKt6LCTopo_e_HEC2;
   vector<float>   *AntiKt6LCTopo_e_HEC3;
   vector<float>   *AntiKt6LCTopo_e_TileBar0;
   vector<float>   *AntiKt6LCTopo_e_TileBar1;
   vector<float>   *AntiKt6LCTopo_e_TileBar2;
   vector<float>   *AntiKt6LCTopo_e_TileGap1;
   vector<float>   *AntiKt6LCTopo_e_TileGap2;
   vector<float>   *AntiKt6LCTopo_e_TileGap3;
   vector<float>   *AntiKt6LCTopo_e_TileExt0;
   vector<float>   *AntiKt6LCTopo_e_TileExt1;
   vector<float>   *AntiKt6LCTopo_e_TileExt2;
   vector<float>   *AntiKt6LCTopo_e_FCAL0;
   vector<float>   *AntiKt6LCTopo_e_FCAL1;
   vector<float>   *AntiKt6LCTopo_e_FCAL2;
   vector<vector<float> > *AntiKt6LCTopo_shapeBins;
   vector<int>     *AntiKt6LCTopo_Nconst;
   vector<vector<float> > *AntiKt6LCTopo_ptconst_default;
   vector<vector<float> > *AntiKt6LCTopo_econst_default;
   vector<vector<float> > *AntiKt6LCTopo_etaconst_default;
   vector<vector<float> > *AntiKt6LCTopo_phiconst_default;
   vector<vector<float> > *AntiKt6LCTopo_weightconst_default;
   vector<float>   *AntiKt6LCTopo_constscale_E;
   vector<float>   *AntiKt6LCTopo_constscale_pt;
   vector<float>   *AntiKt6LCTopo_constscale_m;
   vector<float>   *AntiKt6LCTopo_constscale_eta;
   vector<float>   *AntiKt6LCTopo_constscale_phi;
   vector<float>   *AntiKt6LCTopo_el_dr;
   vector<int>     *AntiKt6LCTopo_el_matched;
   vector<float>   *AntiKt6LCTopo_mu_dr;
   vector<int>     *AntiKt6LCTopo_mu_matched;
   vector<float>   *AntiKt6LCTopo_L1_dr;
   vector<int>     *AntiKt6LCTopo_L1_matched;
   vector<float>   *AntiKt6LCTopo_L2_dr;
   vector<int>     *AntiKt6LCTopo_L2_matched;
   vector<float>   *AntiKt6LCTopo_EF_dr;
   vector<int>     *AntiKt6LCTopo_EF_matched;
   Int_t           AntiKt6TopoEM_n;
   vector<float>   *AntiKt6TopoEM_E;
   vector<float>   *AntiKt6TopoEM_pt;
   vector<float>   *AntiKt6TopoEM_m;
   vector<float>   *AntiKt6TopoEM_eta;
   vector<float>   *AntiKt6TopoEM_phi;
   vector<float>   *AntiKt6TopoEM_EtaOrigin;
   vector<float>   *AntiKt6TopoEM_PhiOrigin;
   vector<float>   *AntiKt6TopoEM_MOrigin;
   vector<float>   *AntiKt6TopoEM_WIDTH;
   vector<float>   *AntiKt6TopoEM_n90;
   vector<float>   *AntiKt6TopoEM_Timing;
   vector<float>   *AntiKt6TopoEM_LArQuality;
   vector<float>   *AntiKt6TopoEM_nTrk;
   vector<float>   *AntiKt6TopoEM_sumPtTrk;
   vector<float>   *AntiKt6TopoEM_OriginIndex;
   vector<float>   *AntiKt6TopoEM_HECQuality;
   vector<float>   *AntiKt6TopoEM_NegativeE;
   vector<float>   *AntiKt6TopoEM_AverageLArQF;
   vector<float>   *AntiKt6TopoEM_BCH_CORR_CELL;
   vector<float>   *AntiKt6TopoEM_BCH_CORR_DOTX;
   vector<float>   *AntiKt6TopoEM_BCH_CORR_JET;
   vector<float>   *AntiKt6TopoEM_BCH_CORR_JET_FORCELL;
   vector<float>   *AntiKt6TopoEM_ENG_BAD_CELLS;
   vector<float>   *AntiKt6TopoEM_N_BAD_CELLS;
   vector<float>   *AntiKt6TopoEM_N_BAD_CELLS_CORR;
   vector<float>   *AntiKt6TopoEM_BAD_CELLS_CORR_E;
   vector<float>   *AntiKt6TopoEM_NumTowers;
   vector<float>   *AntiKt6TopoEM_ootFracCells5;
   vector<float>   *AntiKt6TopoEM_ootFracCells10;
   vector<float>   *AntiKt6TopoEM_ootFracClusters5;
   vector<float>   *AntiKt6TopoEM_ootFracClusters10;
   vector<int>     *AntiKt6TopoEM_SamplingMax;
   vector<float>   *AntiKt6TopoEM_fracSamplingMax;
   vector<float>   *AntiKt6TopoEM_hecf;
   vector<float>   *AntiKt6TopoEM_tgap3f;
   vector<int>     *AntiKt6TopoEM_isUgly;
   vector<int>     *AntiKt6TopoEM_isBadLooseMinus;
   vector<int>     *AntiKt6TopoEM_isBadLoose;
   vector<int>     *AntiKt6TopoEM_isBadMedium;
   vector<int>     *AntiKt6TopoEM_isBadTight;
   vector<float>   *AntiKt6TopoEM_emfrac;
   vector<float>   *AntiKt6TopoEM_Offset;
   vector<float>   *AntiKt6TopoEM_EMJES;
   vector<float>   *AntiKt6TopoEM_EMJES_EtaCorr;
   vector<float>   *AntiKt6TopoEM_EMJESnooffset;
   vector<float>   *AntiKt6TopoEM_LCJES;
   vector<float>   *AntiKt6TopoEM_LCJES_EtaCorr;
   vector<float>   *AntiKt6TopoEM_emscale_E;
   vector<float>   *AntiKt6TopoEM_emscale_pt;
   vector<float>   *AntiKt6TopoEM_emscale_m;
   vector<float>   *AntiKt6TopoEM_emscale_eta;
   vector<float>   *AntiKt6TopoEM_emscale_phi;
   vector<float>   *AntiKt6TopoEM_jvtx_x;
   vector<float>   *AntiKt6TopoEM_jvtx_y;
   vector<float>   *AntiKt6TopoEM_jvtx_z;
   vector<float>   *AntiKt6TopoEM_jvtxf;
   vector<float>   *AntiKt6TopoEM_GSCFactorF;
   vector<float>   *AntiKt6TopoEM_WidthFraction;
   vector<float>   *AntiKt6TopoEM_e_PreSamplerB;
   vector<float>   *AntiKt6TopoEM_e_EMB1;
   vector<float>   *AntiKt6TopoEM_e_EMB2;
   vector<float>   *AntiKt6TopoEM_e_EMB3;
   vector<float>   *AntiKt6TopoEM_e_PreSamplerE;
   vector<float>   *AntiKt6TopoEM_e_EME1;
   vector<float>   *AntiKt6TopoEM_e_EME2;
   vector<float>   *AntiKt6TopoEM_e_EME3;
   vector<float>   *AntiKt6TopoEM_e_HEC0;
   vector<float>   *AntiKt6TopoEM_e_HEC1;
   vector<float>   *AntiKt6TopoEM_e_HEC2;
   vector<float>   *AntiKt6TopoEM_e_HEC3;
   vector<float>   *AntiKt6TopoEM_e_TileBar0;
   vector<float>   *AntiKt6TopoEM_e_TileBar1;
   vector<float>   *AntiKt6TopoEM_e_TileBar2;
   vector<float>   *AntiKt6TopoEM_e_TileGap1;
   vector<float>   *AntiKt6TopoEM_e_TileGap2;
   vector<float>   *AntiKt6TopoEM_e_TileGap3;
   vector<float>   *AntiKt6TopoEM_e_TileExt0;
   vector<float>   *AntiKt6TopoEM_e_TileExt1;
   vector<float>   *AntiKt6TopoEM_e_TileExt2;
   vector<float>   *AntiKt6TopoEM_e_FCAL0;
   vector<float>   *AntiKt6TopoEM_e_FCAL1;
   vector<float>   *AntiKt6TopoEM_e_FCAL2;
   vector<vector<float> > *AntiKt6TopoEM_shapeBins;
   vector<int>     *AntiKt6TopoEM_Nconst;
   vector<vector<float> > *AntiKt6TopoEM_ptconst_default;
   vector<vector<float> > *AntiKt6TopoEM_econst_default;
   vector<vector<float> > *AntiKt6TopoEM_etaconst_default;
   vector<vector<float> > *AntiKt6TopoEM_phiconst_default;
   vector<vector<float> > *AntiKt6TopoEM_weightconst_default;
   vector<float>   *AntiKt6TopoEM_constscale_E;
   vector<float>   *AntiKt6TopoEM_constscale_pt;
   vector<float>   *AntiKt6TopoEM_constscale_m;
   vector<float>   *AntiKt6TopoEM_constscale_eta;
   vector<float>   *AntiKt6TopoEM_constscale_phi;
   vector<float>   *AntiKt6TopoEM_el_dr;
   vector<int>     *AntiKt6TopoEM_el_matched;
   vector<float>   *AntiKt6TopoEM_mu_dr;
   vector<int>     *AntiKt6TopoEM_mu_matched;
   vector<float>   *AntiKt6TopoEM_L1_dr;
   vector<int>     *AntiKt6TopoEM_L1_matched;
   vector<float>   *AntiKt6TopoEM_L2_dr;
   vector<int>     *AntiKt6TopoEM_L2_matched;
   vector<float>   *AntiKt6TopoEM_EF_dr;
   vector<int>     *AntiKt6TopoEM_EF_matched;
   Float_t         HIFlow_v1_PsiFCAL0_w;
   Float_t         HIFlow_v1_PsiPFCAL0_w;
   Float_t         HIFlow_v1_PsiNFCAL0_w;
   vector<float>   *HIFlow_v1_EtInLayer;
   vector<float>   *HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v1_AvgV2fromCalo;
   vector<float>   *HIFlow_v1_PsiHICaloUtilLayers;
   vector<float>   *HIFlow_v1_PsiEtHICaloUtilLayers;
   Float_t         HIFlow_v1_PsiPtrack;
   Float_t         HIFlow_v1_PsiNtrack;
   Float_t         HIFlow_v1_v2FCAL0sil;
   Float_t         HIFlow_v1_v2track;
   vector<float>   *HIFlow_v1_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v2_PsiFCAL0_w;
   Float_t         HIFlow_v2_PsiPFCAL0_w;
   Float_t         HIFlow_v2_PsiNFCAL0_w;
   vector<float>   *HIFlow_v2_EtInLayer;
   vector<float>   *HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v2_AvgV2fromCalo;
   vector<float>   *HIFlow_v2_PsiHICaloUtilLayers;
   vector<float>   *HIFlow_v2_PsiEtHICaloUtilLayers;
   Float_t         HIFlow_v2_PsiPtrack;
   Float_t         HIFlow_v2_PsiNtrack;
   Float_t         HIFlow_v2_v2FCAL0sil;
   Float_t         HIFlow_v2_v2track;
   vector<float>   *HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v3_PsiFCAL0_w;
   Float_t         HIFlow_v3_PsiPFCAL0_w;
   Float_t         HIFlow_v3_PsiNFCAL0_w;
   vector<float>   *HIFlow_v3_EtInLayer;
   vector<float>   *HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v3_AvgV2fromCalo;
   vector<float>   *HIFlow_v3_PsiHICaloUtilLayers;
   vector<float>   *HIFlow_v3_PsiEtHICaloUtilLayers;
   Float_t         HIFlow_v3_PsiPtrack;
   Float_t         HIFlow_v3_PsiNtrack;
   Float_t         HIFlow_v3_v2FCAL0sil;
   Float_t         HIFlow_v3_v2track;
   vector<float>   *HIFlow_v3_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v4_PsiFCAL0_w;
   Float_t         HIFlow_v4_PsiPFCAL0_w;
   Float_t         HIFlow_v4_PsiNFCAL0_w;
   vector<float>   *HIFlow_v4_EtInLayer;
   vector<float>   *HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v4_AvgV2fromCalo;
   vector<float>   *HIFlow_v4_PsiHICaloUtilLayers;
   vector<float>   *HIFlow_v4_PsiEtHICaloUtilLayers;
   Float_t         HIFlow_v4_PsiPtrack;
   Float_t         HIFlow_v4_PsiNtrack;
   Float_t         HIFlow_v4_v2FCAL0sil;
   Float_t         HIFlow_v4_v2track;
   vector<float>   *HIFlow_v4_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v5_PsiFCAL0_w;
   Float_t         HIFlow_v5_PsiPFCAL0_w;
   Float_t         HIFlow_v5_PsiNFCAL0_w;
   vector<float>   *HIFlow_v5_EtInLayer;
   vector<float>   *HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v5_AvgV2fromCalo;
   vector<float>   *HIFlow_v5_PsiHICaloUtilLayers;
   vector<float>   *HIFlow_v5_PsiEtHICaloUtilLayers;
   Float_t         HIFlow_v5_PsiPtrack;
   Float_t         HIFlow_v5_PsiNtrack;
   Float_t         HIFlow_v5_v2FCAL0sil;
   Float_t         HIFlow_v5_v2track;
   vector<float>   *HIFlow_v5_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v6_PsiFCAL0_w;
   Float_t         HIFlow_v6_PsiPFCAL0_w;
   Float_t         HIFlow_v6_PsiNFCAL0_w;
   vector<float>   *HIFlow_v6_EtInLayer;
   vector<float>   *HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         HIFlow_v6_AvgV2fromCalo;
   vector<float>   *HIFlow_v6_PsiHICaloUtilLayers;
   vector<float>   *HIFlow_v6_PsiEtHICaloUtilLayers;
   Float_t         HIFlow_v6_PsiPtrack;
   Float_t         HIFlow_v6_PsiNtrack;
   Float_t         HIFlow_v6_v2FCAL0sil;
   Float_t         HIFlow_v6_v2track;
   vector<float>   *HIFlow_v6_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;
   Float_t         MET_RefFinal_etx;
   Float_t         MET_RefFinal_ety;
   Float_t         MET_RefFinal_phi;
   Float_t         MET_RefFinal_et;
   Float_t         MET_RefFinal_sumet;
   Float_t         MET_RefFinal_etx_CentralReg;
   Float_t         MET_RefFinal_ety_CentralReg;
   Float_t         MET_RefFinal_sumet_CentralReg;
   Float_t         MET_RefFinal_phi_CentralReg;
   Float_t         MET_RefFinal_etx_EndcapRegion;
   Float_t         MET_RefFinal_ety_EndcapRegion;
   Float_t         MET_RefFinal_sumet_EndcapRegion;
   Float_t         MET_RefFinal_phi_EndcapRegion;
   Float_t         MET_RefFinal_etx_ForwardReg;
   Float_t         MET_RefFinal_ety_ForwardReg;
   Float_t         MET_RefFinal_sumet_ForwardReg;
   Float_t         MET_RefFinal_phi_ForwardReg;
   Int_t           cccEt2_Et2_Nh_Calo;
   Float_t         cccEt2_Et2_Eh_Calo;
   Int_t           cccEt2_Et2_Nh_EM;
   Float_t         cccEt2_Et2_Eh_EM;
   Int_t           cccEt2_Et2_Nh_HAD;
   Float_t         cccEt2_Et2_Eh_HAD;
   Int_t           cccEt2_Et2_Nh_PresB;
   vector<float>   *cccEt2_Et2_Eh_PresB;
   Int_t           cccEt2_Et2_Nh_EMB;
   vector<float>   *cccEt2_Et2_Eh_EMB;
   Int_t           cccEt2_Et2_Nh_EMEC;
   vector<float>   *cccEt2_Et2_Eh_EMEC;
   Int_t           cccEt2_Et2_Nh_Tile;
   vector<float>   *cccEt2_Et2_Eh_Tile;
   Int_t           cccEt2_Et2_Nh_TileGap;
   vector<float>   *cccEt2_Et2_Eh_TileGap;
   Int_t           cccEt2_Et2_Nh_HEC;
   vector<float>   *cccEt2_Et2_Eh_HEC;
   Int_t           cccEt2_Et2_Nh_FCal;
   vector<float>   *cccEt2_Et2_Eh_FCal;
   Int_t           cccEt2_Et2_Nh_PresE;
   vector<float>   *cccEt2_Et2_Eh_PresE;
   Int_t           cccEt2_Et2_Nh_Scint;
   vector<float>   *cccEt2_Et2_Eh_Scint;
   Int_t           cccEt2_p2_Nh_Calo;
   Float_t         cccEt2_p2_Eh_Calo;
   Int_t           cccEt2_p2_Nh_EM;
   Float_t         cccEt2_p2_Eh_EM;
   Int_t           cccEt2_p2_Nh_HAD;
   Float_t         cccEt2_p2_Eh_HAD;
   Int_t           cccEt2_p2_Nh_PresB;
   vector<float>   *cccEt2_p2_Eh_PresB;
   Int_t           cccEt2_p2_Nh_EMB;
   vector<float>   *cccEt2_p2_Eh_EMB;
   Int_t           cccEt2_p2_Nh_EMEC;
   vector<float>   *cccEt2_p2_Eh_EMEC;
   Int_t           cccEt2_p2_Nh_Tile;
   vector<float>   *cccEt2_p2_Eh_Tile;
   Int_t           cccEt2_p2_Nh_TileGap;
   vector<float>   *cccEt2_p2_Eh_TileGap;
   Int_t           cccEt2_p2_Nh_HEC;
   vector<float>   *cccEt2_p2_Eh_HEC;
   Int_t           cccEt2_p2_Nh_FCal;
   vector<float>   *cccEt2_p2_Eh_FCal;
   Int_t           cccEt2_p2_Nh_PresE;
   vector<float>   *cccEt2_p2_Eh_PresE;
   Int_t           cccEt2_p2_Nh_Scint;
   vector<float>   *cccEt2_p2_Eh_Scint;
   Int_t           cccEt2_n2_Nh_Calo;
   Float_t         cccEt2_n2_Eh_Calo;
   Int_t           cccEt2_n2_Nh_EM;
   Float_t         cccEt2_n2_Eh_EM;
   Int_t           cccEt2_n2_Nh_HAD;
   Float_t         cccEt2_n2_Eh_HAD;
   Int_t           cccEt2_n2_Nh_PresB;
   vector<float>   *cccEt2_n2_Eh_PresB;
   Int_t           cccEt2_n2_Nh_EMB;
   vector<float>   *cccEt2_n2_Eh_EMB;
   Int_t           cccEt2_n2_Nh_EMEC;
   vector<float>   *cccEt2_n2_Eh_EMEC;
   Int_t           cccEt2_n2_Nh_Tile;
   vector<float>   *cccEt2_n2_Eh_Tile;
   Int_t           cccEt2_n2_Nh_TileGap;
   vector<float>   *cccEt2_n2_Eh_TileGap;
   Int_t           cccEt2_n2_Nh_HEC;
   vector<float>   *cccEt2_n2_Eh_HEC;
   Int_t           cccEt2_n2_Nh_FCal;
   vector<float>   *cccEt2_n2_Eh_FCal;
   Int_t           cccEt2_n2_Nh_PresE;
   vector<float>   *cccEt2_n2_Eh_PresE;
   Int_t           cccEt2_n2_Nh_Scint;
   vector<float>   *cccEt2_n2_Eh_Scint;
   Int_t           cl_hadTopo_n;
   vector<float>   *cl_hadTopo_E;
   vector<float>   *cl_hadTopo_pt;
   vector<float>   *cl_hadTopo_eta;
   vector<float>   *cl_hadTopo_phi;
   vector<float>   *cl_hadTopo_E_em;
   vector<float>   *cl_hadTopo_E_had;
   vector<float>   *cl_hadTopo_significance;
   vector<float>   *cl_hadTopo_cellSignificance;
   vector<float>   *cl_hadTopo_cellSigSampling;
   vector<float>   *cl_hadTopo_firstEdens;
   vector<float>   *cl_hadTopo_cellmaxfrac;
   vector<float>   *cl_hadTopo_longitudinal;
   vector<float>   *cl_hadTopo_secondlambda;
   vector<float>   *cl_hadTopo_lateral;
   vector<float>   *cl_hadTopo_secondR;
   vector<float>   *cl_hadTopo_centerlambda;
   vector<float>   *cl_hadTopo_deltaTheta;
   vector<float>   *cl_hadTopo_deltaPhi;
   vector<float>   *cl_hadTopo_centermag;
   vector<float>   *cl_hadTopo_time;
   vector<float>   *cl_hadTopo_E_PreSamplerB;
   vector<float>   *cl_hadTopo_E_EMB1;
   vector<float>   *cl_hadTopo_E_EMB2;
   vector<float>   *cl_hadTopo_E_EMB3;
   vector<float>   *cl_hadTopo_E_PreSamplerE;
   vector<float>   *cl_hadTopo_E_EME1;
   vector<float>   *cl_hadTopo_E_EME2;
   vector<float>   *cl_hadTopo_E_EME3;
   vector<float>   *cl_hadTopo_E_HEC0;
   vector<float>   *cl_hadTopo_E_HEC1;
   vector<float>   *cl_hadTopo_E_HEC2;
   vector<float>   *cl_hadTopo_E_HEC3;
   vector<float>   *cl_hadTopo_E_TileBar0;
   vector<float>   *cl_hadTopo_E_TileBar1;
   vector<float>   *cl_hadTopo_E_TileBar2;
   vector<float>   *cl_hadTopo_E_TileGap1;
   vector<float>   *cl_hadTopo_E_TileGap2;
   vector<float>   *cl_hadTopo_E_TileGap3;
   vector<float>   *cl_hadTopo_E_TileExt0;
   vector<float>   *cl_hadTopo_E_TileExt1;
   vector<float>   *cl_hadTopo_E_TileExt2;
   vector<float>   *cl_hadTopo_E_FCAL0;
   vector<float>   *cl_hadTopo_E_FCAL1;
   vector<float>   *cl_hadTopo_E_FCAL2;
   UInt_t          HIEtaGap_beam1;
   UInt_t          HIEtaGap_beam2;
   vector<float>   *HIEtaGap_lowerEta;
   vector<float>   *HIEtaGap_upperEta;
   vector<float>   *HIEtaGap_lowerEdgeType;
   vector<float>   *HIEtaGap_upperEdgeType;
   Float_t         HIEtaGap_lowerEtaNegEdge;
   Float_t         HIEtaGap_upperEtaNegEdge;
   Float_t         HIEtaGap_lowerEtaPosEdge;
   Float_t         HIEtaGap_upperEtaPosEdge;
   Float_t         HIEtaGap_maxGapSize;
   Int_t           emcl_n;
   vector<float>   *emcl_E;
   vector<float>   *emcl_pt;
   vector<float>   *emcl_m;
   vector<float>   *emcl_eta;
   vector<float>   *emcl_phi;
   vector<float>   *emcl_E_em;
   vector<float>   *emcl_E_had;
   Int_t           mu_staco_n;
   vector<float>   *mu_staco_E;
   vector<float>   *mu_staco_pt;
   vector<float>   *mu_staco_m;
   vector<float>   *mu_staco_eta;
   vector<float>   *mu_staco_phi;
   vector<float>   *mu_staco_px;
   vector<float>   *mu_staco_py;
   vector<float>   *mu_staco_pz;
   vector<float>   *mu_staco_charge;
   vector<unsigned short> *mu_staco_allauthor;
   vector<int>     *mu_staco_author;
   vector<float>   *mu_staco_beta;
   vector<float>   *mu_staco_isMuonLikelihood;
   vector<float>   *mu_staco_matchchi2;
   vector<int>     *mu_staco_matchndof;
   vector<float>   *mu_staco_etcone20;
   vector<float>   *mu_staco_etcone30;
   vector<float>   *mu_staco_etcone40;
   vector<float>   *mu_staco_nucone20;
   vector<float>   *mu_staco_nucone30;
   vector<float>   *mu_staco_nucone40;
   vector<float>   *mu_staco_ptcone20;
   vector<float>   *mu_staco_ptcone30;
   vector<float>   *mu_staco_ptcone40;
   vector<float>   *mu_staco_etconeNoEm10;
   vector<float>   *mu_staco_etconeNoEm20;
   vector<float>   *mu_staco_etconeNoEm30;
   vector<float>   *mu_staco_etconeNoEm40;
   vector<float>   *mu_staco_scatteringCurvatureSignificance;
   vector<float>   *mu_staco_scatteringNeighbourSignificance;
   vector<float>   *mu_staco_momentumBalanceSignificance;
   vector<float>   *mu_staco_energyLossPar;
   vector<float>   *mu_staco_energyLossErr;
   vector<float>   *mu_staco_etCore;
   vector<float>   *mu_staco_energyLossType;
   vector<unsigned short> *mu_staco_caloMuonIdTag;
   vector<double>  *mu_staco_caloLRLikelihood;
   vector<int>     *mu_staco_bestMatch;
   vector<int>     *mu_staco_isStandAloneMuon;
   vector<int>     *mu_staco_isCombinedMuon;
   vector<int>     *mu_staco_isLowPtReconstructedMuon;
   vector<int>     *mu_staco_isSegmentTaggedMuon;
   vector<int>     *mu_staco_isCaloMuonId;
   vector<int>     *mu_staco_alsoFoundByLowPt;
   vector<int>     *mu_staco_alsoFoundByCaloMuonId;
   vector<int>     *mu_staco_isSiliconAssociatedForwardMuon;
   vector<int>     *mu_staco_loose;
   vector<int>     *mu_staco_medium;
   vector<int>     *mu_staco_tight;
   vector<float>   *mu_staco_d0_exPV;
   vector<float>   *mu_staco_z0_exPV;
   vector<float>   *mu_staco_phi_exPV;
   vector<float>   *mu_staco_theta_exPV;
   vector<float>   *mu_staco_qoverp_exPV;
   vector<float>   *mu_staco_cb_d0_exPV;
   vector<float>   *mu_staco_cb_z0_exPV;
   vector<float>   *mu_staco_cb_phi_exPV;
   vector<float>   *mu_staco_cb_theta_exPV;
   vector<float>   *mu_staco_cb_qoverp_exPV;
   vector<float>   *mu_staco_id_d0_exPV;
   vector<float>   *mu_staco_id_z0_exPV;
   vector<float>   *mu_staco_id_phi_exPV;
   vector<float>   *mu_staco_id_theta_exPV;
   vector<float>   *mu_staco_id_qoverp_exPV;
   vector<float>   *mu_staco_me_d0_exPV;
   vector<float>   *mu_staco_me_z0_exPV;
   vector<float>   *mu_staco_me_phi_exPV;
   vector<float>   *mu_staco_me_theta_exPV;
   vector<float>   *mu_staco_me_qoverp_exPV;
   vector<float>   *mu_staco_ie_d0_exPV;
   vector<float>   *mu_staco_ie_z0_exPV;
   vector<float>   *mu_staco_ie_phi_exPV;
   vector<float>   *mu_staco_ie_theta_exPV;
   vector<float>   *mu_staco_ie_qoverp_exPV;
   vector<vector<int> > *mu_staco_SpaceTime_detID;
   vector<vector<float> > *mu_staco_SpaceTime_t;
   vector<vector<float> > *mu_staco_SpaceTime_tError;
   vector<vector<float> > *mu_staco_SpaceTime_weight;
   vector<vector<float> > *mu_staco_SpaceTime_x;
   vector<vector<float> > *mu_staco_SpaceTime_y;
   vector<vector<float> > *mu_staco_SpaceTime_z;
   vector<float>   *mu_staco_cov_d0_exPV;
   vector<float>   *mu_staco_cov_z0_exPV;
   vector<float>   *mu_staco_cov_phi_exPV;
   vector<float>   *mu_staco_cov_theta_exPV;
   vector<float>   *mu_staco_cov_qoverp_exPV;
   vector<float>   *mu_staco_cov_d0_z0_exPV;
   vector<float>   *mu_staco_cov_d0_phi_exPV;
   vector<float>   *mu_staco_cov_d0_theta_exPV;
   vector<float>   *mu_staco_cov_d0_qoverp_exPV;
   vector<float>   *mu_staco_cov_z0_phi_exPV;
   vector<float>   *mu_staco_cov_z0_theta_exPV;
   vector<float>   *mu_staco_cov_z0_qoverp_exPV;
   vector<float>   *mu_staco_cov_phi_theta_exPV;
   vector<float>   *mu_staco_cov_phi_qoverp_exPV;
   vector<float>   *mu_staco_cov_theta_qoverp_exPV;
   vector<float>   *mu_staco_id_cov_d0_exPV;
   vector<float>   *mu_staco_id_cov_z0_exPV;
   vector<float>   *mu_staco_id_cov_phi_exPV;
   vector<float>   *mu_staco_id_cov_theta_exPV;
   vector<float>   *mu_staco_id_cov_qoverp_exPV;
   vector<float>   *mu_staco_me_cov_d0_exPV;
   vector<float>   *mu_staco_me_cov_z0_exPV;
   vector<float>   *mu_staco_me_cov_phi_exPV;
   vector<float>   *mu_staco_me_cov_theta_exPV;
   vector<float>   *mu_staco_me_cov_qoverp_exPV;
   vector<float>   *mu_staco_ms_d0;
   vector<float>   *mu_staco_ms_z0;
   vector<float>   *mu_staco_ms_phi;
   vector<float>   *mu_staco_ms_theta;
   vector<float>   *mu_staco_ms_qoverp;
   vector<float>   *mu_staco_id_d0;
   vector<float>   *mu_staco_id_z0;
   vector<float>   *mu_staco_id_phi;
   vector<float>   *mu_staco_id_theta;
   vector<float>   *mu_staco_id_qoverp;
   vector<float>   *mu_staco_me_d0;
   vector<float>   *mu_staco_me_z0;
   vector<float>   *mu_staco_me_phi;
   vector<float>   *mu_staco_me_theta;
   vector<float>   *mu_staco_me_qoverp;
   vector<float>   *mu_staco_ie_d0;
   vector<float>   *mu_staco_ie_z0;
   vector<float>   *mu_staco_ie_phi;
   vector<float>   *mu_staco_ie_theta;
   vector<float>   *mu_staco_ie_qoverp;
   vector<int>     *mu_staco_nOutliersOnTrack;
   vector<int>     *mu_staco_nBLHits;
   vector<int>     *mu_staco_nPixHits;
   vector<int>     *mu_staco_nSCTHits;
   vector<int>     *mu_staco_nTRTHits;
   vector<int>     *mu_staco_nTRTHighTHits;
   vector<int>     *mu_staco_nBLSharedHits;
   vector<int>     *mu_staco_nPixSharedHits;
   vector<int>     *mu_staco_nPixHoles;
   vector<int>     *mu_staco_nSCTSharedHits;
   vector<int>     *mu_staco_nSCTHoles;
   vector<int>     *mu_staco_nTRTOutliers;
   vector<int>     *mu_staco_nTRTHighTOutliers;
   vector<int>     *mu_staco_nGangedPixels;
   vector<int>     *mu_staco_nPixelDeadSensors;
   vector<int>     *mu_staco_nSCTDeadSensors;
   vector<int>     *mu_staco_nTRTDeadStraws;
   vector<int>     *mu_staco_expectBLayerHit;
   vector<int>     *mu_staco_nMDTHits;
   vector<int>     *mu_staco_nMDTHoles;
   vector<int>     *mu_staco_nCSCEtaHits;
   vector<int>     *mu_staco_nCSCEtaHoles;
   vector<int>     *mu_staco_nCSCUnspoiledEtaHits;
   vector<int>     *mu_staco_nCSCPhiHits;
   vector<int>     *mu_staco_nCSCPhiHoles;
   vector<int>     *mu_staco_nRPCEtaHits;
   vector<int>     *mu_staco_nRPCEtaHoles;
   vector<int>     *mu_staco_nRPCPhiHits;
   vector<int>     *mu_staco_nRPCPhiHoles;
   vector<int>     *mu_staco_nTGCEtaHits;
   vector<int>     *mu_staco_nTGCEtaHoles;
   vector<int>     *mu_staco_nTGCPhiHits;
   vector<int>     *mu_staco_nTGCPhiHoles;
   vector<int>     *mu_staco_nprecisionLayers;
   vector<int>     *mu_staco_nprecisionHoleLayers;
   vector<int>     *mu_staco_nphiLayers;
   vector<int>     *mu_staco_ntrigEtaLayers;
   vector<int>     *mu_staco_nphiHoleLayers;
   vector<int>     *mu_staco_ntrigEtaHoleLayers;
   vector<int>     *mu_staco_nMDTBIHits;
   vector<int>     *mu_staco_nMDTBMHits;
   vector<int>     *mu_staco_nMDTBOHits;
   vector<int>     *mu_staco_nMDTBEEHits;
   vector<int>     *mu_staco_nMDTBIS78Hits;
   vector<int>     *mu_staco_nMDTEIHits;
   vector<int>     *mu_staco_nMDTEMHits;
   vector<int>     *mu_staco_nMDTEOHits;
   vector<int>     *mu_staco_nMDTEEHits;
   vector<int>     *mu_staco_nRPCLayer1EtaHits;
   vector<int>     *mu_staco_nRPCLayer2EtaHits;
   vector<int>     *mu_staco_nRPCLayer3EtaHits;
   vector<int>     *mu_staco_nRPCLayer1PhiHits;
   vector<int>     *mu_staco_nRPCLayer2PhiHits;
   vector<int>     *mu_staco_nRPCLayer3PhiHits;
   vector<int>     *mu_staco_nTGCLayer1EtaHits;
   vector<int>     *mu_staco_nTGCLayer2EtaHits;
   vector<int>     *mu_staco_nTGCLayer3EtaHits;
   vector<int>     *mu_staco_nTGCLayer4EtaHits;
   vector<int>     *mu_staco_nTGCLayer1PhiHits;
   vector<int>     *mu_staco_nTGCLayer2PhiHits;
   vector<int>     *mu_staco_nTGCLayer3PhiHits;
   vector<int>     *mu_staco_nTGCLayer4PhiHits;
   vector<int>     *mu_staco_barrelSectors;
   vector<int>     *mu_staco_endcapSectors;
   vector<float>   *mu_staco_trackd0;
   vector<float>   *mu_staco_trackz0;
   vector<float>   *mu_staco_trackphi;
   vector<float>   *mu_staco_tracktheta;
   vector<float>   *mu_staco_trackqoverp;
   vector<float>   *mu_staco_trackcov_d0;
   vector<float>   *mu_staco_trackcov_z0;
   vector<float>   *mu_staco_trackcov_phi;
   vector<float>   *mu_staco_trackcov_theta;
   vector<float>   *mu_staco_trackcov_qoverp;
   vector<float>   *mu_staco_trackcov_d0_z0;
   vector<float>   *mu_staco_trackcov_d0_phi;
   vector<float>   *mu_staco_trackcov_d0_theta;
   vector<float>   *mu_staco_trackcov_d0_qoverp;
   vector<float>   *mu_staco_trackcov_z0_phi;
   vector<float>   *mu_staco_trackcov_z0_theta;
   vector<float>   *mu_staco_trackcov_z0_qoverp;
   vector<float>   *mu_staco_trackcov_phi_theta;
   vector<float>   *mu_staco_trackcov_phi_qoverp;
   vector<float>   *mu_staco_trackcov_theta_qoverp;
   vector<float>   *mu_staco_trackfitchi2;
   vector<int>     *mu_staco_trackfitndof;
   vector<int>     *mu_staco_hastrack;
   vector<float>   *mu_staco_trackd0beam;
   vector<float>   *mu_staco_trackz0beam;
   vector<float>   *mu_staco_tracksigd0beam;
   vector<float>   *mu_staco_tracksigz0beam;
   vector<float>   *mu_staco_trackd0pv;
   vector<float>   *mu_staco_trackz0pv;
   vector<float>   *mu_staco_tracksigd0pv;
   vector<float>   *mu_staco_tracksigz0pv;
   vector<float>   *mu_staco_trackIPEstimate_d0_biasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_z0_biasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_sigd0_biasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_sigz0_biasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_d0_unbiasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_z0_unbiasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased;
   vector<float>   *mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased;
   vector<float>   *mu_staco_trackd0pvunbiased;
   vector<float>   *mu_staco_trackz0pvunbiased;
   vector<float>   *mu_staco_tracksigd0pvunbiased;
   vector<float>   *mu_staco_tracksigz0pvunbiased;
   vector<int>     *mu_staco_type;
   vector<int>     *mu_staco_origin;
   vector<float>   *mu_staco_truth_dr;
   vector<float>   *mu_staco_truth_E;
   vector<float>   *mu_staco_truth_pt;
   vector<float>   *mu_staco_truth_eta;
   vector<float>   *mu_staco_truth_phi;
   vector<int>     *mu_staco_truth_type;
   vector<int>     *mu_staco_truth_status;
   vector<int>     *mu_staco_truth_barcode;
   vector<int>     *mu_staco_truth_mothertype;
   vector<int>     *mu_staco_truth_motherbarcode;
   vector<int>     *mu_staco_truth_matched;
   vector<float>   *mu_staco_EFCB_dr;
   vector<int>     *mu_staco_EFCB_n;
   vector<vector<int> > *mu_staco_EFCB_MuonType;
   vector<vector<float> > *mu_staco_EFCB_pt;
   vector<vector<float> > *mu_staco_EFCB_eta;
   vector<vector<float> > *mu_staco_EFCB_phi;
   vector<vector<int> > *mu_staco_EFCB_hasCB;
   vector<int>     *mu_staco_EFCB_matched;
   vector<float>   *mu_staco_EFMG_dr;
   vector<int>     *mu_staco_EFMG_n;
   vector<vector<int> > *mu_staco_EFMG_MuonType;
   vector<vector<float> > *mu_staco_EFMG_pt;
   vector<vector<float> > *mu_staco_EFMG_eta;
   vector<vector<float> > *mu_staco_EFMG_phi;
   vector<vector<int> > *mu_staco_EFMG_hasMG;
   vector<int>     *mu_staco_EFMG_matched;
   vector<float>   *mu_staco_EFME_dr;
   vector<int>     *mu_staco_EFME_n;
   vector<vector<int> > *mu_staco_EFME_MuonType;
   vector<vector<float> > *mu_staco_EFME_pt;
   vector<vector<float> > *mu_staco_EFME_eta;
   vector<vector<float> > *mu_staco_EFME_phi;
   vector<vector<int> > *mu_staco_EFME_hasME;
   vector<int>     *mu_staco_EFME_matched;
   vector<float>   *mu_staco_L2CB_dr;
   vector<float>   *mu_staco_L2CB_pt;
   vector<float>   *mu_staco_L2CB_eta;
   vector<float>   *mu_staco_L2CB_phi;
   vector<float>   *mu_staco_L2CB_id_pt;
   vector<float>   *mu_staco_L2CB_ms_pt;
   vector<int>     *mu_staco_L2CB_nPixHits;
   vector<int>     *mu_staco_L2CB_nSCTHits;
   vector<int>     *mu_staco_L2CB_nTRTHits;
   vector<int>     *mu_staco_L2CB_nTRTHighTHits;
   vector<int>     *mu_staco_L2CB_matched;
   vector<float>   *mu_staco_L1_dr;
   vector<float>   *mu_staco_L1_pt;
   vector<float>   *mu_staco_L1_eta;
   vector<float>   *mu_staco_L1_phi;
   vector<short>   *mu_staco_L1_thrNumber;
   vector<short>   *mu_staco_L1_RoINumber;
   vector<short>   *mu_staco_L1_sectorAddress;
   vector<int>     *mu_staco_L1_firstCandidate;
   vector<int>     *mu_staco_L1_moreCandInRoI;
   vector<int>     *mu_staco_L1_moreCandInSector;
   vector<short>   *mu_staco_L1_source;
   vector<short>   *mu_staco_L1_hemisphere;
   vector<short>   *mu_staco_L1_charge;
   vector<int>     *mu_staco_L1_vetoed;
   vector<int>     *mu_staco_L1_matched;
   Int_t           mu_muid_n;
   vector<float>   *mu_muid_E;
   vector<float>   *mu_muid_pt;
   vector<float>   *mu_muid_m;
   vector<float>   *mu_muid_eta;
   vector<float>   *mu_muid_phi;
   vector<float>   *mu_muid_px;
   vector<float>   *mu_muid_py;
   vector<float>   *mu_muid_pz;
   vector<float>   *mu_muid_charge;
   vector<unsigned short> *mu_muid_allauthor;
   vector<int>     *mu_muid_author;
   vector<float>   *mu_muid_beta;
   vector<float>   *mu_muid_isMuonLikelihood;
   vector<float>   *mu_muid_matchchi2;
   vector<int>     *mu_muid_matchndof;
   vector<float>   *mu_muid_etcone20;
   vector<float>   *mu_muid_etcone30;
   vector<float>   *mu_muid_etcone40;
   vector<float>   *mu_muid_nucone20;
   vector<float>   *mu_muid_nucone30;
   vector<float>   *mu_muid_nucone40;
   vector<float>   *mu_muid_ptcone20;
   vector<float>   *mu_muid_ptcone30;
   vector<float>   *mu_muid_ptcone40;
   vector<float>   *mu_muid_etconeNoEm10;
   vector<float>   *mu_muid_etconeNoEm20;
   vector<float>   *mu_muid_etconeNoEm30;
   vector<float>   *mu_muid_etconeNoEm40;
   vector<float>   *mu_muid_scatteringCurvatureSignificance;
   vector<float>   *mu_muid_scatteringNeighbourSignificance;
   vector<float>   *mu_muid_momentumBalanceSignificance;
   vector<float>   *mu_muid_energyLossPar;
   vector<float>   *mu_muid_energyLossErr;
   vector<float>   *mu_muid_etCore;
   vector<float>   *mu_muid_energyLossType;
   vector<unsigned short> *mu_muid_caloMuonIdTag;
   vector<double>  *mu_muid_caloLRLikelihood;
   vector<int>     *mu_muid_bestMatch;
   vector<int>     *mu_muid_isStandAloneMuon;
   vector<int>     *mu_muid_isCombinedMuon;
   vector<int>     *mu_muid_isLowPtReconstructedMuon;
   vector<int>     *mu_muid_isSegmentTaggedMuon;
   vector<int>     *mu_muid_isCaloMuonId;
   vector<int>     *mu_muid_alsoFoundByLowPt;
   vector<int>     *mu_muid_alsoFoundByCaloMuonId;
   vector<int>     *mu_muid_isSiliconAssociatedForwardMuon;
   vector<int>     *mu_muid_loose;
   vector<int>     *mu_muid_medium;
   vector<int>     *mu_muid_tight;
   vector<float>   *mu_muid_d0_exPV;
   vector<float>   *mu_muid_z0_exPV;
   vector<float>   *mu_muid_phi_exPV;
   vector<float>   *mu_muid_theta_exPV;
   vector<float>   *mu_muid_qoverp_exPV;
   vector<float>   *mu_muid_cb_d0_exPV;
   vector<float>   *mu_muid_cb_z0_exPV;
   vector<float>   *mu_muid_cb_phi_exPV;
   vector<float>   *mu_muid_cb_theta_exPV;
   vector<float>   *mu_muid_cb_qoverp_exPV;
   vector<float>   *mu_muid_id_d0_exPV;
   vector<float>   *mu_muid_id_z0_exPV;
   vector<float>   *mu_muid_id_phi_exPV;
   vector<float>   *mu_muid_id_theta_exPV;
   vector<float>   *mu_muid_id_qoverp_exPV;
   vector<float>   *mu_muid_me_d0_exPV;
   vector<float>   *mu_muid_me_z0_exPV;
   vector<float>   *mu_muid_me_phi_exPV;
   vector<float>   *mu_muid_me_theta_exPV;
   vector<float>   *mu_muid_me_qoverp_exPV;
   vector<float>   *mu_muid_ie_d0_exPV;
   vector<float>   *mu_muid_ie_z0_exPV;
   vector<float>   *mu_muid_ie_phi_exPV;
   vector<float>   *mu_muid_ie_theta_exPV;
   vector<float>   *mu_muid_ie_qoverp_exPV;
   vector<vector<int> > *mu_muid_SpaceTime_detID;
   vector<vector<float> > *mu_muid_SpaceTime_t;
   vector<vector<float> > *mu_muid_SpaceTime_tError;
   vector<vector<float> > *mu_muid_SpaceTime_weight;
   vector<vector<float> > *mu_muid_SpaceTime_x;
   vector<vector<float> > *mu_muid_SpaceTime_y;
   vector<vector<float> > *mu_muid_SpaceTime_z;
   vector<float>   *mu_muid_cov_d0_exPV;
   vector<float>   *mu_muid_cov_z0_exPV;
   vector<float>   *mu_muid_cov_phi_exPV;
   vector<float>   *mu_muid_cov_theta_exPV;
   vector<float>   *mu_muid_cov_qoverp_exPV;
   vector<float>   *mu_muid_cov_d0_z0_exPV;
   vector<float>   *mu_muid_cov_d0_phi_exPV;
   vector<float>   *mu_muid_cov_d0_theta_exPV;
   vector<float>   *mu_muid_cov_d0_qoverp_exPV;
   vector<float>   *mu_muid_cov_z0_phi_exPV;
   vector<float>   *mu_muid_cov_z0_theta_exPV;
   vector<float>   *mu_muid_cov_z0_qoverp_exPV;
   vector<float>   *mu_muid_cov_phi_theta_exPV;
   vector<float>   *mu_muid_cov_phi_qoverp_exPV;
   vector<float>   *mu_muid_cov_theta_qoverp_exPV;
   vector<float>   *mu_muid_id_cov_d0_exPV;
   vector<float>   *mu_muid_id_cov_z0_exPV;
   vector<float>   *mu_muid_id_cov_phi_exPV;
   vector<float>   *mu_muid_id_cov_theta_exPV;
   vector<float>   *mu_muid_id_cov_qoverp_exPV;
   vector<float>   *mu_muid_me_cov_d0_exPV;
   vector<float>   *mu_muid_me_cov_z0_exPV;
   vector<float>   *mu_muid_me_cov_phi_exPV;
   vector<float>   *mu_muid_me_cov_theta_exPV;
   vector<float>   *mu_muid_me_cov_qoverp_exPV;
   vector<float>   *mu_muid_ms_d0;
   vector<float>   *mu_muid_ms_z0;
   vector<float>   *mu_muid_ms_phi;
   vector<float>   *mu_muid_ms_theta;
   vector<float>   *mu_muid_ms_qoverp;
   vector<float>   *mu_muid_id_d0;
   vector<float>   *mu_muid_id_z0;
   vector<float>   *mu_muid_id_phi;
   vector<float>   *mu_muid_id_theta;
   vector<float>   *mu_muid_id_qoverp;
   vector<float>   *mu_muid_me_d0;
   vector<float>   *mu_muid_me_z0;
   vector<float>   *mu_muid_me_phi;
   vector<float>   *mu_muid_me_theta;
   vector<float>   *mu_muid_me_qoverp;
   vector<float>   *mu_muid_ie_d0;
   vector<float>   *mu_muid_ie_z0;
   vector<float>   *mu_muid_ie_phi;
   vector<float>   *mu_muid_ie_theta;
   vector<float>   *mu_muid_ie_qoverp;
   vector<int>     *mu_muid_nOutliersOnTrack;
   vector<int>     *mu_muid_nBLHits;
   vector<int>     *mu_muid_nPixHits;
   vector<int>     *mu_muid_nSCTHits;
   vector<int>     *mu_muid_nTRTHits;
   vector<int>     *mu_muid_nTRTHighTHits;
   vector<int>     *mu_muid_nBLSharedHits;
   vector<int>     *mu_muid_nPixSharedHits;
   vector<int>     *mu_muid_nPixHoles;
   vector<int>     *mu_muid_nSCTSharedHits;
   vector<int>     *mu_muid_nSCTHoles;
   vector<int>     *mu_muid_nTRTOutliers;
   vector<int>     *mu_muid_nTRTHighTOutliers;
   vector<int>     *mu_muid_nGangedPixels;
   vector<int>     *mu_muid_nPixelDeadSensors;
   vector<int>     *mu_muid_nSCTDeadSensors;
   vector<int>     *mu_muid_nTRTDeadStraws;
   vector<int>     *mu_muid_expectBLayerHit;
   vector<int>     *mu_muid_nMDTHits;
   vector<int>     *mu_muid_nMDTHoles;
   vector<int>     *mu_muid_nCSCEtaHits;
   vector<int>     *mu_muid_nCSCEtaHoles;
   vector<int>     *mu_muid_nCSCUnspoiledEtaHits;
   vector<int>     *mu_muid_nCSCPhiHits;
   vector<int>     *mu_muid_nCSCPhiHoles;
   vector<int>     *mu_muid_nRPCEtaHits;
   vector<int>     *mu_muid_nRPCEtaHoles;
   vector<int>     *mu_muid_nRPCPhiHits;
   vector<int>     *mu_muid_nRPCPhiHoles;
   vector<int>     *mu_muid_nTGCEtaHits;
   vector<int>     *mu_muid_nTGCEtaHoles;
   vector<int>     *mu_muid_nTGCPhiHits;
   vector<int>     *mu_muid_nTGCPhiHoles;
   vector<int>     *mu_muid_nprecisionLayers;
   vector<int>     *mu_muid_nprecisionHoleLayers;
   vector<int>     *mu_muid_nphiLayers;
   vector<int>     *mu_muid_ntrigEtaLayers;
   vector<int>     *mu_muid_nphiHoleLayers;
   vector<int>     *mu_muid_ntrigEtaHoleLayers;
   vector<int>     *mu_muid_nMDTBIHits;
   vector<int>     *mu_muid_nMDTBMHits;
   vector<int>     *mu_muid_nMDTBOHits;
   vector<int>     *mu_muid_nMDTBEEHits;
   vector<int>     *mu_muid_nMDTBIS78Hits;
   vector<int>     *mu_muid_nMDTEIHits;
   vector<int>     *mu_muid_nMDTEMHits;
   vector<int>     *mu_muid_nMDTEOHits;
   vector<int>     *mu_muid_nMDTEEHits;
   vector<int>     *mu_muid_nRPCLayer1EtaHits;
   vector<int>     *mu_muid_nRPCLayer2EtaHits;
   vector<int>     *mu_muid_nRPCLayer3EtaHits;
   vector<int>     *mu_muid_nRPCLayer1PhiHits;
   vector<int>     *mu_muid_nRPCLayer2PhiHits;
   vector<int>     *mu_muid_nRPCLayer3PhiHits;
   vector<int>     *mu_muid_nTGCLayer1EtaHits;
   vector<int>     *mu_muid_nTGCLayer2EtaHits;
   vector<int>     *mu_muid_nTGCLayer3EtaHits;
   vector<int>     *mu_muid_nTGCLayer4EtaHits;
   vector<int>     *mu_muid_nTGCLayer1PhiHits;
   vector<int>     *mu_muid_nTGCLayer2PhiHits;
   vector<int>     *mu_muid_nTGCLayer3PhiHits;
   vector<int>     *mu_muid_nTGCLayer4PhiHits;
   vector<int>     *mu_muid_barrelSectors;
   vector<int>     *mu_muid_endcapSectors;
   vector<float>   *mu_muid_trackd0;
   vector<float>   *mu_muid_trackz0;
   vector<float>   *mu_muid_trackphi;
   vector<float>   *mu_muid_tracktheta;
   vector<float>   *mu_muid_trackqoverp;
   vector<float>   *mu_muid_trackcov_d0;
   vector<float>   *mu_muid_trackcov_z0;
   vector<float>   *mu_muid_trackcov_phi;
   vector<float>   *mu_muid_trackcov_theta;
   vector<float>   *mu_muid_trackcov_qoverp;
   vector<float>   *mu_muid_trackcov_d0_z0;
   vector<float>   *mu_muid_trackcov_d0_phi;
   vector<float>   *mu_muid_trackcov_d0_theta;
   vector<float>   *mu_muid_trackcov_d0_qoverp;
   vector<float>   *mu_muid_trackcov_z0_phi;
   vector<float>   *mu_muid_trackcov_z0_theta;
   vector<float>   *mu_muid_trackcov_z0_qoverp;
   vector<float>   *mu_muid_trackcov_phi_theta;
   vector<float>   *mu_muid_trackcov_phi_qoverp;
   vector<float>   *mu_muid_trackcov_theta_qoverp;
   vector<float>   *mu_muid_trackfitchi2;
   vector<int>     *mu_muid_trackfitndof;
   vector<int>     *mu_muid_hastrack;
   vector<float>   *mu_muid_trackd0beam;
   vector<float>   *mu_muid_trackz0beam;
   vector<float>   *mu_muid_tracksigd0beam;
   vector<float>   *mu_muid_tracksigz0beam;
   vector<float>   *mu_muid_trackd0pv;
   vector<float>   *mu_muid_trackz0pv;
   vector<float>   *mu_muid_tracksigd0pv;
   vector<float>   *mu_muid_tracksigz0pv;
   vector<float>   *mu_muid_trackIPEstimate_d0_biasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_z0_biasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_sigd0_biasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_sigz0_biasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_d0_unbiasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_z0_unbiasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased;
   vector<float>   *mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased;
   vector<float>   *mu_muid_trackd0pvunbiased;
   vector<float>   *mu_muid_trackz0pvunbiased;
   vector<float>   *mu_muid_tracksigd0pvunbiased;
   vector<float>   *mu_muid_tracksigz0pvunbiased;
   vector<int>     *mu_muid_type;
   vector<int>     *mu_muid_origin;
   vector<float>   *mu_muid_truth_dr;
   vector<float>   *mu_muid_truth_E;
   vector<float>   *mu_muid_truth_pt;
   vector<float>   *mu_muid_truth_eta;
   vector<float>   *mu_muid_truth_phi;
   vector<int>     *mu_muid_truth_type;
   vector<int>     *mu_muid_truth_status;
   vector<int>     *mu_muid_truth_barcode;
   vector<int>     *mu_muid_truth_mothertype;
   vector<int>     *mu_muid_truth_motherbarcode;
   vector<int>     *mu_muid_truth_matched;
   vector<float>   *mu_muid_EFCB_dr;
   vector<int>     *mu_muid_EFCB_n;
   vector<vector<int> > *mu_muid_EFCB_MuonType;
   vector<vector<float> > *mu_muid_EFCB_pt;
   vector<vector<float> > *mu_muid_EFCB_eta;
   vector<vector<float> > *mu_muid_EFCB_phi;
   vector<vector<int> > *mu_muid_EFCB_hasCB;
   vector<int>     *mu_muid_EFCB_matched;
   vector<float>   *mu_muid_EFMG_dr;
   vector<int>     *mu_muid_EFMG_n;
   vector<vector<int> > *mu_muid_EFMG_MuonType;
   vector<vector<float> > *mu_muid_EFMG_pt;
   vector<vector<float> > *mu_muid_EFMG_eta;
   vector<vector<float> > *mu_muid_EFMG_phi;
   vector<vector<int> > *mu_muid_EFMG_hasMG;
   vector<int>     *mu_muid_EFMG_matched;
   vector<float>   *mu_muid_EFME_dr;
   vector<int>     *mu_muid_EFME_n;
   vector<vector<int> > *mu_muid_EFME_MuonType;
   vector<vector<float> > *mu_muid_EFME_pt;
   vector<vector<float> > *mu_muid_EFME_eta;
   vector<vector<float> > *mu_muid_EFME_phi;
   vector<vector<int> > *mu_muid_EFME_hasME;
   vector<int>     *mu_muid_EFME_matched;
   vector<float>   *mu_muid_L2CB_dr;
   vector<float>   *mu_muid_L2CB_pt;
   vector<float>   *mu_muid_L2CB_eta;
   vector<float>   *mu_muid_L2CB_phi;
   vector<float>   *mu_muid_L2CB_id_pt;
   vector<float>   *mu_muid_L2CB_ms_pt;
   vector<int>     *mu_muid_L2CB_nPixHits;
   vector<int>     *mu_muid_L2CB_nSCTHits;
   vector<int>     *mu_muid_L2CB_nTRTHits;
   vector<int>     *mu_muid_L2CB_nTRTHighTHits;
   vector<int>     *mu_muid_L2CB_matched;
   vector<float>   *mu_muid_L1_dr;
   vector<float>   *mu_muid_L1_pt;
   vector<float>   *mu_muid_L1_eta;
   vector<float>   *mu_muid_L1_phi;
   vector<short>   *mu_muid_L1_thrNumber;
   vector<short>   *mu_muid_L1_RoINumber;
   vector<short>   *mu_muid_L1_sectorAddress;
   vector<int>     *mu_muid_L1_firstCandidate;
   vector<int>     *mu_muid_L1_moreCandInRoI;
   vector<int>     *mu_muid_L1_moreCandInSector;
   vector<short>   *mu_muid_L1_source;
   vector<short>   *mu_muid_L1_hemisphere;
   vector<short>   *mu_muid_L1_charge;
   vector<int>     *mu_muid_L1_vetoed;
   vector<int>     *mu_muid_L1_matched;
   Int_t           muid_n;
   vector<int>     *muid_nScatters;
   vector<double>  *muid_scatSignificance;
   vector<double>  *muid_neighbourSignificance;
   vector<double>  *muid_eta;
   vector<float>   *muid_probability;
   vector<int>     *muid_barcode;
   vector<int>     *muid_index;
   Int_t           mu_n;
   vector<float>   *mu_E;
   vector<float>   *mu_pt;
   vector<float>   *mu_m;
   vector<float>   *mu_eta;
   vector<float>   *mu_phi;
   vector<float>   *mu_px;
   vector<float>   *mu_py;
   vector<float>   *mu_pz;
   vector<float>   *mu_charge;
   vector<unsigned short> *mu_allauthor;
   vector<int>     *mu_author;
   vector<float>   *mu_beta;
   vector<float>   *mu_isMuonLikelihood;
   vector<float>   *mu_matchchi2;
   vector<int>     *mu_matchndof;
   vector<float>   *mu_etcone20;
   vector<float>   *mu_etcone30;
   vector<float>   *mu_etcone40;
   vector<float>   *mu_nucone20;
   vector<float>   *mu_nucone30;
   vector<float>   *mu_nucone40;
   vector<float>   *mu_ptcone20;
   vector<float>   *mu_ptcone30;
   vector<float>   *mu_ptcone40;
   vector<float>   *mu_etconeNoEm10;
   vector<float>   *mu_etconeNoEm20;
   vector<float>   *mu_etconeNoEm30;
   vector<float>   *mu_etconeNoEm40;
   vector<float>   *mu_scatteringCurvatureSignificance;
   vector<float>   *mu_scatteringNeighbourSignificance;
   vector<float>   *mu_momentumBalanceSignificance;
   vector<float>   *mu_energyLossPar;
   vector<float>   *mu_energyLossErr;
   vector<float>   *mu_etCore;
   vector<float>   *mu_energyLossType;
   vector<unsigned short> *mu_caloMuonIdTag;
   vector<double>  *mu_caloLRLikelihood;
   vector<int>     *mu_bestMatch;
   vector<int>     *mu_isStandAloneMuon;
   vector<int>     *mu_isCombinedMuon;
   vector<int>     *mu_isLowPtReconstructedMuon;
   vector<int>     *mu_isSegmentTaggedMuon;
   vector<int>     *mu_isCaloMuonId;
   vector<int>     *mu_alsoFoundByLowPt;
   vector<int>     *mu_alsoFoundByCaloMuonId;
   vector<int>     *mu_isSiliconAssociatedForwardMuon;
   vector<int>     *mu_loose;
   vector<int>     *mu_medium;
   vector<int>     *mu_tight;
   vector<float>   *mu_d0_exPV;
   vector<float>   *mu_z0_exPV;
   vector<float>   *mu_phi_exPV;
   vector<float>   *mu_theta_exPV;
   vector<float>   *mu_qoverp_exPV;
   vector<float>   *mu_cb_d0_exPV;
   vector<float>   *mu_cb_z0_exPV;
   vector<float>   *mu_cb_phi_exPV;
   vector<float>   *mu_cb_theta_exPV;
   vector<float>   *mu_cb_qoverp_exPV;
   vector<float>   *mu_id_d0_exPV;
   vector<float>   *mu_id_z0_exPV;
   vector<float>   *mu_id_phi_exPV;
   vector<float>   *mu_id_theta_exPV;
   vector<float>   *mu_id_qoverp_exPV;
   vector<float>   *mu_me_d0_exPV;
   vector<float>   *mu_me_z0_exPV;
   vector<float>   *mu_me_phi_exPV;
   vector<float>   *mu_me_theta_exPV;
   vector<float>   *mu_me_qoverp_exPV;
   vector<float>   *mu_ie_d0_exPV;
   vector<float>   *mu_ie_z0_exPV;
   vector<float>   *mu_ie_phi_exPV;
   vector<float>   *mu_ie_theta_exPV;
   vector<float>   *mu_ie_qoverp_exPV;
   vector<vector<int> > *mu_SpaceTime_detID;
   vector<vector<float> > *mu_SpaceTime_t;
   vector<vector<float> > *mu_SpaceTime_tError;
   vector<vector<float> > *mu_SpaceTime_weight;
   vector<vector<float> > *mu_SpaceTime_x;
   vector<vector<float> > *mu_SpaceTime_y;
   vector<vector<float> > *mu_SpaceTime_z;
   vector<float>   *mu_cov_d0_exPV;
   vector<float>   *mu_cov_z0_exPV;
   vector<float>   *mu_cov_phi_exPV;
   vector<float>   *mu_cov_theta_exPV;
   vector<float>   *mu_cov_qoverp_exPV;
   vector<float>   *mu_cov_d0_z0_exPV;
   vector<float>   *mu_cov_d0_phi_exPV;
   vector<float>   *mu_cov_d0_theta_exPV;
   vector<float>   *mu_cov_d0_qoverp_exPV;
   vector<float>   *mu_cov_z0_phi_exPV;
   vector<float>   *mu_cov_z0_theta_exPV;
   vector<float>   *mu_cov_z0_qoverp_exPV;
   vector<float>   *mu_cov_phi_theta_exPV;
   vector<float>   *mu_cov_phi_qoverp_exPV;
   vector<float>   *mu_cov_theta_qoverp_exPV;
   vector<float>   *mu_id_cov_d0_exPV;
   vector<float>   *mu_id_cov_z0_exPV;
   vector<float>   *mu_id_cov_phi_exPV;
   vector<float>   *mu_id_cov_theta_exPV;
   vector<float>   *mu_id_cov_qoverp_exPV;
   vector<float>   *mu_me_cov_d0_exPV;
   vector<float>   *mu_me_cov_z0_exPV;
   vector<float>   *mu_me_cov_phi_exPV;
   vector<float>   *mu_me_cov_theta_exPV;
   vector<float>   *mu_me_cov_qoverp_exPV;
   vector<float>   *mu_ms_d0;
   vector<float>   *mu_ms_z0;
   vector<float>   *mu_ms_phi;
   vector<float>   *mu_ms_theta;
   vector<float>   *mu_ms_qoverp;
   vector<float>   *mu_id_d0;
   vector<float>   *mu_id_z0;
   vector<float>   *mu_id_phi;
   vector<float>   *mu_id_theta;
   vector<float>   *mu_id_qoverp;
   vector<float>   *mu_me_d0;
   vector<float>   *mu_me_z0;
   vector<float>   *mu_me_phi;
   vector<float>   *mu_me_theta;
   vector<float>   *mu_me_qoverp;
   vector<float>   *mu_ie_d0;
   vector<float>   *mu_ie_z0;
   vector<float>   *mu_ie_phi;
   vector<float>   *mu_ie_theta;
   vector<float>   *mu_ie_qoverp;
   vector<int>     *mu_nOutliersOnTrack;
   vector<int>     *mu_nBLHits;
   vector<int>     *mu_nPixHits;
   vector<int>     *mu_nSCTHits;
   vector<int>     *mu_nTRTHits;
   vector<int>     *mu_nTRTHighTHits;
   vector<int>     *mu_nBLSharedHits;
   vector<int>     *mu_nPixSharedHits;
   vector<int>     *mu_nPixHoles;
   vector<int>     *mu_nSCTSharedHits;
   vector<int>     *mu_nSCTHoles;
   vector<int>     *mu_nTRTOutliers;
   vector<int>     *mu_nTRTHighTOutliers;
   vector<int>     *mu_nGangedPixels;
   vector<int>     *mu_nPixelDeadSensors;
   vector<int>     *mu_nSCTDeadSensors;
   vector<int>     *mu_nTRTDeadStraws;
   vector<int>     *mu_expectBLayerHit;
   vector<int>     *mu_nMDTHits;
   vector<int>     *mu_nMDTHoles;
   vector<int>     *mu_nCSCEtaHits;
   vector<int>     *mu_nCSCEtaHoles;
   vector<int>     *mu_nCSCUnspoiledEtaHits;
   vector<int>     *mu_nCSCPhiHits;
   vector<int>     *mu_nCSCPhiHoles;
   vector<int>     *mu_nRPCEtaHits;
   vector<int>     *mu_nRPCEtaHoles;
   vector<int>     *mu_nRPCPhiHits;
   vector<int>     *mu_nRPCPhiHoles;
   vector<int>     *mu_nTGCEtaHits;
   vector<int>     *mu_nTGCEtaHoles;
   vector<int>     *mu_nTGCPhiHits;
   vector<int>     *mu_nTGCPhiHoles;
   vector<int>     *mu_nprecisionLayers;
   vector<int>     *mu_nprecisionHoleLayers;
   vector<int>     *mu_nphiLayers;
   vector<int>     *mu_ntrigEtaLayers;
   vector<int>     *mu_nphiHoleLayers;
   vector<int>     *mu_ntrigEtaHoleLayers;
   vector<int>     *mu_nMDTBIHits;
   vector<int>     *mu_nMDTBMHits;
   vector<int>     *mu_nMDTBOHits;
   vector<int>     *mu_nMDTBEEHits;
   vector<int>     *mu_nMDTBIS78Hits;
   vector<int>     *mu_nMDTEIHits;
   vector<int>     *mu_nMDTEMHits;
   vector<int>     *mu_nMDTEOHits;
   vector<int>     *mu_nMDTEEHits;
   vector<int>     *mu_nRPCLayer1EtaHits;
   vector<int>     *mu_nRPCLayer2EtaHits;
   vector<int>     *mu_nRPCLayer3EtaHits;
   vector<int>     *mu_nRPCLayer1PhiHits;
   vector<int>     *mu_nRPCLayer2PhiHits;
   vector<int>     *mu_nRPCLayer3PhiHits;
   vector<int>     *mu_nTGCLayer1EtaHits;
   vector<int>     *mu_nTGCLayer2EtaHits;
   vector<int>     *mu_nTGCLayer3EtaHits;
   vector<int>     *mu_nTGCLayer4EtaHits;
   vector<int>     *mu_nTGCLayer1PhiHits;
   vector<int>     *mu_nTGCLayer2PhiHits;
   vector<int>     *mu_nTGCLayer3PhiHits;
   vector<int>     *mu_nTGCLayer4PhiHits;
   vector<int>     *mu_barrelSectors;
   vector<int>     *mu_endcapSectors;
   vector<float>   *mu_trackd0;
   vector<float>   *mu_trackz0;
   vector<float>   *mu_trackphi;
   vector<float>   *mu_tracktheta;
   vector<float>   *mu_trackqoverp;
   vector<float>   *mu_trackcov_d0;
   vector<float>   *mu_trackcov_z0;
   vector<float>   *mu_trackcov_phi;
   vector<float>   *mu_trackcov_theta;
   vector<float>   *mu_trackcov_qoverp;
   vector<float>   *mu_trackcov_d0_z0;
   vector<float>   *mu_trackcov_d0_phi;
   vector<float>   *mu_trackcov_d0_theta;
   vector<float>   *mu_trackcov_d0_qoverp;
   vector<float>   *mu_trackcov_z0_phi;
   vector<float>   *mu_trackcov_z0_theta;
   vector<float>   *mu_trackcov_z0_qoverp;
   vector<float>   *mu_trackcov_phi_theta;
   vector<float>   *mu_trackcov_phi_qoverp;
   vector<float>   *mu_trackcov_theta_qoverp;
   vector<float>   *mu_trackfitchi2;
   vector<int>     *mu_trackfitndof;
   vector<int>     *mu_hastrack;
   vector<float>   *mu_trackd0beam;
   vector<float>   *mu_trackz0beam;
   vector<float>   *mu_tracksigd0beam;
   vector<float>   *mu_tracksigz0beam;
   vector<float>   *mu_trackd0pv;
   vector<float>   *mu_trackz0pv;
   vector<float>   *mu_tracksigd0pv;
   vector<float>   *mu_tracksigz0pv;
   vector<float>   *mu_trackIPEstimate_d0_biasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_z0_biasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_sigd0_biasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_sigz0_biasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_d0_unbiasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_z0_unbiasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_sigd0_unbiasedpvunbiased;
   vector<float>   *mu_trackIPEstimate_sigz0_unbiasedpvunbiased;
   vector<float>   *mu_trackd0pvunbiased;
   vector<float>   *mu_trackz0pvunbiased;
   vector<float>   *mu_tracksigd0pvunbiased;
   vector<float>   *mu_tracksigz0pvunbiased;
   vector<int>     *mu_type;
   vector<int>     *mu_origin;
   vector<float>   *mu_truth_dr;
   vector<float>   *mu_truth_E;
   vector<float>   *mu_truth_pt;
   vector<float>   *mu_truth_eta;
   vector<float>   *mu_truth_phi;
   vector<int>     *mu_truth_type;
   vector<int>     *mu_truth_status;
   vector<int>     *mu_truth_barcode;
   vector<int>     *mu_truth_mothertype;
   vector<int>     *mu_truth_motherbarcode;
   vector<int>     *mu_truth_matched;
   vector<float>   *mu_EFCB_dr;
   vector<int>     *mu_EFCB_n;
   vector<vector<int> > *mu_EFCB_MuonType;
   vector<vector<float> > *mu_EFCB_pt;
   vector<vector<float> > *mu_EFCB_eta;
   vector<vector<float> > *mu_EFCB_phi;
   vector<vector<int> > *mu_EFCB_hasCB;
   vector<int>     *mu_EFCB_matched;
   vector<float>   *mu_EFMG_dr;
   vector<int>     *mu_EFMG_n;
   vector<vector<int> > *mu_EFMG_MuonType;
   vector<vector<float> > *mu_EFMG_pt;
   vector<vector<float> > *mu_EFMG_eta;
   vector<vector<float> > *mu_EFMG_phi;
   vector<vector<int> > *mu_EFMG_hasMG;
   vector<int>     *mu_EFMG_matched;
   vector<float>   *mu_EFME_dr;
   vector<int>     *mu_EFME_n;
   vector<vector<int> > *mu_EFME_MuonType;
   vector<vector<float> > *mu_EFME_pt;
   vector<vector<float> > *mu_EFME_eta;
   vector<vector<float> > *mu_EFME_phi;
   vector<vector<int> > *mu_EFME_hasME;
   vector<int>     *mu_EFME_matched;
   vector<float>   *mu_L2CB_dr;
   vector<float>   *mu_L2CB_pt;
   vector<float>   *mu_L2CB_eta;
   vector<float>   *mu_L2CB_phi;
   vector<float>   *mu_L2CB_id_pt;
   vector<float>   *mu_L2CB_ms_pt;
   vector<int>     *mu_L2CB_nPixHits;
   vector<int>     *mu_L2CB_nSCTHits;
   vector<int>     *mu_L2CB_nTRTHits;
   vector<int>     *mu_L2CB_nTRTHighTHits;
   vector<int>     *mu_L2CB_matched;
   vector<float>   *mu_L1_dr;
   vector<float>   *mu_L1_pt;
   vector<float>   *mu_L1_eta;
   vector<float>   *mu_L1_phi;
   vector<short>   *mu_L1_thrNumber;
   vector<short>   *mu_L1_RoINumber;
   vector<short>   *mu_L1_sectorAddress;
   vector<int>     *mu_L1_firstCandidate;
   vector<int>     *mu_L1_moreCandInRoI;
   vector<int>     *mu_L1_moreCandInSector;
   vector<short>   *mu_L1_source;
   vector<short>   *mu_L1_hemisphere;
   vector<short>   *mu_L1_charge;
   vector<int>     *mu_L1_vetoed;
   vector<int>     *mu_L1_matched;
   UInt_t          trig_DB_SMK;
   UInt_t          trig_DB_L1PSK;
   UInt_t          trig_DB_HLTPSK;
   vector<unsigned int> *trig_L1_TAV;
   vector<short>   *trig_L2_passedPhysics;
   vector<short>   *trig_EF_passedPhysics;
   vector<unsigned int> *trig_L1_TBP;
   vector<unsigned int> *trig_L1_TAP;
   vector<short>   *trig_L2_passedRaw;
   vector<short>   *trig_EF_passedRaw;
   Bool_t          trig_L2_truncated;
   Bool_t          trig_EF_truncated;
   vector<short>   *trig_L2_resurrected;
   vector<short>   *trig_EF_resurrected;
   vector<short>   *trig_L2_passedThrough;
   vector<short>   *trig_EF_passedThrough;
   vector<short>   *trig_L2_wasPrescaled;
   vector<short>   *trig_L2_wasResurrected;
   vector<short>   *trig_EF_wasPrescaled;
   vector<short>   *trig_EF_wasResurrected;
   Int_t           trig_L1_jet_n;
   vector<float>   *trig_L1_jet_eta;
   vector<float>   *trig_L1_jet_phi;
   vector<vector<string> > *trig_L1_jet_thrNames;
   vector<vector<float> > *trig_L1_jet_thrValues;
   vector<unsigned int> *trig_L1_jet_thrPattern;
   vector<unsigned int> *trig_L1_jet_RoIWord;
   vector<float>   *trig_L1_jet_et4x4;
   vector<float>   *trig_L1_jet_et6x6;
   vector<float>   *trig_L1_jet_et8x8;
   Int_t           trig_L1_emtau_n;
   vector<float>   *trig_L1_emtau_eta;
   vector<float>   *trig_L1_emtau_phi;
   vector<vector<string> > *trig_L1_emtau_thrNames;
   vector<vector<float> > *trig_L1_emtau_thrValues;
   vector<float>   *trig_L1_emtau_core;
   vector<float>   *trig_L1_emtau_EMClus;
   vector<float>   *trig_L1_emtau_tauClus;
   vector<float>   *trig_L1_emtau_EMIsol;
   vector<float>   *trig_L1_emtau_hadIsol;
   vector<float>   *trig_L1_emtau_hadCore;
   vector<unsigned int> *trig_L1_emtau_thrPattern;
   vector<unsigned int> *trig_L1_emtau_RoIWord;
   Int_t           trig_L1_mu_n;
   vector<float>   *trig_L1_mu_pt;
   vector<float>   *trig_L1_mu_eta;
   vector<float>   *trig_L1_mu_phi;
   vector<string>  *trig_L1_mu_thrName;
   vector<short>   *trig_L1_mu_thrNumber;
   vector<short>   *trig_L1_mu_RoINumber;
   vector<short>   *trig_L1_mu_sectorAddress;
   vector<int>     *trig_L1_mu_firstCandidate;
   vector<int>     *trig_L1_mu_moreCandInRoI;
   vector<int>     *trig_L1_mu_moreCandInSector;
   vector<short>   *trig_L1_mu_source;
   vector<short>   *trig_L1_mu_hemisphere;
   vector<short>   *trig_L1_mu_charge;
   vector<int>     *trig_L1_mu_vetoed;
   vector<unsigned int> *trig_L1_mu_RoIWord;
   Int_t           trig_EF_jet_n;
   vector<float>   *trig_EF_jet_E;
   vector<float>   *trig_EF_jet_pt;
   vector<float>   *trig_EF_jet_m;
   vector<float>   *trig_EF_jet_eta;
   vector<float>   *trig_EF_jet_phi;
   vector<int>     *trig_EF_jet_a4tcem;
   vector<int>     *trig_EF_jet_a2tcem;
   vector<int>     *trig_EF_jet_a4tchad;
   vector<int>     *trig_EF_jet_a4hi;
   vector<int>     *trig_EF_jet_a2hi;
   vector<unsigned int> *trig_EF_jet_RoIword;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5_L1TE90;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE100;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE90;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_eta50_deta40;
   vector<int>     *trig_EF_jet_EF_2j10_a4hi_eta50_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_deta40_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_deta40_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j15_a4hi_EFFS_2L1J5;
   vector<int>     *trig_EF_jet_EF_2j15_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j15_a4hi_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j15_a4hi_eta50_deta40;
   vector<int>     *trig_EF_jet_EF_2j15_a4hi_eta50_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_L2FS;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j15_a4tchad_eta50_deta40_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j20_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j20_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j7_a4hi_EFFS_2L1J5;
   vector<int>     *trig_EF_jet_EF_2j7_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_2j7_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_3j15_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_3j15_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_3j15_a4tchad_L2FS;
   vector<int>     *trig_EF_jet_EF_3j15_a4tchad_L2FS_2L1J5;
   vector<int>     *trig_EF_jet_EF_fj10_a4hi_EFFS_L1FJ0;
   vector<int>     *trig_EF_jet_EF_fj10_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_fj10_a4tchad_EFFS_L1FJ0;
   vector<int>     *trig_EF_jet_EF_fj10_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_fj10_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_fj15_a4hi_EFFS_L1FJ0;
   vector<int>     *trig_EF_jet_EF_fj15_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_fj15_a4tchad_EFFS_L1FJ0;
   vector<int>     *trig_EF_jet_EF_fj15_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_fj15_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_fj7_a4hi_EFFS_L1FJ0;
   vector<int>     *trig_EF_jet_EF_fj7_a4tchad_EFFS_L1FJ0;
   vector<int>     *trig_EF_jet_EF_j100_a4hi_EFFS_L1J20;
   vector<int>     *trig_EF_jet_EF_j100_a4tchad_EFFS_L1J20;
   vector<int>     *trig_EF_jet_EF_j10_a4hi_EFFS_L1EM3;
   vector<int>     *trig_EF_jet_EF_j10_a4hi_EFFS_L1J5;
   vector<int>     *trig_EF_jet_EF_j10_a4hi_EFFS_L1TAU3;
   vector<int>     *trig_EF_jet_EF_j10_a4hi_EFFS_L1TE100;
   vector<int>     *trig_EF_jet_EF_j10_a4hi_EFFS_L1TE90;
   vector<int>     *trig_EF_jet_EF_j10_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j10_a4tchad_EFFS_L1J5;
   vector<int>     *trig_EF_jet_EF_j10_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_j10_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_j10_u0uchad_LArNoiseBurst;
   vector<int>     *trig_EF_jet_EF_j10_u0uchad_empty_LArNoiseBurst;
   vector<int>     *trig_EF_jet_EF_j10_u0uchad_firstempty_LArNoiseBurst;
   vector<int>     *trig_EF_jet_EF_j15_Ecorr;
   vector<int>     *trig_EF_jet_EF_j15_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j15_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_j15_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_j15_a4tj_EFFS_L1ZDC;
   vector<int>     *trig_EF_jet_EF_j20_Ecorr;
   vector<int>     *trig_EF_jet_EF_j20_a4hi_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j20_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j20_a4tchad_EFFS_L1J5;
   vector<int>     *trig_EF_jet_EF_j20_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_j20_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_j20_a4tj_EFFS_L1ZDC;
   vector<int>     *trig_EF_jet_EF_j30_a4hi_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j30_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j30_a4tchad_EFFS_L1J5;
   vector<int>     *trig_EF_jet_EF_j30_a4tchad_EFFS_L1RD0;
   vector<int>     *trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0;
   vector<int>     *trig_EF_jet_EF_j30_a4tchad_EFFS_L2te_L1RD0;
   vector<int>     *trig_EF_jet_EF_j30_u0uchad_empty_LArNoiseBurst;
   vector<int>     *trig_EF_jet_EF_j40_a4hi_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j40_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j40_a4tchad_EFFS_L1J5;
   vector<int>     *trig_EF_jet_EF_j40_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j40_a4tj_EFFS_L1ZDC;
   vector<int>     *trig_EF_jet_EF_j50_a4hi_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j50_a4hi_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j50_a4tchad_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j50_a4tchad_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j50_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j60_a4hi_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j60_a4tchad_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j60_a4tchad_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j75_a4hi_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j75_a4hi_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j75_a4tchad_EFFS_L1J10;
   vector<int>     *trig_EF_jet_EF_j75_a4tchad_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j75_a4tj_EFFS_L1ZDC;
   vector<int>     *trig_EF_jet_EF_j7_a4tchad_EFFS_L1J5;
   vector<int>     *trig_EF_jet_EF_j7_a4tchad_EFFS_L2mbMbts;
   vector<int>     *trig_EF_jet_EF_j80_a4hi_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j80_a4tchad_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j90_a4hi_EFFS_L1J15;
   vector<int>     *trig_EF_jet_EF_j90_a4tchad_EFFS_L1J15;
   vector<string>  *trig_L1_esum_thrNames;
   Float_t         trig_L1_esum_ExMiss;
   Float_t         trig_L1_esum_EyMiss;
   Float_t         trig_L1_esum_energyT;
   Bool_t          trig_L1_esum_overflowX;
   Bool_t          trig_L1_esum_overflowY;
   Bool_t          trig_L1_esum_overflowT;
   UInt_t          trig_L1_esum_RoIWord0;
   UInt_t          trig_L1_esum_RoIWord1;
   UInt_t          trig_L1_esum_RoIWord2;
   Float_t         trig_EF_met_MEx;
   Float_t         trig_EF_met_MEy;
   Float_t         trig_EF_met_MEz;
   Float_t         trig_EF_met_sumEt;
   Float_t         trig_EF_met_sumE;
   Int_t           trig_EF_met_flag;
   vector<string>  *trig_EF_met_nameOfComponent;
   vector<float>   *trig_EF_met_MExComponent;
   vector<float>   *trig_EF_met_MEyComponent;
   vector<float>   *trig_EF_met_MEzComponent;
   vector<float>   *trig_EF_met_sumEtComponent;
   vector<float>   *trig_EF_met_sumEComponent;
   vector<float>   *trig_EF_met_componentCalib0;
   vector<float>   *trig_EF_met_componentCalib1;
   vector<short>   *trig_EF_met_sumOfSigns;
   vector<unsigned short> *trig_EF_met_usedChannels;
   vector<short>   *trig_EF_met_status;
   Int_t           trig_EF_ph_n;
   vector<float>   *trig_EF_ph_E;
   vector<float>   *trig_EF_ph_Et;
   vector<float>   *trig_EF_ph_pt;
   vector<float>   *trig_EF_ph_m;
   vector<float>   *trig_EF_ph_eta;
   vector<float>   *trig_EF_ph_phi;
   vector<float>   *trig_EF_ph_px;
   vector<float>   *trig_EF_ph_py;
   vector<float>   *trig_EF_ph_pz;
   vector<int>     *trig_EF_ph_author;
   vector<int>     *trig_EF_ph_isRecovered;
   vector<unsigned int> *trig_EF_ph_isEM;
   vector<unsigned int> *trig_EF_ph_isEMLoose;
   vector<unsigned int> *trig_EF_ph_isEMMedium;
   vector<unsigned int> *trig_EF_ph_isEMTight;
   vector<int>     *trig_EF_ph_convFlag;
   vector<int>     *trig_EF_ph_isConv;
   vector<int>     *trig_EF_ph_nConv;
   vector<int>     *trig_EF_ph_nSingleTrackConv;
   vector<int>     *trig_EF_ph_nDoubleTrackConv;
   vector<int>     *trig_EF_ph_loose;
   vector<int>     *trig_EF_ph_looseIso;
   vector<int>     *trig_EF_ph_tight;
   vector<int>     *trig_EF_ph_tightIso;
   vector<int>     *trig_EF_ph_looseAR;
   vector<int>     *trig_EF_ph_looseARIso;
   vector<int>     *trig_EF_ph_tightAR;
   vector<int>     *trig_EF_ph_tightARIso;
   vector<float>   *trig_EF_ph_Ethad;
   vector<float>   *trig_EF_ph_Ethad1;
   vector<float>   *trig_EF_ph_E033;
   vector<float>   *trig_EF_ph_f1;
   vector<float>   *trig_EF_ph_f1core;
   vector<float>   *trig_EF_ph_Emins1;
   vector<float>   *trig_EF_ph_fside;
   vector<float>   *trig_EF_ph_Emax2;
   vector<float>   *trig_EF_ph_ws3;
   vector<float>   *trig_EF_ph_wstot;
   vector<float>   *trig_EF_ph_E132;
   vector<float>   *trig_EF_ph_E1152;
   vector<float>   *trig_EF_ph_emaxs1;
   vector<float>   *trig_EF_ph_deltaEs;
   vector<float>   *trig_EF_ph_E233;
   vector<float>   *trig_EF_ph_E237;
   vector<float>   *trig_EF_ph_E277;
   vector<float>   *trig_EF_ph_weta2;
   vector<float>   *trig_EF_ph_f3;
   vector<float>   *trig_EF_ph_f3core;
   vector<float>   *trig_EF_ph_rphiallcalo;
   vector<float>   *trig_EF_ph_Etcone45;
   vector<float>   *trig_EF_ph_Etcone15;
   vector<float>   *trig_EF_ph_Etcone20;
   vector<float>   *trig_EF_ph_Etcone25;
   vector<float>   *trig_EF_ph_Etcone30;
   vector<float>   *trig_EF_ph_Etcone35;
   vector<float>   *trig_EF_ph_Etcone40;
   vector<float>   *trig_EF_ph_ptcone20;
   vector<float>   *trig_EF_ph_ptcone30;
   vector<float>   *trig_EF_ph_ptcone40;
   vector<float>   *trig_EF_ph_convanglematch;
   vector<float>   *trig_EF_ph_convtrackmatch;
   vector<int>     *trig_EF_ph_hasconv;
   vector<float>   *trig_EF_ph_convvtxx;
   vector<float>   *trig_EF_ph_convvtxy;
   vector<float>   *trig_EF_ph_convvtxz;
   vector<float>   *trig_EF_ph_Rconv;
   vector<float>   *trig_EF_ph_zconv;
   vector<float>   *trig_EF_ph_convvtxchi2;
   vector<float>   *trig_EF_ph_pt1conv;
   vector<int>     *trig_EF_ph_convtrk1nBLHits;
   vector<int>     *trig_EF_ph_convtrk1nPixHits;
   vector<int>     *trig_EF_ph_convtrk1nSCTHits;
   vector<int>     *trig_EF_ph_convtrk1nTRTHits;
   vector<float>   *trig_EF_ph_pt2conv;
   vector<int>     *trig_EF_ph_convtrk2nBLHits;
   vector<int>     *trig_EF_ph_convtrk2nPixHits;
   vector<int>     *trig_EF_ph_convtrk2nSCTHits;
   vector<int>     *trig_EF_ph_convtrk2nTRTHits;
   vector<float>   *trig_EF_ph_ptconv;
   vector<float>   *trig_EF_ph_pzconv;
   vector<float>   *trig_EF_ph_reta;
   vector<float>   *trig_EF_ph_rphi;
   vector<float>   *trig_EF_ph_cl_E;
   vector<float>   *trig_EF_ph_cl_pt;
   vector<float>   *trig_EF_ph_cl_eta;
   vector<float>   *trig_EF_ph_cl_phi;
   vector<float>   *trig_EF_ph_cl_etas2;
   Int_t           trig_EF_el_n;
   vector<float>   *trig_EF_el_E;
   vector<float>   *trig_EF_el_Et;
   vector<float>   *trig_EF_el_pt;
   vector<float>   *trig_EF_el_m;
   vector<float>   *trig_EF_el_eta;
   vector<float>   *trig_EF_el_phi;
   vector<float>   *trig_EF_el_px;
   vector<float>   *trig_EF_el_py;
   vector<float>   *trig_EF_el_pz;
   vector<float>   *trig_EF_el_charge;
   vector<int>     *trig_EF_el_author;
   vector<unsigned int> *trig_EF_el_isEM;
   vector<unsigned int> *trig_EF_el_isEMLoose;
   vector<unsigned int> *trig_EF_el_isEMMedium;
   vector<unsigned int> *trig_EF_el_isEMTight;
   vector<int>     *trig_EF_el_loose;
   vector<int>     *trig_EF_el_looseIso;
   vector<int>     *trig_EF_el_medium;
   vector<int>     *trig_EF_el_mediumIso;
   vector<int>     *trig_EF_el_mediumWithoutTrack;
   vector<int>     *trig_EF_el_mediumIsoWithoutTrack;
   vector<int>     *trig_EF_el_tight;
   vector<int>     *trig_EF_el_tightIso;
   vector<int>     *trig_EF_el_tightWithoutTrack;
   vector<int>     *trig_EF_el_tightIsoWithoutTrack;
   vector<int>     *trig_EF_el_loosePP;
   vector<int>     *trig_EF_el_loosePPIso;
   vector<int>     *trig_EF_el_mediumPP;
   vector<int>     *trig_EF_el_mediumPPIso;
   vector<int>     *trig_EF_el_tightPP;
   vector<int>     *trig_EF_el_tightPPIso;
   vector<float>   *trig_EF_el_Ethad;
   vector<float>   *trig_EF_el_Ethad1;
   vector<float>   *trig_EF_el_f1;
   vector<float>   *trig_EF_el_f1core;
   vector<float>   *trig_EF_el_Emins1;
   vector<float>   *trig_EF_el_fside;
   vector<float>   *trig_EF_el_Emax2;
   vector<float>   *trig_EF_el_ws3;
   vector<float>   *trig_EF_el_wstot;
   vector<float>   *trig_EF_el_emaxs1;
   vector<float>   *trig_EF_el_deltaEs;
   vector<float>   *trig_EF_el_E233;
   vector<float>   *trig_EF_el_E237;
   vector<float>   *trig_EF_el_E277;
   vector<float>   *trig_EF_el_weta2;
   vector<float>   *trig_EF_el_f3;
   vector<float>   *trig_EF_el_f3core;
   vector<float>   *trig_EF_el_rphiallcalo;
   vector<float>   *trig_EF_el_Etcone45;
   vector<float>   *trig_EF_el_Etcone15;
   vector<float>   *trig_EF_el_Etcone20;
   vector<float>   *trig_EF_el_Etcone25;
   vector<float>   *trig_EF_el_Etcone30;
   vector<float>   *trig_EF_el_Etcone35;
   vector<float>   *trig_EF_el_Etcone40;
   vector<float>   *trig_EF_el_ptcone20;
   vector<float>   *trig_EF_el_ptcone30;
   vector<float>   *trig_EF_el_ptcone40;
   vector<float>   *trig_EF_el_pos7;
   vector<float>   *trig_EF_el_etacorrmag;
   vector<float>   *trig_EF_el_deltaeta1;
   vector<float>   *trig_EF_el_deltaeta2;
   vector<float>   *trig_EF_el_deltaphi2;
   vector<float>   *trig_EF_el_expectHitInBLayer;
   vector<float>   *trig_EF_el_trackd0_physics;
   vector<float>   *trig_EF_el_reta;
   vector<float>   *trig_EF_el_rphi;
   vector<float>   *trig_EF_el_EtringnoisedR03sig2;
   vector<float>   *trig_EF_el_EtringnoisedR03sig3;
   vector<float>   *trig_EF_el_EtringnoisedR03sig4;
   vector<double>  *trig_EF_el_isolationlikelihoodjets;
   vector<double>  *trig_EF_el_isolationlikelihoodhqelectrons;
   vector<double>  *trig_EF_el_electronweight;
   vector<double>  *trig_EF_el_electronbgweight;
   vector<double>  *trig_EF_el_softeweight;
   vector<double>  *trig_EF_el_softebgweight;
   vector<double>  *trig_EF_el_neuralnet;
   vector<double>  *trig_EF_el_Hmatrix;
   vector<double>  *trig_EF_el_Hmatrix5;
   vector<double>  *trig_EF_el_adaboost;
   vector<double>  *trig_EF_el_softeneuralnet;
   vector<float>   *trig_EF_el_zvertex;
   vector<float>   *trig_EF_el_errz;
   vector<float>   *trig_EF_el_etap;
   vector<float>   *trig_EF_el_depth;
   vector<float>   *trig_EF_el_Es0;
   vector<float>   *trig_EF_el_etas0;
   vector<float>   *trig_EF_el_phis0;
   vector<float>   *trig_EF_el_Es1;
   vector<float>   *trig_EF_el_etas1;
   vector<float>   *trig_EF_el_phis1;
   vector<float>   *trig_EF_el_Es2;
   vector<float>   *trig_EF_el_etas2;
   vector<float>   *trig_EF_el_phis2;
   vector<float>   *trig_EF_el_Es3;
   vector<float>   *trig_EF_el_etas3;
   vector<float>   *trig_EF_el_phis3;
   vector<float>   *trig_EF_el_cl_E;
   vector<float>   *trig_EF_el_cl_pt;
   vector<float>   *trig_EF_el_cl_eta;
   vector<float>   *trig_EF_el_cl_phi;
   vector<float>   *trig_EF_el_trackd0;
   vector<float>   *trig_EF_el_trackz0;
   vector<float>   *trig_EF_el_trackphi;
   vector<float>   *trig_EF_el_tracktheta;
   vector<float>   *trig_EF_el_trackqoverp;
   vector<float>   *trig_EF_el_trackpt;
   vector<float>   *trig_EF_el_tracketa;
   vector<float>   *trig_EF_el_trackfitchi2;
   vector<int>     *trig_EF_el_trackfitndof;
   vector<int>     *trig_EF_el_nBLHits;
   vector<int>     *trig_EF_el_nPixHits;
   vector<int>     *trig_EF_el_nSCTHits;
   vector<int>     *trig_EF_el_nTRTHits;
   vector<int>     *trig_EF_el_nTRTHighTHits;
   vector<int>     *trig_EF_el_nTRTXenonHits;
   vector<int>     *trig_EF_el_nPixHoles;
   vector<int>     *trig_EF_el_nSCTHoles;
   vector<int>     *trig_EF_el_nTRTHoles;
   vector<int>     *trig_EF_el_nPixelDeadSensors;
   vector<int>     *trig_EF_el_nSCTDeadSensors;
   vector<int>     *trig_EF_el_nBLSharedHits;
   vector<int>     *trig_EF_el_nPixSharedHits;
   vector<int>     *trig_EF_el_nSCTSharedHits;
   vector<int>     *trig_EF_el_nBLayerSplitHits;
   vector<int>     *trig_EF_el_nPixSplitHits;
   vector<int>     *trig_EF_el_nBLayerOutliers;
   vector<int>     *trig_EF_el_nPixelOutliers;
   vector<int>     *trig_EF_el_nSCTOutliers;
   vector<int>     *trig_EF_el_nTRTOutliers;
   vector<int>     *trig_EF_el_nTRTHighTOutliers;
   vector<int>     *trig_EF_el_expectBLayerHit;
   vector<int>     *trig_EF_el_nSiHits;
   vector<float>   *trig_EF_el_TRTHighTHitsRatio;
   vector<float>   *trig_EF_el_TRTHighTOutliersRatio;
   vector<float>   *trig_EF_el_pixeldEdx;
   vector<int>     *trig_EF_el_nGoodHitsPixeldEdx;
   vector<float>   *trig_EF_el_massPixeldEdx;
   vector<vector<float> > *trig_EF_el_likelihoodsPixeldEdx;
   vector<float>   *trig_EF_el_eProbabilityComb;
   vector<float>   *trig_EF_el_eProbabilityHT;
   vector<float>   *trig_EF_el_eProbabilityToT;
   vector<float>   *trig_EF_el_eProbabilityBrem;
   vector<float>   *trig_EF_el_vertweight;
   vector<float>   *trig_EF_el_vertx;
   vector<float>   *trig_EF_el_verty;
   vector<float>   *trig_EF_el_vertz;
   vector<int>     *trig_EF_el_hastrack;
   Int_t           trig_EF_trigmuonef_n;
   vector<int>     *trig_EF_trigmuonef_effs15;
   vector<int>     *trig_EF_trigmuonef_effs18;
   vector<int>     *trig_EF_trigmuonef_effs24;
   vector<int>     *trig_EF_trigmuonef_RoINum;
   vector<int>     *trig_EF_trigmuonef_NSegments;
   vector<int>     *trig_EF_trigmuonef_NMdtHits;
   vector<int>     *trig_EF_trigmuonef_NRpcHits;
   vector<int>     *trig_EF_trigmuonef_NTgcHits;
   vector<int>     *trig_EF_trigmuonef_NCscHits;
   vector<float>   *trig_EF_trigmuonef_EtaPreviousLevel;
   vector<float>   *trig_EF_trigmuonef_PhiPreviousLevel;
   vector<int>     *trig_EF_trigmuonef_track_n;
   vector<vector<int> > *trig_EF_trigmuonef_track_MuonType;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_pt;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_eta;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_phi;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_charge;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_d0;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_z0;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_chi2;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_chi2prob;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_posX;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_posY;
   vector<vector<float> > *trig_EF_trigmuonef_track_MS_posZ;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NRpcHitsPhi;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NTgcHitsPhi;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NCscHitsPhi;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NRpcHitsEta;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NTgcHitsEta;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NCscHitsEta;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_NMdtHits;
   vector<vector<int> > *trig_EF_trigmuonef_track_MS_hasMS;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_pt;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_eta;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_phi;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_charge;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_d0;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_z0;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_chi2;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_chi2prob;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_posX;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_posY;
   vector<vector<float> > *trig_EF_trigmuonef_track_SA_posZ;
   vector<vector<int> > *trig_EF_trigmuonef_track_SA_hasSA;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_pt;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_eta;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_phi;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_charge;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_d0;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_z0;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_chi2;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_chi2prob;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_posX;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_posY;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_posZ;
   vector<vector<float> > *trig_EF_trigmuonef_track_CB_matchChi2;
   vector<vector<int> > *trig_EF_trigmuonef_track_CB_NIdSctHits;
   vector<vector<int> > *trig_EF_trigmuonef_track_CB_NIdPixelHits;
   vector<vector<int> > *trig_EF_trigmuonef_track_CB_NTrtHits;
   vector<vector<int> > *trig_EF_trigmuonef_track_CB_hasCB;
   Int_t           bcmRDO_n;
   vector<vector<int> > *bcmRDO_channel;
   vector<int>     *bcmRDO_nhits;
   vector<vector<int> > *bcmRDO_pulse1pos;
   vector<vector<int> > *bcmRDO_pulse1width;
   vector<vector<int> > *bcmRDO_pulse2pos;
   vector<vector<int> > *bcmRDO_pulse2width;
   vector<vector<int> > *bcmRDO_lvl1a;
   vector<vector<int> > *bcmRDO_bcid;
   vector<vector<int> > *bcmRDO_lvl1id;
   UInt_t          ctpRDO_nBC;
   UInt_t          ctpRDO_lvl1aBC;
   UInt_t          ctpRDO_time_s;
   UInt_t          ctpRDO_time_ns;
   vector<unsigned int> *ctpRDO_pit;
   vector<unsigned int> *ctpRDO_tbp;
   vector<unsigned int> *ctpRDO_tap;
   vector<unsigned int> *ctpRDO_tav;
   UInt_t          ctp_decisionTypeWord;
   vector<string>  *ctp_decisionItems;
   vector<unsigned int> *ctp_decisionWords;
   UInt_t          ctp_nDecisionItems;
   UInt_t          mbtsLvl2_nElements;
   vector<float>   *mbtsLvl2_energies;
   UInt_t          mbtsLvl2_ntimes;
   vector<float>   *mbtsLvl2_times;
   UInt_t          lvl2_sp_nElements;
   UInt_t          lvl2_sp_hPixelClusTotBins;
   Float_t         lvl2_sp_hPixelClusTotMin;
   Float_t         lvl2_sp_hPixelClusTotMax;
   UInt_t          lvl2_sp_hPixelClusSizeBins;
   Float_t         lvl2_sp_hPixelClusSizeMin;
   Float_t         lvl2_sp_hPixelClusSizeMax;
   vector<float>   *lvl2_sp_pixelClusEndcapC_contents;
   vector<float>   *lvl2_sp_pixelClusBarrel_contents;
   vector<float>   *lvl2_sp_pixelClusEndcapA_contents;
   vector<unsigned int> *lvl2_sp_droppedPixelModuleIds;
   UInt_t          lvl2_sp_sctSpEndcapC;
   UInt_t          lvl2_sp_sctSpBarrel;
   UInt_t          lvl2_sp_sctSpEndcapA;
   vector<unsigned int> *lvl2_sp_droppedSctModuleIds;
   UInt_t          lvl2_mbTrt_nElements;
   UInt_t          lvl2_mbTrt_hTotBins;
   Float_t         lvl2_mbTrt_hTotMin;
   Float_t         lvl2_mbTrt_hTotMax;
   vector<float>   *lvl2_mbTrt_endcapC_contents;
   vector<float>   *lvl2_mbTrt_barrel_contents;
   vector<float>   *lvl2_mbTrt_endcapA_contents;
   UInt_t          ef_trk_nElements;
   UInt_t          ef_trk_hZ0Bins;
   Float_t         ef_trk_hZ0Min;
   Float_t         ef_trk_hZ0Max;
   UInt_t          ef_trk_hPtBins;
   Float_t         ef_trk_hPtMin;
   Float_t         ef_trk_hPtMax;
   UInt_t          ef_trk_hEtaBins;
   Float_t         ef_trk_hEtaMin;
   Float_t         ef_trk_hEtaMax;
   UInt_t          ef_trk_hPhiBins;
   Float_t         ef_trk_hPhiMin;
   Float_t         ef_trk_hPhiMax;
   vector<float>   *ef_trk_z0_pt_contents;
   vector<float>   *ef_trk_eta_phi_contents;
   Int_t           trig_L2_jet_n;
   vector<float>   *trig_L2_jet_E;
   vector<float>   *trig_L2_jet_eta;
   vector<float>   *trig_L2_jet_phi;
   vector<unsigned int> *trig_L2_jet_RoIWord;
   vector<string>  *trig_L2_jet_InputType;
   vector<string>  *trig_L2_jet_OutputType;
   vector<int>     *trig_L2_jet_counter;
   vector<int>     *trig_L2_jet_c4cchad;
   vector<int>     *trig_L2_jet_c4ccem;
   vector<int>     *trig_L2_jet_c4uchad;
   vector<double>  *trig_L2_jet_ehad0;
   vector<double>  *trig_L2_jet_eem0;
   vector<int>     *trig_L2_jet_nLeadingCells;
   vector<float>   *trig_L2_jet_hecf;
   vector<float>   *trig_L2_jet_jetQuality;
   vector<float>   *trig_L2_jet_emf;
   vector<float>   *trig_L2_jet_jetTimeCells;
   Int_t           vx_n;
   vector<float>   *vx_x;
   vector<float>   *vx_y;
   vector<float>   *vx_z;
   vector<float>   *vx_err_x;
   vector<float>   *vx_err_y;
   vector<float>   *vx_err_z;
   vector<float>   *vx_cov_xy;
   vector<float>   *vx_cov_xz;
   vector<float>   *vx_cov_yz;
   vector<int>     *vx_type;
   vector<float>   *vx_chi2;
   vector<int>     *vx_ndof;
   vector<float>   *vx_px;
   vector<float>   *vx_py;
   vector<float>   *vx_pz;
   vector<float>   *vx_E;
   vector<float>   *vx_m;
   vector<int>     *vx_nTracks;
   vector<float>   *vx_sumPt;
   vector<vector<float> > *vx_trk_weight;
   vector<int>     *vx_trk_n;
   vector<vector<int> > *vx_trk_index;
   Int_t           el_n;
   vector<float>   *el_E;
   vector<float>   *el_Et;
   vector<float>   *el_pt;
   vector<float>   *el_m;
   vector<float>   *el_eta;
   vector<float>   *el_phi;
   vector<float>   *el_px;
   vector<float>   *el_py;
   vector<float>   *el_pz;
   vector<float>   *el_charge;
   vector<int>     *el_author;
   vector<unsigned int> *el_isEM;
   vector<unsigned int> *el_isEMLoose;
   vector<unsigned int> *el_isEMMedium;
   vector<unsigned int> *el_isEMTight;
   vector<unsigned int> *el_OQ;
   vector<int>     *el_convFlag;
   vector<int>     *el_isConv;
   vector<int>     *el_nConv;
   vector<int>     *el_nSingleTrackConv;
   vector<int>     *el_nDoubleTrackConv;
   vector<int>     *el_type;
   vector<int>     *el_origin;
   vector<int>     *el_typebkg;
   vector<int>     *el_originbkg;
   vector<int>     *el_mediumWithoutTrack;
   vector<int>     *el_mediumIsoWithoutTrack;
   vector<int>     *el_tightWithoutTrack;
   vector<int>     *el_tightIsoWithoutTrack;
   vector<int>     *el_loose;
   vector<int>     *el_looseIso;
   vector<int>     *el_medium;
   vector<int>     *el_mediumIso;
   vector<int>     *el_tight;
   vector<int>     *el_tightIso;
   vector<int>     *el_loosePP;
   vector<int>     *el_loosePPIso;
   vector<int>     *el_mediumPP;
   vector<int>     *el_mediumPPIso;
   vector<int>     *el_tightPP;
   vector<int>     *el_tightPPIso;
   vector<int>     *el_goodOQ;
   vector<float>   *el_Ethad;
   vector<float>   *el_Ethad1;
   vector<float>   *el_f1;
   vector<float>   *el_f1core;
   vector<float>   *el_Emins1;
   vector<float>   *el_fside;
   vector<float>   *el_Emax2;
   vector<float>   *el_ws3;
   vector<float>   *el_wstot;
   vector<float>   *el_emaxs1;
   vector<float>   *el_deltaEs;
   vector<float>   *el_E233;
   vector<float>   *el_E237;
   vector<float>   *el_E277;
   vector<float>   *el_weta2;
   vector<float>   *el_f3;
   vector<float>   *el_f3core;
   vector<float>   *el_rphiallcalo;
   vector<float>   *el_Etcone45;
   vector<float>   *el_Etcone15;
   vector<float>   *el_Etcone20;
   vector<float>   *el_Etcone25;
   vector<float>   *el_Etcone30;
   vector<float>   *el_Etcone35;
   vector<float>   *el_Etcone40;
   vector<float>   *el_ptcone20;
   vector<float>   *el_ptcone30;
   vector<float>   *el_ptcone40;
   vector<float>   *el_nucone20;
   vector<float>   *el_nucone30;
   vector<float>   *el_nucone40;
   vector<float>   *el_Etcone15_pt_corrected;
   vector<float>   *el_Etcone20_pt_corrected;
   vector<float>   *el_Etcone25_pt_corrected;
   vector<float>   *el_Etcone30_pt_corrected;
   vector<float>   *el_Etcone35_pt_corrected;
   vector<float>   *el_Etcone40_pt_corrected;
   vector<float>   *el_convanglematch;
   vector<float>   *el_convtrackmatch;
   vector<float>   *el_pos7;
   vector<float>   *el_etacorrmag;
   vector<float>   *el_deltaeta1;
   vector<float>   *el_deltaeta2;
   vector<float>   *el_deltaphi2;
   vector<float>   *el_deltaphiRescaled;
   vector<float>   *el_deltaPhiFromLast;
   vector<float>   *el_deltaPhiRot;
   vector<float>   *el_expectHitInBLayer;
   vector<float>   *el_trackd0_physics;
   vector<float>   *el_etaSampling1;
   vector<float>   *el_reta;
   vector<float>   *el_rphi;
   vector<float>   *el_topoEtcone20;
   vector<float>   *el_topoEtcone30;
   vector<float>   *el_topoEtcone40;
   vector<float>   *el_materialTraversed;
   vector<float>   *el_EtringnoisedR03sig2;
   vector<float>   *el_EtringnoisedR03sig3;
   vector<float>   *el_EtringnoisedR03sig4;
   vector<float>   *el_ptcone20_zpv05;
   vector<float>   *el_ptcone30_zpv05;
   vector<float>   *el_ptcone40_zpv05;
   vector<float>   *el_nucone20_zpv05;
   vector<float>   *el_nucone30_zpv05;
   vector<float>   *el_nucone40_zpv05;
   vector<double>  *el_isolationlikelihoodjets;
   vector<double>  *el_isolationlikelihoodhqelectrons;
   vector<double>  *el_electronweight;
   vector<double>  *el_electronbgweight;
   vector<double>  *el_softeweight;
   vector<double>  *el_softebgweight;
   vector<double>  *el_neuralnet;
   vector<double>  *el_Hmatrix;
   vector<double>  *el_Hmatrix5;
   vector<double>  *el_adaboost;
   vector<double>  *el_softeneuralnet;
   vector<double>  *el_ringernn;
   vector<float>   *el_zvertex;
   vector<float>   *el_errz;
   vector<float>   *el_etap;
   vector<float>   *el_depth;
   vector<int>     *el_refittedTrack_n;
   vector<vector<int> > *el_refittedTrack_author;
   vector<vector<float> > *el_refittedTrack_chi2;
   vector<vector<int> > *el_refittedTrack_hasBrem;
   vector<vector<float> > *el_refittedTrack_bremRadius;
   vector<vector<float> > *el_refittedTrack_bremZ;
   vector<vector<float> > *el_refittedTrack_bremRadiusErr;
   vector<vector<float> > *el_refittedTrack_bremZErr;
   vector<vector<int> > *el_refittedTrack_bremFitStatus;
   vector<vector<float> > *el_refittedTrack_qoverp;
   vector<vector<float> > *el_refittedTrack_d0;
   vector<vector<float> > *el_refittedTrack_z0;
   vector<vector<float> > *el_refittedTrack_theta;
   vector<vector<float> > *el_refittedTrack_phi;
   vector<vector<float> > *el_refittedTrack_LMqoverp;
   vector<vector<float> > *el_refittedTrack_covd0;
   vector<vector<float> > *el_refittedTrack_covz0;
   vector<vector<float> > *el_refittedTrack_covphi;
   vector<vector<float> > *el_refittedTrack_covtheta;
   vector<vector<float> > *el_refittedTrack_covqoverp;
   vector<vector<float> > *el_refittedTrack_covd0z0;
   vector<vector<float> > *el_refittedTrack_covz0phi;
   vector<vector<float> > *el_refittedTrack_covz0theta;
   vector<vector<float> > *el_refittedTrack_covz0qoverp;
   vector<vector<float> > *el_refittedTrack_covd0phi;
   vector<vector<float> > *el_refittedTrack_covd0theta;
   vector<vector<float> > *el_refittedTrack_covd0qoverp;
   vector<vector<float> > *el_refittedTrack_covphitheta;
   vector<vector<float> > *el_refittedTrack_covphiqoverp;
   vector<vector<float> > *el_refittedTrack_covthetaqoverp;
   vector<vector<float> > *el_refittedTrack_d0_wrtBL;
   vector<vector<float> > *el_refittedTrack_z0_wrtBL;
   vector<vector<float> > *el_refittedTrack_phi_wrtBL;
   vector<vector<float> > *el_refittedTrack_theta_wrtBL;
   vector<vector<float> > *el_refittedTrack_qoverp_wrtBL;
   vector<vector<float> > *el_refittedTrack_d0_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_z0_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_phi_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_theta_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_qoverp_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_d0_z0_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_d0_phi_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_d0_theta_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_d0_qoverp_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_z0_phi_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_z0_theta_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_z0_qoverp_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_phi_theta_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_phi_qoverp_err_wrtBL;
   vector<vector<float> > *el_refittedTrack_theta_qoverp_err_wrtBL;
   vector<float>   *el_Es0;
   vector<float>   *el_etas0;
   vector<float>   *el_phis0;
   vector<float>   *el_Es1;
   vector<float>   *el_etas1;
   vector<float>   *el_phis1;
   vector<float>   *el_Es2;
   vector<float>   *el_etas2;
   vector<float>   *el_phis2;
   vector<float>   *el_Es3;
   vector<float>   *el_etas3;
   vector<float>   *el_phis3;
   vector<float>   *el_E_PreSamplerB;
   vector<float>   *el_E_EMB1;
   vector<float>   *el_E_EMB2;
   vector<float>   *el_E_EMB3;
   vector<float>   *el_E_PreSamplerE;
   vector<float>   *el_E_EME1;
   vector<float>   *el_E_EME2;
   vector<float>   *el_E_EME3;
   vector<float>   *el_E_HEC0;
   vector<float>   *el_E_HEC1;
   vector<float>   *el_E_HEC2;
   vector<float>   *el_E_HEC3;
   vector<float>   *el_E_TileBar0;
   vector<float>   *el_E_TileBar1;
   vector<float>   *el_E_TileBar2;
   vector<float>   *el_E_TileGap1;
   vector<float>   *el_E_TileGap2;
   vector<float>   *el_E_TileGap3;
   vector<float>   *el_E_TileExt0;
   vector<float>   *el_E_TileExt1;
   vector<float>   *el_E_TileExt2;
   vector<float>   *el_E_FCAL0;
   vector<float>   *el_E_FCAL1;
   vector<float>   *el_E_FCAL2;
   vector<float>   *el_cl_E;
   vector<float>   *el_cl_pt;
   vector<float>   *el_cl_eta;
   vector<float>   *el_cl_phi;
   vector<double>  *el_cl_etaCalo;
   vector<double>  *el_cl_phiCalo;
   vector<float>   *el_firstEdens;
   vector<float>   *el_cellmaxfrac;
   vector<float>   *el_longitudinal;
   vector<float>   *el_secondlambda;
   vector<float>   *el_lateral;
   vector<float>   *el_secondR;
   vector<float>   *el_centerlambda;
   vector<float>   *el_rawcl_Es0;
   vector<float>   *el_rawcl_etas0;
   vector<float>   *el_rawcl_phis0;
   vector<float>   *el_rawcl_Es1;
   vector<float>   *el_rawcl_etas1;
   vector<float>   *el_rawcl_phis1;
   vector<float>   *el_rawcl_Es2;
   vector<float>   *el_rawcl_etas2;
   vector<float>   *el_rawcl_phis2;
   vector<float>   *el_rawcl_Es3;
   vector<float>   *el_rawcl_etas3;
   vector<float>   *el_rawcl_phis3;
   vector<float>   *el_rawcl_E;
   vector<float>   *el_rawcl_pt;
   vector<float>   *el_rawcl_eta;
   vector<float>   *el_rawcl_phi;
   vector<float>   *el_trackd0;
   vector<float>   *el_trackz0;
   vector<float>   *el_trackphi;
   vector<float>   *el_tracktheta;
   vector<float>   *el_trackqoverp;
   vector<float>   *el_trackpt;
   vector<float>   *el_tracketa;
   vector<float>   *el_trackcov_d0;
   vector<float>   *el_trackcov_z0;
   vector<float>   *el_trackcov_phi;
   vector<float>   *el_trackcov_theta;
   vector<float>   *el_trackcov_qoverp;
   vector<float>   *el_trackcov_d0_z0;
   vector<float>   *el_trackcov_d0_phi;
   vector<float>   *el_trackcov_d0_theta;
   vector<float>   *el_trackcov_d0_qoverp;
   vector<float>   *el_trackcov_z0_phi;
   vector<float>   *el_trackcov_z0_theta;
   vector<float>   *el_trackcov_z0_qoverp;
   vector<float>   *el_trackcov_phi_theta;
   vector<float>   *el_trackcov_phi_qoverp;
   vector<float>   *el_trackcov_theta_qoverp;
   vector<float>   *el_trackfitchi2;
   vector<int>     *el_trackfitndof;
   vector<int>     *el_nBLHits;
   vector<int>     *el_nPixHits;
   vector<int>     *el_nSCTHits;
   vector<int>     *el_nTRTHits;
   vector<int>     *el_nTRTHighTHits;
   vector<int>     *el_nTRTXenonHits;
   vector<int>     *el_nPixHoles;
   vector<int>     *el_nSCTHoles;
   vector<int>     *el_nTRTHoles;
   vector<int>     *el_nPixelDeadSensors;
   vector<int>     *el_nSCTDeadSensors;
   vector<int>     *el_nBLSharedHits;
   vector<int>     *el_nPixSharedHits;
   vector<int>     *el_nSCTSharedHits;
   vector<int>     *el_nBLayerSplitHits;
   vector<int>     *el_nPixSplitHits;
   vector<int>     *el_nBLayerOutliers;
   vector<int>     *el_nPixelOutliers;
   vector<int>     *el_nSCTOutliers;
   vector<int>     *el_nTRTOutliers;
   vector<int>     *el_nTRTHighTOutliers;
   vector<int>     *el_nContribPixelLayers;
   vector<int>     *el_nGangedPixels;
   vector<int>     *el_nGangedFlaggedFakes;
   vector<int>     *el_nPixelSpoiltHits;
   vector<int>     *el_nSCTDoubleHoles;
   vector<int>     *el_nSCTSpoiltHits;
   vector<int>     *el_expectBLayerHit;
   vector<int>     *el_nSiHits;
   vector<float>   *el_TRTHighTHitsRatio;
   vector<float>   *el_TRTHighTOutliersRatio;
   vector<float>   *el_pixeldEdx;
   vector<int>     *el_nGoodHitsPixeldEdx;
   vector<float>   *el_massPixeldEdx;
   vector<vector<float> > *el_likelihoodsPixeldEdx;
   vector<float>   *el_eProbabilityComb;
   vector<float>   *el_eProbabilityHT;
   vector<float>   *el_eProbabilityToT;
   vector<float>   *el_eProbabilityBrem;
   vector<float>   *el_vertweight;
   vector<float>   *el_vertx;
   vector<float>   *el_verty;
   vector<float>   *el_vertz;
   vector<float>   *el_trackd0beam;
   vector<float>   *el_trackz0beam;
   vector<float>   *el_tracksigd0beam;
   vector<float>   *el_tracksigz0beam;
   vector<float>   *el_trackd0pv;
   vector<float>   *el_trackz0pv;
   vector<float>   *el_tracksigd0pv;
   vector<float>   *el_tracksigz0pv;
   vector<float>   *el_trackIPEstimate_d0_biasedpvunbiased;
   vector<float>   *el_trackIPEstimate_z0_biasedpvunbiased;
   vector<float>   *el_trackIPEstimate_sigd0_biasedpvunbiased;
   vector<float>   *el_trackIPEstimate_sigz0_biasedpvunbiased;
   vector<float>   *el_trackIPEstimate_d0_unbiasedpvunbiased;
   vector<float>   *el_trackIPEstimate_z0_unbiasedpvunbiased;
   vector<float>   *el_trackIPEstimate_sigd0_unbiasedpvunbiased;
   vector<float>   *el_trackIPEstimate_sigz0_unbiasedpvunbiased;
   vector<float>   *el_trackd0pvunbiased;
   vector<float>   *el_trackz0pvunbiased;
   vector<float>   *el_tracksigd0pvunbiased;
   vector<float>   *el_tracksigz0pvunbiased;
   vector<float>   *el_Unrefittedtrack_d0;
   vector<float>   *el_Unrefittedtrack_z0;
   vector<float>   *el_Unrefittedtrack_phi;
   vector<float>   *el_Unrefittedtrack_theta;
   vector<float>   *el_Unrefittedtrack_qoverp;
   vector<float>   *el_Unrefittedtrack_pt;
   vector<float>   *el_Unrefittedtrack_eta;
   vector<float>   *el_theta_LM;
   vector<float>   *el_qoverp_LM;
   vector<float>   *el_locX_LM;
   vector<float>   *el_locY_LM;
   vector<float>   *el_phi_LM;
   vector<float>   *el_theta_err_LM;
   vector<float>   *el_qoverp_err_LM;
   vector<float>   *el_locX_err_LM;
   vector<float>   *el_locY_err_LM;
   vector<float>   *el_phi_err_LM;
   vector<float>   *el_locX_locY_err_LM;
   vector<float>   *el_locX_phi_err_LM;
   vector<float>   *el_locX_theta_err_LM;
   vector<float>   *el_locX_qoverp_err_LM;
   vector<float>   *el_locY_phi_err_LM;
   vector<float>   *el_locY_theta_err_LM;
   vector<float>   *el_locY_qoverp_err_LM;
   vector<float>   *el_phi_theta_err_LM;
   vector<float>   *el_phi_qoverp_err_LM;
   vector<float>   *el_theta_qoverp_err_LM;
   vector<int>     *el_hastrack;
   vector<float>   *el_deltaEmax2;
   vector<float>   *el_calibHitsShowerDepth;
   vector<unsigned int> *el_isIso;
   vector<float>   *el_mvaptcone20;
   vector<float>   *el_mvaptcone30;
   vector<float>   *el_mvaptcone40;
   vector<float>   *el_CaloPointing_eta;
   vector<float>   *el_CaloPointing_sigma_eta;
   vector<float>   *el_CaloPointing_zvertex;
   vector<float>   *el_CaloPointing_sigma_zvertex;
   vector<float>   *el_HPV_eta;
   vector<float>   *el_HPV_sigma_eta;
   vector<float>   *el_HPV_zvertex;
   vector<float>   *el_HPV_sigma_zvertex;
   vector<float>   *el_truth_bremSi;
   vector<float>   *el_truth_bremLoc;
   vector<float>   *el_truth_sumbrem;
   vector<float>   *el_topoEtcone60;
   vector<float>   *el_ES0_real;
   vector<float>   *el_ES1_real;
   vector<float>   *el_ES2_real;
   vector<float>   *el_ES3_real;
   vector<float>   *el_EcellS0;
   vector<float>   *el_etacellS0;
   vector<float>   *el_Etcone40_ED_corrected;
   vector<float>   *el_Etcone40_corrected;
   vector<float>   *el_topoEtcone20_corrected;
   vector<float>   *el_topoEtcone30_corrected;
   vector<float>   *el_topoEtcone40_corrected;
   vector<float>   *el_ED_median;
   vector<float>   *el_ED_sigma;
   vector<float>   *el_ED_Njets;
   vector<float>   *el_EF_dr;
   vector<int>     *el_EF_index;
   vector<float>   *el_L2_dr;
   vector<float>   *el_L1_dr;
   vector<int>     *el_L1_index;
   Int_t           ph_n;
   vector<float>   *ph_E;
   vector<float>   *ph_Et;
   vector<float>   *ph_pt;
   vector<float>   *ph_m;
   vector<float>   *ph_eta;
   vector<float>   *ph_phi;
   vector<float>   *ph_px;
   vector<float>   *ph_py;
   vector<float>   *ph_pz;
   vector<int>     *ph_author;
   vector<int>     *ph_isRecovered;
   vector<unsigned int> *ph_isEM;
   vector<unsigned int> *ph_isEMLoose;
   vector<unsigned int> *ph_isEMMedium;
   vector<unsigned int> *ph_isEMTight;
   vector<unsigned int> *ph_OQ;
   vector<int>     *ph_convFlag;
   vector<int>     *ph_isConv;
   vector<int>     *ph_nConv;
   vector<int>     *ph_nSingleTrackConv;
   vector<int>     *ph_nDoubleTrackConv;
   vector<int>     *ph_type;
   vector<int>     *ph_origin;
   vector<float>   *ph_truth_deltaRRecPhoton;
   vector<float>   *ph_truth_E;
   vector<float>   *ph_truth_pt;
   vector<float>   *ph_truth_eta;
   vector<float>   *ph_truth_phi;
   vector<int>     *ph_truth_type;
   vector<int>     *ph_truth_status;
   vector<int>     *ph_truth_barcode;
   vector<int>     *ph_truth_mothertype;
   vector<int>     *ph_truth_motherbarcode;
   vector<int>     *ph_truth_matched;
   vector<int>     *ph_loose;
   vector<int>     *ph_looseIso;
   vector<int>     *ph_tight;
   vector<int>     *ph_tightIso;
   vector<int>     *ph_looseAR;
   vector<int>     *ph_looseARIso;
   vector<int>     *ph_tightAR;
   vector<int>     *ph_tightARIso;
   vector<int>     *ph_goodOQ;
   vector<float>   *ph_Ethad;
   vector<float>   *ph_Ethad1;
   vector<float>   *ph_E033;
   vector<float>   *ph_f1;
   vector<float>   *ph_f1core;
   vector<float>   *ph_Emins1;
   vector<float>   *ph_fside;
   vector<float>   *ph_Emax2;
   vector<float>   *ph_ws3;
   vector<float>   *ph_wstot;
   vector<float>   *ph_E132;
   vector<float>   *ph_E1152;
   vector<float>   *ph_emaxs1;
   vector<float>   *ph_deltaEs;
   vector<float>   *ph_E233;
   vector<float>   *ph_E237;
   vector<float>   *ph_E277;
   vector<float>   *ph_weta2;
   vector<float>   *ph_f3;
   vector<float>   *ph_f3core;
   vector<float>   *ph_rphiallcalo;
   vector<float>   *ph_Etcone45;
   vector<float>   *ph_Etcone15;
   vector<float>   *ph_Etcone20;
   vector<float>   *ph_Etcone25;
   vector<float>   *ph_Etcone30;
   vector<float>   *ph_Etcone35;
   vector<float>   *ph_Etcone40;
   vector<float>   *ph_ptcone20;
   vector<float>   *ph_ptcone30;
   vector<float>   *ph_ptcone40;
   vector<float>   *ph_nucone20;
   vector<float>   *ph_nucone30;
   vector<float>   *ph_nucone40;
   vector<float>   *ph_Etcone15_pt_corrected;
   vector<float>   *ph_Etcone20_pt_corrected;
   vector<float>   *ph_Etcone25_pt_corrected;
   vector<float>   *ph_Etcone30_pt_corrected;
   vector<float>   *ph_Etcone35_pt_corrected;
   vector<float>   *ph_Etcone40_pt_corrected;
   vector<float>   *ph_convanglematch;
   vector<float>   *ph_convtrackmatch;
   vector<int>     *ph_hasconv;
   vector<float>   *ph_convvtxx;
   vector<float>   *ph_convvtxy;
   vector<float>   *ph_convvtxz;
   vector<float>   *ph_Rconv;
   vector<float>   *ph_zconv;
   vector<float>   *ph_convvtxchi2;
   vector<float>   *ph_pt1conv;
   vector<int>     *ph_convtrk1nBLHits;
   vector<int>     *ph_convtrk1nPixHits;
   vector<int>     *ph_convtrk1nSCTHits;
   vector<int>     *ph_convtrk1nTRTHits;
   vector<float>   *ph_pt2conv;
   vector<int>     *ph_convtrk2nBLHits;
   vector<int>     *ph_convtrk2nPixHits;
   vector<int>     *ph_convtrk2nSCTHits;
   vector<int>     *ph_convtrk2nTRTHits;
   vector<float>   *ph_ptconv;
   vector<float>   *ph_pzconv;
   vector<float>   *ph_reta;
   vector<float>   *ph_rphi;
   vector<float>   *ph_topoEtcone20;
   vector<float>   *ph_topoEtcone30;
   vector<float>   *ph_topoEtcone40;
   vector<float>   *ph_materialTraversed;
   vector<float>   *ph_EtringnoisedR03sig2;
   vector<float>   *ph_EtringnoisedR03sig3;
   vector<float>   *ph_EtringnoisedR03sig4;
   vector<float>   *ph_ptcone20_zpv05;
   vector<float>   *ph_ptcone30_zpv05;
   vector<float>   *ph_ptcone40_zpv05;
   vector<float>   *ph_nucone20_zpv05;
   vector<float>   *ph_nucone30_zpv05;
   vector<float>   *ph_nucone40_zpv05;
   vector<double>  *ph_isolationlikelihoodjets;
   vector<double>  *ph_isolationlikelihoodhqelectrons;
   vector<double>  *ph_loglikelihood;
   vector<double>  *ph_photonweight;
   vector<double>  *ph_photonbgweight;
   vector<double>  *ph_neuralnet;
   vector<double>  *ph_Hmatrix;
   vector<double>  *ph_Hmatrix5;
   vector<double>  *ph_adaboost;
   vector<double>  *ph_ringernn;
   vector<float>   *ph_zvertex;
   vector<float>   *ph_errz;
   vector<float>   *ph_etap;
   vector<float>   *ph_depth;
   vector<float>   *ph_cl_E;
   vector<float>   *ph_cl_pt;
   vector<float>   *ph_cl_eta;
   vector<float>   *ph_cl_phi;
   vector<double>  *ph_cl_etaCalo;
   vector<double>  *ph_cl_phiCalo;
   vector<float>   *ph_Es0;
   vector<float>   *ph_etas0;
   vector<float>   *ph_phis0;
   vector<float>   *ph_Es1;
   vector<float>   *ph_etas1;
   vector<float>   *ph_phis1;
   vector<float>   *ph_Es2;
   vector<float>   *ph_etas2;
   vector<float>   *ph_phis2;
   vector<float>   *ph_Es3;
   vector<float>   *ph_etas3;
   vector<float>   *ph_phis3;
   vector<float>   *ph_rawcl_Es0;
   vector<float>   *ph_rawcl_etas0;
   vector<float>   *ph_rawcl_phis0;
   vector<float>   *ph_rawcl_Es1;
   vector<float>   *ph_rawcl_etas1;
   vector<float>   *ph_rawcl_phis1;
   vector<float>   *ph_rawcl_Es2;
   vector<float>   *ph_rawcl_etas2;
   vector<float>   *ph_rawcl_phis2;
   vector<float>   *ph_rawcl_Es3;
   vector<float>   *ph_rawcl_etas3;
   vector<float>   *ph_rawcl_phis3;
   vector<float>   *ph_rawcl_E;
   vector<float>   *ph_rawcl_pt;
   vector<float>   *ph_rawcl_eta;
   vector<float>   *ph_rawcl_phi;
   vector<float>   *ph_convMatchDeltaEta1;
   vector<float>   *ph_convMatchDeltaEta2;
   vector<float>   *ph_convMatchDeltaPhi1;
   vector<float>   *ph_convMatchDeltaPhi2;
   vector<vector<float> > *ph_rings_E;
   vector<int>     *ph_vx_n;
   vector<vector<float> > *ph_vx_x;
   vector<vector<float> > *ph_vx_y;
   vector<vector<float> > *ph_vx_z;
   vector<vector<float> > *ph_vx_px;
   vector<vector<float> > *ph_vx_py;
   vector<vector<float> > *ph_vx_pz;
   vector<vector<float> > *ph_vx_E;
   vector<vector<float> > *ph_vx_m;
   vector<vector<int> > *ph_vx_nTracks;
   vector<vector<float> > *ph_vx_sumPt;
   vector<vector<vector<float> > > *ph_vx_convTrk_weight;
   vector<vector<int> > *ph_vx_convTrk_n;
   vector<vector<vector<int> > > *ph_vx_convTrk_fitter;
   vector<vector<vector<int> > > *ph_vx_convTrk_patternReco1;
   vector<vector<vector<int> > > *ph_vx_convTrk_patternReco2;
   vector<vector<vector<int> > > *ph_vx_convTrk_trackProperties;
   vector<vector<vector<int> > > *ph_vx_convTrk_particleHypothesis;
   vector<vector<vector<int> > > *ph_vx_convTrk_nBLHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTHighTHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTXenonHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixelDeadSensors;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTDeadSensors;
   vector<vector<vector<int> > > *ph_vx_convTrk_nBLSharedHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixSharedHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTSharedHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nBLayerSplitHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixSplitHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nBLayerOutliers;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixelOutliers;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTOutliers;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTOutliers;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTHighTOutliers;
   vector<vector<vector<int> > > *ph_vx_convTrk_nContribPixelLayers;
   vector<vector<vector<int> > > *ph_vx_convTrk_nGangedPixels;
   vector<vector<vector<int> > > *ph_vx_convTrk_nGangedFlaggedFakes;
   vector<vector<vector<int> > > *ph_vx_convTrk_nPixelSpoiltHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTDoubleHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSCTSpoiltHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTDeadStraws;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTRTTubeHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nOutliersOnTrack;
   vector<vector<vector<int> > > *ph_vx_convTrk_standardDeviationOfChi2OS;
   vector<vector<vector<int> > > *ph_vx_convTrk_expectBLayerHit;
   vector<vector<vector<int> > > *ph_vx_convTrk_nMDTHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nCSCEtaHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nCSCPhiHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nRPCEtaHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nRPCPhiHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTGCEtaHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTGCPhiHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nMdtHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nCscEtaHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nCscPhiHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nRpcEtaHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nRpcPhiHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTgcEtaHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nTgcPhiHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_nHits;
   vector<vector<vector<int> > > *ph_vx_convTrk_nHoles;
   vector<vector<vector<int> > > *ph_vx_convTrk_hitPattern;
   vector<vector<vector<int> > > *ph_vx_convTrk_nSiHits;
   vector<vector<vector<float> > > *ph_vx_convTrk_TRTHighTHitsRatio;
   vector<vector<vector<float> > > *ph_vx_convTrk_TRTHighTOutliersRatio;
   vector<vector<vector<float> > > *ph_vx_convTrk_eProbabilityComb;
   vector<vector<vector<float> > > *ph_vx_convTrk_eProbabilityHT;
   vector<vector<vector<float> > > *ph_vx_convTrk_eProbabilityToT;
   vector<vector<vector<float> > > *ph_vx_convTrk_eProbabilityBrem;
   vector<vector<vector<float> > > *ph_vx_convTrk_chi2;
   vector<vector<vector<int> > > *ph_vx_convTrk_ndof;
   vector<int>     *ph_truth_isConv;
   vector<int>     *ph_truth_isBrem;
   vector<int>     *ph_truth_isFromHardProc;
   vector<int>     *ph_truth_isPhotonFromHardProc;
   vector<float>   *ph_truth_Rconv;
   vector<float>   *ph_truth_zconv;
   vector<float>   *ph_deltaEmax2;
   vector<float>   *ph_calibHitsShowerDepth;
   vector<unsigned int> *ph_isIso;
   vector<float>   *ph_mvaptcone20;
   vector<float>   *ph_mvaptcone30;
   vector<float>   *ph_mvaptcone40;
   vector<float>   *ph_topoEtcone60;
   vector<vector<float> > *ph_vx_Chi2;
   vector<vector<float> > *ph_vx_Dcottheta;
   vector<vector<float> > *ph_vx_Dphi;
   vector<vector<float> > *ph_vx_Dist;
   vector<vector<float> > *ph_vx_DR1R2;
   vector<float>   *ph_CaloPointing_eta;
   vector<float>   *ph_CaloPointing_sigma_eta;
   vector<float>   *ph_CaloPointing_zvertex;
   vector<float>   *ph_CaloPointing_sigma_zvertex;
   vector<float>   *ph_HPV_eta;
   vector<float>   *ph_HPV_sigma_eta;
   vector<float>   *ph_HPV_zvertex;
   vector<float>   *ph_HPV_sigma_zvertex;
   vector<int>     *ph_NN_passes;
   vector<float>   *ph_NN_discriminant;
   vector<float>   *ph_ES0_real;
   vector<float>   *ph_ES1_real;
   vector<float>   *ph_ES2_real;
   vector<float>   *ph_ES3_real;
   vector<float>   *ph_EcellS0;
   vector<float>   *ph_etacellS0;
   vector<float>   *ph_Etcone40_ED_corrected;
   vector<float>   *ph_Etcone40_corrected;
   vector<float>   *ph_topoEtcone20_corrected;
   vector<float>   *ph_topoEtcone30_corrected;
   vector<float>   *ph_topoEtcone40_corrected;
   vector<float>   *ph_ED_median;
   vector<float>   *ph_ED_sigma;
   vector<float>   *ph_ED_Njets;
   vector<float>   *ph_convIP;
   vector<float>   *ph_convIPRev;
   vector<int>     *ph_el_index;
   vector<float>   *ph_EF_dr;
   vector<int>     *ph_EF_index;
   vector<float>   *ph_L2_dr;
   vector<float>   *ph_L1_dr;
   vector<int>     *ph_L1_index;
   Int_t           mcevt_n;
   vector<int>     *mcevt_signal_process_id;
   vector<int>     *mcevt_event_number;
   vector<double>  *mcevt_event_scale;
   vector<double>  *mcevt_alphaQCD;
   vector<double>  *mcevt_alphaQED;
   vector<int>     *mcevt_pdf_id1;
   vector<int>     *mcevt_pdf_id2;
   vector<double>  *mcevt_pdf_x1;
   vector<double>  *mcevt_pdf_x2;
   vector<double>  *mcevt_pdf_scale;
   vector<double>  *mcevt_pdf1;
   vector<double>  *mcevt_pdf2;
   vector<vector<double> > *mcevt_weight;
   Int_t           mcVx_n;
   vector<float>   *mcVx_x;
   vector<float>   *mcVx_y;
   vector<float>   *mcVx_z;
   Int_t           mc_n;
   vector<float>   *mc_gen_E;
   vector<float>   *mc_gen_pt;
   vector<float>   *mc_gen_eta;
   vector<float>   *mc_gen_phi;
   vector<int>     *mc_gen_type;
   vector<int>     *mc_gen_status;
   vector<int>     *mc_gen_barcode;
   vector<int>     *mc_gen_mothertype;
   vector<int>     *mc_gen_motherbarcode;
   vector<int>     *mc_perigee_ok;
   vector<float>   *mc_perigee_d0;
   vector<float>   *mc_perigee_z0;
   vector<float>   *mc_perigee_phi;
   vector<float>   *mc_perigee_theta;
   vector<float>   *mc_perigee_qoverp;
   vector<float>   *mc_charge;
   vector<int>     *mc_child_n;
   vector<vector<int> > *mc_child_barcode;
   vector<vector<int> > *mc_child_pdg;
   vector<float>   *mc_begVtx_x;
   vector<float>   *mc_begVtx_y;
   vector<float>   *mc_begVtx_z;
   vector<float>   *mc_begVtx_barcode;
   vector<float>   *mc_endVtx_x;
   vector<float>   *mc_endVtx_y;
   vector<float>   *mc_endVtx_z;
   vector<float>   *mc_endVtx_barcode;
   Int_t           mc_unstable_n;
   vector<float>   *mc_unstable_gen_pt;
   vector<float>   *mc_unstable_gen_eta;
   vector<float>   *mc_unstable_gen_phi;
   vector<float>   *mc_unstable_gen_energy;
   vector<int>     *mc_unstable_perigee_ok;
   vector<float>   *mc_unstable_perigee_d0;
   vector<float>   *mc_unstable_perigee_z0;
   vector<float>   *mc_unstable_perigee_phi;
   vector<float>   *mc_unstable_perigee_theta;
   vector<float>   *mc_unstable_perigee_qoverp;
   vector<int>     *mc_unstable_pdg;
   vector<float>   *mc_unstable_charge;
   vector<int>     *mc_unstable_barcode;
   vector<int>     *mc_unstable_status;
   vector<int>     *mc_unstable_mother_pdg;
   vector<int>     *mc_unstable_mother_barcode;
   vector<int>     *mc_unstable_child_n;
   vector<vector<int> > *mc_unstable_child_barcode;
   vector<float>   *mc_unstable_begVtx_x;
   vector<float>   *mc_unstable_begVtx_y;
   vector<float>   *mc_unstable_begVtx_z;
   vector<float>   *mc_unstable_begVtx_barcode;
   vector<float>   *mc_unstable_endVtx_x;
   vector<float>   *mc_unstable_endVtx_y;
   vector<float>   *mc_unstable_endVtx_z;
   vector<float>   *mc_unstable_endVtx_barcode;

   // List of branches
   TBranch        *b_EF_2e5_loose1;   //!
   TBranch        *b_EF_2e5_medium1;   //!
   TBranch        *b_EF_2e5_tight1;   //!
   TBranch        *b_EF_2g10_loose;   //!
   TBranch        *b_EF_2g10_medium;   //!
   TBranch        *b_EF_2g5_loose;   //!
   TBranch        *b_EF_2g5_medium;   //!
   TBranch        *b_EF_2g7_loose;   //!
   TBranch        *b_EF_2g7_medium;   //!
   TBranch        *b_EF_2j10_a4hi_EFFS_2L1J5;   //!
   TBranch        *b_EF_2j10_a4hi_EFFS_2L1J5_L1TE90;   //!
   TBranch        *b_EF_2j10_a4hi_EFFS_L1TE100;   //!
   TBranch        *b_EF_2j10_a4hi_EFFS_L1TE90;   //!
   TBranch        *b_EF_2j10_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j10_a4hi_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j10_a4hi_eta50_deta40;   //!
   TBranch        *b_EF_2j10_a4hi_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j10_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_deta40_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_deta40_L2te_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_eta50_deta40_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0;   //!
   TBranch        *b_EF_2j15_a4hi_EFFS_2L1J5;   //!
   TBranch        *b_EF_2j15_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j15_a4hi_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j15_a4hi_eta50_deta40;   //!
   TBranch        *b_EF_2j15_a4hi_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_2j15_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_2j15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_2j15_a4tchad_L2FS;   //!
   TBranch        *b_EF_2j15_a4tchad_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j15_a4tchad_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_EF_2j20_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j20_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j7_a4hi_EFFS_2L1J5;   //!
   TBranch        *b_EF_2j7_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2j7_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_2mu2_EFFS;   //!
   TBranch        *b_EF_2mu2_EFFS_L1MU0;   //!
   TBranch        *b_EF_2mu2_MSonly_EFFS_L1MBTS;   //!
   TBranch        *b_EF_2mu2_MSonly_EFFS_L1MU0;   //!
   TBranch        *b_EF_2mu2_MSonly_EFFS_L1ZDC_OR;   //!
   TBranch        *b_EF_2mu4;   //!
   TBranch        *b_EF_2mu4T_MSonly;   //!
   TBranch        *b_EF_2mu4_Jpsimumu_IDTrkNoCut;   //!
   TBranch        *b_EF_2mu4_MSonly;   //!
   TBranch        *b_EF_2mu4_MSonly_EFFS_L1MU0;   //!
   TBranch        *b_EF_2mu6T_MSonly;   //!
   TBranch        *b_EF_2mu6_MSonly;   //!
   TBranch        *b_EF_3j15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_3j15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_3j15_a4tchad_L2FS;   //!
   TBranch        *b_EF_3j15_a4tchad_L2FS_2L1J5;   //!
   TBranch        *b_EF_Background;   //!
   TBranch        *b_EF_Background_RD0_EMPTY;   //!
   TBranch        *b_EF_Background_RD0_UNPAIRED_ISO;   //!
   TBranch        *b_EF_Background_RD0_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_CosmicsAllTeEFID;   //!
   TBranch        *b_EF_CosmicsAllTeIDSCAN_AllPhysics_4Hits_TrkHypo;   //!
   TBranch        *b_EF_CosmicsAllTeIDSCAN_AllPhysics_TrkHypo;   //!
   TBranch        *b_EF_CosmicsAllTeSiTrack_AllPhysics_4Hits_TrkHypo;   //!
   TBranch        *b_EF_CosmicsAllTeSiTrack_AllPhysics_TrkHypo;   //!
   TBranch        *b_EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics;   //!
   TBranch        *b_EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics_NoField;   //!
   TBranch        *b_EF_CosmicsAllTeTRTxK_TRTTrkHypo_Pixel;   //!
   TBranch        *b_EF_HLTTimeBurner;   //!
   TBranch        *b_EF_InDetMon_FS;   //!
   TBranch        *b_EF_L1EM10_NoAlg;   //!
   TBranch        *b_EF_L1EM12_NoAlg;   //!
   TBranch        *b_EF_L1EM14_NoAlg;   //!
   TBranch        *b_EF_L1EM16_NoAlg;   //!
   TBranch        *b_EF_L1EM3_NoAlg;   //!
   TBranch        *b_EF_L1EM3_VTE20_hip_loose2_upc;   //!
   TBranch        *b_EF_L1EM3_VTE50_hip_loose2_upc;   //!
   TBranch        *b_EF_L1FJ0_empty_NoAlg;   //!
   TBranch        *b_EF_L1FJ5_empty_NoAlg;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2EM3;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2EM5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2J10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2J5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2J5_TE90;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU0_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU11;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU4;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU4_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU6;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU6_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_AC_CA_BGRP0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_HT_BGRP0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_Wide_BGRP0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_Wide_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BGRP1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BGRP7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BPTX0_BGRP0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_BPTX1_BGRP0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM12;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM14;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM16;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_2J5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_MV_VTE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_VTE20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM3_VTE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM4;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM5_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_EM7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ0_A;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ0_C;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ0_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ0_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ10_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ15;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ5_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_FJ5_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J10_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J10_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J10_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J10_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J15;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J18;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J30;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J30_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J30_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J30_UNPAIRED;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5_TE90;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_J5_win6;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_L1A_Mon;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LHCF;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_A;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_A_C;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_A_C_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_BGRP7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_C;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_COMM;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_COMM_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_LUCID_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA11;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA12;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA13;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA14;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA15;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA2;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA3;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA4;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA6;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA8;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSA9;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC11;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC12;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC13;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC14;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC15;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC2;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC3;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC4;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC5;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC6;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC8;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTSC9;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_1_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_1_OVERLAY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_1_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_2;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_2_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_2_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_BGRP7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_3_3;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_3_3_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_3_3_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_4_4;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MBTS_4_4_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_MV_VTE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_TE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_VTE20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU0_VTE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU11;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU11_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU15;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_MV_VTE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_TE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU4_VTE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU6;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_NIM_S8C2B21;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_NIM_S8C2B22;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_NIM_S8C2B23;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD0_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD0_FILLED;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD0_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD0_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD0_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD1_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_RD1_FILLED;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TAU3;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TAU8_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TAU8_FIRSTEMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TAU8_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TAU8_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE0;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE10;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE100;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE35;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE50;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE65;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TE90;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_TRT;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZB;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_AND;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A_BGRP7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A_C;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A_C_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_A_VTE20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_C;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_C_BGRP7;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_C_VTE20;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_EMPTY;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_MBTS_1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_MBTS_1_1;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_MBTS_2;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_MBTS_2_2;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_UNPAIRED_ISO;   //!
   TBranch        *b_EF_L1ItemStreamer_L1_ZDC_UNPAIRED_NONISO;   //!
   TBranch        *b_EF_L1J10_NoAlg;   //!
   TBranch        *b_EF_L1J10_empty_NoAlg;   //!
   TBranch        *b_EF_L1J10_firstempty_NoAlg;   //!
   TBranch        *b_EF_L1J30_empty_NoAlg;   //!
   TBranch        *b_EF_L1J30_firstempty_NoAlg;   //!
   TBranch        *b_EF_L1J5_NoAlg;   //!
   TBranch        *b_EF_L1J5_empty_NoAlg;   //!
   TBranch        *b_EF_L1J5_firstempty_NoAlg;   //!
   TBranch        *b_EF_L1LHCF_NoAlg;   //!
   TBranch        *b_EF_L1MBTS_1_1_NoAlg;   //!
   TBranch        *b_EF_L1MBTS_1_1_overlay_NoAlg;   //!
   TBranch        *b_EF_L1MBTS_2_NoAlg;   //!
   TBranch        *b_EF_L1MU0_NoAlg;   //!
   TBranch        *b_EF_L1MU0_VTE20_hip_loose2_upc;   //!
   TBranch        *b_EF_L1MU11_NoAlg;   //!
   TBranch        *b_EF_L1MU15_NoAlg;   //!
   TBranch        *b_EF_L1MU20_NoAlg;   //!
   TBranch        *b_EF_L1MU4_NoAlg;   //!
   TBranch        *b_EF_L1TAU3_NoAlg;   //!
   TBranch        *b_EF_L1TE0_NoAlg;   //!
   TBranch        *b_EF_L1TE100_NoAlg;   //!
   TBranch        *b_EF_L1TE10_NoAlg;   //!
   TBranch        *b_EF_L1TE20_NoAlg;   //!
   TBranch        *b_EF_L1TE35_NoAlg;   //!
   TBranch        *b_EF_L1TE50_NoAlg;   //!
   TBranch        *b_EF_L1TE65_NoAlg;   //!
   TBranch        *b_EF_L1TE90_NoAlg;   //!
   TBranch        *b_EF_L1ZDC_A_NoAlg;   //!
   TBranch        *b_EF_L1ZDC_A_VTE20_hip_loose2_upc;   //!
   TBranch        *b_EF_L1ZDC_C_NoAlg;   //!
   TBranch        *b_EF_L1ZDC_C_VTE20_hip_loose2_upc;   //!
   TBranch        *b_EF_L1ZDC_NoAlg;   //!
   TBranch        *b_EF_PreS_L1EM3_empty;   //!
   TBranch        *b_EF_PreS_L1EM5_empty;   //!
   TBranch        *b_EF_PreS_L1J10_empty;   //!
   TBranch        *b_EF_PreS_L1J10_firstempty;   //!
   TBranch        *b_EF_PreS_L1J30_empty;   //!
   TBranch        *b_EF_PreS_L1J30_firstempty;   //!
   TBranch        *b_EF_PreS_L1J5_empty;   //!
   TBranch        *b_EF_PreS_L1TAU8_empty;   //!
   TBranch        *b_EF_ROBRequestMon;   //!
   TBranch        *b_EF_ROBRequestMonUnseeded;   //!
   TBranch        *b_EF_SeededStreamerBCM_LUCID_ZDC;   //!
   TBranch        *b_EF_SeededStreamerL1Calo;   //!
   TBranch        *b_EF_SeededStreamerMBTS;   //!
   TBranch        *b_EF_SeededStreamerMinBias;   //!
   TBranch        *b_EF_SeededStreamerMuonswBeam;   //!
   TBranch        *b_EF_SeededStreamerRNDM;   //!
   TBranch        *b_EF_Standby;   //!
   TBranch        *b_EF_TileCalib_laser;   //!
   TBranch        *b_EF_allL1_NoAlg;   //!
   TBranch        *b_EF_centrality100_60;   //!
   TBranch        *b_EF_centrality80_60;   //!
   TBranch        *b_EF_cost_monitor;   //!
   TBranch        *b_EF_e10_loose1;   //!
   TBranch        *b_EF_e10_medium1;   //!
   TBranch        *b_EF_e14_tight1;   //!
   TBranch        *b_EF_e15_loose0;   //!
   TBranch        *b_EF_e15_loose1;   //!
   TBranch        *b_EF_e15_loose1_IDTrkNoCut;   //!
   TBranch        *b_EF_e15_medium1;   //!
   TBranch        *b_EF_e5_loose1;   //!
   TBranch        *b_EF_e5_medium1;   //!
   TBranch        *b_EF_e5_medium1_IDTrkNoCut;   //!
   TBranch        *b_EF_e5_tight1;   //!
   TBranch        *b_EF_e5_tight1_e5_NoCut;   //!
   TBranch        *b_EF_e7_loose1;   //!
   TBranch        *b_EF_e7_medium1;   //!
   TBranch        *b_EF_e7_tight1;   //!
   TBranch        *b_EF_e9_tight1;   //!
   TBranch        *b_EF_e9_tight1_e5_etcut;   //!
   TBranch        *b_EF_fj10_a4hi_EFFS_L1FJ0;   //!
   TBranch        *b_EF_fj10_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_fj10_a4tchad_EFFS_L1FJ0;   //!
   TBranch        *b_EF_fj10_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_fj10_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_fj10_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_fj15_a4hi_EFFS_L1FJ0;   //!
   TBranch        *b_EF_fj15_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_fj15_a4tchad_EFFS_L1FJ0;   //!
   TBranch        *b_EF_fj15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_fj15_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_fj15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_fj7_a4hi_EFFS_L1FJ0;   //!
   TBranch        *b_EF_fj7_a4tchad_EFFS_L1FJ0;   //!
   TBranch        *b_EF_fte75_veto;   //!
   TBranch        *b_EF_fte75_veto_mbMbts_2_2;   //!
   TBranch        *b_EF_g10_loose;   //!
   TBranch        *b_EF_g10_loose_larcalib;   //!
   TBranch        *b_EF_g10_medium;   //!
   TBranch        *b_EF_g10_medium_2j10_a4hi_EFFS_L1EM5;   //!
   TBranch        *b_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5;   //!
   TBranch        *b_EF_g10_tight;   //!
   TBranch        *b_EF_g12_loose;   //!
   TBranch        *b_EF_g12_medium;   //!
   TBranch        *b_EF_g12_tight;   //!
   TBranch        *b_EF_g15_loose;   //!
   TBranch        *b_EF_g15_medium;   //!
   TBranch        *b_EF_g15_tight;   //!
   TBranch        *b_EF_g20_loose;   //!
   TBranch        *b_EF_g20_medium;   //!
   TBranch        *b_EF_g5_NoCut_cosmic;   //!
   TBranch        *b_EF_g5_loose;   //!
   TBranch        *b_EF_g5_loose_2L1J5;   //!
   TBranch        *b_EF_g5_loose_larcalib;   //!
   TBranch        *b_EF_g5_medium;   //!
   TBranch        *b_EF_g5_medium_2L1J5;   //!
   TBranch        *b_EF_g5_tight;   //!
   TBranch        *b_EF_g7_loose;   //!
   TBranch        *b_EF_g7_medium;   //!
   TBranch        *b_EF_g7_medium_2j10_a4hi_EFFS_L1EM3;   //!
   TBranch        *b_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3;   //!
   TBranch        *b_EF_g7_tight;   //!
   TBranch        *b_EF_g9_etcut;   //!
   TBranch        *b_EF_g9_tight;   //!
   TBranch        *b_EF_j100_a4hi_EFFS_L1J20;   //!
   TBranch        *b_EF_j100_a4tchad_EFFS_L1J20;   //!
   TBranch        *b_EF_j10_a4hi_EFFS_L1EM3;   //!
   TBranch        *b_EF_j10_a4hi_EFFS_L1J5;   //!
   TBranch        *b_EF_j10_a4hi_EFFS_L1TAU3;   //!
   TBranch        *b_EF_j10_a4hi_EFFS_L1TE100;   //!
   TBranch        *b_EF_j10_a4hi_EFFS_L1TE90;   //!
   TBranch        *b_EF_j10_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j10_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_EF_j10_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_j10_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_j10_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_j10_u0uchad_LArNoiseBurst;   //!
   TBranch        *b_EF_j10_u0uchad_empty_LArNoiseBurst;   //!
   TBranch        *b_EF_j10_u0uchad_firstempty_LArNoiseBurst;   //!
   TBranch        *b_EF_j15_Ecorr;   //!
   TBranch        *b_EF_j15_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_j15_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_j15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_j15_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_EF_j20_Ecorr;   //!
   TBranch        *b_EF_j20_a4hi_EFFS_L1J10;   //!
   TBranch        *b_EF_j20_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j20_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_EF_j20_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_j20_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_j20_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_j20_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_EF_j30_a4hi_EFFS_L1J10;   //!
   TBranch        *b_EF_j30_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j30_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_EF_j30_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_EF_j30_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_EF_j30_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_EF_j30_u0uchad_empty_LArNoiseBurst;   //!
   TBranch        *b_EF_j40_a4hi_EFFS_L1J10;   //!
   TBranch        *b_EF_j40_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j40_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_EF_j40_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j40_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_EF_j50_a4hi_EFFS_L1J10;   //!
   TBranch        *b_EF_j50_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j50_a4tchad_EFFS_L1J10;   //!
   TBranch        *b_EF_j50_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_EF_j50_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j60_a4hi_EFFS_L1J15;   //!
   TBranch        *b_EF_j60_a4tchad_EFFS_L1J10;   //!
   TBranch        *b_EF_j60_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_EF_j75_a4hi_EFFS_L1J10;   //!
   TBranch        *b_EF_j75_a4hi_EFFS_L1J15;   //!
   TBranch        *b_EF_j75_a4tchad_EFFS_L1J10;   //!
   TBranch        *b_EF_j75_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_EF_j75_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_EF_j7_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_EF_j7_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_EF_j80_a4hi_EFFS_L1J15;   //!
   TBranch        *b_EF_j80_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_EF_j90_a4hi_EFFS_L1J15;   //!
   TBranch        *b_EF_j90_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_EF_mbLucid_eff;   //!
   TBranch        *b_EF_mbLucid_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_1_1;   //!
   TBranch        *b_EF_mbMbts_1_1_eff;   //!
   TBranch        *b_EF_mbMbts_1_1_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_1_1_overlay;   //!
   TBranch        *b_EF_mbMbts_1_1_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_2;   //!
   TBranch        *b_EF_mbMbts_2_2;   //!
   TBranch        *b_EF_mbMbts_2_2_eff;   //!
   TBranch        *b_EF_mbMbts_2_2_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_2_2_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_2_eff;   //!
   TBranch        *b_EF_mbMbts_2_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_2_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_3_3;   //!
   TBranch        *b_EF_mbMbts_3_3_eff;   //!
   TBranch        *b_EF_mbMbts_3_3_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_3_3_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_4_4;   //!
   TBranch        *b_EF_mbMbts_4_4_eff;   //!
   TBranch        *b_EF_mbMbts_4_4_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbMbts_4_4_unpaired_iso;   //!
   TBranch        *b_EF_mbRd0_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbRd1_eff;   //!
   TBranch        *b_EF_mbSpBg_noiseSup_unpaired_iso;   //!
   TBranch        *b_EF_mbSpBg_unpaired_iso;   //!
   TBranch        *b_EF_mbSpTrk;   //!
   TBranch        *b_EF_mbSpTrkVtxMh;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_eff;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk100_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk110_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk120_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk130_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk140_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk140_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk140_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk150_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk150_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk155_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk155_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk160_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk160_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk160_L1TE50_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk170_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk170_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk175_L1MBTS;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk175_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk175_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk180_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk180_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk180_L1TE50_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk180_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk190_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk190_L1TE50;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk190_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk200_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk200_L1TE65_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk200_L1TE90;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk210_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk210_L1TE90;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk220_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk220_L1TE90;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk225_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk230_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk230_L1TE90;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk240_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk240_L1TE90;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk240_L1TE90_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk245_L1TE65;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk260_L1TE90;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_hip_trk260_L1TE90_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE0;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk100_L1TE35_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk110_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk110_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk110_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk110_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk110_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk110_L1TE35_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk120_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk120_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk120_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk120_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk120_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk120_L1TE35_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk130_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk130_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk130_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk130_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk130_L1TE35;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk130_L1TE35_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk30_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk30_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk30_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk50_L1MBTS;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk50_L1MBTS_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk50_L1TE0;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk50_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk50_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk50_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk60_L1MBTS;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk60_L1MBTS_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk60_L1TE0;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk60_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk60_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk60_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk70_L1TE0;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk70_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk70_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk70_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk70_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk70_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk80_L1TE0;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk80_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk80_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk80_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk80_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk80_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk90_L1TE0;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk90_L1TE0_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk90_L1TE10;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk90_L1TE10_pileupSup;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk90_L1TE20;   //!
   TBranch        *b_EF_mbSpTrkVtxMh_pp_trk90_L1TE20_pileupSup;   //!
   TBranch        *b_EF_mbSpTrk_L1FJ0;   //!
   TBranch        *b_EF_mbSpTrk_L1FJ0_A;   //!
   TBranch        *b_EF_mbSpTrk_L1FJ0_C;   //!
   TBranch        *b_EF_mbSpTrk_L1LHCF;   //!
   TBranch        *b_EF_mbSpTrk_L1MBTS_1;   //!
   TBranch        *b_EF_mbSpTrk_L1MBTS_1_1;   //!
   TBranch        *b_EF_mbSpTrk_L1MBTS_2;   //!
   TBranch        *b_EF_mbSpTrk_L1TE0;   //!
   TBranch        *b_EF_mbSpTrk_L1ZDC;   //!
   TBranch        *b_EF_mbSpTrk_L1ZDC_A;   //!
   TBranch        *b_EF_mbSpTrk_L1ZDC_C;   //!
   TBranch        *b_EF_mbSpTrk_empty;   //!
   TBranch        *b_EF_mbSpTrk_noiseSup;   //!
   TBranch        *b_EF_mbSpTrk_noiseSup_unpaired_iso;   //!
   TBranch        *b_EF_mbSpTrk_unpaired_iso;   //!
   TBranch        *b_EF_mbSp_L1BGRP1;   //!
   TBranch        *b_EF_mbZdc_HG_eff;   //!
   TBranch        *b_EF_mbZdc_HG_eff_L1MBTS2;   //!
   TBranch        *b_EF_mbZdc_HG_sideA;   //!
   TBranch        *b_EF_mbZdc_HG_sideC;   //!
   TBranch        *b_EF_mbZdc_LG_eff;   //!
   TBranch        *b_EF_mbZdc_LG_sideA;   //!
   TBranch        *b_EF_mbZdc_LG_sideA_L1MBTS2;   //!
   TBranch        *b_EF_mbZdc_LG_sideC;   //!
   TBranch        *b_EF_mbZdc_LG_sideC_L1MBTS2;   //!
   TBranch        *b_EF_mbZdc_a_c_L2Zdc_eff;   //!
   TBranch        *b_EF_mbZdc_a_c_Mbts_1_1;   //!
   TBranch        *b_EF_mbZdc_a_c_Mbts_2_2;   //!
   TBranch        *b_EF_mbZdc_a_c_NoAlg;   //!
   TBranch        *b_EF_mbZdc_a_c_cosmic_NoAlg;   //!
   TBranch        *b_EF_mbZdc_a_c_eff;   //!
   TBranch        *b_EF_mbZdc_a_c_eff_unpaired_iso;   //!
   TBranch        *b_EF_mbZdc_and_Mbts_1_1;   //!
   TBranch        *b_EF_mbZdc_and_Mbts_2_2;   //!
   TBranch        *b_EF_mu10;   //!
   TBranch        *b_EF_mu10T_MSonly;   //!
   TBranch        *b_EF_mu10_IDTrkNoCut;   //!
   TBranch        *b_EF_mu10_MSonly;   //!
   TBranch        *b_EF_mu13T_MSonly;   //!
   TBranch        *b_EF_mu13_MSonly;   //!
   TBranch        *b_EF_mu2;   //!
   TBranch        *b_EF_mu4;   //!
   TBranch        *b_EF_mu4T;   //!
   TBranch        *b_EF_mu4T_IDTrkNoCut;   //!
   TBranch        *b_EF_mu4T_MSonly;   //!
   TBranch        *b_EF_mu4T_MSonly_barrel;   //!
   TBranch        *b_EF_mu4T_MSonly_cosmic;   //!
   TBranch        *b_EF_mu4T_cosmic;   //!
   TBranch        *b_EF_mu4_IDTrkNoCut;   //!
   TBranch        *b_EF_mu4_MSonly;   //!
   TBranch        *b_EF_mu4_MSonly_EFFS_L1MBTS;   //!
   TBranch        *b_EF_mu4_MSonly_EFFS_L1ZDC_OR;   //!
   TBranch        *b_EF_mu4_MSonly_barrel;   //!
   TBranch        *b_EF_mu4_MSonly_cosmic;   //!
   TBranch        *b_EF_mu4_MSonly_j15_a2hi_EFFS_matched;   //!
   TBranch        *b_EF_mu4_MSonly_j15_a4tchad_EFFS_matched;   //!
   TBranch        *b_EF_mu4_cosmic;   //!
   TBranch        *b_EF_mu4_j10_a4hi_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j10_a4tchad_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j15_a4hi_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j15_a4tchad_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j20_a4hi_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j20_a4tchad_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j30_a4hi_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j30_a4tchad_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j40_a4hi_EFFS_matched;   //!
   TBranch        *b_EF_mu4_j40_a4tchad_EFFS_matched;   //!
   TBranch        *b_EF_mu4_mu2_EFFS;   //!
   TBranch        *b_EF_mu4_mu2_EFFS_L1MU0;   //!
   TBranch        *b_EF_mu6;   //!
   TBranch        *b_EF_mu6T;   //!
   TBranch        *b_EF_mu6T_IDTrkNoCut;   //!
   TBranch        *b_EF_mu6T_MSonly;   //!
   TBranch        *b_EF_mu6_IDTrkNoCut;   //!
   TBranch        *b_EF_mu6_MSonly;   //!
   TBranch        *b_EF_mu8;   //!
   TBranch        *b_EF_mu8_IDTrkNoCut;   //!
   TBranch        *b_EF_rd0_empty_NoAlg;   //!
   TBranch        *b_EF_rd0_filled_NoAlg;   //!
   TBranch        *b_EF_rd1_empty_NoAlg;   //!
   TBranch        *b_EF_tauNoCut_cosmic;   //!
   TBranch        *b_EF_xe20_FEB_L1EM5;   //!
   TBranch        *b_EF_xe20_FEB_L1J10;   //!
   TBranch        *b_EF_xe20_FEB_L1MU0;   //!
   TBranch        *b_EF_xe20_FEB_L1TE65;   //!
   TBranch        *b_EF_xe20_FEB_L1TE90;   //!
   TBranch        *b_EF_xe25_FEB_L1TE65;   //!
   TBranch        *b_EF_xe25_FEB_L1TE90;   //!
   TBranch        *b_EF_xe30_FEB_L1EM5;   //!
   TBranch        *b_EF_xe30_FEB_L1J10;   //!
   TBranch        *b_EF_xe30_FEB_L1MU0;   //!
   TBranch        *b_EF_xe30_FEB_L1TE65;   //!
   TBranch        *b_EF_xe30_FEB_L1TE90;   //!
   TBranch        *b_EF_xe40_FEB_L1EM5;   //!
   TBranch        *b_EF_xe40_FEB_L1J10;   //!
   TBranch        *b_EF_xe40_FEB_L1MU0;   //!
   TBranch        *b_EF_xe40_FEB_L1TE65;   //!
   TBranch        *b_EF_xe40_FEB_L1TE90;   //!
   TBranch        *b_EF_zerobias_NoAlg;   //!
   TBranch        *b_EF_zerobias_Overlay_L2mbMbts;   //!
   TBranch        *b_EF_zerobias_Overlay_L2te;   //!
   TBranch        *b_EF_zerobias_Overlay_NoAlg;   //!
   TBranch        *b_L1_2EM3;   //!
   TBranch        *b_L1_2EM5;   //!
   TBranch        *b_L1_2MU0;   //!
   TBranch        *b_L1_2MU0_EMPTY;   //!
   TBranch        *b_L1_2MU11;   //!
   TBranch        *b_L1_2MU20;   //!
   TBranch        *b_L1_2MU4;   //!
   TBranch        *b_L1_2MU4_EMPTY;   //!
   TBranch        *b_L1_2MU6;   //!
   TBranch        *b_L1_2MU6_EMPTY;   //!
   TBranch        *b_L1_2MU6_FIRSTEMPTY;   //!
   TBranch        *b_L1_2MU6_UNPAIRED_ISO;   //!
   TBranch        *b_L1_2MU6_UNPAIRED_NONISO;   //!
   TBranch        *b_L1_EM10;   //!
   TBranch        *b_L1_EM12;   //!
   TBranch        *b_L1_EM14;   //!
   TBranch        *b_L1_EM16;   //!
   TBranch        *b_L1_EM3;   //!
   TBranch        *b_L1_EM3_2J5;   //!
   TBranch        *b_L1_EM3_EMPTY;   //!
   TBranch        *b_L1_EM3_FIRSTEMPTY;   //!
   TBranch        *b_L1_EM3_MV_VTE50;   //!
   TBranch        *b_L1_EM3_UNPAIRED_ISO;   //!
   TBranch        *b_L1_EM3_UNPAIRED_NONISO;   //!
   TBranch        *b_L1_EM3_VTE20;   //!
   TBranch        *b_L1_EM3_VTE50;   //!
   TBranch        *b_L1_EM4;   //!
   TBranch        *b_L1_EM5;   //!
   TBranch        *b_L1_EM5_EMPTY;   //!
   TBranch        *b_L1_EM7;   //!
   TBranch        *b_L1_MU0;   //!
   TBranch        *b_L1_MU0_EMPTY;   //!
   TBranch        *b_L1_MU0_FIRSTEMPTY;   //!
   TBranch        *b_L1_MU0_MV_VTE50;   //!
   TBranch        *b_L1_MU0_TE50;   //!
   TBranch        *b_L1_MU0_UNPAIRED_ISO;   //!
   TBranch        *b_L1_MU0_UNPAIRED_NONISO;   //!
   TBranch        *b_L1_MU0_VTE20;   //!
   TBranch        *b_L1_MU0_VTE50;   //!
   TBranch        *b_L1_MU11;   //!
   TBranch        *b_L1_MU11_EMPTY;   //!
   TBranch        *b_L1_MU15;   //!
   TBranch        *b_L1_MU20;   //!
   TBranch        *b_L1_MU4;   //!
   TBranch        *b_L1_MU4_EMPTY;   //!
   TBranch        *b_L1_MU4_FIRSTEMPTY;   //!
   TBranch        *b_L1_MU4_MV_VTE50;   //!
   TBranch        *b_L1_MU4_TE50;   //!
   TBranch        *b_L1_MU4_UNPAIRED_ISO;   //!
   TBranch        *b_L1_MU4_UNPAIRED_NONISO;   //!
   TBranch        *b_L1_MU4_VTE50;   //!
   TBranch        *b_L1_MU6;   //!
   TBranch        *b_L1_MU6_FIRSTEMPTY;   //!
   TBranch        *b_L2_2e5_loose1;   //!
   TBranch        *b_L2_2e5_medium1;   //!
   TBranch        *b_L2_2e5_tight1;   //!
   TBranch        *b_L2_2g10_loose;   //!
   TBranch        *b_L2_2g10_medium;   //!
   TBranch        *b_L2_2g5_loose;   //!
   TBranch        *b_L2_2g5_medium;   //!
   TBranch        *b_L2_2g7_loose;   //!
   TBranch        *b_L2_2g7_medium;   //!
   TBranch        *b_L2_2mu2_EFFS_L1MU0;   //!
   TBranch        *b_L2_2mu2_MSonly_EFFS_L1MBTS;   //!
   TBranch        *b_L2_2mu2_MSonly_EFFS_L1MU0;   //!
   TBranch        *b_L2_2mu2_MSonly_EFFS_L1ZDC_OR;   //!
   TBranch        *b_L2_2mu4;   //!
   TBranch        *b_L2_2mu4T_MSonly;   //!
   TBranch        *b_L2_2mu4_Jpsimumu_IDTrkNoCut;   //!
   TBranch        *b_L2_2mu4_MSonly;   //!
   TBranch        *b_L2_2mu4_MSonly_EFFS_L1MU0;   //!
   TBranch        *b_L2_2mu6T_MSonly;   //!
   TBranch        *b_L2_2mu6_MSonly;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2EM3;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2EM5;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU0;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU0_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU11;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU4;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU4_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU6;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU6_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM10;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM12;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM14;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM16;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_2J5;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_MV_VTE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_VTE20;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM3_VTE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM4;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM5;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM5_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_EM7;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_MV_VTE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_TE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_VTE20;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU0_VTE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU11;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU11_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU15;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU20;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_EMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_MV_VTE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_TE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU4_VTE50;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU6;   //!
   TBranch        *b_L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY;   //!
   TBranch        *b_L2_SeededStreamerL1Calo;   //!
   TBranch        *b_L2_e10_loose1;   //!
   TBranch        *b_L2_e10_medium1;   //!
   TBranch        *b_L2_e14_tight1;   //!
   TBranch        *b_L2_e15_loose0;   //!
   TBranch        *b_L2_e15_loose1;   //!
   TBranch        *b_L2_e15_loose1_IDTrkNoCut;   //!
   TBranch        *b_L2_e15_medium1;   //!
   TBranch        *b_L2_e5_loose1;   //!
   TBranch        *b_L2_e5_medium1;   //!
   TBranch        *b_L2_e5_medium1_IDTrkNoCut;   //!
   TBranch        *b_L2_e5_tight1;   //!
   TBranch        *b_L2_e5_tight1_e5_NoCut;   //!
   TBranch        *b_L2_e7_loose1;   //!
   TBranch        *b_L2_e7_medium1;   //!
   TBranch        *b_L2_e7_tight1;   //!
   TBranch        *b_L2_e9_tight1;   //!
   TBranch        *b_L2_e9_tight1_e5_etcut;   //!
   TBranch        *b_L2_em3_empty_larcalib;   //!
   TBranch        *b_L2_em5_empty_larcalib;   //!
   TBranch        *b_L2_g10_loose;   //!
   TBranch        *b_L2_g10_medium;   //!
   TBranch        *b_L2_g10_medium_2j10_a4hi_EFFS_L1EM5;   //!
   TBranch        *b_L2_g10_medium_2j10_a4tchad_EFFS_L1EM5;   //!
   TBranch        *b_L2_g10_tight;   //!
   TBranch        *b_L2_g12_loose;   //!
   TBranch        *b_L2_g12_medium;   //!
   TBranch        *b_L2_g12_tight;   //!
   TBranch        *b_L2_g15_loose;   //!
   TBranch        *b_L2_g15_medium;   //!
   TBranch        *b_L2_g15_tight;   //!
   TBranch        *b_L2_g20_loose;   //!
   TBranch        *b_L2_g20_medium;   //!
   TBranch        *b_L2_g5_NoCut_cosmic;   //!
   TBranch        *b_L2_g5_loose;   //!
   TBranch        *b_L2_g5_loose_2L1J5;   //!
   TBranch        *b_L2_g5_medium;   //!
   TBranch        *b_L2_g5_medium_2L1J5;   //!
   TBranch        *b_L2_g5_tight;   //!
   TBranch        *b_L2_g7_loose;   //!
   TBranch        *b_L2_g7_medium;   //!
   TBranch        *b_L2_g7_medium_2j10_a4hi_EFFS_L1EM3;   //!
   TBranch        *b_L2_g7_medium_2j10_a4tchad_EFFS_L1EM3;   //!
   TBranch        *b_L2_g7_tight;   //!
   TBranch        *b_L2_g9_etcut;   //!
   TBranch        *b_L2_g9_tight;   //!
   TBranch        *b_L2_mu10;   //!
   TBranch        *b_L2_mu10T_MSonly;   //!
   TBranch        *b_L2_mu10_IDTrkNoCut;   //!
   TBranch        *b_L2_mu10_MSonly;   //!
   TBranch        *b_L2_mu13T_MSonly;   //!
   TBranch        *b_L2_mu13_MSonly;   //!
   TBranch        *b_L2_mu2;   //!
   TBranch        *b_L2_mu4;   //!
   TBranch        *b_L2_mu4T;   //!
   TBranch        *b_L2_mu4T_IDTrkNoCut;   //!
   TBranch        *b_L2_mu4T_MSonly;   //!
   TBranch        *b_L2_mu4T_MSonly_barrel;   //!
   TBranch        *b_L2_mu4T_MSonly_cosmic;   //!
   TBranch        *b_L2_mu4T_cosmic;   //!
   TBranch        *b_L2_mu4T_l2cal;   //!
   TBranch        *b_L2_mu4_IDTrkNoCut;   //!
   TBranch        *b_L2_mu4_MSonly;   //!
   TBranch        *b_L2_mu4_MSonly_EFFS_L1MBTS;   //!
   TBranch        *b_L2_mu4_MSonly_EFFS_L1ZDC_OR;   //!
   TBranch        *b_L2_mu4_MSonly_barrel;   //!
   TBranch        *b_L2_mu4_MSonly_cosmic;   //!
   TBranch        *b_L2_mu4_cosmic;   //!
   TBranch        *b_L2_mu4_l2cal_empty;   //!
   TBranch        *b_L2_mu4_mu2_EFFS_L1MU0;   //!
   TBranch        *b_L2_mu6;   //!
   TBranch        *b_L2_mu6T;   //!
   TBranch        *b_L2_mu6T_IDTrkNoCut;   //!
   TBranch        *b_L2_mu6T_MSonly;   //!
   TBranch        *b_L2_mu6_IDTrkNoCut;   //!
   TBranch        *b_L2_mu6_MSonly;   //!
   TBranch        *b_L2_mu6_l2cal;   //!
   TBranch        *b_L2_mu8;   //!
   TBranch        *b_L2_mu8_IDTrkNoCut;   //!
   TBranch        *b_L2_xe20_FEB_L1EM5;   //!
   TBranch        *b_L2_xe20_FEB_L1J10;   //!
   TBranch        *b_L2_xe20_FEB_L1MU0;   //!
   TBranch        *b_L2_xe20_FEB_L1TE65;   //!
   TBranch        *b_L2_xe20_FEB_L1TE90;   //!
   TBranch        *b_L2_xe25_FEB_L1TE65;   //!
   TBranch        *b_L2_xe25_FEB_L1TE90;   //!
   TBranch        *b_L2_xe30_FEB_L1EM5;   //!
   TBranch        *b_L2_xe30_FEB_L1J10;   //!
   TBranch        *b_L2_xe30_FEB_L1MU0;   //!
   TBranch        *b_L2_xe30_FEB_L1TE65;   //!
   TBranch        *b_L2_xe30_FEB_L1TE90;   //!
   TBranch        *b_L2_xe40_FEB_L1EM5;   //!
   TBranch        *b_L2_xe40_FEB_L1J10;   //!
   TBranch        *b_L2_xe40_FEB_L1MU0;   //!
   TBranch        *b_L2_xe40_FEB_L1TE65;   //!
   TBranch        *b_L2_xe40_FEB_L1TE90;   //!
   TBranch        *b_trig_EF_ph_EF_2g10_loose;   //!
   TBranch        *b_trig_EF_ph_EF_2g10_medium;   //!
   TBranch        *b_trig_EF_ph_EF_2g5_loose;   //!
   TBranch        *b_trig_EF_ph_EF_2g5_medium;   //!
   TBranch        *b_trig_EF_ph_EF_2g7_loose;   //!
   TBranch        *b_trig_EF_ph_EF_2g7_medium;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM10;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM12;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM14;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM16;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_2J5;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_EMPTY;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_MV_VTE50;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE20;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE50;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM4;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM5;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM5_EMPTY;   //!
   TBranch        *b_trig_EF_ph_EF_L1ItemStreamer_L1_EM7;   //!
   TBranch        *b_trig_EF_ph_EF_SeededStreamerL1Calo;   //!
   TBranch        *b_trig_EF_ph_EF_g10_loose;   //!
   TBranch        *b_trig_EF_ph_EF_g10_loose_larcalib;   //!
   TBranch        *b_trig_EF_ph_EF_g10_medium;   //!
   TBranch        *b_trig_EF_ph_EF_g10_medium_2j10_a4hi_EFFS_L1EM5;   //!
   TBranch        *b_trig_EF_ph_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5;   //!
   TBranch        *b_trig_EF_ph_EF_g10_tight;   //!
   TBranch        *b_trig_EF_ph_EF_g12_loose;   //!
   TBranch        *b_trig_EF_ph_EF_g12_medium;   //!
   TBranch        *b_trig_EF_ph_EF_g12_tight;   //!
   TBranch        *b_trig_EF_ph_EF_g15_loose;   //!
   TBranch        *b_trig_EF_ph_EF_g15_medium;   //!
   TBranch        *b_trig_EF_ph_EF_g15_tight;   //!
   TBranch        *b_trig_EF_ph_EF_g20_loose;   //!
   TBranch        *b_trig_EF_ph_EF_g20_medium;   //!
   TBranch        *b_trig_EF_ph_EF_g5_NoCut_cosmic;   //!
   TBranch        *b_trig_EF_ph_EF_g5_loose;   //!
   TBranch        *b_trig_EF_ph_EF_g5_loose_2L1J5;   //!
   TBranch        *b_trig_EF_ph_EF_g5_loose_larcalib;   //!
   TBranch        *b_trig_EF_ph_EF_g5_medium;   //!
   TBranch        *b_trig_EF_ph_EF_g5_medium_2L1J5;   //!
   TBranch        *b_trig_EF_ph_EF_g5_tight;   //!
   TBranch        *b_trig_EF_ph_EF_g7_loose;   //!
   TBranch        *b_trig_EF_ph_EF_g7_medium;   //!
   TBranch        *b_trig_EF_ph_EF_g7_medium_2j10_a4hi_EFFS_L1EM3;   //!
   TBranch        *b_trig_EF_ph_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3;   //!
   TBranch        *b_trig_EF_ph_EF_g7_tight;   //!
   TBranch        *b_trig_EF_ph_EF_g9_etcut;   //!
   TBranch        *b_trig_EF_ph_EF_g9_tight;   //!
   TBranch        *b_trig_EF_el_EF_2e5_loose1;   //!
   TBranch        *b_trig_EF_el_EF_2e5_medium1;   //!
   TBranch        *b_trig_EF_el_EF_2e5_tight1;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM10;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM12;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM14;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM16;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_2J5;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_EMPTY;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_MV_VTE50;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE20;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE50;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM4;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM5;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM5_EMPTY;   //!
   TBranch        *b_trig_EF_el_EF_L1ItemStreamer_L1_EM7;   //!
   TBranch        *b_trig_EF_el_EF_SeededStreamerL1Calo;   //!
   TBranch        *b_trig_EF_el_EF_e10_loose1;   //!
   TBranch        *b_trig_EF_el_EF_e10_medium1;   //!
   TBranch        *b_trig_EF_el_EF_e14_tight1;   //!
   TBranch        *b_trig_EF_el_EF_e15_loose0;   //!
   TBranch        *b_trig_EF_el_EF_e15_loose1;   //!
   TBranch        *b_trig_EF_el_EF_e15_loose1_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_el_EF_e15_medium1;   //!
   TBranch        *b_trig_EF_el_EF_e5_loose1;   //!
   TBranch        *b_trig_EF_el_EF_e5_medium1;   //!
   TBranch        *b_trig_EF_el_EF_e5_medium1_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_el_EF_e5_tight1;   //!
   TBranch        *b_trig_EF_el_EF_e5_tight1_e5_NoCut;   //!
   TBranch        *b_trig_EF_el_EF_e7_loose1;   //!
   TBranch        *b_trig_EF_el_EF_e7_medium1;   //!
   TBranch        *b_trig_EF_el_EF_e7_tight1;   //!
   TBranch        *b_trig_EF_el_EF_e9_tight1;   //!
   TBranch        *b_trig_EF_el_EF_e9_tight1_e5_etcut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu2_EFFS;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu2_EFFS_L1MU0;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MU0;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu4;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu4T_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu4_Jpsimumu_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu4_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu6T_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_2mu6_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE20;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu10;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu10T_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu10_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu10_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu13T_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu13_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu2;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4T;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4T_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4T_MSonly_barrel;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4T_cosmic;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly_barrel;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly_cosmic;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_MSonly_j15_a4tchad_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_cosmic;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j10_a4hi_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j10_a4tchad_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j15_a4hi_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j15_a4tchad_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j20_a4hi_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j20_a4tchad_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j30_a4hi_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j30_a4tchad_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_j40_a4tchad_EFFS_matched;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_mu2_EFFS;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu4_mu2_EFFS_L1MU0;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu6;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu6T;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu6T_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu6_IDTrkNoCut;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu6_MSonly;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu8;   //!
   TBranch        *b_trig_EF_trigmuonef_EF_mu8_IDTrkNoCut;   //!
   TBranch        *b_RunNumber;   //!
   TBranch        *b_EventNumber;   //!
   TBranch        *b_timestamp;   //!
   TBranch        *b_timestamp_ns;   //!
   TBranch        *b_lbn;   //!
   TBranch        *b_bcid;   //!
   TBranch        *b_detmask0;   //!
   TBranch        *b_detmask1;   //!
   TBranch        *b_actualIntPerXing;   //!
   TBranch        *b_averageIntPerXing;   //!
   TBranch        *b_mc_channel_number;   //!
   TBranch        *b_mc_event_number;   //!
   TBranch        *b_mc_event_weight;   //!
   TBranch        *b_pixelFlags;   //!
   TBranch        *b_sctFlags;   //!
   TBranch        *b_trtFlags;   //!
   TBranch        *b_larFlags;   //!
   TBranch        *b_tileFlags;   //!
   TBranch        *b_muonFlags;   //!
   TBranch        *b_fwdFlags;   //!
   TBranch        *b_coreFlags;   //!
   TBranch        *b_pixelError;   //!
   TBranch        *b_sctError;   //!
   TBranch        *b_trtError;   //!
   TBranch        *b_larError;   //!
   TBranch        *b_tileError;   //!
   TBranch        *b_muonError;   //!
   TBranch        *b_fwdError;   //!
   TBranch        *b_coreError;   //!
   TBranch        *b_isSimulation;   //!
   TBranch        *b_isCalibration;   //!
   TBranch        *b_isTestBeam;   //!
   TBranch        *b_mb_n;   //!
   TBranch        *b_mb_E;   //!
   TBranch        *b_mb_eta;   //!
   TBranch        *b_mb_phi;   //!
   TBranch        *b_mb_time;   //!
   TBranch        *b_mb_quality;   //!
   TBranch        *b_mb_type;   //!
   TBranch        *b_mb_module;   //!
   TBranch        *b_mb_channel;   //!
   TBranch        *b_mbtime_timeDiff;   //!
   TBranch        *b_mbtime_timeA;   //!
   TBranch        *b_mbtime_timeC;   //!
   TBranch        *b_mbtime_countA;   //!
   TBranch        *b_mbtime_countC;   //!
   TBranch        *b_alfa_DCS_BLM;   //!
   TBranch        *b_alfa_DCS_HVCHANNEL;   //!
   TBranch        *b_alfa_DCS_LOCALMONITORING;   //!
   TBranch        *b_alfa_DCS_MOVEMENT;   //!
   TBranch        *b_alfa_DCS_RADMON;   //!
   TBranch        *b_alfa_DCS_TRIGGERRATES;   //!
   TBranch        *b_alfa_DCS_FECONFIGURATION;   //!
   TBranch        *b_alfa_DCS_TRIGGERSETTINGS;   //!
   TBranch        *b_alfa_Scaler;   //!
   TBranch        *b_alfa_BCId;   //!
   TBranch        *b_alfa_TimeStp;   //!
   TBranch        *b_alfa_TimeStp_ns;   //!
   TBranch        *b_alfa_TrigPat;   //!
   TBranch        *b_alfa_FiberHitsMD;   //!
   TBranch        *b_alfa_MultiMD;   //!
   TBranch        *b_alfa_FiberHitsODPos;   //!
   TBranch        *b_alfa_FiberHitsODNeg;   //!
   TBranch        *b_alfa_MultiODPos;   //!
   TBranch        *b_alfa_MultiODNeg;   //!
   TBranch        *b_alfa_x_Det;   //!
   TBranch        *b_alfa_y_Det;   //!
   TBranch        *b_alfa_Detector;   //!
   TBranch        *b_alfa_NumTrack;   //!
   TBranch        *b_alfa_OverU;   //!
   TBranch        *b_alfa_OverV;   //!
   TBranch        *b_alfa_OverY;   //!
   TBranch        *b_alfa_NU;   //!
   TBranch        *b_alfa_NV;   //!
   TBranch        *b_alfa_NY;   //!
   TBranch        *b_alfa_Fib_SelMD;   //!
   TBranch        *b_alfa_Fib_SelOD;   //!
   TBranch        *b_alfa_x_LHC;   //!
   TBranch        *b_alfa_y_LHC;   //!
   TBranch        *b_alfa_z_LHC;   //!
   TBranch        *b_alfa_x_Pot;   //!
   TBranch        *b_alfa_y_Pot;   //!
   TBranch        *b_alfa_x_Stat;   //!
   TBranch        *b_alfa_y_Stat;   //!
   TBranch        *b_alfa_x_Beam;   //!
   TBranch        *b_alfa_y_Beam;   //!
   TBranch        *b_cc_fcal_n;   //!
   TBranch        *b_cc_fcal_E;   //!
   TBranch        *b_cc_fcal_pt;   //!
   TBranch        *b_cc_fcal_eta;   //!
   TBranch        *b_cc_fcal_phi;   //!
   TBranch        *b_cc_fcal_QCells;   //!
   TBranch        *b_cc_fcal_GainCells;   //!
   TBranch        *b_cc_fcal_DetCells;   //!
   TBranch        *b_cc_fcal_TimeCells;   //!
   TBranch        *b_cc_fcal_xCells;   //!
   TBranch        *b_cc_fcal_yCells;   //!
   TBranch        *b_cc_fcal_zCells;   //!
   TBranch        *b_cc_fcal_BadCells;   //!
   TBranch        *b_cc_fcal_IdCells;   //!
   TBranch        *b_cc_fcal_Sigma;   //!
   TBranch        *b_ccc_Nh_Calo;   //!
   TBranch        *b_ccc_Eh_Calo;   //!
   TBranch        *b_ccc_Nh_EM;   //!
   TBranch        *b_ccc_Eh_EM;   //!
   TBranch        *b_ccc_Nh_HAD;   //!
   TBranch        *b_ccc_Eh_HAD;   //!
   TBranch        *b_ccc_Nh_PresB;   //!
   TBranch        *b_ccc_Eh_PresB;   //!
   TBranch        *b_ccc_Nh_EMB;   //!
   TBranch        *b_ccc_Eh_EMB;   //!
   TBranch        *b_ccc_Nh_EMEC;   //!
   TBranch        *b_ccc_Eh_EMEC;   //!
   TBranch        *b_ccc_Nh_Tile;   //!
   TBranch        *b_ccc_Eh_Tile;   //!
   TBranch        *b_ccc_Nh_TileGap;   //!
   TBranch        *b_ccc_Eh_TileGap;   //!
   TBranch        *b_ccc_Nh_HEC;   //!
   TBranch        *b_ccc_Eh_HEC;   //!
   TBranch        *b_ccc_Nh_FCal;   //!
   TBranch        *b_ccc_Eh_FCal;   //!
   TBranch        *b_ccc_Nh_PresE;   //!
   TBranch        *b_ccc_Eh_PresE;   //!
   TBranch        *b_ccc_Nh_Scint;   //!
   TBranch        *b_ccc_Eh_Scint;   //!
   TBranch        *b_cccEt_Et_Nh_Calo;   //!
   TBranch        *b_cccEt_Et_Eh_Calo;   //!
   TBranch        *b_cccEt_Et_Nh_EM;   //!
   TBranch        *b_cccEt_Et_Eh_EM;   //!
   TBranch        *b_cccEt_Et_Nh_HAD;   //!
   TBranch        *b_cccEt_Et_Eh_HAD;   //!
   TBranch        *b_cccEt_Et_Nh_PresB;   //!
   TBranch        *b_cccEt_Et_Eh_PresB;   //!
   TBranch        *b_cccEt_Et_Nh_EMB;   //!
   TBranch        *b_cccEt_Et_Eh_EMB;   //!
   TBranch        *b_cccEt_Et_Nh_EMEC;   //!
   TBranch        *b_cccEt_Et_Eh_EMEC;   //!
   TBranch        *b_cccEt_Et_Nh_Tile;   //!
   TBranch        *b_cccEt_Et_Eh_Tile;   //!
   TBranch        *b_cccEt_Et_Nh_TileGap;   //!
   TBranch        *b_cccEt_Et_Eh_TileGap;   //!
   TBranch        *b_cccEt_Et_Nh_HEC;   //!
   TBranch        *b_cccEt_Et_Eh_HEC;   //!
   TBranch        *b_cccEt_Et_Nh_FCal;   //!
   TBranch        *b_cccEt_Et_Eh_FCal;   //!
   TBranch        *b_cccEt_Et_Nh_PresE;   //!
   TBranch        *b_cccEt_Et_Eh_PresE;   //!
   TBranch        *b_cccEt_Et_Nh_Scint;   //!
   TBranch        *b_cccEt_Et_Eh_Scint;   //!
   TBranch        *b_cccEt_p_Nh_Calo;   //!
   TBranch        *b_cccEt_p_Eh_Calo;   //!
   TBranch        *b_cccEt_p_Nh_EM;   //!
   TBranch        *b_cccEt_p_Eh_EM;   //!
   TBranch        *b_cccEt_p_Nh_HAD;   //!
   TBranch        *b_cccEt_p_Eh_HAD;   //!
   TBranch        *b_cccEt_p_Nh_PresB;   //!
   TBranch        *b_cccEt_p_Eh_PresB;   //!
   TBranch        *b_cccEt_p_Nh_EMB;   //!
   TBranch        *b_cccEt_p_Eh_EMB;   //!
   TBranch        *b_cccEt_p_Nh_EMEC;   //!
   TBranch        *b_cccEt_p_Eh_EMEC;   //!
   TBranch        *b_cccEt_p_Nh_Tile;   //!
   TBranch        *b_cccEt_p_Eh_Tile;   //!
   TBranch        *b_cccEt_p_Nh_TileGap;   //!
   TBranch        *b_cccEt_p_Eh_TileGap;   //!
   TBranch        *b_cccEt_p_Nh_HEC;   //!
   TBranch        *b_cccEt_p_Eh_HEC;   //!
   TBranch        *b_cccEt_p_Nh_FCal;   //!
   TBranch        *b_cccEt_p_Eh_FCal;   //!
   TBranch        *b_cccEt_p_Nh_PresE;   //!
   TBranch        *b_cccEt_p_Eh_PresE;   //!
   TBranch        *b_cccEt_p_Nh_Scint;   //!
   TBranch        *b_cccEt_p_Eh_Scint;   //!
   TBranch        *b_cccEt_n_Nh_Calo;   //!
   TBranch        *b_cccEt_n_Eh_Calo;   //!
   TBranch        *b_cccEt_n_Nh_EM;   //!
   TBranch        *b_cccEt_n_Eh_EM;   //!
   TBranch        *b_cccEt_n_Nh_HAD;   //!
   TBranch        *b_cccEt_n_Eh_HAD;   //!
   TBranch        *b_cccEt_n_Nh_PresB;   //!
   TBranch        *b_cccEt_n_Eh_PresB;   //!
   TBranch        *b_cccEt_n_Nh_EMB;   //!
   TBranch        *b_cccEt_n_Eh_EMB;   //!
   TBranch        *b_cccEt_n_Nh_EMEC;   //!
   TBranch        *b_cccEt_n_Eh_EMEC;   //!
   TBranch        *b_cccEt_n_Nh_Tile;   //!
   TBranch        *b_cccEt_n_Eh_Tile;   //!
   TBranch        *b_cccEt_n_Nh_TileGap;   //!
   TBranch        *b_cccEt_n_Eh_TileGap;   //!
   TBranch        *b_cccEt_n_Nh_HEC;   //!
   TBranch        *b_cccEt_n_Eh_HEC;   //!
   TBranch        *b_cccEt_n_Nh_FCal;   //!
   TBranch        *b_cccEt_n_Eh_FCal;   //!
   TBranch        *b_cccEt_n_Nh_PresE;   //!
   TBranch        *b_cccEt_n_Eh_PresE;   //!
   TBranch        *b_cccEt_n_Nh_Scint;   //!
   TBranch        *b_cccEt_n_Eh_Scint;   //!
   TBranch        *b_lar_ncellA;   //!
   TBranch        *b_lar_ncellC;   //!
   TBranch        *b_lar_energyA;   //!
   TBranch        *b_lar_energyC;   //!
   TBranch        *b_lar_timeA;   //!
   TBranch        *b_lar_timeC;   //!
   TBranch        *b_lar_timeDiff;   //!
   TBranch        *b_TotalEt_n;   //!
   TBranch        *b_TotalEt_layer_eta;   //!
   TBranch        *b_TotalEt_layer_phi;   //!
   TBranch        *b_TotalEt_layer_area;   //!
   TBranch        *b_TotalEt_layer_sampling;   //!
   TBranch        *b_TotalEt_layer_sampling_calib;   //!
   TBranch        *b_trk_n;   //!
   TBranch        *b_trk_d0;   //!
   TBranch        *b_trk_z0;   //!
   TBranch        *b_trk_phi;   //!
   TBranch        *b_trk_theta;   //!
   TBranch        *b_trk_qoverp;   //!
   TBranch        *b_trk_pt;   //!
   TBranch        *b_trk_eta;   //!
   TBranch        *b_trk_err_d0;   //!
   TBranch        *b_trk_err_z0;   //!
   TBranch        *b_trk_err_phi;   //!
   TBranch        *b_trk_err_theta;   //!
   TBranch        *b_trk_err_qoverp;   //!
   TBranch        *b_trk_cov_d0_z0;   //!
   TBranch        *b_trk_cov_d0_phi;   //!
   TBranch        *b_trk_cov_d0_theta;   //!
   TBranch        *b_trk_cov_d0_qoverp;   //!
   TBranch        *b_trk_cov_z0_phi;   //!
   TBranch        *b_trk_cov_z0_theta;   //!
   TBranch        *b_trk_cov_z0_qoverp;   //!
   TBranch        *b_trk_cov_phi_theta;   //!
   TBranch        *b_trk_cov_phi_qoverp;   //!
   TBranch        *b_trk_cov_theta_qoverp;   //!
   TBranch        *b_trk_d0_wrtPV;   //!
   TBranch        *b_trk_z0_wrtPV;   //!
   TBranch        *b_trk_phi_wrtPV;   //!
   TBranch        *b_trk_err_d0_wrtPV;   //!
   TBranch        *b_trk_err_z0_wrtPV;   //!
   TBranch        *b_trk_err_phi_wrtPV;   //!
   TBranch        *b_trk_err_theta_wrtPV;   //!
   TBranch        *b_trk_err_qoverp_wrtPV;   //!
   TBranch        *b_trk_cov_d0_z0_wrtPV;   //!
   TBranch        *b_trk_cov_d0_phi_wrtPV;   //!
   TBranch        *b_trk_cov_d0_theta_wrtPV;   //!
   TBranch        *b_trk_cov_d0_qoverp_wrtPV;   //!
   TBranch        *b_trk_cov_z0_phi_wrtPV;   //!
   TBranch        *b_trk_cov_z0_theta_wrtPV;   //!
   TBranch        *b_trk_cov_z0_qoverp_wrtPV;   //!
   TBranch        *b_trk_cov_phi_theta_wrtPV;   //!
   TBranch        *b_trk_cov_phi_qoverp_wrtPV;   //!
   TBranch        *b_trk_cov_theta_qoverp_wrtPV;   //!
   TBranch        *b_trk_d0_wrtBS;   //!
   TBranch        *b_trk_z0_wrtBS;   //!
   TBranch        *b_trk_phi_wrtBS;   //!
   TBranch        *b_trk_err_d0_wrtBS;   //!
   TBranch        *b_trk_err_z0_wrtBS;   //!
   TBranch        *b_trk_err_phi_wrtBS;   //!
   TBranch        *b_trk_err_theta_wrtBS;   //!
   TBranch        *b_trk_err_qoverp_wrtBS;   //!
   TBranch        *b_trk_cov_d0_z0_wrtBS;   //!
   TBranch        *b_trk_cov_d0_phi_wrtBS;   //!
   TBranch        *b_trk_cov_d0_theta_wrtBS;   //!
   TBranch        *b_trk_cov_d0_qoverp_wrtBS;   //!
   TBranch        *b_trk_cov_z0_phi_wrtBS;   //!
   TBranch        *b_trk_cov_z0_theta_wrtBS;   //!
   TBranch        *b_trk_cov_z0_qoverp_wrtBS;   //!
   TBranch        *b_trk_cov_phi_theta_wrtBS;   //!
   TBranch        *b_trk_cov_phi_qoverp_wrtBS;   //!
   TBranch        *b_trk_cov_theta_qoverp_wrtBS;   //!
   TBranch        *b_trk_d0_wrtBL;   //!
   TBranch        *b_trk_z0_wrtBL;   //!
   TBranch        *b_trk_phi_wrtBL;   //!
   TBranch        *b_trk_d0_err_wrtBL;   //!
   TBranch        *b_trk_z0_err_wrtBL;   //!
   TBranch        *b_trk_phi_err_wrtBL;   //!
   TBranch        *b_trk_theta_err_wrtBL;   //!
   TBranch        *b_trk_qoverp_err_wrtBL;   //!
   TBranch        *b_trk_d0_z0_err_wrtBL;   //!
   TBranch        *b_trk_d0_phi_err_wrtBL;   //!
   TBranch        *b_trk_d0_theta_err_wrtBL;   //!
   TBranch        *b_trk_d0_qoverp_err_wrtBL;   //!
   TBranch        *b_trk_z0_phi_err_wrtBL;   //!
   TBranch        *b_trk_z0_theta_err_wrtBL;   //!
   TBranch        *b_trk_z0_qoverp_err_wrtBL;   //!
   TBranch        *b_trk_phi_theta_err_wrtBL;   //!
   TBranch        *b_trk_phi_qoverp_err_wrtBL;   //!
   TBranch        *b_trk_theta_qoverp_err_wrtBL;   //!
   TBranch        *b_trk_chi2;   //!
   TBranch        *b_trk_ndof;   //!
   TBranch        *b_trk_nBLHits;   //!
   TBranch        *b_trk_nPixHits;   //!
   TBranch        *b_trk_nSCTHits;   //!
   TBranch        *b_trk_nTRTHits;   //!
   TBranch        *b_trk_nTRTHighTHits;   //!
   TBranch        *b_trk_nTRTXenonHits;   //!
   TBranch        *b_trk_nPixHoles;   //!
   TBranch        *b_trk_nSCTHoles;   //!
   TBranch        *b_trk_nTRTHoles;   //!
   TBranch        *b_trk_nPixelDeadSensors;   //!
   TBranch        *b_trk_nSCTDeadSensors;   //!
   TBranch        *b_trk_nBLSharedHits;   //!
   TBranch        *b_trk_nPixSharedHits;   //!
   TBranch        *b_trk_nSCTSharedHits;   //!
   TBranch        *b_trk_nBLayerSplitHits;   //!
   TBranch        *b_trk_nPixSplitHits;   //!
   TBranch        *b_trk_expectBLayerHit;   //!
   TBranch        *b_trk_nMDTHits;   //!
   TBranch        *b_trk_nCSCEtaHits;   //!
   TBranch        *b_trk_nCSCPhiHits;   //!
   TBranch        *b_trk_nRPCEtaHits;   //!
   TBranch        *b_trk_nRPCPhiHits;   //!
   TBranch        *b_trk_nTGCEtaHits;   //!
   TBranch        *b_trk_nTGCPhiHits;   //!
   TBranch        *b_trk_nHits;   //!
   TBranch        *b_trk_nHoles;   //!
   TBranch        *b_trk_hitPattern;   //!
   TBranch        *b_trk_TRTHighTHitsRatio;   //!
   TBranch        *b_trk_TRTHighTOutliersRatio;   //!
   TBranch        *b_trk_pixeldEdx;   //!
   TBranch        *b_trk_nGoodHitsPixeldEdx;   //!
   TBranch        *b_trk_massPixeldEdx;   //!
   TBranch        *b_trk_likelihoodsPixeldEdx;   //!
   TBranch        *b_trk_fitter;   //!
   TBranch        *b_trk_patternReco1;   //!
   TBranch        *b_trk_patternReco2;   //!
   TBranch        *b_trk_trackProperties;   //!
   TBranch        *b_trk_particleHypothesis;   //!
   TBranch        *b_trk_blayerPrediction_x;   //!
   TBranch        *b_trk_blayerPrediction_y;   //!
   TBranch        *b_trk_blayerPrediction_z;   //!
   TBranch        *b_trk_blayerPrediction_locX;   //!
   TBranch        *b_trk_blayerPrediction_locY;   //!
   TBranch        *b_trk_blayerPrediction_err_locX;   //!
   TBranch        *b_trk_blayerPrediction_err_locY;   //!
   TBranch        *b_trk_blayerPrediction_etaDistToEdge;   //!
   TBranch        *b_trk_blayerPrediction_phiDistToEdge;   //!
   TBranch        *b_trk_blayerPrediction_detElementId;   //!
   TBranch        *b_trk_blayerPrediction_row;   //!
   TBranch        *b_trk_blayerPrediction_col;   //!
   TBranch        *b_trk_blayerPrediction_type;   //!
   TBranch        *b_trk_mc_probability;   //!
   TBranch        *b_trk_mc_barcode;   //!
   TBranch        *b_trk_mc_index;   //!
   TBranch        *b_ItrEMBkgrlayer_CaloBkgrEt;   //!
   TBranch        *b_ItrEMBkgrlayer_CaloBkgrRMS;   //!
   TBranch        *b_ItrEMBkgrlayer_CaloBkgrCounts;   //!
   TBranch        *b_ItrEMBkgrlayer_CaloBkgrEta;   //!
   TBranch        *b_ItrSeedJets_n;   //!
   TBranch        *b_ItrSeedJets_E;   //!
   TBranch        *b_ItrSeedJets_Et;   //!
   TBranch        *b_ItrSeedJets_pt;   //!
   TBranch        *b_ItrSeedJets_m;   //!
   TBranch        *b_ItrSeedJets_eta;   //!
   TBranch        *b_ItrSeedJets_phi;   //!
   TBranch        *b_antikt4Track_n;   //!
   TBranch        *b_antikt4Track_E;   //!
   TBranch        *b_antikt4Track_pt;   //!
   TBranch        *b_antikt4Track_m;   //!
   TBranch        *b_antikt4Track_eta;   //!
   TBranch        *b_antikt4Track_phi;   //!
   TBranch        *b_antikt4Track_const_n;   //!
   TBranch        *b_antikt4Track_const_pt;   //!
   TBranch        *b_antikt4Track_const_eta;   //!
   TBranch        *b_antikt4Track_const_phi;   //!
   TBranch        *b_antikt4Track_const_chi2;   //!
   TBranch        *b_antikt4Track_const_d0_wrtPV;   //!
   TBranch        *b_antikt4Track_const_z0_wrtPV;   //!
   TBranch        *b_antikt4Track_const_phi0_wrtPV;   //!
   TBranch        *b_antikt4Track_const_theta_wrtPV;   //!
   TBranch        *b_antikt4Track_const_qop;   //!
   TBranch        *b_antikt4Track_const_ndof;   //!
   TBranch        *b_antikt4Track_const_nBLayerHits;   //!
   TBranch        *b_antikt4Track_const_nPixelHits;   //!
   TBranch        *b_antikt4Track_const_nSCTHits;   //!
   TBranch        *b_antikt4Track_const_nTRTHits;   //!
   TBranch        *b_antikt2HIItrEM_n;   //!
   TBranch        *b_antikt2HIItrEM_E;   //!
   TBranch        *b_antikt2HIItrEM_Et;   //!
   TBranch        *b_antikt2HIItrEM_pt;   //!
   TBranch        *b_antikt2HIItrEM_m;   //!
   TBranch        *b_antikt2HIItrEM_eta;   //!
   TBranch        *b_antikt2HIItrEM_phi;   //!
   TBranch        *b_antikt2HIItrEM_SubtractedEt;   //!
   TBranch        *b_antikt2HIItrEM_NoFlow;   //!
   TBranch        *b_antikt2HIItrEM_UncalibEt;   //!
   TBranch        *b_antikt2HIItrEM_PassedFR;   //!
   TBranch        *b_antikt2HIItrEM_const_n;   //!
   TBranch        *b_antikt2HIItrEM_const_et;   //!
   TBranch        *b_antikt2HIItrEM_const_eta;   //!
   TBranch        *b_antikt2HIItrEM_const_phi;   //!
   TBranch        *b_antikt2HIItrEM_sampling_et;   //!
   TBranch        *b_antikt2HIItrEM_sampling_et_unsubtr;   //!
   TBranch        *b_antikt2HIItrEM_bad_cell_n;   //!
   TBranch        *b_antikt2HIItrEM_bad_cell_et;   //!
   TBranch        *b_antikt2HIItrEM_bad_cell_area;   //!
   TBranch        *b_antikt2HIItrEM_empty_cell_n;   //!
   TBranch        *b_antikt2HIItrEM_empty_cell_et;   //!
   TBranch        *b_antikt2HIItrEM_empty_cell_area;   //!
   TBranch        *b_antikt2HIItrEM_total_cell_n;   //!
   TBranch        *b_antikt2HIItrEM_total_cell_et;   //!
   TBranch        *b_antikt2HIItrEM_total_cell_area;   //!
   TBranch        *b_antikt2HIItrEM_n90;   //!
   TBranch        *b_antikt2HIItrEM_fracSamplingMax;   //!
   TBranch        *b_antikt2HIItrEM_SamplingMax;   //!
   TBranch        *b_antikt2HIItrEM_n90constituents;   //!
   TBranch        *b_antikt2HIItrEM_Timing;   //!
   TBranch        *b_antikt2HIItrEM_LArQuality;   //!
   TBranch        *b_antikt2HIItrEM_HECQuality;   //!
   TBranch        *b_antikt2HIItrEM_TileQuality;   //!
   TBranch        *b_antikt2HIItrEM_NegativeE;   //!
   TBranch        *b_antikt2HIItrEM_AverageLArQF;   //!
   TBranch        *b_antikt2HIItrEM_sumPtTrk;   //!
   TBranch        *b_antikt2HIItrEM_BCH_CORR_CELL;   //!
   TBranch        *b_antikt2HIItrEM_BCH_CORR_DOTX;   //!
   TBranch        *b_antikt2HIItrEM_BCH_CORR_JET;   //!
   TBranch        *b_antikt2HIItrEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_antikt2HIItrEM_ENG_BAD_CELLS;   //!
   TBranch        *b_antikt2HIItrEM_N_BAD_CELLS;   //!
   TBranch        *b_antikt2HIItrEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_antikt2HIItrEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_antikt2HIItrEM_emfrac;   //!
   TBranch        *b_antikt2HIItrEM_hecf;   //!
   TBranch        *b_antikt2HIItrEM_tgap3f;   //!
   TBranch        *b_antikt2HIItrEM_isUgly;   //!
   TBranch        *b_antikt2HIItrEM_isBadLooseMinus;   //!
   TBranch        *b_antikt2HIItrEM_isBadLoose;   //!
   TBranch        *b_antikt2HIItrEM_isBadMedium;   //!
   TBranch        *b_antikt2HIItrEM_isBadTight;   //!
   TBranch        *b_antikt2HIItrEM_jvtx_x;   //!
   TBranch        *b_antikt2HIItrEM_jvtx_y;   //!
   TBranch        *b_antikt2HIItrEM_jvtx_z;   //!
   TBranch        *b_antikt2HIItrEM_jvtxf;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_Comb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_IP2D;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_IP3D;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_SV0;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_SV1;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_SV2;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_SoftMuonTagChi2;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_SecondSoftMuonTagChi2;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_JetFitterTagNN;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_JetFitterCOMBNN;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_MV1;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_MV2;   //!
   TBranch        *b_antikt2HIItrEM_flavor_weight_GbbNN;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_label;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_dRminToB;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_dRminToC;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_dRminToT;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_BHadronpdg;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_vx_x;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_vx_y;   //!
   TBranch        *b_antikt2HIItrEM_flavor_truth_vx_z;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_assoctrk_signOfIP;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_assoctrk_signOfZIP;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_gentruthlepton_origin;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_gentruthlepton_slbarcode;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip2d_pu;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip2d_pb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip2d_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip2d_ntrk;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip3d_pu;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip3d_pb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip3d_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ip3d_ntrk;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jetprob_ntrk;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv1_pu;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv1_pb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv1_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv2_pu;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv2_pb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv2_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_pu;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_pb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_pc;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfitcomb_pu;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfitcomb_pb;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfitcomb_pc;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfitcomb_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_gbbnn_nMatchingTracks;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_gbbnn_trkJetWidth;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_nvtx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_nvtx1t;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_ntrkAtVx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_efrc;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_mass;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_sig3d;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_deltaPhi;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_jfit_deltaEta;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_d0val;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_d0sig;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_z0val;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_z0sig;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_w2D;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_w3D;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_pJP;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_pJPneg;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_grade;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_ipplus_trk_isFromV0;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_ntrkv;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_ntrkj;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_n2t;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_mass;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_efrc;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_x;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_y;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_z;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_err_x;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_err_y;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_err_z;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_cov_xy;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_cov_xz;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_cov_yz;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_chi2;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_ndof;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_svp_ntrk;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_ntrkv;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_ntrkj;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_n2t;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_mass;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_efrc;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_x;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_y;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_z;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_err_x;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_err_y;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_err_z;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_cov_xy;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_cov_xz;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_cov_yz;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_chi2;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_ndof;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_sv0p_ntrk;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuoninfo_muon_w;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuoninfo_muon_pTRel;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuoninfo_muon_dRJet;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuon2info_muon2_w;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuon2info_muon2_pTRel;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuon2info_muon2_dRJet;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuonchi2info_muon_w;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_w;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_msvp_isValid;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_msvp_ntrkv;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_msvp_ntrkj;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_msvp_n2t;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_msvp_nVtx;   //!
   TBranch        *b_antikt2HIItrEM_flavor_component_msvp_normWeightedDist;   //!
   TBranch        *b_antikt3HIItrEM_n;   //!
   TBranch        *b_antikt3HIItrEM_E;   //!
   TBranch        *b_antikt3HIItrEM_Et;   //!
   TBranch        *b_antikt3HIItrEM_pt;   //!
   TBranch        *b_antikt3HIItrEM_m;   //!
   TBranch        *b_antikt3HIItrEM_eta;   //!
   TBranch        *b_antikt3HIItrEM_phi;   //!
   TBranch        *b_antikt3HIItrEM_SubtractedEt;   //!
   TBranch        *b_antikt3HIItrEM_NoFlow;   //!
   TBranch        *b_antikt3HIItrEM_UncalibEt;   //!
   TBranch        *b_antikt3HIItrEM_PassedFR;   //!
   TBranch        *b_antikt3HIItrEM_const_n;   //!
   TBranch        *b_antikt3HIItrEM_const_et;   //!
   TBranch        *b_antikt3HIItrEM_const_eta;   //!
   TBranch        *b_antikt3HIItrEM_const_phi;   //!
   TBranch        *b_antikt3HIItrEM_sampling_et;   //!
   TBranch        *b_antikt3HIItrEM_sampling_et_unsubtr;   //!
   TBranch        *b_antikt3HIItrEM_bad_cell_n;   //!
   TBranch        *b_antikt3HIItrEM_bad_cell_et;   //!
   TBranch        *b_antikt3HIItrEM_bad_cell_area;   //!
   TBranch        *b_antikt3HIItrEM_empty_cell_n;   //!
   TBranch        *b_antikt3HIItrEM_empty_cell_et;   //!
   TBranch        *b_antikt3HIItrEM_empty_cell_area;   //!
   TBranch        *b_antikt3HIItrEM_total_cell_n;   //!
   TBranch        *b_antikt3HIItrEM_total_cell_et;   //!
   TBranch        *b_antikt3HIItrEM_total_cell_area;   //!
   TBranch        *b_antikt3HIItrEM_n90;   //!
   TBranch        *b_antikt3HIItrEM_fracSamplingMax;   //!
   TBranch        *b_antikt3HIItrEM_SamplingMax;   //!
   TBranch        *b_antikt3HIItrEM_n90constituents;   //!
   TBranch        *b_antikt3HIItrEM_Timing;   //!
   TBranch        *b_antikt3HIItrEM_LArQuality;   //!
   TBranch        *b_antikt3HIItrEM_HECQuality;   //!
   TBranch        *b_antikt3HIItrEM_TileQuality;   //!
   TBranch        *b_antikt3HIItrEM_NegativeE;   //!
   TBranch        *b_antikt3HIItrEM_AverageLArQF;   //!
   TBranch        *b_antikt3HIItrEM_sumPtTrk;   //!
   TBranch        *b_antikt3HIItrEM_BCH_CORR_CELL;   //!
   TBranch        *b_antikt3HIItrEM_BCH_CORR_DOTX;   //!
   TBranch        *b_antikt3HIItrEM_BCH_CORR_JET;   //!
   TBranch        *b_antikt3HIItrEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_antikt3HIItrEM_ENG_BAD_CELLS;   //!
   TBranch        *b_antikt3HIItrEM_N_BAD_CELLS;   //!
   TBranch        *b_antikt3HIItrEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_antikt3HIItrEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_antikt3HIItrEM_emfrac;   //!
   TBranch        *b_antikt3HIItrEM_hecf;   //!
   TBranch        *b_antikt3HIItrEM_tgap3f;   //!
   TBranch        *b_antikt3HIItrEM_isUgly;   //!
   TBranch        *b_antikt3HIItrEM_isBadLooseMinus;   //!
   TBranch        *b_antikt3HIItrEM_isBadLoose;   //!
   TBranch        *b_antikt3HIItrEM_isBadMedium;   //!
   TBranch        *b_antikt3HIItrEM_isBadTight;   //!
   TBranch        *b_antikt3HIItrEM_jvtx_x;   //!
   TBranch        *b_antikt3HIItrEM_jvtx_y;   //!
   TBranch        *b_antikt3HIItrEM_jvtx_z;   //!
   TBranch        *b_antikt3HIItrEM_jvtxf;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_Comb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_IP2D;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_IP3D;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_SV0;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_SV1;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_SV2;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_SoftMuonTagChi2;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_SecondSoftMuonTagChi2;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_JetFitterTagNN;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_JetFitterCOMBNN;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_MV1;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_MV2;   //!
   TBranch        *b_antikt3HIItrEM_flavor_weight_GbbNN;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_label;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_dRminToB;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_dRminToC;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_dRminToT;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_BHadronpdg;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_vx_x;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_vx_y;   //!
   TBranch        *b_antikt3HIItrEM_flavor_truth_vx_z;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_assoctrk_signOfIP;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_assoctrk_signOfZIP;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_gentruthlepton_origin;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_gentruthlepton_slbarcode;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip2d_pu;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip2d_pb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip2d_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip2d_ntrk;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip3d_pu;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip3d_pb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip3d_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ip3d_ntrk;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jetprob_ntrk;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv1_pu;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv1_pb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv1_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv2_pu;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv2_pb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv2_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_pu;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_pb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_pc;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfitcomb_pu;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfitcomb_pb;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfitcomb_pc;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfitcomb_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_gbbnn_nMatchingTracks;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_gbbnn_trkJetWidth;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_nvtx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_nvtx1t;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_ntrkAtVx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_efrc;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_mass;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_sig3d;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_deltaPhi;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_jfit_deltaEta;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_d0val;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_d0sig;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_z0val;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_z0sig;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_w2D;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_w3D;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_pJP;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_pJPneg;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_grade;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_ipplus_trk_isFromV0;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_ntrkv;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_ntrkj;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_n2t;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_mass;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_efrc;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_x;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_y;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_z;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_err_x;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_err_y;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_err_z;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_cov_xy;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_cov_xz;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_cov_yz;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_chi2;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_ndof;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_svp_ntrk;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_ntrkv;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_ntrkj;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_n2t;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_mass;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_efrc;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_x;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_y;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_z;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_err_x;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_err_y;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_err_z;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_cov_xy;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_cov_xz;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_cov_yz;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_chi2;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_ndof;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_sv0p_ntrk;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuoninfo_muon_w;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuoninfo_muon_pTRel;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuoninfo_muon_dRJet;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuon2info_muon2_w;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuon2info_muon2_pTRel;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuon2info_muon2_dRJet;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuonchi2info_muon_w;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_w;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_msvp_isValid;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_msvp_ntrkv;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_msvp_ntrkj;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_msvp_n2t;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_msvp_nVtx;   //!
   TBranch        *b_antikt3HIItrEM_flavor_component_msvp_normWeightedDist;   //!
   TBranch        *b_antikt4HIItrEM_n;   //!
   TBranch        *b_antikt4HIItrEM_E;   //!
   TBranch        *b_antikt4HIItrEM_Et;   //!
   TBranch        *b_antikt4HIItrEM_pt;   //!
   TBranch        *b_antikt4HIItrEM_m;   //!
   TBranch        *b_antikt4HIItrEM_eta;   //!
   TBranch        *b_antikt4HIItrEM_phi;   //!
   TBranch        *b_antikt4HIItrEM_SubtractedEt;   //!
   TBranch        *b_antikt4HIItrEM_NoFlow;   //!
   TBranch        *b_antikt4HIItrEM_UncalibEt;   //!
   TBranch        *b_antikt4HIItrEM_PassedFR;   //!
   TBranch        *b_antikt4HIItrEM_const_n;   //!
   TBranch        *b_antikt4HIItrEM_const_et;   //!
   TBranch        *b_antikt4HIItrEM_const_eta;   //!
   TBranch        *b_antikt4HIItrEM_const_phi;   //!
   TBranch        *b_antikt4HIItrEM_sampling_et;   //!
   TBranch        *b_antikt4HIItrEM_sampling_et_unsubtr;   //!
   TBranch        *b_antikt4HIItrEM_bad_cell_n;   //!
   TBranch        *b_antikt4HIItrEM_bad_cell_et;   //!
   TBranch        *b_antikt4HIItrEM_bad_cell_area;   //!
   TBranch        *b_antikt4HIItrEM_empty_cell_n;   //!
   TBranch        *b_antikt4HIItrEM_empty_cell_et;   //!
   TBranch        *b_antikt4HIItrEM_empty_cell_area;   //!
   TBranch        *b_antikt4HIItrEM_total_cell_n;   //!
   TBranch        *b_antikt4HIItrEM_total_cell_et;   //!
   TBranch        *b_antikt4HIItrEM_total_cell_area;   //!
   TBranch        *b_antikt4HIItrEM_n90;   //!
   TBranch        *b_antikt4HIItrEM_fracSamplingMax;   //!
   TBranch        *b_antikt4HIItrEM_SamplingMax;   //!
   TBranch        *b_antikt4HIItrEM_n90constituents;   //!
   TBranch        *b_antikt4HIItrEM_Timing;   //!
   TBranch        *b_antikt4HIItrEM_LArQuality;   //!
   TBranch        *b_antikt4HIItrEM_HECQuality;   //!
   TBranch        *b_antikt4HIItrEM_TileQuality;   //!
   TBranch        *b_antikt4HIItrEM_NegativeE;   //!
   TBranch        *b_antikt4HIItrEM_AverageLArQF;   //!
   TBranch        *b_antikt4HIItrEM_sumPtTrk;   //!
   TBranch        *b_antikt4HIItrEM_BCH_CORR_CELL;   //!
   TBranch        *b_antikt4HIItrEM_BCH_CORR_DOTX;   //!
   TBranch        *b_antikt4HIItrEM_BCH_CORR_JET;   //!
   TBranch        *b_antikt4HIItrEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_antikt4HIItrEM_ENG_BAD_CELLS;   //!
   TBranch        *b_antikt4HIItrEM_N_BAD_CELLS;   //!
   TBranch        *b_antikt4HIItrEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_antikt4HIItrEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_antikt4HIItrEM_emfrac;   //!
   TBranch        *b_antikt4HIItrEM_hecf;   //!
   TBranch        *b_antikt4HIItrEM_tgap3f;   //!
   TBranch        *b_antikt4HIItrEM_isUgly;   //!
   TBranch        *b_antikt4HIItrEM_isBadLooseMinus;   //!
   TBranch        *b_antikt4HIItrEM_isBadLoose;   //!
   TBranch        *b_antikt4HIItrEM_isBadMedium;   //!
   TBranch        *b_antikt4HIItrEM_isBadTight;   //!
   TBranch        *b_antikt4HIItrEM_jvtx_x;   //!
   TBranch        *b_antikt4HIItrEM_jvtx_y;   //!
   TBranch        *b_antikt4HIItrEM_jvtx_z;   //!
   TBranch        *b_antikt4HIItrEM_jvtxf;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_Comb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_IP2D;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_IP3D;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_SV0;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_SV1;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_SV2;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_SoftMuonTagChi2;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_SecondSoftMuonTagChi2;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_JetFitterTagNN;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_JetFitterCOMBNN;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_MV1;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_MV2;   //!
   TBranch        *b_antikt4HIItrEM_flavor_weight_GbbNN;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_label;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_dRminToB;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_dRminToC;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_dRminToT;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_BHadronpdg;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_vx_x;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_vx_y;   //!
   TBranch        *b_antikt4HIItrEM_flavor_truth_vx_z;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_assoctrk_signOfIP;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_assoctrk_signOfZIP;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_gentruthlepton_origin;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_gentruthlepton_slbarcode;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip2d_pu;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip2d_pb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip2d_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip2d_ntrk;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip3d_pu;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip3d_pb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip3d_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ip3d_ntrk;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jetprob_ntrk;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv1_pu;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv1_pb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv1_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv2_pu;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv2_pb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv2_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_pu;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_pb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_pc;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfitcomb_pu;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfitcomb_pb;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfitcomb_pc;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfitcomb_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_gbbnn_nMatchingTracks;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_gbbnn_trkJetWidth;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_nvtx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_nvtx1t;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_ntrkAtVx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_efrc;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_mass;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_sig3d;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_deltaPhi;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_jfit_deltaEta;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_d0val;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_d0sig;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_z0val;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_z0sig;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_w2D;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_w3D;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_pJP;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_pJPneg;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_grade;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_ipplus_trk_isFromV0;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_ntrkv;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_ntrkj;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_n2t;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_mass;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_efrc;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_x;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_y;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_z;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_err_x;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_err_y;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_err_z;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_cov_xy;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_cov_xz;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_cov_yz;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_chi2;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_ndof;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_svp_ntrk;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_ntrkv;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_ntrkj;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_n2t;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_mass;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_efrc;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_x;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_y;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_z;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_err_x;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_err_y;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_err_z;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_cov_xy;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_cov_xz;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_cov_yz;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_chi2;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_ndof;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_sv0p_ntrk;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuoninfo_muon_w;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuoninfo_muon_pTRel;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuoninfo_muon_dRJet;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuon2info_muon2_w;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuon2info_muon2_pTRel;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuon2info_muon2_dRJet;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuonchi2info_muon_w;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_w;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_msvp_isValid;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_msvp_ntrkv;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_msvp_ntrkj;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_msvp_n2t;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_msvp_nVtx;   //!
   TBranch        *b_antikt4HIItrEM_flavor_component_msvp_normWeightedDist;   //!
   TBranch        *b_antikt5HIItrEM_n;   //!
   TBranch        *b_antikt5HIItrEM_E;   //!
   TBranch        *b_antikt5HIItrEM_Et;   //!
   TBranch        *b_antikt5HIItrEM_pt;   //!
   TBranch        *b_antikt5HIItrEM_m;   //!
   TBranch        *b_antikt5HIItrEM_eta;   //!
   TBranch        *b_antikt5HIItrEM_phi;   //!
   TBranch        *b_antikt5HIItrEM_SubtractedEt;   //!
   TBranch        *b_antikt5HIItrEM_NoFlow;   //!
   TBranch        *b_antikt5HIItrEM_UncalibEt;   //!
   TBranch        *b_antikt5HIItrEM_PassedFR;   //!
   TBranch        *b_antikt5HIItrEM_const_n;   //!
   TBranch        *b_antikt5HIItrEM_const_et;   //!
   TBranch        *b_antikt5HIItrEM_const_eta;   //!
   TBranch        *b_antikt5HIItrEM_const_phi;   //!
   TBranch        *b_antikt5HIItrEM_sampling_et;   //!
   TBranch        *b_antikt5HIItrEM_sampling_et_unsubtr;   //!
   TBranch        *b_antikt5HIItrEM_bad_cell_n;   //!
   TBranch        *b_antikt5HIItrEM_bad_cell_et;   //!
   TBranch        *b_antikt5HIItrEM_bad_cell_area;   //!
   TBranch        *b_antikt5HIItrEM_empty_cell_n;   //!
   TBranch        *b_antikt5HIItrEM_empty_cell_et;   //!
   TBranch        *b_antikt5HIItrEM_empty_cell_area;   //!
   TBranch        *b_antikt5HIItrEM_total_cell_n;   //!
   TBranch        *b_antikt5HIItrEM_total_cell_et;   //!
   TBranch        *b_antikt5HIItrEM_total_cell_area;   //!
   TBranch        *b_antikt5HIItrEM_n90;   //!
   TBranch        *b_antikt5HIItrEM_fracSamplingMax;   //!
   TBranch        *b_antikt5HIItrEM_SamplingMax;   //!
   TBranch        *b_antikt5HIItrEM_n90constituents;   //!
   TBranch        *b_antikt5HIItrEM_Timing;   //!
   TBranch        *b_antikt5HIItrEM_LArQuality;   //!
   TBranch        *b_antikt5HIItrEM_HECQuality;   //!
   TBranch        *b_antikt5HIItrEM_TileQuality;   //!
   TBranch        *b_antikt5HIItrEM_NegativeE;   //!
   TBranch        *b_antikt5HIItrEM_AverageLArQF;   //!
   TBranch        *b_antikt5HIItrEM_sumPtTrk;   //!
   TBranch        *b_antikt5HIItrEM_BCH_CORR_CELL;   //!
   TBranch        *b_antikt5HIItrEM_BCH_CORR_DOTX;   //!
   TBranch        *b_antikt5HIItrEM_BCH_CORR_JET;   //!
   TBranch        *b_antikt5HIItrEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_antikt5HIItrEM_ENG_BAD_CELLS;   //!
   TBranch        *b_antikt5HIItrEM_N_BAD_CELLS;   //!
   TBranch        *b_antikt5HIItrEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_antikt5HIItrEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_antikt5HIItrEM_emfrac;   //!
   TBranch        *b_antikt5HIItrEM_hecf;   //!
   TBranch        *b_antikt5HIItrEM_tgap3f;   //!
   TBranch        *b_antikt5HIItrEM_isUgly;   //!
   TBranch        *b_antikt5HIItrEM_isBadLooseMinus;   //!
   TBranch        *b_antikt5HIItrEM_isBadLoose;   //!
   TBranch        *b_antikt5HIItrEM_isBadMedium;   //!
   TBranch        *b_antikt5HIItrEM_isBadTight;   //!
   TBranch        *b_antikt5HIItrEM_jvtx_x;   //!
   TBranch        *b_antikt5HIItrEM_jvtx_y;   //!
   TBranch        *b_antikt5HIItrEM_jvtx_z;   //!
   TBranch        *b_antikt5HIItrEM_jvtxf;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_Comb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_IP2D;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_IP3D;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_SV0;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_SV1;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_SV2;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_SoftMuonTagChi2;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_SecondSoftMuonTagChi2;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_JetFitterTagNN;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_JetFitterCOMBNN;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_MV1;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_MV2;   //!
   TBranch        *b_antikt5HIItrEM_flavor_weight_GbbNN;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_label;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_dRminToB;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_dRminToC;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_dRminToT;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_BHadronpdg;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_vx_x;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_vx_y;   //!
   TBranch        *b_antikt5HIItrEM_flavor_truth_vx_z;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_assoctrk_signOfIP;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_assoctrk_signOfZIP;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_gentruthlepton_origin;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_gentruthlepton_slbarcode;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip2d_pu;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip2d_pb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip2d_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip2d_ntrk;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip3d_pu;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip3d_pb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip3d_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ip3d_ntrk;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jetprob_ntrk;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv1_pu;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv1_pb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv1_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv2_pu;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv2_pb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv2_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_pu;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_pb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_pc;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfitcomb_pu;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfitcomb_pb;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfitcomb_pc;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfitcomb_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_gbbnn_nMatchingTracks;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_gbbnn_trkJetWidth;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_nvtx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_nvtx1t;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_ntrkAtVx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_efrc;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_mass;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_sig3d;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_deltaPhi;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_jfit_deltaEta;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_d0val;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_d0sig;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_z0val;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_z0sig;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_w2D;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_w3D;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_pJP;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_pJPneg;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_grade;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_ipplus_trk_isFromV0;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_ntrkv;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_ntrkj;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_n2t;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_mass;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_efrc;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_x;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_y;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_z;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_err_x;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_err_y;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_err_z;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_cov_xy;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_cov_xz;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_cov_yz;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_chi2;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_ndof;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_svp_ntrk;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_ntrkv;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_ntrkj;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_n2t;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_mass;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_efrc;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_x;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_y;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_z;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_err_x;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_err_y;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_err_z;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_cov_xy;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_cov_xz;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_cov_yz;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_chi2;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_ndof;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_sv0p_ntrk;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuoninfo_muon_w;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuoninfo_muon_pTRel;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuoninfo_muon_dRJet;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuon2info_muon2_w;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuon2info_muon2_pTRel;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuon2info_muon2_dRJet;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuonchi2info_muon_w;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_w;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_msvp_isValid;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_msvp_ntrkv;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_msvp_ntrkj;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_msvp_n2t;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_msvp_nVtx;   //!
   TBranch        *b_antikt5HIItrEM_flavor_component_msvp_normWeightedDist;   //!
   TBranch        *b_antikt6HIItrEM_n;   //!
   TBranch        *b_antikt6HIItrEM_E;   //!
   TBranch        *b_antikt6HIItrEM_Et;   //!
   TBranch        *b_antikt6HIItrEM_pt;   //!
   TBranch        *b_antikt6HIItrEM_m;   //!
   TBranch        *b_antikt6HIItrEM_eta;   //!
   TBranch        *b_antikt6HIItrEM_phi;   //!
   TBranch        *b_antikt6HIItrEM_SubtractedEt;   //!
   TBranch        *b_antikt6HIItrEM_NoFlow;   //!
   TBranch        *b_antikt6HIItrEM_UncalibEt;   //!
   TBranch        *b_antikt6HIItrEM_PassedFR;   //!
   TBranch        *b_antikt6HIItrEM_const_n;   //!
   TBranch        *b_antikt6HIItrEM_const_et;   //!
   TBranch        *b_antikt6HIItrEM_const_eta;   //!
   TBranch        *b_antikt6HIItrEM_const_phi;   //!
   TBranch        *b_antikt6HIItrEM_sampling_et;   //!
   TBranch        *b_antikt6HIItrEM_sampling_et_unsubtr;   //!
   TBranch        *b_antikt6HIItrEM_bad_cell_n;   //!
   TBranch        *b_antikt6HIItrEM_bad_cell_et;   //!
   TBranch        *b_antikt6HIItrEM_bad_cell_area;   //!
   TBranch        *b_antikt6HIItrEM_empty_cell_n;   //!
   TBranch        *b_antikt6HIItrEM_empty_cell_et;   //!
   TBranch        *b_antikt6HIItrEM_empty_cell_area;   //!
   TBranch        *b_antikt6HIItrEM_total_cell_n;   //!
   TBranch        *b_antikt6HIItrEM_total_cell_et;   //!
   TBranch        *b_antikt6HIItrEM_total_cell_area;   //!
   TBranch        *b_antikt6HIItrEM_n90;   //!
   TBranch        *b_antikt6HIItrEM_fracSamplingMax;   //!
   TBranch        *b_antikt6HIItrEM_SamplingMax;   //!
   TBranch        *b_antikt6HIItrEM_n90constituents;   //!
   TBranch        *b_antikt6HIItrEM_Timing;   //!
   TBranch        *b_antikt6HIItrEM_LArQuality;   //!
   TBranch        *b_antikt6HIItrEM_HECQuality;   //!
   TBranch        *b_antikt6HIItrEM_TileQuality;   //!
   TBranch        *b_antikt6HIItrEM_NegativeE;   //!
   TBranch        *b_antikt6HIItrEM_AverageLArQF;   //!
   TBranch        *b_antikt6HIItrEM_sumPtTrk;   //!
   TBranch        *b_antikt6HIItrEM_BCH_CORR_CELL;   //!
   TBranch        *b_antikt6HIItrEM_BCH_CORR_DOTX;   //!
   TBranch        *b_antikt6HIItrEM_BCH_CORR_JET;   //!
   TBranch        *b_antikt6HIItrEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_antikt6HIItrEM_ENG_BAD_CELLS;   //!
   TBranch        *b_antikt6HIItrEM_N_BAD_CELLS;   //!
   TBranch        *b_antikt6HIItrEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_antikt6HIItrEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_antikt6HIItrEM_emfrac;   //!
   TBranch        *b_antikt6HIItrEM_hecf;   //!
   TBranch        *b_antikt6HIItrEM_tgap3f;   //!
   TBranch        *b_antikt6HIItrEM_isUgly;   //!
   TBranch        *b_antikt6HIItrEM_isBadLooseMinus;   //!
   TBranch        *b_antikt6HIItrEM_isBadLoose;   //!
   TBranch        *b_antikt6HIItrEM_isBadMedium;   //!
   TBranch        *b_antikt6HIItrEM_isBadTight;   //!
   TBranch        *b_antikt6HIItrEM_jvtx_x;   //!
   TBranch        *b_antikt6HIItrEM_jvtx_y;   //!
   TBranch        *b_antikt6HIItrEM_jvtx_z;   //!
   TBranch        *b_antikt6HIItrEM_jvtxf;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_Comb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_IP2D;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_IP3D;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_SV0;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_SV1;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_SV2;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_SoftMuonTagChi2;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_SecondSoftMuonTagChi2;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_JetFitterTagNN;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_JetFitterCOMBNN;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_MV1;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_MV2;   //!
   TBranch        *b_antikt6HIItrEM_flavor_weight_GbbNN;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_label;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_dRminToB;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_dRminToC;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_dRminToT;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_BHadronpdg;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_vx_x;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_vx_y;   //!
   TBranch        *b_antikt6HIItrEM_flavor_truth_vx_z;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_assoctrk_signOfIP;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_assoctrk_signOfZIP;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_gentruthlepton_origin;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_gentruthlepton_slbarcode;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip2d_pu;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip2d_pb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip2d_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip2d_ntrk;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip3d_pu;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip3d_pb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip3d_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ip3d_ntrk;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jetprob_ntrk;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv1_pu;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv1_pb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv1_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv2_pu;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv2_pb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv2_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_pu;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_pb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_pc;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfitcomb_pu;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfitcomb_pb;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfitcomb_pc;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfitcomb_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_gbbnn_nMatchingTracks;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_gbbnn_trkJetWidth;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_nvtx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_nvtx1t;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_ntrkAtVx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_efrc;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_mass;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_sig3d;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_deltaPhi;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_jfit_deltaEta;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_d0val;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_d0sig;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_z0val;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_z0sig;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_w2D;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_w3D;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_pJP;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_pJPneg;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_grade;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_ipplus_trk_isFromV0;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_ntrkv;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_ntrkj;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_n2t;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_mass;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_efrc;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_x;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_y;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_z;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_err_x;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_err_y;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_err_z;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_cov_xy;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_cov_xz;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_cov_yz;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_chi2;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_ndof;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_svp_ntrk;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_ntrkv;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_ntrkj;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_n2t;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_mass;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_efrc;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_x;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_y;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_z;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_err_x;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_err_y;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_err_z;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_cov_xy;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_cov_xz;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_cov_yz;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_chi2;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_ndof;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_sv0p_ntrk;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuoninfo_muon_w;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuoninfo_muon_pTRel;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuoninfo_muon_dRJet;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuon2info_muon2_w;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuon2info_muon2_pTRel;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuon2info_muon2_dRJet;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuonchi2info_muon_w;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuonchi2info_muon_pTRel;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuonchi2info_muon_dRJet;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_w;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_msvp_isValid;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_msvp_ntrkv;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_msvp_ntrkj;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_msvp_n2t;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_msvp_nVtx;   //!
   TBranch        *b_antikt6HIItrEM_flavor_component_msvp_normWeightedDist;   //!
   TBranch        *b_ItrEMFlowBkgrlayer_CaloBkgrEt;   //!
   TBranch        *b_ItrEMFlowBkgrlayer_CaloBkgrRMS;   //!
   TBranch        *b_ItrEMFlowBkgrlayer_CaloBkgrCounts;   //!
   TBranch        *b_ItrEMFlowBkgrlayer_CaloBkgrEta;   //!
   TBranch        *b_JetFlow_PsiFCAL0_w;   //!
   TBranch        *b_JetFlow_PsiPFCAL0_w;   //!
   TBranch        *b_JetFlow_PsiNFCAL0_w;   //!
   TBranch        *b_JetFlow_EtInLayer;   //!
   TBranch        *b_JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_JetFlow_AvgV2fromCalo;   //!
   TBranch        *b_JetFlow_PsiHICaloUtilLayers;   //!
   TBranch        *b_JetFlow_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_JetFlow_PsiPtrack;   //!
   TBranch        *b_JetFlow_PsiNtrack;   //!
   TBranch        *b_JetFlow_v2FCAL0sil;   //!
   TBranch        *b_JetFlow_v2track;   //!
   TBranch        *b_JetFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_antikt4HIItrEMFlow_n;   //!
   TBranch        *b_antikt4HIItrEMFlow_E;   //!
   TBranch        *b_antikt4HIItrEMFlow_Et;   //!
   TBranch        *b_antikt4HIItrEMFlow_pt;   //!
   TBranch        *b_antikt4HIItrEMFlow_m;   //!
   TBranch        *b_antikt4HIItrEMFlow_eta;   //!
   TBranch        *b_antikt4HIItrEMFlow_phi;   //!
   TBranch        *b_antikt4HIItrEMFlow_SubtractedEt;   //!
   TBranch        *b_antikt4HIItrEMFlow_NoFlow;   //!
   TBranch        *b_antikt4HIItrEMFlow_UncalibEt;   //!
   TBranch        *b_antikt4HIItrEMFlow_PassedFR;   //!
   TBranch        *b_antikt4HIItrEMFlow_const_n;   //!
   TBranch        *b_antikt4HIItrEMFlow_const_et;   //!
   TBranch        *b_antikt4HIItrEMFlow_const_eta;   //!
   TBranch        *b_antikt4HIItrEMFlow_const_phi;   //!
   TBranch        *b_antikt4HIItrEMFlow_sampling_et;   //!
   TBranch        *b_antikt4HIItrEMFlow_sampling_et_unsubtr;   //!
   TBranch        *b_antikt4HIItrEMFlow_bad_cell_n;   //!
   TBranch        *b_antikt4HIItrEMFlow_bad_cell_et;   //!
   TBranch        *b_antikt4HIItrEMFlow_bad_cell_area;   //!
   TBranch        *b_antikt4HIItrEMFlow_empty_cell_n;   //!
   TBranch        *b_antikt4HIItrEMFlow_empty_cell_et;   //!
   TBranch        *b_antikt4HIItrEMFlow_empty_cell_area;   //!
   TBranch        *b_antikt4HIItrEMFlow_total_cell_n;   //!
   TBranch        *b_antikt4HIItrEMFlow_total_cell_et;   //!
   TBranch        *b_antikt4HIItrEMFlow_total_cell_area;   //!
   TBranch        *b_antikt4HIItrEMFlow_n90;   //!
   TBranch        *b_antikt4HIItrEMFlow_fracSamplingMax;   //!
   TBranch        *b_antikt4HIItrEMFlow_SamplingMax;   //!
   TBranch        *b_antikt4HIItrEMFlow_n90constituents;   //!
   TBranch        *b_antikt4HIItrEMFlow_Timing;   //!
   TBranch        *b_antikt4HIItrEMFlow_LArQuality;   //!
   TBranch        *b_antikt4HIItrEMFlow_HECQuality;   //!
   TBranch        *b_antikt4HIItrEMFlow_TileQuality;   //!
   TBranch        *b_antikt4HIItrEMFlow_NegativeE;   //!
   TBranch        *b_antikt4HIItrEMFlow_AverageLArQF;   //!
   TBranch        *b_antikt4HIItrEMFlow_sumPtTrk;   //!
   TBranch        *b_antikt4HIItrEMFlow_BCH_CORR_CELL;   //!
   TBranch        *b_antikt4HIItrEMFlow_BCH_CORR_DOTX;   //!
   TBranch        *b_antikt4HIItrEMFlow_BCH_CORR_JET;   //!
   TBranch        *b_antikt4HIItrEMFlow_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_antikt4HIItrEMFlow_ENG_BAD_CELLS;   //!
   TBranch        *b_antikt4HIItrEMFlow_N_BAD_CELLS;   //!
   TBranch        *b_antikt4HIItrEMFlow_N_BAD_CELLS_CORR;   //!
   TBranch        *b_antikt4HIItrEMFlow_BAD_CELLS_CORR_E;   //!
   TBranch        *b_antikt4HIItrEMFlow_emfrac;   //!
   TBranch        *b_antikt4HIItrEMFlow_hecf;   //!
   TBranch        *b_antikt4HIItrEMFlow_tgap3f;   //!
   TBranch        *b_antikt4HIItrEMFlow_isUgly;   //!
   TBranch        *b_antikt4HIItrEMFlow_isBadLooseMinus;   //!
   TBranch        *b_antikt4HIItrEMFlow_isBadLoose;   //!
   TBranch        *b_antikt4HIItrEMFlow_isBadMedium;   //!
   TBranch        *b_antikt4HIItrEMFlow_isBadTight;   //!
   TBranch        *b_antikt4HIItrEMFlow_jvtx_x;   //!
   TBranch        *b_antikt4HIItrEMFlow_jvtx_y;   //!
   TBranch        *b_antikt4HIItrEMFlow_jvtx_z;   //!
   TBranch        *b_antikt4HIItrEMFlow_jvtxf;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_Comb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_IP2D;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_IP3D;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_SV0;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_SV1;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_SV2;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_SoftMuonTagChi2;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_SecondSoftMuonTagChi2;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_JetFitterTagNN;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_JetFitterCOMBNN;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_MV1;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_MV2;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_weight_GbbNN;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_label;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_dRminToB;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_dRminToC;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_dRminToT;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_BHadronpdg;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_vx_x;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_vx_y;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_truth_vx_z;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_assoctrk_signOfIP;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_assoctrk_signOfZIP;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_assoctrk_ud0wrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_assoctrk_ud0ErrwrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_assoctrk_uz0wrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_assoctrk_uz0ErrwrtPriVtx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_gentruthlepton_origin;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_gentruthlepton_slbarcode;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip2d_pu;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip2d_pb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip2d_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip2d_ntrk;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip3d_pu;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip3d_pb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip3d_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ip3d_ntrk;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jetprob_ntrk;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv1_pu;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv1_pb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv1_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv2_pu;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv2_pb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv2_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_pu;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_pb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_pc;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfitcomb_pu;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfitcomb_pb;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfitcomb_pc;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfitcomb_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_gbbnn_nMatchingTracks;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetWidth;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetMaxDeltaR;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_nvtx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_nvtx1t;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_ntrkAtVx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_efrc;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_mass;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_sig3d;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_deltaPhi;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_jfit_deltaEta;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0val;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0sig;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0val;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0sig;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_w2D;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_w3D;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJP;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJPneg;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_grade;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_isFromV0;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_ntrkv;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_ntrkj;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_n2t;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_mass;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_efrc;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_x;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_y;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_z;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_err_x;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_err_y;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_err_z;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_cov_xy;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_cov_xz;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_cov_yz;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_chi2;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_ndof;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_svp_ntrk;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_ntrkv;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_ntrkj;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_n2t;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_mass;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_efrc;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_x;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_y;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_z;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_err_x;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_err_y;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_err_z;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_cov_xy;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_cov_xz;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_cov_yz;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_chi2;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_ndof;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_sv0p_ntrk;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_w;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_pTRel;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_dRJet;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_w;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_pTRel;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_dRJet;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_w;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_pTRel;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_dRJet;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_w;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_pTRel;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_dRJet;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_msvp_isValid;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_msvp_ntrkv;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_msvp_ntrkj;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_msvp_n2t;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_msvp_nVtx;   //!
   TBranch        *b_antikt4HIItrEMFlow_flavor_component_msvp_normWeightedDist;   //!
   TBranch        *b_antikt2Truth_n;   //!
   TBranch        *b_antikt2Truth_E;   //!
   TBranch        *b_antikt2Truth_Et;   //!
   TBranch        *b_antikt2Truth_pt;   //!
   TBranch        *b_antikt2Truth_m;   //!
   TBranch        *b_antikt2Truth_eta;   //!
   TBranch        *b_antikt2Truth_phi;   //!
   TBranch        *b_antikt3Truth_n;   //!
   TBranch        *b_antikt3Truth_E;   //!
   TBranch        *b_antikt3Truth_Et;   //!
   TBranch        *b_antikt3Truth_pt;   //!
   TBranch        *b_antikt3Truth_m;   //!
   TBranch        *b_antikt3Truth_eta;   //!
   TBranch        *b_antikt3Truth_phi;   //!
   TBranch        *b_antikt4Truth_n;   //!
   TBranch        *b_antikt4Truth_E;   //!
   TBranch        *b_antikt4Truth_Et;   //!
   TBranch        *b_antikt4Truth_pt;   //!
   TBranch        *b_antikt4Truth_m;   //!
   TBranch        *b_antikt4Truth_eta;   //!
   TBranch        *b_antikt4Truth_phi;   //!
   TBranch        *b_antikt5Truth_n;   //!
   TBranch        *b_antikt5Truth_E;   //!
   TBranch        *b_antikt5Truth_Et;   //!
   TBranch        *b_antikt5Truth_pt;   //!
   TBranch        *b_antikt5Truth_m;   //!
   TBranch        *b_antikt5Truth_eta;   //!
   TBranch        *b_antikt5Truth_phi;   //!
   TBranch        *b_antikt6Truth_n;   //!
   TBranch        *b_antikt6Truth_E;   //!
   TBranch        *b_antikt6Truth_Et;   //!
   TBranch        *b_antikt6Truth_pt;   //!
   TBranch        *b_antikt6Truth_m;   //!
   TBranch        *b_antikt6Truth_eta;   //!
   TBranch        *b_antikt6Truth_phi;   //!
   TBranch        *b_antikt4TruthHijing_n;   //!
   TBranch        *b_antikt4TruthHijing_E;   //!
   TBranch        *b_antikt4TruthHijing_Et;   //!
   TBranch        *b_antikt4TruthHijing_pt;   //!
   TBranch        *b_antikt4TruthHijing_m;   //!
   TBranch        *b_antikt4TruthHijing_eta;   //!
   TBranch        *b_antikt4TruthHijing_phi;   //!
   TBranch        *b_AntiKt4TopoEM_n;   //!
   TBranch        *b_AntiKt4TopoEM_E;   //!
   TBranch        *b_AntiKt4TopoEM_pt;   //!
   TBranch        *b_AntiKt4TopoEM_m;   //!
   TBranch        *b_AntiKt4TopoEM_eta;   //!
   TBranch        *b_AntiKt4TopoEM_phi;   //!
   TBranch        *b_AntiKt4TopoEM_EtaOrigin;   //!
   TBranch        *b_AntiKt4TopoEM_PhiOrigin;   //!
   TBranch        *b_AntiKt4TopoEM_MOrigin;   //!
   TBranch        *b_AntiKt4TopoEM_WIDTH;   //!
   TBranch        *b_AntiKt4TopoEM_n90;   //!
   TBranch        *b_AntiKt4TopoEM_Timing;   //!
   TBranch        *b_AntiKt4TopoEM_LArQuality;   //!
   TBranch        *b_AntiKt4TopoEM_nTrk;   //!
   TBranch        *b_AntiKt4TopoEM_sumPtTrk;   //!
   TBranch        *b_AntiKt4TopoEM_OriginIndex;   //!
   TBranch        *b_AntiKt4TopoEM_HECQuality;   //!
   TBranch        *b_AntiKt4TopoEM_NegativeE;   //!
   TBranch        *b_AntiKt4TopoEM_AverageLArQF;   //!
   TBranch        *b_AntiKt4TopoEM_BCH_CORR_CELL;   //!
   TBranch        *b_AntiKt4TopoEM_BCH_CORR_DOTX;   //!
   TBranch        *b_AntiKt4TopoEM_BCH_CORR_JET;   //!
   TBranch        *b_AntiKt4TopoEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_AntiKt4TopoEM_ENG_BAD_CELLS;   //!
   TBranch        *b_AntiKt4TopoEM_N_BAD_CELLS;   //!
   TBranch        *b_AntiKt4TopoEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_AntiKt4TopoEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_AntiKt4TopoEM_NumTowers;   //!
   TBranch        *b_AntiKt4TopoEM_ootFracCells5;   //!
   TBranch        *b_AntiKt4TopoEM_ootFracCells10;   //!
   TBranch        *b_AntiKt4TopoEM_ootFracClusters5;   //!
   TBranch        *b_AntiKt4TopoEM_ootFracClusters10;   //!
   TBranch        *b_AntiKt4TopoEM_SamplingMax;   //!
   TBranch        *b_AntiKt4TopoEM_fracSamplingMax;   //!
   TBranch        *b_AntiKt4TopoEM_hecf;   //!
   TBranch        *b_AntiKt4TopoEM_tgap3f;   //!
   TBranch        *b_AntiKt4TopoEM_isUgly;   //!
   TBranch        *b_AntiKt4TopoEM_isBadLooseMinus;   //!
   TBranch        *b_AntiKt4TopoEM_isBadLoose;   //!
   TBranch        *b_AntiKt4TopoEM_isBadMedium;   //!
   TBranch        *b_AntiKt4TopoEM_isBadTight;   //!
   TBranch        *b_AntiKt4TopoEM_emfrac;   //!
   TBranch        *b_AntiKt4TopoEM_Offset;   //!
   TBranch        *b_AntiKt4TopoEM_EMJES;   //!
   TBranch        *b_AntiKt4TopoEM_EMJES_EtaCorr;   //!
   TBranch        *b_AntiKt4TopoEM_EMJESnooffset;   //!
   TBranch        *b_AntiKt4TopoEM_LCJES;   //!
   TBranch        *b_AntiKt4TopoEM_LCJES_EtaCorr;   //!
   TBranch        *b_AntiKt4TopoEM_emscale_E;   //!
   TBranch        *b_AntiKt4TopoEM_emscale_pt;   //!
   TBranch        *b_AntiKt4TopoEM_emscale_m;   //!
   TBranch        *b_AntiKt4TopoEM_emscale_eta;   //!
   TBranch        *b_AntiKt4TopoEM_emscale_phi;   //!
   TBranch        *b_AntiKt4TopoEM_jvtx_x;   //!
   TBranch        *b_AntiKt4TopoEM_jvtx_y;   //!
   TBranch        *b_AntiKt4TopoEM_jvtx_z;   //!
   TBranch        *b_AntiKt4TopoEM_jvtxf;   //!
   TBranch        *b_AntiKt4TopoEM_GSCFactorF;   //!
   TBranch        *b_AntiKt4TopoEM_WidthFraction;   //!
   TBranch        *b_AntiKt4TopoEM_e_PreSamplerB;   //!
   TBranch        *b_AntiKt4TopoEM_e_EMB1;   //!
   TBranch        *b_AntiKt4TopoEM_e_EMB2;   //!
   TBranch        *b_AntiKt4TopoEM_e_EMB3;   //!
   TBranch        *b_AntiKt4TopoEM_e_PreSamplerE;   //!
   TBranch        *b_AntiKt4TopoEM_e_EME1;   //!
   TBranch        *b_AntiKt4TopoEM_e_EME2;   //!
   TBranch        *b_AntiKt4TopoEM_e_EME3;   //!
   TBranch        *b_AntiKt4TopoEM_e_HEC0;   //!
   TBranch        *b_AntiKt4TopoEM_e_HEC1;   //!
   TBranch        *b_AntiKt4TopoEM_e_HEC2;   //!
   TBranch        *b_AntiKt4TopoEM_e_HEC3;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileBar0;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileBar1;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileBar2;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileGap1;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileGap2;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileGap3;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileExt0;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileExt1;   //!
   TBranch        *b_AntiKt4TopoEM_e_TileExt2;   //!
   TBranch        *b_AntiKt4TopoEM_e_FCAL0;   //!
   TBranch        *b_AntiKt4TopoEM_e_FCAL1;   //!
   TBranch        *b_AntiKt4TopoEM_e_FCAL2;   //!
   TBranch        *b_AntiKt4TopoEM_shapeBins;   //!
   TBranch        *b_AntiKt4TopoEM_Nconst;   //!
   TBranch        *b_AntiKt4TopoEM_ptconst_default;   //!
   TBranch        *b_AntiKt4TopoEM_econst_default;   //!
   TBranch        *b_AntiKt4TopoEM_etaconst_default;   //!
   TBranch        *b_AntiKt4TopoEM_phiconst_default;   //!
   TBranch        *b_AntiKt4TopoEM_weightconst_default;   //!
   TBranch        *b_AntiKt4TopoEM_constscale_E;   //!
   TBranch        *b_AntiKt4TopoEM_constscale_pt;   //!
   TBranch        *b_AntiKt4TopoEM_constscale_m;   //!
   TBranch        *b_AntiKt4TopoEM_constscale_eta;   //!
   TBranch        *b_AntiKt4TopoEM_constscale_phi;   //!
   TBranch        *b_AntiKt4TopoEM_el_dr;   //!
   TBranch        *b_AntiKt4TopoEM_el_matched;   //!
   TBranch        *b_AntiKt4TopoEM_mu_dr;   //!
   TBranch        *b_AntiKt4TopoEM_mu_matched;   //!
   TBranch        *b_AntiKt4TopoEM_L1_dr;   //!
   TBranch        *b_AntiKt4TopoEM_L1_matched;   //!
   TBranch        *b_AntiKt4TopoEM_L2_dr;   //!
   TBranch        *b_AntiKt4TopoEM_L2_matched;   //!
   TBranch        *b_AntiKt4TopoEM_EF_dr;   //!
   TBranch        *b_AntiKt4TopoEM_EF_matched;   //!
   TBranch        *b_AntiKt4LCTopo_n;   //!
   TBranch        *b_AntiKt4LCTopo_E;   //!
   TBranch        *b_AntiKt4LCTopo_pt;   //!
   TBranch        *b_AntiKt4LCTopo_m;   //!
   TBranch        *b_AntiKt4LCTopo_eta;   //!
   TBranch        *b_AntiKt4LCTopo_phi;   //!
   TBranch        *b_AntiKt4LCTopo_EtaOrigin;   //!
   TBranch        *b_AntiKt4LCTopo_PhiOrigin;   //!
   TBranch        *b_AntiKt4LCTopo_MOrigin;   //!
   TBranch        *b_AntiKt4LCTopo_WIDTH;   //!
   TBranch        *b_AntiKt4LCTopo_n90;   //!
   TBranch        *b_AntiKt4LCTopo_Timing;   //!
   TBranch        *b_AntiKt4LCTopo_LArQuality;   //!
   TBranch        *b_AntiKt4LCTopo_nTrk;   //!
   TBranch        *b_AntiKt4LCTopo_sumPtTrk;   //!
   TBranch        *b_AntiKt4LCTopo_OriginIndex;   //!
   TBranch        *b_AntiKt4LCTopo_HECQuality;   //!
   TBranch        *b_AntiKt4LCTopo_NegativeE;   //!
   TBranch        *b_AntiKt4LCTopo_AverageLArQF;   //!
   TBranch        *b_AntiKt4LCTopo_BCH_CORR_CELL;   //!
   TBranch        *b_AntiKt4LCTopo_BCH_CORR_DOTX;   //!
   TBranch        *b_AntiKt4LCTopo_BCH_CORR_JET;   //!
   TBranch        *b_AntiKt4LCTopo_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_AntiKt4LCTopo_ENG_BAD_CELLS;   //!
   TBranch        *b_AntiKt4LCTopo_N_BAD_CELLS;   //!
   TBranch        *b_AntiKt4LCTopo_N_BAD_CELLS_CORR;   //!
   TBranch        *b_AntiKt4LCTopo_BAD_CELLS_CORR_E;   //!
   TBranch        *b_AntiKt4LCTopo_NumTowers;   //!
   TBranch        *b_AntiKt4LCTopo_ootFracCells5;   //!
   TBranch        *b_AntiKt4LCTopo_ootFracCells10;   //!
   TBranch        *b_AntiKt4LCTopo_ootFracClusters5;   //!
   TBranch        *b_AntiKt4LCTopo_ootFracClusters10;   //!
   TBranch        *b_AntiKt4LCTopo_SamplingMax;   //!
   TBranch        *b_AntiKt4LCTopo_fracSamplingMax;   //!
   TBranch        *b_AntiKt4LCTopo_hecf;   //!
   TBranch        *b_AntiKt4LCTopo_tgap3f;   //!
   TBranch        *b_AntiKt4LCTopo_isUgly;   //!
   TBranch        *b_AntiKt4LCTopo_isBadLooseMinus;   //!
   TBranch        *b_AntiKt4LCTopo_isBadLoose;   //!
   TBranch        *b_AntiKt4LCTopo_isBadMedium;   //!
   TBranch        *b_AntiKt4LCTopo_isBadTight;   //!
   TBranch        *b_AntiKt4LCTopo_emfrac;   //!
   TBranch        *b_AntiKt4LCTopo_Offset;   //!
   TBranch        *b_AntiKt4LCTopo_EMJES;   //!
   TBranch        *b_AntiKt4LCTopo_EMJES_EtaCorr;   //!
   TBranch        *b_AntiKt4LCTopo_EMJESnooffset;   //!
   TBranch        *b_AntiKt4LCTopo_LCJES;   //!
   TBranch        *b_AntiKt4LCTopo_LCJES_EtaCorr;   //!
   TBranch        *b_AntiKt4LCTopo_emscale_E;   //!
   TBranch        *b_AntiKt4LCTopo_emscale_pt;   //!
   TBranch        *b_AntiKt4LCTopo_emscale_m;   //!
   TBranch        *b_AntiKt4LCTopo_emscale_eta;   //!
   TBranch        *b_AntiKt4LCTopo_emscale_phi;   //!
   TBranch        *b_AntiKt4LCTopo_jvtx_x;   //!
   TBranch        *b_AntiKt4LCTopo_jvtx_y;   //!
   TBranch        *b_AntiKt4LCTopo_jvtx_z;   //!
   TBranch        *b_AntiKt4LCTopo_jvtxf;   //!
   TBranch        *b_AntiKt4LCTopo_GSCFactorF;   //!
   TBranch        *b_AntiKt4LCTopo_WidthFraction;   //!
   TBranch        *b_AntiKt4LCTopo_e_PreSamplerB;   //!
   TBranch        *b_AntiKt4LCTopo_e_EMB1;   //!
   TBranch        *b_AntiKt4LCTopo_e_EMB2;   //!
   TBranch        *b_AntiKt4LCTopo_e_EMB3;   //!
   TBranch        *b_AntiKt4LCTopo_e_PreSamplerE;   //!
   TBranch        *b_AntiKt4LCTopo_e_EME1;   //!
   TBranch        *b_AntiKt4LCTopo_e_EME2;   //!
   TBranch        *b_AntiKt4LCTopo_e_EME3;   //!
   TBranch        *b_AntiKt4LCTopo_e_HEC0;   //!
   TBranch        *b_AntiKt4LCTopo_e_HEC1;   //!
   TBranch        *b_AntiKt4LCTopo_e_HEC2;   //!
   TBranch        *b_AntiKt4LCTopo_e_HEC3;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileBar0;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileBar1;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileBar2;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileGap1;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileGap2;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileGap3;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileExt0;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileExt1;   //!
   TBranch        *b_AntiKt4LCTopo_e_TileExt2;   //!
   TBranch        *b_AntiKt4LCTopo_e_FCAL0;   //!
   TBranch        *b_AntiKt4LCTopo_e_FCAL1;   //!
   TBranch        *b_AntiKt4LCTopo_e_FCAL2;   //!
   TBranch        *b_AntiKt4LCTopo_shapeBins;   //!
   TBranch        *b_AntiKt4LCTopo_Nconst;   //!
   TBranch        *b_AntiKt4LCTopo_ptconst_default;   //!
   TBranch        *b_AntiKt4LCTopo_econst_default;   //!
   TBranch        *b_AntiKt4LCTopo_etaconst_default;   //!
   TBranch        *b_AntiKt4LCTopo_phiconst_default;   //!
   TBranch        *b_AntiKt4LCTopo_weightconst_default;   //!
   TBranch        *b_AntiKt4LCTopo_constscale_E;   //!
   TBranch        *b_AntiKt4LCTopo_constscale_pt;   //!
   TBranch        *b_AntiKt4LCTopo_constscale_m;   //!
   TBranch        *b_AntiKt4LCTopo_constscale_eta;   //!
   TBranch        *b_AntiKt4LCTopo_constscale_phi;   //!
   TBranch        *b_AntiKt4LCTopo_el_dr;   //!
   TBranch        *b_AntiKt4LCTopo_el_matched;   //!
   TBranch        *b_AntiKt4LCTopo_mu_dr;   //!
   TBranch        *b_AntiKt4LCTopo_mu_matched;   //!
   TBranch        *b_AntiKt4LCTopo_L1_dr;   //!
   TBranch        *b_AntiKt4LCTopo_L1_matched;   //!
   TBranch        *b_AntiKt4LCTopo_L2_dr;   //!
   TBranch        *b_AntiKt4LCTopo_L2_matched;   //!
   TBranch        *b_AntiKt4LCTopo_EF_dr;   //!
   TBranch        *b_AntiKt4LCTopo_EF_matched;   //!
   TBranch        *b_AntiKt6Tower_n;   //!
   TBranch        *b_AntiKt6Tower_E;   //!
   TBranch        *b_AntiKt6Tower_pt;   //!
   TBranch        *b_AntiKt6Tower_m;   //!
   TBranch        *b_AntiKt6Tower_eta;   //!
   TBranch        *b_AntiKt6Tower_phi;   //!
   TBranch        *b_AntiKt6Tower_EtaOrigin;   //!
   TBranch        *b_AntiKt6Tower_PhiOrigin;   //!
   TBranch        *b_AntiKt6Tower_MOrigin;   //!
   TBranch        *b_AntiKt6Tower_WIDTH;   //!
   TBranch        *b_AntiKt6Tower_n90;   //!
   TBranch        *b_AntiKt6Tower_Timing;   //!
   TBranch        *b_AntiKt6Tower_LArQuality;   //!
   TBranch        *b_AntiKt6Tower_nTrk;   //!
   TBranch        *b_AntiKt6Tower_sumPtTrk;   //!
   TBranch        *b_AntiKt6Tower_OriginIndex;   //!
   TBranch        *b_AntiKt6Tower_HECQuality;   //!
   TBranch        *b_AntiKt6Tower_NegativeE;   //!
   TBranch        *b_AntiKt6Tower_AverageLArQF;   //!
   TBranch        *b_AntiKt6Tower_BCH_CORR_CELL;   //!
   TBranch        *b_AntiKt6Tower_BCH_CORR_DOTX;   //!
   TBranch        *b_AntiKt6Tower_BCH_CORR_JET;   //!
   TBranch        *b_AntiKt6Tower_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_AntiKt6Tower_ENG_BAD_CELLS;   //!
   TBranch        *b_AntiKt6Tower_N_BAD_CELLS;   //!
   TBranch        *b_AntiKt6Tower_N_BAD_CELLS_CORR;   //!
   TBranch        *b_AntiKt6Tower_BAD_CELLS_CORR_E;   //!
   TBranch        *b_AntiKt6Tower_NumTowers;   //!
   TBranch        *b_AntiKt6Tower_ootFracCells5;   //!
   TBranch        *b_AntiKt6Tower_ootFracCells10;   //!
   TBranch        *b_AntiKt6Tower_ootFracClusters5;   //!
   TBranch        *b_AntiKt6Tower_ootFracClusters10;   //!
   TBranch        *b_AntiKt6Tower_SamplingMax;   //!
   TBranch        *b_AntiKt6Tower_fracSamplingMax;   //!
   TBranch        *b_AntiKt6Tower_hecf;   //!
   TBranch        *b_AntiKt6Tower_tgap3f;   //!
   TBranch        *b_AntiKt6Tower_isUgly;   //!
   TBranch        *b_AntiKt6Tower_isBadLooseMinus;   //!
   TBranch        *b_AntiKt6Tower_isBadLoose;   //!
   TBranch        *b_AntiKt6Tower_isBadMedium;   //!
   TBranch        *b_AntiKt6Tower_isBadTight;   //!
   TBranch        *b_AntiKt6Tower_emfrac;   //!
   TBranch        *b_AntiKt6Tower_Offset;   //!
   TBranch        *b_AntiKt6Tower_EMJES;   //!
   TBranch        *b_AntiKt6Tower_EMJES_EtaCorr;   //!
   TBranch        *b_AntiKt6Tower_EMJESnooffset;   //!
   TBranch        *b_AntiKt6Tower_LCJES;   //!
   TBranch        *b_AntiKt6Tower_LCJES_EtaCorr;   //!
   TBranch        *b_AntiKt6Tower_emscale_E;   //!
   TBranch        *b_AntiKt6Tower_emscale_pt;   //!
   TBranch        *b_AntiKt6Tower_emscale_m;   //!
   TBranch        *b_AntiKt6Tower_emscale_eta;   //!
   TBranch        *b_AntiKt6Tower_emscale_phi;   //!
   TBranch        *b_AntiKt6Tower_jvtx_x;   //!
   TBranch        *b_AntiKt6Tower_jvtx_y;   //!
   TBranch        *b_AntiKt6Tower_jvtx_z;   //!
   TBranch        *b_AntiKt6Tower_jvtxf;   //!
   TBranch        *b_AntiKt6Tower_GSCFactorF;   //!
   TBranch        *b_AntiKt6Tower_WidthFraction;   //!
   TBranch        *b_AntiKt6Tower_e_PreSamplerB;   //!
   TBranch        *b_AntiKt6Tower_e_EMB1;   //!
   TBranch        *b_AntiKt6Tower_e_EMB2;   //!
   TBranch        *b_AntiKt6Tower_e_EMB3;   //!
   TBranch        *b_AntiKt6Tower_e_PreSamplerE;   //!
   TBranch        *b_AntiKt6Tower_e_EME1;   //!
   TBranch        *b_AntiKt6Tower_e_EME2;   //!
   TBranch        *b_AntiKt6Tower_e_EME3;   //!
   TBranch        *b_AntiKt6Tower_e_HEC0;   //!
   TBranch        *b_AntiKt6Tower_e_HEC1;   //!
   TBranch        *b_AntiKt6Tower_e_HEC2;   //!
   TBranch        *b_AntiKt6Tower_e_HEC3;   //!
   TBranch        *b_AntiKt6Tower_e_TileBar0;   //!
   TBranch        *b_AntiKt6Tower_e_TileBar1;   //!
   TBranch        *b_AntiKt6Tower_e_TileBar2;   //!
   TBranch        *b_AntiKt6Tower_e_TileGap1;   //!
   TBranch        *b_AntiKt6Tower_e_TileGap2;   //!
   TBranch        *b_AntiKt6Tower_e_TileGap3;   //!
   TBranch        *b_AntiKt6Tower_e_TileExt0;   //!
   TBranch        *b_AntiKt6Tower_e_TileExt1;   //!
   TBranch        *b_AntiKt6Tower_e_TileExt2;   //!
   TBranch        *b_AntiKt6Tower_e_FCAL0;   //!
   TBranch        *b_AntiKt6Tower_e_FCAL1;   //!
   TBranch        *b_AntiKt6Tower_e_FCAL2;   //!
   TBranch        *b_AntiKt6Tower_shapeBins;   //!
   TBranch        *b_AntiKt6Tower_Nconst;   //!
   TBranch        *b_AntiKt6Tower_ptconst_default;   //!
   TBranch        *b_AntiKt6Tower_econst_default;   //!
   TBranch        *b_AntiKt6Tower_etaconst_default;   //!
   TBranch        *b_AntiKt6Tower_phiconst_default;   //!
   TBranch        *b_AntiKt6Tower_weightconst_default;   //!
   TBranch        *b_AntiKt6Tower_constscale_E;   //!
   TBranch        *b_AntiKt6Tower_constscale_pt;   //!
   TBranch        *b_AntiKt6Tower_constscale_m;   //!
   TBranch        *b_AntiKt6Tower_constscale_eta;   //!
   TBranch        *b_AntiKt6Tower_constscale_phi;   //!
   TBranch        *b_AntiKt6Tower_el_dr;   //!
   TBranch        *b_AntiKt6Tower_el_matched;   //!
   TBranch        *b_AntiKt6Tower_mu_dr;   //!
   TBranch        *b_AntiKt6Tower_mu_matched;   //!
   TBranch        *b_AntiKt6Tower_L1_dr;   //!
   TBranch        *b_AntiKt6Tower_L1_matched;   //!
   TBranch        *b_AntiKt6Tower_L2_dr;   //!
   TBranch        *b_AntiKt6Tower_L2_matched;   //!
   TBranch        *b_AntiKt6Tower_EF_dr;   //!
   TBranch        *b_AntiKt6Tower_EF_matched;   //!
   TBranch        *b_AntiKt6LCTopo_n;   //!
   TBranch        *b_AntiKt6LCTopo_E;   //!
   TBranch        *b_AntiKt6LCTopo_pt;   //!
   TBranch        *b_AntiKt6LCTopo_m;   //!
   TBranch        *b_AntiKt6LCTopo_eta;   //!
   TBranch        *b_AntiKt6LCTopo_phi;   //!
   TBranch        *b_AntiKt6LCTopo_EtaOrigin;   //!
   TBranch        *b_AntiKt6LCTopo_PhiOrigin;   //!
   TBranch        *b_AntiKt6LCTopo_MOrigin;   //!
   TBranch        *b_AntiKt6LCTopo_WIDTH;   //!
   TBranch        *b_AntiKt6LCTopo_n90;   //!
   TBranch        *b_AntiKt6LCTopo_Timing;   //!
   TBranch        *b_AntiKt6LCTopo_LArQuality;   //!
   TBranch        *b_AntiKt6LCTopo_nTrk;   //!
   TBranch        *b_AntiKt6LCTopo_sumPtTrk;   //!
   TBranch        *b_AntiKt6LCTopo_OriginIndex;   //!
   TBranch        *b_AntiKt6LCTopo_HECQuality;   //!
   TBranch        *b_AntiKt6LCTopo_NegativeE;   //!
   TBranch        *b_AntiKt6LCTopo_AverageLArQF;   //!
   TBranch        *b_AntiKt6LCTopo_BCH_CORR_CELL;   //!
   TBranch        *b_AntiKt6LCTopo_BCH_CORR_DOTX;   //!
   TBranch        *b_AntiKt6LCTopo_BCH_CORR_JET;   //!
   TBranch        *b_AntiKt6LCTopo_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_AntiKt6LCTopo_ENG_BAD_CELLS;   //!
   TBranch        *b_AntiKt6LCTopo_N_BAD_CELLS;   //!
   TBranch        *b_AntiKt6LCTopo_N_BAD_CELLS_CORR;   //!
   TBranch        *b_AntiKt6LCTopo_BAD_CELLS_CORR_E;   //!
   TBranch        *b_AntiKt6LCTopo_NumTowers;   //!
   TBranch        *b_AntiKt6LCTopo_ootFracCells5;   //!
   TBranch        *b_AntiKt6LCTopo_ootFracCells10;   //!
   TBranch        *b_AntiKt6LCTopo_ootFracClusters5;   //!
   TBranch        *b_AntiKt6LCTopo_ootFracClusters10;   //!
   TBranch        *b_AntiKt6LCTopo_SamplingMax;   //!
   TBranch        *b_AntiKt6LCTopo_fracSamplingMax;   //!
   TBranch        *b_AntiKt6LCTopo_hecf;   //!
   TBranch        *b_AntiKt6LCTopo_tgap3f;   //!
   TBranch        *b_AntiKt6LCTopo_isUgly;   //!
   TBranch        *b_AntiKt6LCTopo_isBadLooseMinus;   //!
   TBranch        *b_AntiKt6LCTopo_isBadLoose;   //!
   TBranch        *b_AntiKt6LCTopo_isBadMedium;   //!
   TBranch        *b_AntiKt6LCTopo_isBadTight;   //!
   TBranch        *b_AntiKt6LCTopo_emfrac;   //!
   TBranch        *b_AntiKt6LCTopo_Offset;   //!
   TBranch        *b_AntiKt6LCTopo_EMJES;   //!
   TBranch        *b_AntiKt6LCTopo_EMJES_EtaCorr;   //!
   TBranch        *b_AntiKt6LCTopo_EMJESnooffset;   //!
   TBranch        *b_AntiKt6LCTopo_LCJES;   //!
   TBranch        *b_AntiKt6LCTopo_LCJES_EtaCorr;   //!
   TBranch        *b_AntiKt6LCTopo_emscale_E;   //!
   TBranch        *b_AntiKt6LCTopo_emscale_pt;   //!
   TBranch        *b_AntiKt6LCTopo_emscale_m;   //!
   TBranch        *b_AntiKt6LCTopo_emscale_eta;   //!
   TBranch        *b_AntiKt6LCTopo_emscale_phi;   //!
   TBranch        *b_AntiKt6LCTopo_jvtx_x;   //!
   TBranch        *b_AntiKt6LCTopo_jvtx_y;   //!
   TBranch        *b_AntiKt6LCTopo_jvtx_z;   //!
   TBranch        *b_AntiKt6LCTopo_jvtxf;   //!
   TBranch        *b_AntiKt6LCTopo_GSCFactorF;   //!
   TBranch        *b_AntiKt6LCTopo_WidthFraction;   //!
   TBranch        *b_AntiKt6LCTopo_e_PreSamplerB;   //!
   TBranch        *b_AntiKt6LCTopo_e_EMB1;   //!
   TBranch        *b_AntiKt6LCTopo_e_EMB2;   //!
   TBranch        *b_AntiKt6LCTopo_e_EMB3;   //!
   TBranch        *b_AntiKt6LCTopo_e_PreSamplerE;   //!
   TBranch        *b_AntiKt6LCTopo_e_EME1;   //!
   TBranch        *b_AntiKt6LCTopo_e_EME2;   //!
   TBranch        *b_AntiKt6LCTopo_e_EME3;   //!
   TBranch        *b_AntiKt6LCTopo_e_HEC0;   //!
   TBranch        *b_AntiKt6LCTopo_e_HEC1;   //!
   TBranch        *b_AntiKt6LCTopo_e_HEC2;   //!
   TBranch        *b_AntiKt6LCTopo_e_HEC3;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileBar0;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileBar1;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileBar2;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileGap1;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileGap2;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileGap3;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileExt0;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileExt1;   //!
   TBranch        *b_AntiKt6LCTopo_e_TileExt2;   //!
   TBranch        *b_AntiKt6LCTopo_e_FCAL0;   //!
   TBranch        *b_AntiKt6LCTopo_e_FCAL1;   //!
   TBranch        *b_AntiKt6LCTopo_e_FCAL2;   //!
   TBranch        *b_AntiKt6LCTopo_shapeBins;   //!
   TBranch        *b_AntiKt6LCTopo_Nconst;   //!
   TBranch        *b_AntiKt6LCTopo_ptconst_default;   //!
   TBranch        *b_AntiKt6LCTopo_econst_default;   //!
   TBranch        *b_AntiKt6LCTopo_etaconst_default;   //!
   TBranch        *b_AntiKt6LCTopo_phiconst_default;   //!
   TBranch        *b_AntiKt6LCTopo_weightconst_default;   //!
   TBranch        *b_AntiKt6LCTopo_constscale_E;   //!
   TBranch        *b_AntiKt6LCTopo_constscale_pt;   //!
   TBranch        *b_AntiKt6LCTopo_constscale_m;   //!
   TBranch        *b_AntiKt6LCTopo_constscale_eta;   //!
   TBranch        *b_AntiKt6LCTopo_constscale_phi;   //!
   TBranch        *b_AntiKt6LCTopo_el_dr;   //!
   TBranch        *b_AntiKt6LCTopo_el_matched;   //!
   TBranch        *b_AntiKt6LCTopo_mu_dr;   //!
   TBranch        *b_AntiKt6LCTopo_mu_matched;   //!
   TBranch        *b_AntiKt6LCTopo_L1_dr;   //!
   TBranch        *b_AntiKt6LCTopo_L1_matched;   //!
   TBranch        *b_AntiKt6LCTopo_L2_dr;   //!
   TBranch        *b_AntiKt6LCTopo_L2_matched;   //!
   TBranch        *b_AntiKt6LCTopo_EF_dr;   //!
   TBranch        *b_AntiKt6LCTopo_EF_matched;   //!
   TBranch        *b_AntiKt6TopoEM_n;   //!
   TBranch        *b_AntiKt6TopoEM_E;   //!
   TBranch        *b_AntiKt6TopoEM_pt;   //!
   TBranch        *b_AntiKt6TopoEM_m;   //!
   TBranch        *b_AntiKt6TopoEM_eta;   //!
   TBranch        *b_AntiKt6TopoEM_phi;   //!
   TBranch        *b_AntiKt6TopoEM_EtaOrigin;   //!
   TBranch        *b_AntiKt6TopoEM_PhiOrigin;   //!
   TBranch        *b_AntiKt6TopoEM_MOrigin;   //!
   TBranch        *b_AntiKt6TopoEM_WIDTH;   //!
   TBranch        *b_AntiKt6TopoEM_n90;   //!
   TBranch        *b_AntiKt6TopoEM_Timing;   //!
   TBranch        *b_AntiKt6TopoEM_LArQuality;   //!
   TBranch        *b_AntiKt6TopoEM_nTrk;   //!
   TBranch        *b_AntiKt6TopoEM_sumPtTrk;   //!
   TBranch        *b_AntiKt6TopoEM_OriginIndex;   //!
   TBranch        *b_AntiKt6TopoEM_HECQuality;   //!
   TBranch        *b_AntiKt6TopoEM_NegativeE;   //!
   TBranch        *b_AntiKt6TopoEM_AverageLArQF;   //!
   TBranch        *b_AntiKt6TopoEM_BCH_CORR_CELL;   //!
   TBranch        *b_AntiKt6TopoEM_BCH_CORR_DOTX;   //!
   TBranch        *b_AntiKt6TopoEM_BCH_CORR_JET;   //!
   TBranch        *b_AntiKt6TopoEM_BCH_CORR_JET_FORCELL;   //!
   TBranch        *b_AntiKt6TopoEM_ENG_BAD_CELLS;   //!
   TBranch        *b_AntiKt6TopoEM_N_BAD_CELLS;   //!
   TBranch        *b_AntiKt6TopoEM_N_BAD_CELLS_CORR;   //!
   TBranch        *b_AntiKt6TopoEM_BAD_CELLS_CORR_E;   //!
   TBranch        *b_AntiKt6TopoEM_NumTowers;   //!
   TBranch        *b_AntiKt6TopoEM_ootFracCells5;   //!
   TBranch        *b_AntiKt6TopoEM_ootFracCells10;   //!
   TBranch        *b_AntiKt6TopoEM_ootFracClusters5;   //!
   TBranch        *b_AntiKt6TopoEM_ootFracClusters10;   //!
   TBranch        *b_AntiKt6TopoEM_SamplingMax;   //!
   TBranch        *b_AntiKt6TopoEM_fracSamplingMax;   //!
   TBranch        *b_AntiKt6TopoEM_hecf;   //!
   TBranch        *b_AntiKt6TopoEM_tgap3f;   //!
   TBranch        *b_AntiKt6TopoEM_isUgly;   //!
   TBranch        *b_AntiKt6TopoEM_isBadLooseMinus;   //!
   TBranch        *b_AntiKt6TopoEM_isBadLoose;   //!
   TBranch        *b_AntiKt6TopoEM_isBadMedium;   //!
   TBranch        *b_AntiKt6TopoEM_isBadTight;   //!
   TBranch        *b_AntiKt6TopoEM_emfrac;   //!
   TBranch        *b_AntiKt6TopoEM_Offset;   //!
   TBranch        *b_AntiKt6TopoEM_EMJES;   //!
   TBranch        *b_AntiKt6TopoEM_EMJES_EtaCorr;   //!
   TBranch        *b_AntiKt6TopoEM_EMJESnooffset;   //!
   TBranch        *b_AntiKt6TopoEM_LCJES;   //!
   TBranch        *b_AntiKt6TopoEM_LCJES_EtaCorr;   //!
   TBranch        *b_AntiKt6TopoEM_emscale_E;   //!
   TBranch        *b_AntiKt6TopoEM_emscale_pt;   //!
   TBranch        *b_AntiKt6TopoEM_emscale_m;   //!
   TBranch        *b_AntiKt6TopoEM_emscale_eta;   //!
   TBranch        *b_AntiKt6TopoEM_emscale_phi;   //!
   TBranch        *b_AntiKt6TopoEM_jvtx_x;   //!
   TBranch        *b_AntiKt6TopoEM_jvtx_y;   //!
   TBranch        *b_AntiKt6TopoEM_jvtx_z;   //!
   TBranch        *b_AntiKt6TopoEM_jvtxf;   //!
   TBranch        *b_AntiKt6TopoEM_GSCFactorF;   //!
   TBranch        *b_AntiKt6TopoEM_WidthFraction;   //!
   TBranch        *b_AntiKt6TopoEM_e_PreSamplerB;   //!
   TBranch        *b_AntiKt6TopoEM_e_EMB1;   //!
   TBranch        *b_AntiKt6TopoEM_e_EMB2;   //!
   TBranch        *b_AntiKt6TopoEM_e_EMB3;   //!
   TBranch        *b_AntiKt6TopoEM_e_PreSamplerE;   //!
   TBranch        *b_AntiKt6TopoEM_e_EME1;   //!
   TBranch        *b_AntiKt6TopoEM_e_EME2;   //!
   TBranch        *b_AntiKt6TopoEM_e_EME3;   //!
   TBranch        *b_AntiKt6TopoEM_e_HEC0;   //!
   TBranch        *b_AntiKt6TopoEM_e_HEC1;   //!
   TBranch        *b_AntiKt6TopoEM_e_HEC2;   //!
   TBranch        *b_AntiKt6TopoEM_e_HEC3;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileBar0;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileBar1;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileBar2;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileGap1;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileGap2;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileGap3;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileExt0;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileExt1;   //!
   TBranch        *b_AntiKt6TopoEM_e_TileExt2;   //!
   TBranch        *b_AntiKt6TopoEM_e_FCAL0;   //!
   TBranch        *b_AntiKt6TopoEM_e_FCAL1;   //!
   TBranch        *b_AntiKt6TopoEM_e_FCAL2;   //!
   TBranch        *b_AntiKt6TopoEM_shapeBins;   //!
   TBranch        *b_AntiKt6TopoEM_Nconst;   //!
   TBranch        *b_AntiKt6TopoEM_ptconst_default;   //!
   TBranch        *b_AntiKt6TopoEM_econst_default;   //!
   TBranch        *b_AntiKt6TopoEM_etaconst_default;   //!
   TBranch        *b_AntiKt6TopoEM_phiconst_default;   //!
   TBranch        *b_AntiKt6TopoEM_weightconst_default;   //!
   TBranch        *b_AntiKt6TopoEM_constscale_E;   //!
   TBranch        *b_AntiKt6TopoEM_constscale_pt;   //!
   TBranch        *b_AntiKt6TopoEM_constscale_m;   //!
   TBranch        *b_AntiKt6TopoEM_constscale_eta;   //!
   TBranch        *b_AntiKt6TopoEM_constscale_phi;   //!
   TBranch        *b_AntiKt6TopoEM_el_dr;   //!
   TBranch        *b_AntiKt6TopoEM_el_matched;   //!
   TBranch        *b_AntiKt6TopoEM_mu_dr;   //!
   TBranch        *b_AntiKt6TopoEM_mu_matched;   //!
   TBranch        *b_AntiKt6TopoEM_L1_dr;   //!
   TBranch        *b_AntiKt6TopoEM_L1_matched;   //!
   TBranch        *b_AntiKt6TopoEM_L2_dr;   //!
   TBranch        *b_AntiKt6TopoEM_L2_matched;   //!
   TBranch        *b_AntiKt6TopoEM_EF_dr;   //!
   TBranch        *b_AntiKt6TopoEM_EF_matched;   //!
   TBranch        *b_HIFlow_v1_PsiFCAL0_w;   //!
   TBranch        *b_HIFlow_v1_PsiPFCAL0_w;   //!
   TBranch        *b_HIFlow_v1_PsiNFCAL0_w;   //!
   TBranch        *b_HIFlow_v1_EtInLayer;   //!
   TBranch        *b_HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v1_AvgV2fromCalo;   //!
   TBranch        *b_HIFlow_v1_PsiHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v1_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v1_PsiPtrack;   //!
   TBranch        *b_HIFlow_v1_PsiNtrack;   //!
   TBranch        *b_HIFlow_v1_v2FCAL0sil;   //!
   TBranch        *b_HIFlow_v1_v2track;   //!
   TBranch        *b_HIFlow_v1_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v2_PsiFCAL0_w;   //!
   TBranch        *b_HIFlow_v2_PsiPFCAL0_w;   //!
   TBranch        *b_HIFlow_v2_PsiNFCAL0_w;   //!
   TBranch        *b_HIFlow_v2_EtInLayer;   //!
   TBranch        *b_HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v2_AvgV2fromCalo;   //!
   TBranch        *b_HIFlow_v2_PsiHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v2_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v2_PsiPtrack;   //!
   TBranch        *b_HIFlow_v2_PsiNtrack;   //!
   TBranch        *b_HIFlow_v2_v2FCAL0sil;   //!
   TBranch        *b_HIFlow_v2_v2track;   //!
   TBranch        *b_HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v3_PsiFCAL0_w;   //!
   TBranch        *b_HIFlow_v3_PsiPFCAL0_w;   //!
   TBranch        *b_HIFlow_v3_PsiNFCAL0_w;   //!
   TBranch        *b_HIFlow_v3_EtInLayer;   //!
   TBranch        *b_HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v3_AvgV2fromCalo;   //!
   TBranch        *b_HIFlow_v3_PsiHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v3_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v3_PsiPtrack;   //!
   TBranch        *b_HIFlow_v3_PsiNtrack;   //!
   TBranch        *b_HIFlow_v3_v2FCAL0sil;   //!
   TBranch        *b_HIFlow_v3_v2track;   //!
   TBranch        *b_HIFlow_v3_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v4_PsiFCAL0_w;   //!
   TBranch        *b_HIFlow_v4_PsiPFCAL0_w;   //!
   TBranch        *b_HIFlow_v4_PsiNFCAL0_w;   //!
   TBranch        *b_HIFlow_v4_EtInLayer;   //!
   TBranch        *b_HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v4_AvgV2fromCalo;   //!
   TBranch        *b_HIFlow_v4_PsiHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v4_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v4_PsiPtrack;   //!
   TBranch        *b_HIFlow_v4_PsiNtrack;   //!
   TBranch        *b_HIFlow_v4_v2FCAL0sil;   //!
   TBranch        *b_HIFlow_v4_v2track;   //!
   TBranch        *b_HIFlow_v4_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v5_PsiFCAL0_w;   //!
   TBranch        *b_HIFlow_v5_PsiPFCAL0_w;   //!
   TBranch        *b_HIFlow_v5_PsiNFCAL0_w;   //!
   TBranch        *b_HIFlow_v5_EtInLayer;   //!
   TBranch        *b_HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v5_AvgV2fromCalo;   //!
   TBranch        *b_HIFlow_v5_PsiHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v5_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v5_PsiPtrack;   //!
   TBranch        *b_HIFlow_v5_PsiNtrack;   //!
   TBranch        *b_HIFlow_v5_v2FCAL0sil;   //!
   TBranch        *b_HIFlow_v5_v2track;   //!
   TBranch        *b_HIFlow_v5_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v6_PsiFCAL0_w;   //!
   TBranch        *b_HIFlow_v6_PsiPFCAL0_w;   //!
   TBranch        *b_HIFlow_v6_PsiNFCAL0_w;   //!
   TBranch        *b_HIFlow_v6_EtInLayer;   //!
   TBranch        *b_HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_HIFlow_v6_AvgV2fromCalo;   //!
   TBranch        *b_HIFlow_v6_PsiHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v6_PsiEtHICaloUtilLayers;   //!
   TBranch        *b_HIFlow_v6_PsiPtrack;   //!
   TBranch        *b_HIFlow_v6_PsiNtrack;   //!
   TBranch        *b_HIFlow_v6_v2FCAL0sil;   //!
   TBranch        *b_HIFlow_v6_v2track;   //!
   TBranch        *b_HIFlow_v6_Meanv2_Psi_From_FCAL0CaloCel_IDLayers;   //!
   TBranch        *b_MET_RefFinal_etx;   //!
   TBranch        *b_MET_RefFinal_ety;   //!
   TBranch        *b_MET_RefFinal_phi;   //!
   TBranch        *b_MET_RefFinal_et;   //!
   TBranch        *b_MET_RefFinal_sumet;   //!
   TBranch        *b_MET_RefFinal_etx_CentralReg;   //!
   TBranch        *b_MET_RefFinal_ety_CentralReg;   //!
   TBranch        *b_MET_RefFinal_sumet_CentralReg;   //!
   TBranch        *b_MET_RefFinal_phi_CentralReg;   //!
   TBranch        *b_MET_RefFinal_etx_EndcapRegion;   //!
   TBranch        *b_MET_RefFinal_ety_EndcapRegion;   //!
   TBranch        *b_MET_RefFinal_sumet_EndcapRegion;   //!
   TBranch        *b_MET_RefFinal_phi_EndcapRegion;   //!
   TBranch        *b_MET_RefFinal_etx_ForwardReg;   //!
   TBranch        *b_MET_RefFinal_ety_ForwardReg;   //!
   TBranch        *b_MET_RefFinal_sumet_ForwardReg;   //!
   TBranch        *b_MET_RefFinal_phi_ForwardReg;   //!
   TBranch        *b_cccEt2_Et2_Nh_Calo;   //!
   TBranch        *b_cccEt2_Et2_Eh_Calo;   //!
   TBranch        *b_cccEt2_Et2_Nh_EM;   //!
   TBranch        *b_cccEt2_Et2_Eh_EM;   //!
   TBranch        *b_cccEt2_Et2_Nh_HAD;   //!
   TBranch        *b_cccEt2_Et2_Eh_HAD;   //!
   TBranch        *b_cccEt2_Et2_Nh_PresB;   //!
   TBranch        *b_cccEt2_Et2_Eh_PresB;   //!
   TBranch        *b_cccEt2_Et2_Nh_EMB;   //!
   TBranch        *b_cccEt2_Et2_Eh_EMB;   //!
   TBranch        *b_cccEt2_Et2_Nh_EMEC;   //!
   TBranch        *b_cccEt2_Et2_Eh_EMEC;   //!
   TBranch        *b_cccEt2_Et2_Nh_Tile;   //!
   TBranch        *b_cccEt2_Et2_Eh_Tile;   //!
   TBranch        *b_cccEt2_Et2_Nh_TileGap;   //!
   TBranch        *b_cccEt2_Et2_Eh_TileGap;   //!
   TBranch        *b_cccEt2_Et2_Nh_HEC;   //!
   TBranch        *b_cccEt2_Et2_Eh_HEC;   //!
   TBranch        *b_cccEt2_Et2_Nh_FCal;   //!
   TBranch        *b_cccEt2_Et2_Eh_FCal;   //!
   TBranch        *b_cccEt2_Et2_Nh_PresE;   //!
   TBranch        *b_cccEt2_Et2_Eh_PresE;   //!
   TBranch        *b_cccEt2_Et2_Nh_Scint;   //!
   TBranch        *b_cccEt2_Et2_Eh_Scint;   //!
   TBranch        *b_cccEt2_p2_Nh_Calo;   //!
   TBranch        *b_cccEt2_p2_Eh_Calo;   //!
   TBranch        *b_cccEt2_p2_Nh_EM;   //!
   TBranch        *b_cccEt2_p2_Eh_EM;   //!
   TBranch        *b_cccEt2_p2_Nh_HAD;   //!
   TBranch        *b_cccEt2_p2_Eh_HAD;   //!
   TBranch        *b_cccEt2_p2_Nh_PresB;   //!
   TBranch        *b_cccEt2_p2_Eh_PresB;   //!
   TBranch        *b_cccEt2_p2_Nh_EMB;   //!
   TBranch        *b_cccEt2_p2_Eh_EMB;   //!
   TBranch        *b_cccEt2_p2_Nh_EMEC;   //!
   TBranch        *b_cccEt2_p2_Eh_EMEC;   //!
   TBranch        *b_cccEt2_p2_Nh_Tile;   //!
   TBranch        *b_cccEt2_p2_Eh_Tile;   //!
   TBranch        *b_cccEt2_p2_Nh_TileGap;   //!
   TBranch        *b_cccEt2_p2_Eh_TileGap;   //!
   TBranch        *b_cccEt2_p2_Nh_HEC;   //!
   TBranch        *b_cccEt2_p2_Eh_HEC;   //!
   TBranch        *b_cccEt2_p2_Nh_FCal;   //!
   TBranch        *b_cccEt2_p2_Eh_FCal;   //!
   TBranch        *b_cccEt2_p2_Nh_PresE;   //!
   TBranch        *b_cccEt2_p2_Eh_PresE;   //!
   TBranch        *b_cccEt2_p2_Nh_Scint;   //!
   TBranch        *b_cccEt2_p2_Eh_Scint;   //!
   TBranch        *b_cccEt2_n2_Nh_Calo;   //!
   TBranch        *b_cccEt2_n2_Eh_Calo;   //!
   TBranch        *b_cccEt2_n2_Nh_EM;   //!
   TBranch        *b_cccEt2_n2_Eh_EM;   //!
   TBranch        *b_cccEt2_n2_Nh_HAD;   //!
   TBranch        *b_cccEt2_n2_Eh_HAD;   //!
   TBranch        *b_cccEt2_n2_Nh_PresB;   //!
   TBranch        *b_cccEt2_n2_Eh_PresB;   //!
   TBranch        *b_cccEt2_n2_Nh_EMB;   //!
   TBranch        *b_cccEt2_n2_Eh_EMB;   //!
   TBranch        *b_cccEt2_n2_Nh_EMEC;   //!
   TBranch        *b_cccEt2_n2_Eh_EMEC;   //!
   TBranch        *b_cccEt2_n2_Nh_Tile;   //!
   TBranch        *b_cccEt2_n2_Eh_Tile;   //!
   TBranch        *b_cccEt2_n2_Nh_TileGap;   //!
   TBranch        *b_cccEt2_n2_Eh_TileGap;   //!
   TBranch        *b_cccEt2_n2_Nh_HEC;   //!
   TBranch        *b_cccEt2_n2_Eh_HEC;   //!
   TBranch        *b_cccEt2_n2_Nh_FCal;   //!
   TBranch        *b_cccEt2_n2_Eh_FCal;   //!
   TBranch        *b_cccEt2_n2_Nh_PresE;   //!
   TBranch        *b_cccEt2_n2_Eh_PresE;   //!
   TBranch        *b_cccEt2_n2_Nh_Scint;   //!
   TBranch        *b_cccEt2_n2_Eh_Scint;   //!
   TBranch        *b_cl_hadTopo_n;   //!
   TBranch        *b_cl_hadTopo_E;   //!
   TBranch        *b_cl_hadTopo_pt;   //!
   TBranch        *b_cl_hadTopo_eta;   //!
   TBranch        *b_cl_hadTopo_phi;   //!
   TBranch        *b_cl_hadTopo_E_em;   //!
   TBranch        *b_cl_hadTopo_E_had;   //!
   TBranch        *b_cl_hadTopo_significance;   //!
   TBranch        *b_cl_hadTopo_cellSignificance;   //!
   TBranch        *b_cl_hadTopo_cellSigSampling;   //!
   TBranch        *b_cl_hadTopo_firstEdens;   //!
   TBranch        *b_cl_hadTopo_cellmaxfrac;   //!
   TBranch        *b_cl_hadTopo_longitudinal;   //!
   TBranch        *b_cl_hadTopo_secondlambda;   //!
   TBranch        *b_cl_hadTopo_lateral;   //!
   TBranch        *b_cl_hadTopo_secondR;   //!
   TBranch        *b_cl_hadTopo_centerlambda;   //!
   TBranch        *b_cl_hadTopo_deltaTheta;   //!
   TBranch        *b_cl_hadTopo_deltaPhi;   //!
   TBranch        *b_cl_hadTopo_centermag;   //!
   TBranch        *b_cl_hadTopo_time;   //!
   TBranch        *b_cl_hadTopo_E_PreSamplerB;   //!
   TBranch        *b_cl_hadTopo_E_EMB1;   //!
   TBranch        *b_cl_hadTopo_E_EMB2;   //!
   TBranch        *b_cl_hadTopo_E_EMB3;   //!
   TBranch        *b_cl_hadTopo_E_PreSamplerE;   //!
   TBranch        *b_cl_hadTopo_E_EME1;   //!
   TBranch        *b_cl_hadTopo_E_EME2;   //!
   TBranch        *b_cl_hadTopo_E_EME3;   //!
   TBranch        *b_cl_hadTopo_E_HEC0;   //!
   TBranch        *b_cl_hadTopo_E_HEC1;   //!
   TBranch        *b_cl_hadTopo_E_HEC2;   //!
   TBranch        *b_cl_hadTopo_E_HEC3;   //!
   TBranch        *b_cl_hadTopo_E_TileBar0;   //!
   TBranch        *b_cl_hadTopo_E_TileBar1;   //!
   TBranch        *b_cl_hadTopo_E_TileBar2;   //!
   TBranch        *b_cl_hadTopo_E_TileGap1;   //!
   TBranch        *b_cl_hadTopo_E_TileGap2;   //!
   TBranch        *b_cl_hadTopo_E_TileGap3;   //!
   TBranch        *b_cl_hadTopo_E_TileExt0;   //!
   TBranch        *b_cl_hadTopo_E_TileExt1;   //!
   TBranch        *b_cl_hadTopo_E_TileExt2;   //!
   TBranch        *b_cl_hadTopo_E_FCAL0;   //!
   TBranch        *b_cl_hadTopo_E_FCAL1;   //!
   TBranch        *b_cl_hadTopo_E_FCAL2;   //!
   TBranch        *b_HIEtaGap_beam1;   //!
   TBranch        *b_HIEtaGap_beam2;   //!
   TBranch        *b_HIEtaGap_lowerEta;   //!
   TBranch        *b_HIEtaGap_upperEta;   //!
   TBranch        *b_HIEtaGap_lowerEdgeType;   //!
   TBranch        *b_HIEtaGap_upperEdgeType;   //!
   TBranch        *b_HIEtaGap_lowerEtaNegEdge;   //!
   TBranch        *b_HIEtaGap_upperEtaNegEdge;   //!
   TBranch        *b_HIEtaGap_lowerEtaPosEdge;   //!
   TBranch        *b_HIEtaGap_upperEtaPosEdge;   //!
   TBranch        *b_HIEtaGap_maxGapSize;   //!
   TBranch        *b_emcl_n;   //!
   TBranch        *b_emcl_E;   //!
   TBranch        *b_emcl_pt;   //!
   TBranch        *b_emcl_m;   //!
   TBranch        *b_emcl_eta;   //!
   TBranch        *b_emcl_phi;   //!
   TBranch        *b_emcl_E_em;   //!
   TBranch        *b_emcl_E_had;   //!
   TBranch        *b_mu_staco_n;   //!
   TBranch        *b_mu_staco_E;   //!
   TBranch        *b_mu_staco_pt;   //!
   TBranch        *b_mu_staco_m;   //!
   TBranch        *b_mu_staco_eta;   //!
   TBranch        *b_mu_staco_phi;   //!
   TBranch        *b_mu_staco_px;   //!
   TBranch        *b_mu_staco_py;   //!
   TBranch        *b_mu_staco_pz;   //!
   TBranch        *b_mu_staco_charge;   //!
   TBranch        *b_mu_staco_allauthor;   //!
   TBranch        *b_mu_staco_author;   //!
   TBranch        *b_mu_staco_beta;   //!
   TBranch        *b_mu_staco_isMuonLikelihood;   //!
   TBranch        *b_mu_staco_matchchi2;   //!
   TBranch        *b_mu_staco_matchndof;   //!
   TBranch        *b_mu_staco_etcone20;   //!
   TBranch        *b_mu_staco_etcone30;   //!
   TBranch        *b_mu_staco_etcone40;   //!
   TBranch        *b_mu_staco_nucone20;   //!
   TBranch        *b_mu_staco_nucone30;   //!
   TBranch        *b_mu_staco_nucone40;   //!
   TBranch        *b_mu_staco_ptcone20;   //!
   TBranch        *b_mu_staco_ptcone30;   //!
   TBranch        *b_mu_staco_ptcone40;   //!
   TBranch        *b_mu_staco_etconeNoEm10;   //!
   TBranch        *b_mu_staco_etconeNoEm20;   //!
   TBranch        *b_mu_staco_etconeNoEm30;   //!
   TBranch        *b_mu_staco_etconeNoEm40;   //!
   TBranch        *b_mu_staco_scatteringCurvatureSignificance;   //!
   TBranch        *b_mu_staco_scatteringNeighbourSignificance;   //!
   TBranch        *b_mu_staco_momentumBalanceSignificance;   //!
   TBranch        *b_mu_staco_energyLossPar;   //!
   TBranch        *b_mu_staco_energyLossErr;   //!
   TBranch        *b_mu_staco_etCore;   //!
   TBranch        *b_mu_staco_energyLossType;   //!
   TBranch        *b_mu_staco_caloMuonIdTag;   //!
   TBranch        *b_mu_staco_caloLRLikelihood;   //!
   TBranch        *b_mu_staco_bestMatch;   //!
   TBranch        *b_mu_staco_isStandAloneMuon;   //!
   TBranch        *b_mu_staco_isCombinedMuon;   //!
   TBranch        *b_mu_staco_isLowPtReconstructedMuon;   //!
   TBranch        *b_mu_staco_isSegmentTaggedMuon;   //!
   TBranch        *b_mu_staco_isCaloMuonId;   //!
   TBranch        *b_mu_staco_alsoFoundByLowPt;   //!
   TBranch        *b_mu_staco_alsoFoundByCaloMuonId;   //!
   TBranch        *b_mu_staco_isSiliconAssociatedForwardMuon;   //!
   TBranch        *b_mu_staco_loose;   //!
   TBranch        *b_mu_staco_medium;   //!
   TBranch        *b_mu_staco_tight;   //!
   TBranch        *b_mu_staco_d0_exPV;   //!
   TBranch        *b_mu_staco_z0_exPV;   //!
   TBranch        *b_mu_staco_phi_exPV;   //!
   TBranch        *b_mu_staco_theta_exPV;   //!
   TBranch        *b_mu_staco_qoverp_exPV;   //!
   TBranch        *b_mu_staco_cb_d0_exPV;   //!
   TBranch        *b_mu_staco_cb_z0_exPV;   //!
   TBranch        *b_mu_staco_cb_phi_exPV;   //!
   TBranch        *b_mu_staco_cb_theta_exPV;   //!
   TBranch        *b_mu_staco_cb_qoverp_exPV;   //!
   TBranch        *b_mu_staco_id_d0_exPV;   //!
   TBranch        *b_mu_staco_id_z0_exPV;   //!
   TBranch        *b_mu_staco_id_phi_exPV;   //!
   TBranch        *b_mu_staco_id_theta_exPV;   //!
   TBranch        *b_mu_staco_id_qoverp_exPV;   //!
   TBranch        *b_mu_staco_me_d0_exPV;   //!
   TBranch        *b_mu_staco_me_z0_exPV;   //!
   TBranch        *b_mu_staco_me_phi_exPV;   //!
   TBranch        *b_mu_staco_me_theta_exPV;   //!
   TBranch        *b_mu_staco_me_qoverp_exPV;   //!
   TBranch        *b_mu_staco_ie_d0_exPV;   //!
   TBranch        *b_mu_staco_ie_z0_exPV;   //!
   TBranch        *b_mu_staco_ie_phi_exPV;   //!
   TBranch        *b_mu_staco_ie_theta_exPV;   //!
   TBranch        *b_mu_staco_ie_qoverp_exPV;   //!
   TBranch        *b_mu_staco_SpaceTime_detID;   //!
   TBranch        *b_mu_staco_SpaceTime_t;   //!
   TBranch        *b_mu_staco_SpaceTime_tError;   //!
   TBranch        *b_mu_staco_SpaceTime_weight;   //!
   TBranch        *b_mu_staco_SpaceTime_x;   //!
   TBranch        *b_mu_staco_SpaceTime_y;   //!
   TBranch        *b_mu_staco_SpaceTime_z;   //!
   TBranch        *b_mu_staco_cov_d0_exPV;   //!
   TBranch        *b_mu_staco_cov_z0_exPV;   //!
   TBranch        *b_mu_staco_cov_phi_exPV;   //!
   TBranch        *b_mu_staco_cov_theta_exPV;   //!
   TBranch        *b_mu_staco_cov_qoverp_exPV;   //!
   TBranch        *b_mu_staco_cov_d0_z0_exPV;   //!
   TBranch        *b_mu_staco_cov_d0_phi_exPV;   //!
   TBranch        *b_mu_staco_cov_d0_theta_exPV;   //!
   TBranch        *b_mu_staco_cov_d0_qoverp_exPV;   //!
   TBranch        *b_mu_staco_cov_z0_phi_exPV;   //!
   TBranch        *b_mu_staco_cov_z0_theta_exPV;   //!
   TBranch        *b_mu_staco_cov_z0_qoverp_exPV;   //!
   TBranch        *b_mu_staco_cov_phi_theta_exPV;   //!
   TBranch        *b_mu_staco_cov_phi_qoverp_exPV;   //!
   TBranch        *b_mu_staco_cov_theta_qoverp_exPV;   //!
   TBranch        *b_mu_staco_id_cov_d0_exPV;   //!
   TBranch        *b_mu_staco_id_cov_z0_exPV;   //!
   TBranch        *b_mu_staco_id_cov_phi_exPV;   //!
   TBranch        *b_mu_staco_id_cov_theta_exPV;   //!
   TBranch        *b_mu_staco_id_cov_qoverp_exPV;   //!
   TBranch        *b_mu_staco_me_cov_d0_exPV;   //!
   TBranch        *b_mu_staco_me_cov_z0_exPV;   //!
   TBranch        *b_mu_staco_me_cov_phi_exPV;   //!
   TBranch        *b_mu_staco_me_cov_theta_exPV;   //!
   TBranch        *b_mu_staco_me_cov_qoverp_exPV;   //!
   TBranch        *b_mu_staco_ms_d0;   //!
   TBranch        *b_mu_staco_ms_z0;   //!
   TBranch        *b_mu_staco_ms_phi;   //!
   TBranch        *b_mu_staco_ms_theta;   //!
   TBranch        *b_mu_staco_ms_qoverp;   //!
   TBranch        *b_mu_staco_id_d0;   //!
   TBranch        *b_mu_staco_id_z0;   //!
   TBranch        *b_mu_staco_id_phi;   //!
   TBranch        *b_mu_staco_id_theta;   //!
   TBranch        *b_mu_staco_id_qoverp;   //!
   TBranch        *b_mu_staco_me_d0;   //!
   TBranch        *b_mu_staco_me_z0;   //!
   TBranch        *b_mu_staco_me_phi;   //!
   TBranch        *b_mu_staco_me_theta;   //!
   TBranch        *b_mu_staco_me_qoverp;   //!
   TBranch        *b_mu_staco_ie_d0;   //!
   TBranch        *b_mu_staco_ie_z0;   //!
   TBranch        *b_mu_staco_ie_phi;   //!
   TBranch        *b_mu_staco_ie_theta;   //!
   TBranch        *b_mu_staco_ie_qoverp;   //!
   TBranch        *b_mu_staco_nOutliersOnTrack;   //!
   TBranch        *b_mu_staco_nBLHits;   //!
   TBranch        *b_mu_staco_nPixHits;   //!
   TBranch        *b_mu_staco_nSCTHits;   //!
   TBranch        *b_mu_staco_nTRTHits;   //!
   TBranch        *b_mu_staco_nTRTHighTHits;   //!
   TBranch        *b_mu_staco_nBLSharedHits;   //!
   TBranch        *b_mu_staco_nPixSharedHits;   //!
   TBranch        *b_mu_staco_nPixHoles;   //!
   TBranch        *b_mu_staco_nSCTSharedHits;   //!
   TBranch        *b_mu_staco_nSCTHoles;   //!
   TBranch        *b_mu_staco_nTRTOutliers;   //!
   TBranch        *b_mu_staco_nTRTHighTOutliers;   //!
   TBranch        *b_mu_staco_nGangedPixels;   //!
   TBranch        *b_mu_staco_nPixelDeadSensors;   //!
   TBranch        *b_mu_staco_nSCTDeadSensors;   //!
   TBranch        *b_mu_staco_nTRTDeadStraws;   //!
   TBranch        *b_mu_staco_expectBLayerHit;   //!
   TBranch        *b_mu_staco_nMDTHits;   //!
   TBranch        *b_mu_staco_nMDTHoles;   //!
   TBranch        *b_mu_staco_nCSCEtaHits;   //!
   TBranch        *b_mu_staco_nCSCEtaHoles;   //!
   TBranch        *b_mu_staco_nCSCUnspoiledEtaHits;   //!
   TBranch        *b_mu_staco_nCSCPhiHits;   //!
   TBranch        *b_mu_staco_nCSCPhiHoles;   //!
   TBranch        *b_mu_staco_nRPCEtaHits;   //!
   TBranch        *b_mu_staco_nRPCEtaHoles;   //!
   TBranch        *b_mu_staco_nRPCPhiHits;   //!
   TBranch        *b_mu_staco_nRPCPhiHoles;   //!
   TBranch        *b_mu_staco_nTGCEtaHits;   //!
   TBranch        *b_mu_staco_nTGCEtaHoles;   //!
   TBranch        *b_mu_staco_nTGCPhiHits;   //!
   TBranch        *b_mu_staco_nTGCPhiHoles;   //!
   TBranch        *b_mu_staco_nprecisionLayers;   //!
   TBranch        *b_mu_staco_nprecisionHoleLayers;   //!
   TBranch        *b_mu_staco_nphiLayers;   //!
   TBranch        *b_mu_staco_ntrigEtaLayers;   //!
   TBranch        *b_mu_staco_nphiHoleLayers;   //!
   TBranch        *b_mu_staco_ntrigEtaHoleLayers;   //!
   TBranch        *b_mu_staco_nMDTBIHits;   //!
   TBranch        *b_mu_staco_nMDTBMHits;   //!
   TBranch        *b_mu_staco_nMDTBOHits;   //!
   TBranch        *b_mu_staco_nMDTBEEHits;   //!
   TBranch        *b_mu_staco_nMDTBIS78Hits;   //!
   TBranch        *b_mu_staco_nMDTEIHits;   //!
   TBranch        *b_mu_staco_nMDTEMHits;   //!
   TBranch        *b_mu_staco_nMDTEOHits;   //!
   TBranch        *b_mu_staco_nMDTEEHits;   //!
   TBranch        *b_mu_staco_nRPCLayer1EtaHits;   //!
   TBranch        *b_mu_staco_nRPCLayer2EtaHits;   //!
   TBranch        *b_mu_staco_nRPCLayer3EtaHits;   //!
   TBranch        *b_mu_staco_nRPCLayer1PhiHits;   //!
   TBranch        *b_mu_staco_nRPCLayer2PhiHits;   //!
   TBranch        *b_mu_staco_nRPCLayer3PhiHits;   //!
   TBranch        *b_mu_staco_nTGCLayer1EtaHits;   //!
   TBranch        *b_mu_staco_nTGCLayer2EtaHits;   //!
   TBranch        *b_mu_staco_nTGCLayer3EtaHits;   //!
   TBranch        *b_mu_staco_nTGCLayer4EtaHits;   //!
   TBranch        *b_mu_staco_nTGCLayer1PhiHits;   //!
   TBranch        *b_mu_staco_nTGCLayer2PhiHits;   //!
   TBranch        *b_mu_staco_nTGCLayer3PhiHits;   //!
   TBranch        *b_mu_staco_nTGCLayer4PhiHits;   //!
   TBranch        *b_mu_staco_barrelSectors;   //!
   TBranch        *b_mu_staco_endcapSectors;   //!
   TBranch        *b_mu_staco_trackd0;   //!
   TBranch        *b_mu_staco_trackz0;   //!
   TBranch        *b_mu_staco_trackphi;   //!
   TBranch        *b_mu_staco_tracktheta;   //!
   TBranch        *b_mu_staco_trackqoverp;   //!
   TBranch        *b_mu_staco_trackcov_d0;   //!
   TBranch        *b_mu_staco_trackcov_z0;   //!
   TBranch        *b_mu_staco_trackcov_phi;   //!
   TBranch        *b_mu_staco_trackcov_theta;   //!
   TBranch        *b_mu_staco_trackcov_qoverp;   //!
   TBranch        *b_mu_staco_trackcov_d0_z0;   //!
   TBranch        *b_mu_staco_trackcov_d0_phi;   //!
   TBranch        *b_mu_staco_trackcov_d0_theta;   //!
   TBranch        *b_mu_staco_trackcov_d0_qoverp;   //!
   TBranch        *b_mu_staco_trackcov_z0_phi;   //!
   TBranch        *b_mu_staco_trackcov_z0_theta;   //!
   TBranch        *b_mu_staco_trackcov_z0_qoverp;   //!
   TBranch        *b_mu_staco_trackcov_phi_theta;   //!
   TBranch        *b_mu_staco_trackcov_phi_qoverp;   //!
   TBranch        *b_mu_staco_trackcov_theta_qoverp;   //!
   TBranch        *b_mu_staco_trackfitchi2;   //!
   TBranch        *b_mu_staco_trackfitndof;   //!
   TBranch        *b_mu_staco_hastrack;   //!
   TBranch        *b_mu_staco_trackd0beam;   //!
   TBranch        *b_mu_staco_trackz0beam;   //!
   TBranch        *b_mu_staco_tracksigd0beam;   //!
   TBranch        *b_mu_staco_tracksigz0beam;   //!
   TBranch        *b_mu_staco_trackd0pv;   //!
   TBranch        *b_mu_staco_trackz0pv;   //!
   TBranch        *b_mu_staco_tracksigd0pv;   //!
   TBranch        *b_mu_staco_tracksigz0pv;   //!
   TBranch        *b_mu_staco_trackIPEstimate_d0_biasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_z0_biasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_sigd0_biasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_sigz0_biasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_d0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_z0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_staco_trackd0pvunbiased;   //!
   TBranch        *b_mu_staco_trackz0pvunbiased;   //!
   TBranch        *b_mu_staco_tracksigd0pvunbiased;   //!
   TBranch        *b_mu_staco_tracksigz0pvunbiased;   //!
   TBranch        *b_mu_staco_type;   //!
   TBranch        *b_mu_staco_origin;   //!
   TBranch        *b_mu_staco_truth_dr;   //!
   TBranch        *b_mu_staco_truth_E;   //!
   TBranch        *b_mu_staco_truth_pt;   //!
   TBranch        *b_mu_staco_truth_eta;   //!
   TBranch        *b_mu_staco_truth_phi;   //!
   TBranch        *b_mu_staco_truth_type;   //!
   TBranch        *b_mu_staco_truth_status;   //!
   TBranch        *b_mu_staco_truth_barcode;   //!
   TBranch        *b_mu_staco_truth_mothertype;   //!
   TBranch        *b_mu_staco_truth_motherbarcode;   //!
   TBranch        *b_mu_staco_truth_matched;   //!
   TBranch        *b_mu_staco_EFCB_dr;   //!
   TBranch        *b_mu_staco_EFCB_n;   //!
   TBranch        *b_mu_staco_EFCB_MuonType;   //!
   TBranch        *b_mu_staco_EFCB_pt;   //!
   TBranch        *b_mu_staco_EFCB_eta;   //!
   TBranch        *b_mu_staco_EFCB_phi;   //!
   TBranch        *b_mu_staco_EFCB_hasCB;   //!
   TBranch        *b_mu_staco_EFCB_matched;   //!
   TBranch        *b_mu_staco_EFMG_dr;   //!
   TBranch        *b_mu_staco_EFMG_n;   //!
   TBranch        *b_mu_staco_EFMG_MuonType;   //!
   TBranch        *b_mu_staco_EFMG_pt;   //!
   TBranch        *b_mu_staco_EFMG_eta;   //!
   TBranch        *b_mu_staco_EFMG_phi;   //!
   TBranch        *b_mu_staco_EFMG_hasMG;   //!
   TBranch        *b_mu_staco_EFMG_matched;   //!
   TBranch        *b_mu_staco_EFME_dr;   //!
   TBranch        *b_mu_staco_EFME_n;   //!
   TBranch        *b_mu_staco_EFME_MuonType;   //!
   TBranch        *b_mu_staco_EFME_pt;   //!
   TBranch        *b_mu_staco_EFME_eta;   //!
   TBranch        *b_mu_staco_EFME_phi;   //!
   TBranch        *b_mu_staco_EFME_hasME;   //!
   TBranch        *b_mu_staco_EFME_matched;   //!
   TBranch        *b_mu_staco_L2CB_dr;   //!
   TBranch        *b_mu_staco_L2CB_pt;   //!
   TBranch        *b_mu_staco_L2CB_eta;   //!
   TBranch        *b_mu_staco_L2CB_phi;   //!
   TBranch        *b_mu_staco_L2CB_id_pt;   //!
   TBranch        *b_mu_staco_L2CB_ms_pt;   //!
   TBranch        *b_mu_staco_L2CB_nPixHits;   //!
   TBranch        *b_mu_staco_L2CB_nSCTHits;   //!
   TBranch        *b_mu_staco_L2CB_nTRTHits;   //!
   TBranch        *b_mu_staco_L2CB_nTRTHighTHits;   //!
   TBranch        *b_mu_staco_L2CB_matched;   //!
   TBranch        *b_mu_staco_L1_dr;   //!
   TBranch        *b_mu_staco_L1_pt;   //!
   TBranch        *b_mu_staco_L1_eta;   //!
   TBranch        *b_mu_staco_L1_phi;   //!
   TBranch        *b_mu_staco_L1_thrNumber;   //!
   TBranch        *b_mu_staco_L1_RoINumber;   //!
   TBranch        *b_mu_staco_L1_sectorAddress;   //!
   TBranch        *b_mu_staco_L1_firstCandidate;   //!
   TBranch        *b_mu_staco_L1_moreCandInRoI;   //!
   TBranch        *b_mu_staco_L1_moreCandInSector;   //!
   TBranch        *b_mu_staco_L1_source;   //!
   TBranch        *b_mu_staco_L1_hemisphere;   //!
   TBranch        *b_mu_staco_L1_charge;   //!
   TBranch        *b_mu_staco_L1_vetoed;   //!
   TBranch        *b_mu_staco_L1_matched;   //!
   TBranch        *b_mu_muid_n;   //!
   TBranch        *b_mu_muid_E;   //!
   TBranch        *b_mu_muid_pt;   //!
   TBranch        *b_mu_muid_m;   //!
   TBranch        *b_mu_muid_eta;   //!
   TBranch        *b_mu_muid_phi;   //!
   TBranch        *b_mu_muid_px;   //!
   TBranch        *b_mu_muid_py;   //!
   TBranch        *b_mu_muid_pz;   //!
   TBranch        *b_mu_muid_charge;   //!
   TBranch        *b_mu_muid_allauthor;   //!
   TBranch        *b_mu_muid_author;   //!
   TBranch        *b_mu_muid_beta;   //!
   TBranch        *b_mu_muid_isMuonLikelihood;   //!
   TBranch        *b_mu_muid_matchchi2;   //!
   TBranch        *b_mu_muid_matchndof;   //!
   TBranch        *b_mu_muid_etcone20;   //!
   TBranch        *b_mu_muid_etcone30;   //!
   TBranch        *b_mu_muid_etcone40;   //!
   TBranch        *b_mu_muid_nucone20;   //!
   TBranch        *b_mu_muid_nucone30;   //!
   TBranch        *b_mu_muid_nucone40;   //!
   TBranch        *b_mu_muid_ptcone20;   //!
   TBranch        *b_mu_muid_ptcone30;   //!
   TBranch        *b_mu_muid_ptcone40;   //!
   TBranch        *b_mu_muid_etconeNoEm10;   //!
   TBranch        *b_mu_muid_etconeNoEm20;   //!
   TBranch        *b_mu_muid_etconeNoEm30;   //!
   TBranch        *b_mu_muid_etconeNoEm40;   //!
   TBranch        *b_mu_muid_scatteringCurvatureSignificance;   //!
   TBranch        *b_mu_muid_scatteringNeighbourSignificance;   //!
   TBranch        *b_mu_muid_momentumBalanceSignificance;   //!
   TBranch        *b_mu_muid_energyLossPar;   //!
   TBranch        *b_mu_muid_energyLossErr;   //!
   TBranch        *b_mu_muid_etCore;   //!
   TBranch        *b_mu_muid_energyLossType;   //!
   TBranch        *b_mu_muid_caloMuonIdTag;   //!
   TBranch        *b_mu_muid_caloLRLikelihood;   //!
   TBranch        *b_mu_muid_bestMatch;   //!
   TBranch        *b_mu_muid_isStandAloneMuon;   //!
   TBranch        *b_mu_muid_isCombinedMuon;   //!
   TBranch        *b_mu_muid_isLowPtReconstructedMuon;   //!
   TBranch        *b_mu_muid_isSegmentTaggedMuon;   //!
   TBranch        *b_mu_muid_isCaloMuonId;   //!
   TBranch        *b_mu_muid_alsoFoundByLowPt;   //!
   TBranch        *b_mu_muid_alsoFoundByCaloMuonId;   //!
   TBranch        *b_mu_muid_isSiliconAssociatedForwardMuon;   //!
   TBranch        *b_mu_muid_loose;   //!
   TBranch        *b_mu_muid_medium;   //!
   TBranch        *b_mu_muid_tight;   //!
   TBranch        *b_mu_muid_d0_exPV;   //!
   TBranch        *b_mu_muid_z0_exPV;   //!
   TBranch        *b_mu_muid_phi_exPV;   //!
   TBranch        *b_mu_muid_theta_exPV;   //!
   TBranch        *b_mu_muid_qoverp_exPV;   //!
   TBranch        *b_mu_muid_cb_d0_exPV;   //!
   TBranch        *b_mu_muid_cb_z0_exPV;   //!
   TBranch        *b_mu_muid_cb_phi_exPV;   //!
   TBranch        *b_mu_muid_cb_theta_exPV;   //!
   TBranch        *b_mu_muid_cb_qoverp_exPV;   //!
   TBranch        *b_mu_muid_id_d0_exPV;   //!
   TBranch        *b_mu_muid_id_z0_exPV;   //!
   TBranch        *b_mu_muid_id_phi_exPV;   //!
   TBranch        *b_mu_muid_id_theta_exPV;   //!
   TBranch        *b_mu_muid_id_qoverp_exPV;   //!
   TBranch        *b_mu_muid_me_d0_exPV;   //!
   TBranch        *b_mu_muid_me_z0_exPV;   //!
   TBranch        *b_mu_muid_me_phi_exPV;   //!
   TBranch        *b_mu_muid_me_theta_exPV;   //!
   TBranch        *b_mu_muid_me_qoverp_exPV;   //!
   TBranch        *b_mu_muid_ie_d0_exPV;   //!
   TBranch        *b_mu_muid_ie_z0_exPV;   //!
   TBranch        *b_mu_muid_ie_phi_exPV;   //!
   TBranch        *b_mu_muid_ie_theta_exPV;   //!
   TBranch        *b_mu_muid_ie_qoverp_exPV;   //!
   TBranch        *b_mu_muid_SpaceTime_detID;   //!
   TBranch        *b_mu_muid_SpaceTime_t;   //!
   TBranch        *b_mu_muid_SpaceTime_tError;   //!
   TBranch        *b_mu_muid_SpaceTime_weight;   //!
   TBranch        *b_mu_muid_SpaceTime_x;   //!
   TBranch        *b_mu_muid_SpaceTime_y;   //!
   TBranch        *b_mu_muid_SpaceTime_z;   //!
   TBranch        *b_mu_muid_cov_d0_exPV;   //!
   TBranch        *b_mu_muid_cov_z0_exPV;   //!
   TBranch        *b_mu_muid_cov_phi_exPV;   //!
   TBranch        *b_mu_muid_cov_theta_exPV;   //!
   TBranch        *b_mu_muid_cov_qoverp_exPV;   //!
   TBranch        *b_mu_muid_cov_d0_z0_exPV;   //!
   TBranch        *b_mu_muid_cov_d0_phi_exPV;   //!
   TBranch        *b_mu_muid_cov_d0_theta_exPV;   //!
   TBranch        *b_mu_muid_cov_d0_qoverp_exPV;   //!
   TBranch        *b_mu_muid_cov_z0_phi_exPV;   //!
   TBranch        *b_mu_muid_cov_z0_theta_exPV;   //!
   TBranch        *b_mu_muid_cov_z0_qoverp_exPV;   //!
   TBranch        *b_mu_muid_cov_phi_theta_exPV;   //!
   TBranch        *b_mu_muid_cov_phi_qoverp_exPV;   //!
   TBranch        *b_mu_muid_cov_theta_qoverp_exPV;   //!
   TBranch        *b_mu_muid_id_cov_d0_exPV;   //!
   TBranch        *b_mu_muid_id_cov_z0_exPV;   //!
   TBranch        *b_mu_muid_id_cov_phi_exPV;   //!
   TBranch        *b_mu_muid_id_cov_theta_exPV;   //!
   TBranch        *b_mu_muid_id_cov_qoverp_exPV;   //!
   TBranch        *b_mu_muid_me_cov_d0_exPV;   //!
   TBranch        *b_mu_muid_me_cov_z0_exPV;   //!
   TBranch        *b_mu_muid_me_cov_phi_exPV;   //!
   TBranch        *b_mu_muid_me_cov_theta_exPV;   //!
   TBranch        *b_mu_muid_me_cov_qoverp_exPV;   //!
   TBranch        *b_mu_muid_ms_d0;   //!
   TBranch        *b_mu_muid_ms_z0;   //!
   TBranch        *b_mu_muid_ms_phi;   //!
   TBranch        *b_mu_muid_ms_theta;   //!
   TBranch        *b_mu_muid_ms_qoverp;   //!
   TBranch        *b_mu_muid_id_d0;   //!
   TBranch        *b_mu_muid_id_z0;   //!
   TBranch        *b_mu_muid_id_phi;   //!
   TBranch        *b_mu_muid_id_theta;   //!
   TBranch        *b_mu_muid_id_qoverp;   //!
   TBranch        *b_mu_muid_me_d0;   //!
   TBranch        *b_mu_muid_me_z0;   //!
   TBranch        *b_mu_muid_me_phi;   //!
   TBranch        *b_mu_muid_me_theta;   //!
   TBranch        *b_mu_muid_me_qoverp;   //!
   TBranch        *b_mu_muid_ie_d0;   //!
   TBranch        *b_mu_muid_ie_z0;   //!
   TBranch        *b_mu_muid_ie_phi;   //!
   TBranch        *b_mu_muid_ie_theta;   //!
   TBranch        *b_mu_muid_ie_qoverp;   //!
   TBranch        *b_mu_muid_nOutliersOnTrack;   //!
   TBranch        *b_mu_muid_nBLHits;   //!
   TBranch        *b_mu_muid_nPixHits;   //!
   TBranch        *b_mu_muid_nSCTHits;   //!
   TBranch        *b_mu_muid_nTRTHits;   //!
   TBranch        *b_mu_muid_nTRTHighTHits;   //!
   TBranch        *b_mu_muid_nBLSharedHits;   //!
   TBranch        *b_mu_muid_nPixSharedHits;   //!
   TBranch        *b_mu_muid_nPixHoles;   //!
   TBranch        *b_mu_muid_nSCTSharedHits;   //!
   TBranch        *b_mu_muid_nSCTHoles;   //!
   TBranch        *b_mu_muid_nTRTOutliers;   //!
   TBranch        *b_mu_muid_nTRTHighTOutliers;   //!
   TBranch        *b_mu_muid_nGangedPixels;   //!
   TBranch        *b_mu_muid_nPixelDeadSensors;   //!
   TBranch        *b_mu_muid_nSCTDeadSensors;   //!
   TBranch        *b_mu_muid_nTRTDeadStraws;   //!
   TBranch        *b_mu_muid_expectBLayerHit;   //!
   TBranch        *b_mu_muid_nMDTHits;   //!
   TBranch        *b_mu_muid_nMDTHoles;   //!
   TBranch        *b_mu_muid_nCSCEtaHits;   //!
   TBranch        *b_mu_muid_nCSCEtaHoles;   //!
   TBranch        *b_mu_muid_nCSCUnspoiledEtaHits;   //!
   TBranch        *b_mu_muid_nCSCPhiHits;   //!
   TBranch        *b_mu_muid_nCSCPhiHoles;   //!
   TBranch        *b_mu_muid_nRPCEtaHits;   //!
   TBranch        *b_mu_muid_nRPCEtaHoles;   //!
   TBranch        *b_mu_muid_nRPCPhiHits;   //!
   TBranch        *b_mu_muid_nRPCPhiHoles;   //!
   TBranch        *b_mu_muid_nTGCEtaHits;   //!
   TBranch        *b_mu_muid_nTGCEtaHoles;   //!
   TBranch        *b_mu_muid_nTGCPhiHits;   //!
   TBranch        *b_mu_muid_nTGCPhiHoles;   //!
   TBranch        *b_mu_muid_nprecisionLayers;   //!
   TBranch        *b_mu_muid_nprecisionHoleLayers;   //!
   TBranch        *b_mu_muid_nphiLayers;   //!
   TBranch        *b_mu_muid_ntrigEtaLayers;   //!
   TBranch        *b_mu_muid_nphiHoleLayers;   //!
   TBranch        *b_mu_muid_ntrigEtaHoleLayers;   //!
   TBranch        *b_mu_muid_nMDTBIHits;   //!
   TBranch        *b_mu_muid_nMDTBMHits;   //!
   TBranch        *b_mu_muid_nMDTBOHits;   //!
   TBranch        *b_mu_muid_nMDTBEEHits;   //!
   TBranch        *b_mu_muid_nMDTBIS78Hits;   //!
   TBranch        *b_mu_muid_nMDTEIHits;   //!
   TBranch        *b_mu_muid_nMDTEMHits;   //!
   TBranch        *b_mu_muid_nMDTEOHits;   //!
   TBranch        *b_mu_muid_nMDTEEHits;   //!
   TBranch        *b_mu_muid_nRPCLayer1EtaHits;   //!
   TBranch        *b_mu_muid_nRPCLayer2EtaHits;   //!
   TBranch        *b_mu_muid_nRPCLayer3EtaHits;   //!
   TBranch        *b_mu_muid_nRPCLayer1PhiHits;   //!
   TBranch        *b_mu_muid_nRPCLayer2PhiHits;   //!
   TBranch        *b_mu_muid_nRPCLayer3PhiHits;   //!
   TBranch        *b_mu_muid_nTGCLayer1EtaHits;   //!
   TBranch        *b_mu_muid_nTGCLayer2EtaHits;   //!
   TBranch        *b_mu_muid_nTGCLayer3EtaHits;   //!
   TBranch        *b_mu_muid_nTGCLayer4EtaHits;   //!
   TBranch        *b_mu_muid_nTGCLayer1PhiHits;   //!
   TBranch        *b_mu_muid_nTGCLayer2PhiHits;   //!
   TBranch        *b_mu_muid_nTGCLayer3PhiHits;   //!
   TBranch        *b_mu_muid_nTGCLayer4PhiHits;   //!
   TBranch        *b_mu_muid_barrelSectors;   //!
   TBranch        *b_mu_muid_endcapSectors;   //!
   TBranch        *b_mu_muid_trackd0;   //!
   TBranch        *b_mu_muid_trackz0;   //!
   TBranch        *b_mu_muid_trackphi;   //!
   TBranch        *b_mu_muid_tracktheta;   //!
   TBranch        *b_mu_muid_trackqoverp;   //!
   TBranch        *b_mu_muid_trackcov_d0;   //!
   TBranch        *b_mu_muid_trackcov_z0;   //!
   TBranch        *b_mu_muid_trackcov_phi;   //!
   TBranch        *b_mu_muid_trackcov_theta;   //!
   TBranch        *b_mu_muid_trackcov_qoverp;   //!
   TBranch        *b_mu_muid_trackcov_d0_z0;   //!
   TBranch        *b_mu_muid_trackcov_d0_phi;   //!
   TBranch        *b_mu_muid_trackcov_d0_theta;   //!
   TBranch        *b_mu_muid_trackcov_d0_qoverp;   //!
   TBranch        *b_mu_muid_trackcov_z0_phi;   //!
   TBranch        *b_mu_muid_trackcov_z0_theta;   //!
   TBranch        *b_mu_muid_trackcov_z0_qoverp;   //!
   TBranch        *b_mu_muid_trackcov_phi_theta;   //!
   TBranch        *b_mu_muid_trackcov_phi_qoverp;   //!
   TBranch        *b_mu_muid_trackcov_theta_qoverp;   //!
   TBranch        *b_mu_muid_trackfitchi2;   //!
   TBranch        *b_mu_muid_trackfitndof;   //!
   TBranch        *b_mu_muid_hastrack;   //!
   TBranch        *b_mu_muid_trackd0beam;   //!
   TBranch        *b_mu_muid_trackz0beam;   //!
   TBranch        *b_mu_muid_tracksigd0beam;   //!
   TBranch        *b_mu_muid_tracksigz0beam;   //!
   TBranch        *b_mu_muid_trackd0pv;   //!
   TBranch        *b_mu_muid_trackz0pv;   //!
   TBranch        *b_mu_muid_tracksigd0pv;   //!
   TBranch        *b_mu_muid_tracksigz0pv;   //!
   TBranch        *b_mu_muid_trackIPEstimate_d0_biasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_z0_biasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_sigd0_biasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_sigz0_biasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_d0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_z0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_muid_trackd0pvunbiased;   //!
   TBranch        *b_mu_muid_trackz0pvunbiased;   //!
   TBranch        *b_mu_muid_tracksigd0pvunbiased;   //!
   TBranch        *b_mu_muid_tracksigz0pvunbiased;   //!
   TBranch        *b_mu_muid_type;   //!
   TBranch        *b_mu_muid_origin;   //!
   TBranch        *b_mu_muid_truth_dr;   //!
   TBranch        *b_mu_muid_truth_E;   //!
   TBranch        *b_mu_muid_truth_pt;   //!
   TBranch        *b_mu_muid_truth_eta;   //!
   TBranch        *b_mu_muid_truth_phi;   //!
   TBranch        *b_mu_muid_truth_type;   //!
   TBranch        *b_mu_muid_truth_status;   //!
   TBranch        *b_mu_muid_truth_barcode;   //!
   TBranch        *b_mu_muid_truth_mothertype;   //!
   TBranch        *b_mu_muid_truth_motherbarcode;   //!
   TBranch        *b_mu_muid_truth_matched;   //!
   TBranch        *b_mu_muid_EFCB_dr;   //!
   TBranch        *b_mu_muid_EFCB_n;   //!
   TBranch        *b_mu_muid_EFCB_MuonType;   //!
   TBranch        *b_mu_muid_EFCB_pt;   //!
   TBranch        *b_mu_muid_EFCB_eta;   //!
   TBranch        *b_mu_muid_EFCB_phi;   //!
   TBranch        *b_mu_muid_EFCB_hasCB;   //!
   TBranch        *b_mu_muid_EFCB_matched;   //!
   TBranch        *b_mu_muid_EFMG_dr;   //!
   TBranch        *b_mu_muid_EFMG_n;   //!
   TBranch        *b_mu_muid_EFMG_MuonType;   //!
   TBranch        *b_mu_muid_EFMG_pt;   //!
   TBranch        *b_mu_muid_EFMG_eta;   //!
   TBranch        *b_mu_muid_EFMG_phi;   //!
   TBranch        *b_mu_muid_EFMG_hasMG;   //!
   TBranch        *b_mu_muid_EFMG_matched;   //!
   TBranch        *b_mu_muid_EFME_dr;   //!
   TBranch        *b_mu_muid_EFME_n;   //!
   TBranch        *b_mu_muid_EFME_MuonType;   //!
   TBranch        *b_mu_muid_EFME_pt;   //!
   TBranch        *b_mu_muid_EFME_eta;   //!
   TBranch        *b_mu_muid_EFME_phi;   //!
   TBranch        *b_mu_muid_EFME_hasME;   //!
   TBranch        *b_mu_muid_EFME_matched;   //!
   TBranch        *b_mu_muid_L2CB_dr;   //!
   TBranch        *b_mu_muid_L2CB_pt;   //!
   TBranch        *b_mu_muid_L2CB_eta;   //!
   TBranch        *b_mu_muid_L2CB_phi;   //!
   TBranch        *b_mu_muid_L2CB_id_pt;   //!
   TBranch        *b_mu_muid_L2CB_ms_pt;   //!
   TBranch        *b_mu_muid_L2CB_nPixHits;   //!
   TBranch        *b_mu_muid_L2CB_nSCTHits;   //!
   TBranch        *b_mu_muid_L2CB_nTRTHits;   //!
   TBranch        *b_mu_muid_L2CB_nTRTHighTHits;   //!
   TBranch        *b_mu_muid_L2CB_matched;   //!
   TBranch        *b_mu_muid_L1_dr;   //!
   TBranch        *b_mu_muid_L1_pt;   //!
   TBranch        *b_mu_muid_L1_eta;   //!
   TBranch        *b_mu_muid_L1_phi;   //!
   TBranch        *b_mu_muid_L1_thrNumber;   //!
   TBranch        *b_mu_muid_L1_RoINumber;   //!
   TBranch        *b_mu_muid_L1_sectorAddress;   //!
   TBranch        *b_mu_muid_L1_firstCandidate;   //!
   TBranch        *b_mu_muid_L1_moreCandInRoI;   //!
   TBranch        *b_mu_muid_L1_moreCandInSector;   //!
   TBranch        *b_mu_muid_L1_source;   //!
   TBranch        *b_mu_muid_L1_hemisphere;   //!
   TBranch        *b_mu_muid_L1_charge;   //!
   TBranch        *b_mu_muid_L1_vetoed;   //!
   TBranch        *b_mu_muid_L1_matched;   //!
   TBranch        *b_muid_n;   //!
   TBranch        *b_muid_nScatters;   //!
   TBranch        *b_muid_scatSignificance;   //!
   TBranch        *b_muid_neighbourSignificance;   //!
   TBranch        *b_muid_eta;   //!
   TBranch        *b_muid_probability;   //!
   TBranch        *b_muid_barcode;   //!
   TBranch        *b_muid_index;   //!
   TBranch        *b_mu_n;   //!
   TBranch        *b_mu_E;   //!
   TBranch        *b_mu_pt;   //!
   TBranch        *b_mu_m;   //!
   TBranch        *b_mu_eta;   //!
   TBranch        *b_mu_phi;   //!
   TBranch        *b_mu_px;   //!
   TBranch        *b_mu_py;   //!
   TBranch        *b_mu_pz;   //!
   TBranch        *b_mu_charge;   //!
   TBranch        *b_mu_allauthor;   //!
   TBranch        *b_mu_author;   //!
   TBranch        *b_mu_beta;   //!
   TBranch        *b_mu_isMuonLikelihood;   //!
   TBranch        *b_mu_matchchi2;   //!
   TBranch        *b_mu_matchndof;   //!
   TBranch        *b_mu_etcone20;   //!
   TBranch        *b_mu_etcone30;   //!
   TBranch        *b_mu_etcone40;   //!
   TBranch        *b_mu_nucone20;   //!
   TBranch        *b_mu_nucone30;   //!
   TBranch        *b_mu_nucone40;   //!
   TBranch        *b_mu_ptcone20;   //!
   TBranch        *b_mu_ptcone30;   //!
   TBranch        *b_mu_ptcone40;   //!
   TBranch        *b_mu_etconeNoEm10;   //!
   TBranch        *b_mu_etconeNoEm20;   //!
   TBranch        *b_mu_etconeNoEm30;   //!
   TBranch        *b_mu_etconeNoEm40;   //!
   TBranch        *b_mu_scatteringCurvatureSignificance;   //!
   TBranch        *b_mu_scatteringNeighbourSignificance;   //!
   TBranch        *b_mu_momentumBalanceSignificance;   //!
   TBranch        *b_mu_energyLossPar;   //!
   TBranch        *b_mu_energyLossErr;   //!
   TBranch        *b_mu_etCore;   //!
   TBranch        *b_mu_energyLossType;   //!
   TBranch        *b_mu_caloMuonIdTag;   //!
   TBranch        *b_mu_caloLRLikelihood;   //!
   TBranch        *b_mu_bestMatch;   //!
   TBranch        *b_mu_isStandAloneMuon;   //!
   TBranch        *b_mu_isCombinedMuon;   //!
   TBranch        *b_mu_isLowPtReconstructedMuon;   //!
   TBranch        *b_mu_isSegmentTaggedMuon;   //!
   TBranch        *b_mu_isCaloMuonId;   //!
   TBranch        *b_mu_alsoFoundByLowPt;   //!
   TBranch        *b_mu_alsoFoundByCaloMuonId;   //!
   TBranch        *b_mu_isSiliconAssociatedForwardMuon;   //!
   TBranch        *b_mu_loose;   //!
   TBranch        *b_mu_medium;   //!
   TBranch        *b_mu_tight;   //!
   TBranch        *b_mu_d0_exPV;   //!
   TBranch        *b_mu_z0_exPV;   //!
   TBranch        *b_mu_phi_exPV;   //!
   TBranch        *b_mu_theta_exPV;   //!
   TBranch        *b_mu_qoverp_exPV;   //!
   TBranch        *b_mu_cb_d0_exPV;   //!
   TBranch        *b_mu_cb_z0_exPV;   //!
   TBranch        *b_mu_cb_phi_exPV;   //!
   TBranch        *b_mu_cb_theta_exPV;   //!
   TBranch        *b_mu_cb_qoverp_exPV;   //!
   TBranch        *b_mu_id_d0_exPV;   //!
   TBranch        *b_mu_id_z0_exPV;   //!
   TBranch        *b_mu_id_phi_exPV;   //!
   TBranch        *b_mu_id_theta_exPV;   //!
   TBranch        *b_mu_id_qoverp_exPV;   //!
   TBranch        *b_mu_me_d0_exPV;   //!
   TBranch        *b_mu_me_z0_exPV;   //!
   TBranch        *b_mu_me_phi_exPV;   //!
   TBranch        *b_mu_me_theta_exPV;   //!
   TBranch        *b_mu_me_qoverp_exPV;   //!
   TBranch        *b_mu_ie_d0_exPV;   //!
   TBranch        *b_mu_ie_z0_exPV;   //!
   TBranch        *b_mu_ie_phi_exPV;   //!
   TBranch        *b_mu_ie_theta_exPV;   //!
   TBranch        *b_mu_ie_qoverp_exPV;   //!
   TBranch        *b_mu_SpaceTime_detID;   //!
   TBranch        *b_mu_SpaceTime_t;   //!
   TBranch        *b_mu_SpaceTime_tError;   //!
   TBranch        *b_mu_SpaceTime_weight;   //!
   TBranch        *b_mu_SpaceTime_x;   //!
   TBranch        *b_mu_SpaceTime_y;   //!
   TBranch        *b_mu_SpaceTime_z;   //!
   TBranch        *b_mu_cov_d0_exPV;   //!
   TBranch        *b_mu_cov_z0_exPV;   //!
   TBranch        *b_mu_cov_phi_exPV;   //!
   TBranch        *b_mu_cov_theta_exPV;   //!
   TBranch        *b_mu_cov_qoverp_exPV;   //!
   TBranch        *b_mu_cov_d0_z0_exPV;   //!
   TBranch        *b_mu_cov_d0_phi_exPV;   //!
   TBranch        *b_mu_cov_d0_theta_exPV;   //!
   TBranch        *b_mu_cov_d0_qoverp_exPV;   //!
   TBranch        *b_mu_cov_z0_phi_exPV;   //!
   TBranch        *b_mu_cov_z0_theta_exPV;   //!
   TBranch        *b_mu_cov_z0_qoverp_exPV;   //!
   TBranch        *b_mu_cov_phi_theta_exPV;   //!
   TBranch        *b_mu_cov_phi_qoverp_exPV;   //!
   TBranch        *b_mu_cov_theta_qoverp_exPV;   //!
   TBranch        *b_mu_id_cov_d0_exPV;   //!
   TBranch        *b_mu_id_cov_z0_exPV;   //!
   TBranch        *b_mu_id_cov_phi_exPV;   //!
   TBranch        *b_mu_id_cov_theta_exPV;   //!
   TBranch        *b_mu_id_cov_qoverp_exPV;   //!
   TBranch        *b_mu_me_cov_d0_exPV;   //!
   TBranch        *b_mu_me_cov_z0_exPV;   //!
   TBranch        *b_mu_me_cov_phi_exPV;   //!
   TBranch        *b_mu_me_cov_theta_exPV;   //!
   TBranch        *b_mu_me_cov_qoverp_exPV;   //!
   TBranch        *b_mu_ms_d0;   //!
   TBranch        *b_mu_ms_z0;   //!
   TBranch        *b_mu_ms_phi;   //!
   TBranch        *b_mu_ms_theta;   //!
   TBranch        *b_mu_ms_qoverp;   //!
   TBranch        *b_mu_id_d0;   //!
   TBranch        *b_mu_id_z0;   //!
   TBranch        *b_mu_id_phi;   //!
   TBranch        *b_mu_id_theta;   //!
   TBranch        *b_mu_id_qoverp;   //!
   TBranch        *b_mu_me_d0;   //!
   TBranch        *b_mu_me_z0;   //!
   TBranch        *b_mu_me_phi;   //!
   TBranch        *b_mu_me_theta;   //!
   TBranch        *b_mu_me_qoverp;   //!
   TBranch        *b_mu_ie_d0;   //!
   TBranch        *b_mu_ie_z0;   //!
   TBranch        *b_mu_ie_phi;   //!
   TBranch        *b_mu_ie_theta;   //!
   TBranch        *b_mu_ie_qoverp;   //!
   TBranch        *b_mu_nOutliersOnTrack;   //!
   TBranch        *b_mu_nBLHits;   //!
   TBranch        *b_mu_nPixHits;   //!
   TBranch        *b_mu_nSCTHits;   //!
   TBranch        *b_mu_nTRTHits;   //!
   TBranch        *b_mu_nTRTHighTHits;   //!
   TBranch        *b_mu_nBLSharedHits;   //!
   TBranch        *b_mu_nPixSharedHits;   //!
   TBranch        *b_mu_nPixHoles;   //!
   TBranch        *b_mu_nSCTSharedHits;   //!
   TBranch        *b_mu_nSCTHoles;   //!
   TBranch        *b_mu_nTRTOutliers;   //!
   TBranch        *b_mu_nTRTHighTOutliers;   //!
   TBranch        *b_mu_nGangedPixels;   //!
   TBranch        *b_mu_nPixelDeadSensors;   //!
   TBranch        *b_mu_nSCTDeadSensors;   //!
   TBranch        *b_mu_nTRTDeadStraws;   //!
   TBranch        *b_mu_expectBLayerHit;   //!
   TBranch        *b_mu_nMDTHits;   //!
   TBranch        *b_mu_nMDTHoles;   //!
   TBranch        *b_mu_nCSCEtaHits;   //!
   TBranch        *b_mu_nCSCEtaHoles;   //!
   TBranch        *b_mu_nCSCUnspoiledEtaHits;   //!
   TBranch        *b_mu_nCSCPhiHits;   //!
   TBranch        *b_mu_nCSCPhiHoles;   //!
   TBranch        *b_mu_nRPCEtaHits;   //!
   TBranch        *b_mu_nRPCEtaHoles;   //!
   TBranch        *b_mu_nRPCPhiHits;   //!
   TBranch        *b_mu_nRPCPhiHoles;   //!
   TBranch        *b_mu_nTGCEtaHits;   //!
   TBranch        *b_mu_nTGCEtaHoles;   //!
   TBranch        *b_mu_nTGCPhiHits;   //!
   TBranch        *b_mu_nTGCPhiHoles;   //!
   TBranch        *b_mu_nprecisionLayers;   //!
   TBranch        *b_mu_nprecisionHoleLayers;   //!
   TBranch        *b_mu_nphiLayers;   //!
   TBranch        *b_mu_ntrigEtaLayers;   //!
   TBranch        *b_mu_nphiHoleLayers;   //!
   TBranch        *b_mu_ntrigEtaHoleLayers;   //!
   TBranch        *b_mu_nMDTBIHits;   //!
   TBranch        *b_mu_nMDTBMHits;   //!
   TBranch        *b_mu_nMDTBOHits;   //!
   TBranch        *b_mu_nMDTBEEHits;   //!
   TBranch        *b_mu_nMDTBIS78Hits;   //!
   TBranch        *b_mu_nMDTEIHits;   //!
   TBranch        *b_mu_nMDTEMHits;   //!
   TBranch        *b_mu_nMDTEOHits;   //!
   TBranch        *b_mu_nMDTEEHits;   //!
   TBranch        *b_mu_nRPCLayer1EtaHits;   //!
   TBranch        *b_mu_nRPCLayer2EtaHits;   //!
   TBranch        *b_mu_nRPCLayer3EtaHits;   //!
   TBranch        *b_mu_nRPCLayer1PhiHits;   //!
   TBranch        *b_mu_nRPCLayer2PhiHits;   //!
   TBranch        *b_mu_nRPCLayer3PhiHits;   //!
   TBranch        *b_mu_nTGCLayer1EtaHits;   //!
   TBranch        *b_mu_nTGCLayer2EtaHits;   //!
   TBranch        *b_mu_nTGCLayer3EtaHits;   //!
   TBranch        *b_mu_nTGCLayer4EtaHits;   //!
   TBranch        *b_mu_nTGCLayer1PhiHits;   //!
   TBranch        *b_mu_nTGCLayer2PhiHits;   //!
   TBranch        *b_mu_nTGCLayer3PhiHits;   //!
   TBranch        *b_mu_nTGCLayer4PhiHits;   //!
   TBranch        *b_mu_barrelSectors;   //!
   TBranch        *b_mu_endcapSectors;   //!
   TBranch        *b_mu_trackd0;   //!
   TBranch        *b_mu_trackz0;   //!
   TBranch        *b_mu_trackphi;   //!
   TBranch        *b_mu_tracktheta;   //!
   TBranch        *b_mu_trackqoverp;   //!
   TBranch        *b_mu_trackcov_d0;   //!
   TBranch        *b_mu_trackcov_z0;   //!
   TBranch        *b_mu_trackcov_phi;   //!
   TBranch        *b_mu_trackcov_theta;   //!
   TBranch        *b_mu_trackcov_qoverp;   //!
   TBranch        *b_mu_trackcov_d0_z0;   //!
   TBranch        *b_mu_trackcov_d0_phi;   //!
   TBranch        *b_mu_trackcov_d0_theta;   //!
   TBranch        *b_mu_trackcov_d0_qoverp;   //!
   TBranch        *b_mu_trackcov_z0_phi;   //!
   TBranch        *b_mu_trackcov_z0_theta;   //!
   TBranch        *b_mu_trackcov_z0_qoverp;   //!
   TBranch        *b_mu_trackcov_phi_theta;   //!
   TBranch        *b_mu_trackcov_phi_qoverp;   //!
   TBranch        *b_mu_trackcov_theta_qoverp;   //!
   TBranch        *b_mu_trackfitchi2;   //!
   TBranch        *b_mu_trackfitndof;   //!
   TBranch        *b_mu_hastrack;   //!
   TBranch        *b_mu_trackd0beam;   //!
   TBranch        *b_mu_trackz0beam;   //!
   TBranch        *b_mu_tracksigd0beam;   //!
   TBranch        *b_mu_tracksigz0beam;   //!
   TBranch        *b_mu_trackd0pv;   //!
   TBranch        *b_mu_trackz0pv;   //!
   TBranch        *b_mu_tracksigd0pv;   //!
   TBranch        *b_mu_tracksigz0pv;   //!
   TBranch        *b_mu_trackIPEstimate_d0_biasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_z0_biasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_sigd0_biasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_sigz0_biasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_d0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_z0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_sigd0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_trackIPEstimate_sigz0_unbiasedpvunbiased;   //!
   TBranch        *b_mu_trackd0pvunbiased;   //!
   TBranch        *b_mu_trackz0pvunbiased;   //!
   TBranch        *b_mu_tracksigd0pvunbiased;   //!
   TBranch        *b_mu_tracksigz0pvunbiased;   //!
   TBranch        *b_mu_type;   //!
   TBranch        *b_mu_origin;   //!
   TBranch        *b_mu_truth_dr;   //!
   TBranch        *b_mu_truth_E;   //!
   TBranch        *b_mu_truth_pt;   //!
   TBranch        *b_mu_truth_eta;   //!
   TBranch        *b_mu_truth_phi;   //!
   TBranch        *b_mu_truth_type;   //!
   TBranch        *b_mu_truth_status;   //!
   TBranch        *b_mu_truth_barcode;   //!
   TBranch        *b_mu_truth_mothertype;   //!
   TBranch        *b_mu_truth_motherbarcode;   //!
   TBranch        *b_mu_truth_matched;   //!
   TBranch        *b_mu_EFCB_dr;   //!
   TBranch        *b_mu_EFCB_n;   //!
   TBranch        *b_mu_EFCB_MuonType;   //!
   TBranch        *b_mu_EFCB_pt;   //!
   TBranch        *b_mu_EFCB_eta;   //!
   TBranch        *b_mu_EFCB_phi;   //!
   TBranch        *b_mu_EFCB_hasCB;   //!
   TBranch        *b_mu_EFCB_matched;   //!
   TBranch        *b_mu_EFMG_dr;   //!
   TBranch        *b_mu_EFMG_n;   //!
   TBranch        *b_mu_EFMG_MuonType;   //!
   TBranch        *b_mu_EFMG_pt;   //!
   TBranch        *b_mu_EFMG_eta;   //!
   TBranch        *b_mu_EFMG_phi;   //!
   TBranch        *b_mu_EFMG_hasMG;   //!
   TBranch        *b_mu_EFMG_matched;   //!
   TBranch        *b_mu_EFME_dr;   //!
   TBranch        *b_mu_EFME_n;   //!
   TBranch        *b_mu_EFME_MuonType;   //!
   TBranch        *b_mu_EFME_pt;   //!
   TBranch        *b_mu_EFME_eta;   //!
   TBranch        *b_mu_EFME_phi;   //!
   TBranch        *b_mu_EFME_hasME;   //!
   TBranch        *b_mu_EFME_matched;   //!
   TBranch        *b_mu_L2CB_dr;   //!
   TBranch        *b_mu_L2CB_pt;   //!
   TBranch        *b_mu_L2CB_eta;   //!
   TBranch        *b_mu_L2CB_phi;   //!
   TBranch        *b_mu_L2CB_id_pt;   //!
   TBranch        *b_mu_L2CB_ms_pt;   //!
   TBranch        *b_mu_L2CB_nPixHits;   //!
   TBranch        *b_mu_L2CB_nSCTHits;   //!
   TBranch        *b_mu_L2CB_nTRTHits;   //!
   TBranch        *b_mu_L2CB_nTRTHighTHits;   //!
   TBranch        *b_mu_L2CB_matched;   //!
   TBranch        *b_mu_L1_dr;   //!
   TBranch        *b_mu_L1_pt;   //!
   TBranch        *b_mu_L1_eta;   //!
   TBranch        *b_mu_L1_phi;   //!
   TBranch        *b_mu_L1_thrNumber;   //!
   TBranch        *b_mu_L1_RoINumber;   //!
   TBranch        *b_mu_L1_sectorAddress;   //!
   TBranch        *b_mu_L1_firstCandidate;   //!
   TBranch        *b_mu_L1_moreCandInRoI;   //!
   TBranch        *b_mu_L1_moreCandInSector;   //!
   TBranch        *b_mu_L1_source;   //!
   TBranch        *b_mu_L1_hemisphere;   //!
   TBranch        *b_mu_L1_charge;   //!
   TBranch        *b_mu_L1_vetoed;   //!
   TBranch        *b_mu_L1_matched;   //!
   TBranch        *b_trig_DB_SMK;   //!
   TBranch        *b_trig_DB_L1PSK;   //!
   TBranch        *b_trig_DB_HLTPSK;   //!
   TBranch        *b_trig_L1_TAV;   //!
   TBranch        *b_trig_L2_passedPhysics;   //!
   TBranch        *b_trig_EF_passedPhysics;   //!
   TBranch        *b_trig_L1_TBP;   //!
   TBranch        *b_trig_L1_TAP;   //!
   TBranch        *b_trig_L2_passedRaw;   //!
   TBranch        *b_trig_EF_passedRaw;   //!
   TBranch        *b_trig_L2_truncated;   //!
   TBranch        *b_trig_EF_truncated;   //!
   TBranch        *b_trig_L2_resurrected;   //!
   TBranch        *b_trig_EF_resurrected;   //!
   TBranch        *b_trig_L2_passedThrough;   //!
   TBranch        *b_trig_EF_passedThrough;   //!
   TBranch        *b_trig_L2_wasPrescaled;   //!
   TBranch        *b_trig_L2_wasResurrected;   //!
   TBranch        *b_trig_EF_wasPrescaled;   //!
   TBranch        *b_trig_EF_wasResurrected;   //!
   TBranch        *b_trig_L1_jet_n;   //!
   TBranch        *b_trig_L1_jet_eta;   //!
   TBranch        *b_trig_L1_jet_phi;   //!
   TBranch        *b_trig_L1_jet_thrNames;   //!
   TBranch        *b_trig_L1_jet_thrValues;   //!
   TBranch        *b_trig_L1_jet_thrPattern;   //!
   TBranch        *b_trig_L1_jet_RoIWord;   //!
   TBranch        *b_trig_L1_jet_et4x4;   //!
   TBranch        *b_trig_L1_jet_et6x6;   //!
   TBranch        *b_trig_L1_jet_et8x8;   //!
   TBranch        *b_trig_L1_emtau_n;   //!
   TBranch        *b_trig_L1_emtau_eta;   //!
   TBranch        *b_trig_L1_emtau_phi;   //!
   TBranch        *b_trig_L1_emtau_thrNames;   //!
   TBranch        *b_trig_L1_emtau_thrValues;   //!
   TBranch        *b_trig_L1_emtau_core;   //!
   TBranch        *b_trig_L1_emtau_EMClus;   //!
   TBranch        *b_trig_L1_emtau_tauClus;   //!
   TBranch        *b_trig_L1_emtau_EMIsol;   //!
   TBranch        *b_trig_L1_emtau_hadIsol;   //!
   TBranch        *b_trig_L1_emtau_hadCore;   //!
   TBranch        *b_trig_L1_emtau_thrPattern;   //!
   TBranch        *b_trig_L1_emtau_RoIWord;   //!
   TBranch        *b_trig_L1_mu_n;   //!
   TBranch        *b_trig_L1_mu_pt;   //!
   TBranch        *b_trig_L1_mu_eta;   //!
   TBranch        *b_trig_L1_mu_phi;   //!
   TBranch        *b_trig_L1_mu_thrName;   //!
   TBranch        *b_trig_L1_mu_thrNumber;   //!
   TBranch        *b_trig_L1_mu_RoINumber;   //!
   TBranch        *b_trig_L1_mu_sectorAddress;   //!
   TBranch        *b_trig_L1_mu_firstCandidate;   //!
   TBranch        *b_trig_L1_mu_moreCandInRoI;   //!
   TBranch        *b_trig_L1_mu_moreCandInSector;   //!
   TBranch        *b_trig_L1_mu_source;   //!
   TBranch        *b_trig_L1_mu_hemisphere;   //!
   TBranch        *b_trig_L1_mu_charge;   //!
   TBranch        *b_trig_L1_mu_vetoed;   //!
   TBranch        *b_trig_L1_mu_RoIWord;   //!
   TBranch        *b_trig_EF_jet_n;   //!
   TBranch        *b_trig_EF_jet_E;   //!
   TBranch        *b_trig_EF_jet_pt;   //!
   TBranch        *b_trig_EF_jet_m;   //!
   TBranch        *b_trig_EF_jet_eta;   //!
   TBranch        *b_trig_EF_jet_phi;   //!
   TBranch        *b_trig_EF_jet_a4tcem;   //!
   TBranch        *b_trig_EF_jet_a2tcem;   //!
   TBranch        *b_trig_EF_jet_a4tchad;   //!
   TBranch        *b_trig_EF_jet_a4hi;   //!
   TBranch        *b_trig_EF_jet_a2hi;   //!
   TBranch        *b_trig_EF_jet_RoIword;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5_L1TE90;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE100;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE90;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_eta50_deta40;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4hi_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_deta40_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_deta40_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4hi_EFFS_2L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4hi_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4hi_eta50_deta40;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4hi_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_L2FS;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j15_a4tchad_eta50_deta40_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j20_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j20_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j7_a4hi_EFFS_2L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_2j7_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_2j7_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_3j15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_3j15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_3j15_a4tchad_L2FS;   //!
   TBranch        *b_trig_EF_jet_EF_3j15_a4tchad_L2FS_2L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4hi_EFFS_L1FJ0;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L1FJ0;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4hi_EFFS_L1FJ0;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L1FJ0;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_fj7_a4hi_EFFS_L1FJ0;   //!
   TBranch        *b_trig_EF_jet_EF_fj7_a4tchad_EFFS_L1FJ0;   //!
   TBranch        *b_trig_EF_jet_EF_j100_a4hi_EFFS_L1J20;   //!
   TBranch        *b_trig_EF_jet_EF_j100_a4tchad_EFFS_L1J20;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4hi_EFFS_L1EM3;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4hi_EFFS_L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4hi_EFFS_L1TAU3;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4hi_EFFS_L1TE100;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4hi_EFFS_L1TE90;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j10_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j10_u0uchad_LArNoiseBurst;   //!
   TBranch        *b_trig_EF_jet_EF_j10_u0uchad_empty_LArNoiseBurst;   //!
   TBranch        *b_trig_EF_jet_EF_j10_u0uchad_firstempty_LArNoiseBurst;   //!
   TBranch        *b_trig_EF_jet_EF_j15_Ecorr;   //!
   TBranch        *b_trig_EF_jet_EF_j15_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j15_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j15_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j15_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_trig_EF_jet_EF_j20_Ecorr;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4hi_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j20_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4hi_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4tchad_EFFS_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j30_a4tchad_EFFS_L2te_L1RD0;   //!
   TBranch        *b_trig_EF_jet_EF_j30_u0uchad_empty_LArNoiseBurst;   //!
   TBranch        *b_trig_EF_jet_EF_j40_a4hi_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j40_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j40_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_j40_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j40_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_trig_EF_jet_EF_j50_a4hi_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j50_a4hi_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j50_a4tchad_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j50_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j50_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j60_a4hi_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j60_a4tchad_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j60_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j75_a4hi_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j75_a4hi_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j75_a4tchad_EFFS_L1J10;   //!
   TBranch        *b_trig_EF_jet_EF_j75_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j75_a4tj_EFFS_L1ZDC;   //!
   TBranch        *b_trig_EF_jet_EF_j7_a4tchad_EFFS_L1J5;   //!
   TBranch        *b_trig_EF_jet_EF_j7_a4tchad_EFFS_L2mbMbts;   //!
   TBranch        *b_trig_EF_jet_EF_j80_a4hi_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j80_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j90_a4hi_EFFS_L1J15;   //!
   TBranch        *b_trig_EF_jet_EF_j90_a4tchad_EFFS_L1J15;   //!
   TBranch        *b_trig_L1_esum_thrNames;   //!
   TBranch        *b_trig_L1_esum_ExMiss;   //!
   TBranch        *b_trig_L1_esum_EyMiss;   //!
   TBranch        *b_trig_L1_esum_energyT;   //!
   TBranch        *b_trig_L1_esum_overflowX;   //!
   TBranch        *b_trig_L1_esum_overflowY;   //!
   TBranch        *b_trig_L1_esum_overflowT;   //!
   TBranch        *b_trig_L1_esum_RoIWord0;   //!
   TBranch        *b_trig_L1_esum_RoIWord1;   //!
   TBranch        *b_trig_L1_esum_RoIWord2;   //!
   TBranch        *b_trig_EF_met_MEx;   //!
   TBranch        *b_trig_EF_met_MEy;   //!
   TBranch        *b_trig_EF_met_MEz;   //!
   TBranch        *b_trig_EF_met_sumEt;   //!
   TBranch        *b_trig_EF_met_sumE;   //!
   TBranch        *b_trig_EF_met_flag;   //!
   TBranch        *b_trig_EF_met_nameOfComponent;   //!
   TBranch        *b_trig_EF_met_MExComponent;   //!
   TBranch        *b_trig_EF_met_MEyComponent;   //!
   TBranch        *b_trig_EF_met_MEzComponent;   //!
   TBranch        *b_trig_EF_met_sumEtComponent;   //!
   TBranch        *b_trig_EF_met_sumEComponent;   //!
   TBranch        *b_trig_EF_met_componentCalib0;   //!
   TBranch        *b_trig_EF_met_componentCalib1;   //!
   TBranch        *b_trig_EF_met_sumOfSigns;   //!
   TBranch        *b_trig_EF_met_usedChannels;   //!
   TBranch        *b_trig_EF_met_status;   //!
   TBranch        *b_trig_EF_ph_n;   //!
   TBranch        *b_trig_EF_ph_E;   //!
   TBranch        *b_trig_EF_ph_Et;   //!
   TBranch        *b_trig_EF_ph_pt;   //!
   TBranch        *b_trig_EF_ph_m;   //!
   TBranch        *b_trig_EF_ph_eta;   //!
   TBranch        *b_trig_EF_ph_phi;   //!
   TBranch        *b_trig_EF_ph_px;   //!
   TBranch        *b_trig_EF_ph_py;   //!
   TBranch        *b_trig_EF_ph_pz;   //!
   TBranch        *b_trig_EF_ph_author;   //!
   TBranch        *b_trig_EF_ph_isRecovered;   //!
   TBranch        *b_trig_EF_ph_isEM;   //!
   TBranch        *b_trig_EF_ph_isEMLoose;   //!
   TBranch        *b_trig_EF_ph_isEMMedium;   //!
   TBranch        *b_trig_EF_ph_isEMTight;   //!
   TBranch        *b_trig_EF_ph_convFlag;   //!
   TBranch        *b_trig_EF_ph_isConv;   //!
   TBranch        *b_trig_EF_ph_nConv;   //!
   TBranch        *b_trig_EF_ph_nSingleTrackConv;   //!
   TBranch        *b_trig_EF_ph_nDoubleTrackConv;   //!
   TBranch        *b_trig_EF_ph_loose;   //!
   TBranch        *b_trig_EF_ph_looseIso;   //!
   TBranch        *b_trig_EF_ph_tight;   //!
   TBranch        *b_trig_EF_ph_tightIso;   //!
   TBranch        *b_trig_EF_ph_looseAR;   //!
   TBranch        *b_trig_EF_ph_looseARIso;   //!
   TBranch        *b_trig_EF_ph_tightAR;   //!
   TBranch        *b_trig_EF_ph_tightARIso;   //!
   TBranch        *b_trig_EF_ph_Ethad;   //!
   TBranch        *b_trig_EF_ph_Ethad1;   //!
   TBranch        *b_trig_EF_ph_E033;   //!
   TBranch        *b_trig_EF_ph_f1;   //!
   TBranch        *b_trig_EF_ph_f1core;   //!
   TBranch        *b_trig_EF_ph_Emins1;   //!
   TBranch        *b_trig_EF_ph_fside;   //!
   TBranch        *b_trig_EF_ph_Emax2;   //!
   TBranch        *b_trig_EF_ph_ws3;   //!
   TBranch        *b_trig_EF_ph_wstot;   //!
   TBranch        *b_trig_EF_ph_E132;   //!
   TBranch        *b_trig_EF_ph_E1152;   //!
   TBranch        *b_trig_EF_ph_emaxs1;   //!
   TBranch        *b_trig_EF_ph_deltaEs;   //!
   TBranch        *b_trig_EF_ph_E233;   //!
   TBranch        *b_trig_EF_ph_E237;   //!
   TBranch        *b_trig_EF_ph_E277;   //!
   TBranch        *b_trig_EF_ph_weta2;   //!
   TBranch        *b_trig_EF_ph_f3;   //!
   TBranch        *b_trig_EF_ph_f3core;   //!
   TBranch        *b_trig_EF_ph_rphiallcalo;   //!
   TBranch        *b_trig_EF_ph_Etcone45;   //!
   TBranch        *b_trig_EF_ph_Etcone15;   //!
   TBranch        *b_trig_EF_ph_Etcone20;   //!
   TBranch        *b_trig_EF_ph_Etcone25;   //!
   TBranch        *b_trig_EF_ph_Etcone30;   //!
   TBranch        *b_trig_EF_ph_Etcone35;   //!
   TBranch        *b_trig_EF_ph_Etcone40;   //!
   TBranch        *b_trig_EF_ph_ptcone20;   //!
   TBranch        *b_trig_EF_ph_ptcone30;   //!
   TBranch        *b_trig_EF_ph_ptcone40;   //!
   TBranch        *b_trig_EF_ph_convanglematch;   //!
   TBranch        *b_trig_EF_ph_convtrackmatch;   //!
   TBranch        *b_trig_EF_ph_hasconv;   //!
   TBranch        *b_trig_EF_ph_convvtxx;   //!
   TBranch        *b_trig_EF_ph_convvtxy;   //!
   TBranch        *b_trig_EF_ph_convvtxz;   //!
   TBranch        *b_trig_EF_ph_Rconv;   //!
   TBranch        *b_trig_EF_ph_zconv;   //!
   TBranch        *b_trig_EF_ph_convvtxchi2;   //!
   TBranch        *b_trig_EF_ph_pt1conv;   //!
   TBranch        *b_trig_EF_ph_convtrk1nBLHits;   //!
   TBranch        *b_trig_EF_ph_convtrk1nPixHits;   //!
   TBranch        *b_trig_EF_ph_convtrk1nSCTHits;   //!
   TBranch        *b_trig_EF_ph_convtrk1nTRTHits;   //!
   TBranch        *b_trig_EF_ph_pt2conv;   //!
   TBranch        *b_trig_EF_ph_convtrk2nBLHits;   //!
   TBranch        *b_trig_EF_ph_convtrk2nPixHits;   //!
   TBranch        *b_trig_EF_ph_convtrk2nSCTHits;   //!
   TBranch        *b_trig_EF_ph_convtrk2nTRTHits;   //!
   TBranch        *b_trig_EF_ph_ptconv;   //!
   TBranch        *b_trig_EF_ph_pzconv;   //!
   TBranch        *b_trig_EF_ph_reta;   //!
   TBranch        *b_trig_EF_ph_rphi;   //!
   TBranch        *b_trig_EF_ph_cl_E;   //!
   TBranch        *b_trig_EF_ph_cl_pt;   //!
   TBranch        *b_trig_EF_ph_cl_eta;   //!
   TBranch        *b_trig_EF_ph_cl_phi;   //!
   TBranch        *b_trig_EF_ph_cl_etas2;   //!
   TBranch        *b_trig_EF_el_n;   //!
   TBranch        *b_trig_EF_el_E;   //!
   TBranch        *b_trig_EF_el_Et;   //!
   TBranch        *b_trig_EF_el_pt;   //!
   TBranch        *b_trig_EF_el_m;   //!
   TBranch        *b_trig_EF_el_eta;   //!
   TBranch        *b_trig_EF_el_phi;   //!
   TBranch        *b_trig_EF_el_px;   //!
   TBranch        *b_trig_EF_el_py;   //!
   TBranch        *b_trig_EF_el_pz;   //!
   TBranch        *b_trig_EF_el_charge;   //!
   TBranch        *b_trig_EF_el_author;   //!
   TBranch        *b_trig_EF_el_isEM;   //!
   TBranch        *b_trig_EF_el_isEMLoose;   //!
   TBranch        *b_trig_EF_el_isEMMedium;   //!
   TBranch        *b_trig_EF_el_isEMTight;   //!
   TBranch        *b_trig_EF_el_loose;   //!
   TBranch        *b_trig_EF_el_looseIso;   //!
   TBranch        *b_trig_EF_el_medium;   //!
   TBranch        *b_trig_EF_el_mediumIso;   //!
   TBranch        *b_trig_EF_el_mediumWithoutTrack;   //!
   TBranch        *b_trig_EF_el_mediumIsoWithoutTrack;   //!
   TBranch        *b_trig_EF_el_tight;   //!
   TBranch        *b_trig_EF_el_tightIso;   //!
   TBranch        *b_trig_EF_el_tightWithoutTrack;   //!
   TBranch        *b_trig_EF_el_tightIsoWithoutTrack;   //!
   TBranch        *b_trig_EF_el_loosePP;   //!
   TBranch        *b_trig_EF_el_loosePPIso;   //!
   TBranch        *b_trig_EF_el_mediumPP;   //!
   TBranch        *b_trig_EF_el_mediumPPIso;   //!
   TBranch        *b_trig_EF_el_tightPP;   //!
   TBranch        *b_trig_EF_el_tightPPIso;   //!
   TBranch        *b_trig_EF_el_Ethad;   //!
   TBranch        *b_trig_EF_el_Ethad1;   //!
   TBranch        *b_trig_EF_el_f1;   //!
   TBranch        *b_trig_EF_el_f1core;   //!
   TBranch        *b_trig_EF_el_Emins1;   //!
   TBranch        *b_trig_EF_el_fside;   //!
   TBranch        *b_trig_EF_el_Emax2;   //!
   TBranch        *b_trig_EF_el_ws3;   //!
   TBranch        *b_trig_EF_el_wstot;   //!
   TBranch        *b_trig_EF_el_emaxs1;   //!
   TBranch        *b_trig_EF_el_deltaEs;   //!
   TBranch        *b_trig_EF_el_E233;   //!
   TBranch        *b_trig_EF_el_E237;   //!
   TBranch        *b_trig_EF_el_E277;   //!
   TBranch        *b_trig_EF_el_weta2;   //!
   TBranch        *b_trig_EF_el_f3;   //!
   TBranch        *b_trig_EF_el_f3core;   //!
   TBranch        *b_trig_EF_el_rphiallcalo;   //!
   TBranch        *b_trig_EF_el_Etcone45;   //!
   TBranch        *b_trig_EF_el_Etcone15;   //!
   TBranch        *b_trig_EF_el_Etcone20;   //!
   TBranch        *b_trig_EF_el_Etcone25;   //!
   TBranch        *b_trig_EF_el_Etcone30;   //!
   TBranch        *b_trig_EF_el_Etcone35;   //!
   TBranch        *b_trig_EF_el_Etcone40;   //!
   TBranch        *b_trig_EF_el_ptcone20;   //!
   TBranch        *b_trig_EF_el_ptcone30;   //!
   TBranch        *b_trig_EF_el_ptcone40;   //!
   TBranch        *b_trig_EF_el_pos7;   //!
   TBranch        *b_trig_EF_el_etacorrmag;   //!
   TBranch        *b_trig_EF_el_deltaeta1;   //!
   TBranch        *b_trig_EF_el_deltaeta2;   //!
   TBranch        *b_trig_EF_el_deltaphi2;   //!
   TBranch        *b_trig_EF_el_expectHitInBLayer;   //!
   TBranch        *b_trig_EF_el_trackd0_physics;   //!
   TBranch        *b_trig_EF_el_reta;   //!
   TBranch        *b_trig_EF_el_rphi;   //!
   TBranch        *b_trig_EF_el_EtringnoisedR03sig2;   //!
   TBranch        *b_trig_EF_el_EtringnoisedR03sig3;   //!
   TBranch        *b_trig_EF_el_EtringnoisedR03sig4;   //!
   TBranch        *b_trig_EF_el_isolationlikelihoodjets;   //!
   TBranch        *b_trig_EF_el_isolationlikelihoodhqelectrons;   //!
   TBranch        *b_trig_EF_el_electronweight;   //!
   TBranch        *b_trig_EF_el_electronbgweight;   //!
   TBranch        *b_trig_EF_el_softeweight;   //!
   TBranch        *b_trig_EF_el_softebgweight;   //!
   TBranch        *b_trig_EF_el_neuralnet;   //!
   TBranch        *b_trig_EF_el_Hmatrix;   //!
   TBranch        *b_trig_EF_el_Hmatrix5;   //!
   TBranch        *b_trig_EF_el_adaboost;   //!
   TBranch        *b_trig_EF_el_softeneuralnet;   //!
   TBranch        *b_trig_EF_el_zvertex;   //!
   TBranch        *b_trig_EF_el_errz;   //!
   TBranch        *b_trig_EF_el_etap;   //!
   TBranch        *b_trig_EF_el_depth;   //!
   TBranch        *b_trig_EF_el_Es0;   //!
   TBranch        *b_trig_EF_el_etas0;   //!
   TBranch        *b_trig_EF_el_phis0;   //!
   TBranch        *b_trig_EF_el_Es1;   //!
   TBranch        *b_trig_EF_el_etas1;   //!
   TBranch        *b_trig_EF_el_phis1;   //!
   TBranch        *b_trig_EF_el_Es2;   //!
   TBranch        *b_trig_EF_el_etas2;   //!
   TBranch        *b_trig_EF_el_phis2;   //!
   TBranch        *b_trig_EF_el_Es3;   //!
   TBranch        *b_trig_EF_el_etas3;   //!
   TBranch        *b_trig_EF_el_phis3;   //!
   TBranch        *b_trig_EF_el_cl_E;   //!
   TBranch        *b_trig_EF_el_cl_pt;   //!
   TBranch        *b_trig_EF_el_cl_eta;   //!
   TBranch        *b_trig_EF_el_cl_phi;   //!
   TBranch        *b_trig_EF_el_trackd0;   //!
   TBranch        *b_trig_EF_el_trackz0;   //!
   TBranch        *b_trig_EF_el_trackphi;   //!
   TBranch        *b_trig_EF_el_tracktheta;   //!
   TBranch        *b_trig_EF_el_trackqoverp;   //!
   TBranch        *b_trig_EF_el_trackpt;   //!
   TBranch        *b_trig_EF_el_tracketa;   //!
   TBranch        *b_trig_EF_el_trackfitchi2;   //!
   TBranch        *b_trig_EF_el_trackfitndof;   //!
   TBranch        *b_trig_EF_el_nBLHits;   //!
   TBranch        *b_trig_EF_el_nPixHits;   //!
   TBranch        *b_trig_EF_el_nSCTHits;   //!
   TBranch        *b_trig_EF_el_nTRTHits;   //!
   TBranch        *b_trig_EF_el_nTRTHighTHits;   //!
   TBranch        *b_trig_EF_el_nTRTXenonHits;   //!
   TBranch        *b_trig_EF_el_nPixHoles;   //!
   TBranch        *b_trig_EF_el_nSCTHoles;   //!
   TBranch        *b_trig_EF_el_nTRTHoles;   //!
   TBranch        *b_trig_EF_el_nPixelDeadSensors;   //!
   TBranch        *b_trig_EF_el_nSCTDeadSensors;   //!
   TBranch        *b_trig_EF_el_nBLSharedHits;   //!
   TBranch        *b_trig_EF_el_nPixSharedHits;   //!
   TBranch        *b_trig_EF_el_nSCTSharedHits;   //!
   TBranch        *b_trig_EF_el_nBLayerSplitHits;   //!
   TBranch        *b_trig_EF_el_nPixSplitHits;   //!
   TBranch        *b_trig_EF_el_nBLayerOutliers;   //!
   TBranch        *b_trig_EF_el_nPixelOutliers;   //!
   TBranch        *b_trig_EF_el_nSCTOutliers;   //!
   TBranch        *b_trig_EF_el_nTRTOutliers;   //!
   TBranch        *b_trig_EF_el_nTRTHighTOutliers;   //!
   TBranch        *b_trig_EF_el_expectBLayerHit;   //!
   TBranch        *b_trig_EF_el_nSiHits;   //!
   TBranch        *b_trig_EF_el_TRTHighTHitsRatio;   //!
   TBranch        *b_trig_EF_el_TRTHighTOutliersRatio;   //!
   TBranch        *b_trig_EF_el_pixeldEdx;   //!
   TBranch        *b_trig_EF_el_nGoodHitsPixeldEdx;   //!
   TBranch        *b_trig_EF_el_massPixeldEdx;   //!
   TBranch        *b_trig_EF_el_likelihoodsPixeldEdx;   //!
   TBranch        *b_trig_EF_el_eProbabilityComb;   //!
   TBranch        *b_trig_EF_el_eProbabilityHT;   //!
   TBranch        *b_trig_EF_el_eProbabilityToT;   //!
   TBranch        *b_trig_EF_el_eProbabilityBrem;   //!
   TBranch        *b_trig_EF_el_vertweight;   //!
   TBranch        *b_trig_EF_el_vertx;   //!
   TBranch        *b_trig_EF_el_verty;   //!
   TBranch        *b_trig_EF_el_vertz;   //!
   TBranch        *b_trig_EF_el_hastrack;   //!
   TBranch        *b_trig_EF_trigmuonef_n;   //!
   TBranch        *b_trig_EF_trigmuonef_effs15;   //!
   TBranch        *b_trig_EF_trigmuonef_effs18;   //!
   TBranch        *b_trig_EF_trigmuonef_effs24;   //!
   TBranch        *b_trig_EF_trigmuonef_RoINum;   //!
   TBranch        *b_trig_EF_trigmuonef_NSegments;   //!
   TBranch        *b_trig_EF_trigmuonef_NMdtHits;   //!
   TBranch        *b_trig_EF_trigmuonef_NRpcHits;   //!
   TBranch        *b_trig_EF_trigmuonef_NTgcHits;   //!
   TBranch        *b_trig_EF_trigmuonef_NCscHits;   //!
   TBranch        *b_trig_EF_trigmuonef_EtaPreviousLevel;   //!
   TBranch        *b_trig_EF_trigmuonef_PhiPreviousLevel;   //!
   TBranch        *b_trig_EF_trigmuonef_track_n;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MuonType;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_pt;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_eta;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_phi;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_charge;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_d0;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_z0;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_chi2;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_chi2prob;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_posX;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_posY;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_posZ;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NRpcHitsPhi;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NTgcHitsPhi;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NCscHitsPhi;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NRpcHitsEta;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NTgcHitsEta;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NCscHitsEta;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_NMdtHits;   //!
   TBranch        *b_trig_EF_trigmuonef_track_MS_hasMS;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_pt;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_eta;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_phi;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_charge;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_d0;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_z0;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_chi2;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_chi2prob;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_posX;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_posY;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_posZ;   //!
   TBranch        *b_trig_EF_trigmuonef_track_SA_hasSA;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_pt;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_eta;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_phi;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_charge;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_d0;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_z0;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_chi2;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_chi2prob;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_posX;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_posY;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_posZ;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_matchChi2;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_NIdSctHits;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_NIdPixelHits;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_NTrtHits;   //!
   TBranch        *b_trig_EF_trigmuonef_track_CB_hasCB;   //!
   TBranch        *b_bcmRDO_n;   //!
   TBranch        *b_bcmRDO_channel;   //!
   TBranch        *b_bcmRDO_nhits;   //!
   TBranch        *b_bcmRDO_pulse1pos;   //!
   TBranch        *b_bcmRDO_pulse1width;   //!
   TBranch        *b_bcmRDO_pulse2pos;   //!
   TBranch        *b_bcmRDO_pulse2width;   //!
   TBranch        *b_bcmRDO_lvl1a;   //!
   TBranch        *b_bcmRDO_bcid;   //!
   TBranch        *b_bcmRDO_lvl1id;   //!
   TBranch        *b_ctpRDO_nBC;   //!
   TBranch        *b_ctpRDO_lvl1aBC;   //!
   TBranch        *b_ctpRDO_time_s;   //!
   TBranch        *b_ctpRDO_time_ns;   //!
   TBranch        *b_ctpRDO_pit;   //!
   TBranch        *b_ctpRDO_tbp;   //!
   TBranch        *b_ctpRDO_tap;   //!
   TBranch        *b_ctpRDO_tav;   //!
   TBranch        *b_ctp_decisionTypeWord;   //!
   TBranch        *b_ctp_decisionItems;   //!
   TBranch        *b_ctp_decisionWords;   //!
   TBranch        *b_ctp_nDecisionItems;   //!
   TBranch        *b_mbtsLvl2_nElements;   //!
   TBranch        *b_mbtsLvl2_energies;   //!
   TBranch        *b_mbtsLvl2_ntimes;   //!
   TBranch        *b_mbtsLvl2_times;   //!
   TBranch        *b_lvl2_sp_nElements;   //!
   TBranch        *b_lvl2_sp_hPixelClusTotBins;   //!
   TBranch        *b_lvl2_sp_hPixelClusTotMin;   //!
   TBranch        *b_lvl2_sp_hPixelClusTotMax;   //!
   TBranch        *b_lvl2_sp_hPixelClusSizeBins;   //!
   TBranch        *b_lvl2_sp_hPixelClusSizeMin;   //!
   TBranch        *b_lvl2_sp_hPixelClusSizeMax;   //!
   TBranch        *b_lvl2_sp_pixelClusEndcapC_contents;   //!
   TBranch        *b_lvl2_sp_pixelClusBarrel_contents;   //!
   TBranch        *b_lvl2_sp_pixelClusEndcapA_contents;   //!
   TBranch        *b_lvl2_sp_droppedPixelModuleIds;   //!
   TBranch        *b_lvl2_sp_sctSpEndcapC;   //!
   TBranch        *b_lvl2_sp_sctSpBarrel;   //!
   TBranch        *b_lvl2_sp_sctSpEndcapA;   //!
   TBranch        *b_lvl2_sp_droppedSctModuleIds;   //!
   TBranch        *b_lvl2_mbTrt_nElements;   //!
   TBranch        *b_lvl2_mbTrt_hTotBins;   //!
   TBranch        *b_lvl2_mbTrt_hTotMin;   //!
   TBranch        *b_lvl2_mbTrt_hTotMax;   //!
   TBranch        *b_lvl2_mbTrt_endcapC_contents;   //!
   TBranch        *b_lvl2_mbTrt_barrel_contents;   //!
   TBranch        *b_lvl2_mbTrt_endcapA_contents;   //!
   TBranch        *b_ef_trk_nElements;   //!
   TBranch        *b_ef_trk_hZ0Bins;   //!
   TBranch        *b_ef_trk_hZ0Min;   //!
   TBranch        *b_ef_trk_hZ0Max;   //!
   TBranch        *b_ef_trk_hPtBins;   //!
   TBranch        *b_ef_trk_hPtMin;   //!
   TBranch        *b_ef_trk_hPtMax;   //!
   TBranch        *b_ef_trk_hEtaBins;   //!
   TBranch        *b_ef_trk_hEtaMin;   //!
   TBranch        *b_ef_trk_hEtaMax;   //!
   TBranch        *b_ef_trk_hPhiBins;   //!
   TBranch        *b_ef_trk_hPhiMin;   //!
   TBranch        *b_ef_trk_hPhiMax;   //!
   TBranch        *b_ef_trk_z0_pt_contents;   //!
   TBranch        *b_ef_trk_eta_phi_contents;   //!
   TBranch        *b_trig_L2_jet_n;   //!
   TBranch        *b_trig_L2_jet_E;   //!
   TBranch        *b_trig_L2_jet_eta;   //!
   TBranch        *b_trig_L2_jet_phi;   //!
   TBranch        *b_trig_L2_jet_RoIWord;   //!
   TBranch        *b_trig_L2_jet_InputType;   //!
   TBranch        *b_trig_L2_jet_OutputType;   //!
   TBranch        *b_trig_L2_jet_counter;   //!
   TBranch        *b_trig_L2_jet_c4cchad;   //!
   TBranch        *b_trig_L2_jet_c4ccem;   //!
   TBranch        *b_trig_L2_jet_c4uchad;   //!
   TBranch        *b_trig_L2_jet_ehad0;   //!
   TBranch        *b_trig_L2_jet_eem0;   //!
   TBranch        *b_trig_L2_jet_nLeadingCells;   //!
   TBranch        *b_trig_L2_jet_hecf;   //!
   TBranch        *b_trig_L2_jet_jetQuality;   //!
   TBranch        *b_trig_L2_jet_emf;   //!
   TBranch        *b_trig_L2_jet_jetTimeCells;   //!
   TBranch        *b_vx_n;   //!
   TBranch        *b_vx_x;   //!
   TBranch        *b_vx_y;   //!
   TBranch        *b_vx_z;   //!
   TBranch        *b_vx_err_x;   //!
   TBranch        *b_vx_err_y;   //!
   TBranch        *b_vx_err_z;   //!
   TBranch        *b_vx_cov_xy;   //!
   TBranch        *b_vx_cov_xz;   //!
   TBranch        *b_vx_cov_yz;   //!
   TBranch        *b_vx_type;   //!
   TBranch        *b_vx_chi2;   //!
   TBranch        *b_vx_ndof;   //!
   TBranch        *b_vx_px;   //!
   TBranch        *b_vx_py;   //!
   TBranch        *b_vx_pz;   //!
   TBranch        *b_vx_E;   //!
   TBranch        *b_vx_m;   //!
   TBranch        *b_vx_nTracks;   //!
   TBranch        *b_vx_sumPt;   //!
   TBranch        *b_vx_trk_weight;   //!
   TBranch        *b_vx_trk_n;   //!
   TBranch        *b_vx_trk_index;   //!
   TBranch        *b_el_n;   //!
   TBranch        *b_el_E;   //!
   TBranch        *b_el_Et;   //!
   TBranch        *b_el_pt;   //!
   TBranch        *b_el_m;   //!
   TBranch        *b_el_eta;   //!
   TBranch        *b_el_phi;   //!
   TBranch        *b_el_px;   //!
   TBranch        *b_el_py;   //!
   TBranch        *b_el_pz;   //!
   TBranch        *b_el_charge;   //!
   TBranch        *b_el_author;   //!
   TBranch        *b_el_isEM;   //!
   TBranch        *b_el_isEMLoose;   //!
   TBranch        *b_el_isEMMedium;   //!
   TBranch        *b_el_isEMTight;   //!
   TBranch        *b_el_OQ;   //!
   TBranch        *b_el_convFlag;   //!
   TBranch        *b_el_isConv;   //!
   TBranch        *b_el_nConv;   //!
   TBranch        *b_el_nSingleTrackConv;   //!
   TBranch        *b_el_nDoubleTrackConv;   //!
   TBranch        *b_el_type;   //!
   TBranch        *b_el_origin;   //!
   TBranch        *b_el_typebkg;   //!
   TBranch        *b_el_originbkg;   //!
   TBranch        *b_el_mediumWithoutTrack;   //!
   TBranch        *b_el_mediumIsoWithoutTrack;   //!
   TBranch        *b_el_tightWithoutTrack;   //!
   TBranch        *b_el_tightIsoWithoutTrack;   //!
   TBranch        *b_el_loose;   //!
   TBranch        *b_el_looseIso;   //!
   TBranch        *b_el_medium;   //!
   TBranch        *b_el_mediumIso;   //!
   TBranch        *b_el_tight;   //!
   TBranch        *b_el_tightIso;   //!
   TBranch        *b_el_loosePP;   //!
   TBranch        *b_el_loosePPIso;   //!
   TBranch        *b_el_mediumPP;   //!
   TBranch        *b_el_mediumPPIso;   //!
   TBranch        *b_el_tightPP;   //!
   TBranch        *b_el_tightPPIso;   //!
   TBranch        *b_el_goodOQ;   //!
   TBranch        *b_el_Ethad;   //!
   TBranch        *b_el_Ethad1;   //!
   TBranch        *b_el_f1;   //!
   TBranch        *b_el_f1core;   //!
   TBranch        *b_el_Emins1;   //!
   TBranch        *b_el_fside;   //!
   TBranch        *b_el_Emax2;   //!
   TBranch        *b_el_ws3;   //!
   TBranch        *b_el_wstot;   //!
   TBranch        *b_el_emaxs1;   //!
   TBranch        *b_el_deltaEs;   //!
   TBranch        *b_el_E233;   //!
   TBranch        *b_el_E237;   //!
   TBranch        *b_el_E277;   //!
   TBranch        *b_el_weta2;   //!
   TBranch        *b_el_f3;   //!
   TBranch        *b_el_f3core;   //!
   TBranch        *b_el_rphiallcalo;   //!
   TBranch        *b_el_Etcone45;   //!
   TBranch        *b_el_Etcone15;   //!
   TBranch        *b_el_Etcone20;   //!
   TBranch        *b_el_Etcone25;   //!
   TBranch        *b_el_Etcone30;   //!
   TBranch        *b_el_Etcone35;   //!
   TBranch        *b_el_Etcone40;   //!
   TBranch        *b_el_ptcone20;   //!
   TBranch        *b_el_ptcone30;   //!
   TBranch        *b_el_ptcone40;   //!
   TBranch        *b_el_nucone20;   //!
   TBranch        *b_el_nucone30;   //!
   TBranch        *b_el_nucone40;   //!
   TBranch        *b_el_Etcone15_pt_corrected;   //!
   TBranch        *b_el_Etcone20_pt_corrected;   //!
   TBranch        *b_el_Etcone25_pt_corrected;   //!
   TBranch        *b_el_Etcone30_pt_corrected;   //!
   TBranch        *b_el_Etcone35_pt_corrected;   //!
   TBranch        *b_el_Etcone40_pt_corrected;   //!
   TBranch        *b_el_convanglematch;   //!
   TBranch        *b_el_convtrackmatch;   //!
   TBranch        *b_el_pos7;   //!
   TBranch        *b_el_etacorrmag;   //!
   TBranch        *b_el_deltaeta1;   //!
   TBranch        *b_el_deltaeta2;   //!
   TBranch        *b_el_deltaphi2;   //!
   TBranch        *b_el_deltaphiRescaled;   //!
   TBranch        *b_el_deltaPhiFromLast;   //!
   TBranch        *b_el_deltaPhiRot;   //!
   TBranch        *b_el_expectHitInBLayer;   //!
   TBranch        *b_el_trackd0_physics;   //!
   TBranch        *b_el_etaSampling1;   //!
   TBranch        *b_el_reta;   //!
   TBranch        *b_el_rphi;   //!
   TBranch        *b_el_topoEtcone20;   //!
   TBranch        *b_el_topoEtcone30;   //!
   TBranch        *b_el_topoEtcone40;   //!
   TBranch        *b_el_materialTraversed;   //!
   TBranch        *b_el_EtringnoisedR03sig2;   //!
   TBranch        *b_el_EtringnoisedR03sig3;   //!
   TBranch        *b_el_EtringnoisedR03sig4;   //!
   TBranch        *b_el_ptcone20_zpv05;   //!
   TBranch        *b_el_ptcone30_zpv05;   //!
   TBranch        *b_el_ptcone40_zpv05;   //!
   TBranch        *b_el_nucone20_zpv05;   //!
   TBranch        *b_el_nucone30_zpv05;   //!
   TBranch        *b_el_nucone40_zpv05;   //!
   TBranch        *b_el_isolationlikelihoodjets;   //!
   TBranch        *b_el_isolationlikelihoodhqelectrons;   //!
   TBranch        *b_el_electronweight;   //!
   TBranch        *b_el_electronbgweight;   //!
   TBranch        *b_el_softeweight;   //!
   TBranch        *b_el_softebgweight;   //!
   TBranch        *b_el_neuralnet;   //!
   TBranch        *b_el_Hmatrix;   //!
   TBranch        *b_el_Hmatrix5;   //!
   TBranch        *b_el_adaboost;   //!
   TBranch        *b_el_softeneuralnet;   //!
   TBranch        *b_el_ringernn;   //!
   TBranch        *b_el_zvertex;   //!
   TBranch        *b_el_errz;   //!
   TBranch        *b_el_etap;   //!
   TBranch        *b_el_depth;   //!
   TBranch        *b_el_refittedTrack_n;   //!
   TBranch        *b_el_refittedTrack_author;   //!
   TBranch        *b_el_refittedTrack_chi2;   //!
   TBranch        *b_el_refittedTrack_hasBrem;   //!
   TBranch        *b_el_refittedTrack_bremRadius;   //!
   TBranch        *b_el_refittedTrack_bremZ;   //!
   TBranch        *b_el_refittedTrack_bremRadiusErr;   //!
   TBranch        *b_el_refittedTrack_bremZErr;   //!
   TBranch        *b_el_refittedTrack_bremFitStatus;   //!
   TBranch        *b_el_refittedTrack_qoverp;   //!
   TBranch        *b_el_refittedTrack_d0;   //!
   TBranch        *b_el_refittedTrack_z0;   //!
   TBranch        *b_el_refittedTrack_theta;   //!
   TBranch        *b_el_refittedTrack_phi;   //!
   TBranch        *b_el_refittedTrack_LMqoverp;   //!
   TBranch        *b_el_refittedTrack_covd0;   //!
   TBranch        *b_el_refittedTrack_covz0;   //!
   TBranch        *b_el_refittedTrack_covphi;   //!
   TBranch        *b_el_refittedTrack_covtheta;   //!
   TBranch        *b_el_refittedTrack_covqoverp;   //!
   TBranch        *b_el_refittedTrack_covd0z0;   //!
   TBranch        *b_el_refittedTrack_covz0phi;   //!
   TBranch        *b_el_refittedTrack_covz0theta;   //!
   TBranch        *b_el_refittedTrack_covz0qoverp;   //!
   TBranch        *b_el_refittedTrack_covd0phi;   //!
   TBranch        *b_el_refittedTrack_covd0theta;   //!
   TBranch        *b_el_refittedTrack_covd0qoverp;   //!
   TBranch        *b_el_refittedTrack_covphitheta;   //!
   TBranch        *b_el_refittedTrack_covphiqoverp;   //!
   TBranch        *b_el_refittedTrack_covthetaqoverp;   //!
   TBranch        *b_el_refittedTrack_d0_wrtBL;   //!
   TBranch        *b_el_refittedTrack_z0_wrtBL;   //!
   TBranch        *b_el_refittedTrack_phi_wrtBL;   //!
   TBranch        *b_el_refittedTrack_theta_wrtBL;   //!
   TBranch        *b_el_refittedTrack_qoverp_wrtBL;   //!
   TBranch        *b_el_refittedTrack_d0_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_z0_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_phi_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_theta_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_qoverp_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_d0_z0_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_d0_phi_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_d0_theta_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_d0_qoverp_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_z0_phi_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_z0_theta_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_z0_qoverp_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_phi_theta_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_phi_qoverp_err_wrtBL;   //!
   TBranch        *b_el_refittedTrack_theta_qoverp_err_wrtBL;   //!
   TBranch        *b_el_Es0;   //!
   TBranch        *b_el_etas0;   //!
   TBranch        *b_el_phis0;   //!
   TBranch        *b_el_Es1;   //!
   TBranch        *b_el_etas1;   //!
   TBranch        *b_el_phis1;   //!
   TBranch        *b_el_Es2;   //!
   TBranch        *b_el_etas2;   //!
   TBranch        *b_el_phis2;   //!
   TBranch        *b_el_Es3;   //!
   TBranch        *b_el_etas3;   //!
   TBranch        *b_el_phis3;   //!
   TBranch        *b_el_E_PreSamplerB;   //!
   TBranch        *b_el_E_EMB1;   //!
   TBranch        *b_el_E_EMB2;   //!
   TBranch        *b_el_E_EMB3;   //!
   TBranch        *b_el_E_PreSamplerE;   //!
   TBranch        *b_el_E_EME1;   //!
   TBranch        *b_el_E_EME2;   //!
   TBranch        *b_el_E_EME3;   //!
   TBranch        *b_el_E_HEC0;   //!
   TBranch        *b_el_E_HEC1;   //!
   TBranch        *b_el_E_HEC2;   //!
   TBranch        *b_el_E_HEC3;   //!
   TBranch        *b_el_E_TileBar0;   //!
   TBranch        *b_el_E_TileBar1;   //!
   TBranch        *b_el_E_TileBar2;   //!
   TBranch        *b_el_E_TileGap1;   //!
   TBranch        *b_el_E_TileGap2;   //!
   TBranch        *b_el_E_TileGap3;   //!
   TBranch        *b_el_E_TileExt0;   //!
   TBranch        *b_el_E_TileExt1;   //!
   TBranch        *b_el_E_TileExt2;   //!
   TBranch        *b_el_E_FCAL0;   //!
   TBranch        *b_el_E_FCAL1;   //!
   TBranch        *b_el_E_FCAL2;   //!
   TBranch        *b_el_cl_E;   //!
   TBranch        *b_el_cl_pt;   //!
   TBranch        *b_el_cl_eta;   //!
   TBranch        *b_el_cl_phi;   //!
   TBranch        *b_el_cl_etaCalo;   //!
   TBranch        *b_el_cl_phiCalo;   //!
   TBranch        *b_el_firstEdens;   //!
   TBranch        *b_el_cellmaxfrac;   //!
   TBranch        *b_el_longitudinal;   //!
   TBranch        *b_el_secondlambda;   //!
   TBranch        *b_el_lateral;   //!
   TBranch        *b_el_secondR;   //!
   TBranch        *b_el_centerlambda;   //!
   TBranch        *b_el_rawcl_Es0;   //!
   TBranch        *b_el_rawcl_etas0;   //!
   TBranch        *b_el_rawcl_phis0;   //!
   TBranch        *b_el_rawcl_Es1;   //!
   TBranch        *b_el_rawcl_etas1;   //!
   TBranch        *b_el_rawcl_phis1;   //!
   TBranch        *b_el_rawcl_Es2;   //!
   TBranch        *b_el_rawcl_etas2;   //!
   TBranch        *b_el_rawcl_phis2;   //!
   TBranch        *b_el_rawcl_Es3;   //!
   TBranch        *b_el_rawcl_etas3;   //!
   TBranch        *b_el_rawcl_phis3;   //!
   TBranch        *b_el_rawcl_E;   //!
   TBranch        *b_el_rawcl_pt;   //!
   TBranch        *b_el_rawcl_eta;   //!
   TBranch        *b_el_rawcl_phi;   //!
   TBranch        *b_el_trackd0;   //!
   TBranch        *b_el_trackz0;   //!
   TBranch        *b_el_trackphi;   //!
   TBranch        *b_el_tracktheta;   //!
   TBranch        *b_el_trackqoverp;   //!
   TBranch        *b_el_trackpt;   //!
   TBranch        *b_el_tracketa;   //!
   TBranch        *b_el_trackcov_d0;   //!
   TBranch        *b_el_trackcov_z0;   //!
   TBranch        *b_el_trackcov_phi;   //!
   TBranch        *b_el_trackcov_theta;   //!
   TBranch        *b_el_trackcov_qoverp;   //!
   TBranch        *b_el_trackcov_d0_z0;   //!
   TBranch        *b_el_trackcov_d0_phi;   //!
   TBranch        *b_el_trackcov_d0_theta;   //!
   TBranch        *b_el_trackcov_d0_qoverp;   //!
   TBranch        *b_el_trackcov_z0_phi;   //!
   TBranch        *b_el_trackcov_z0_theta;   //!
   TBranch        *b_el_trackcov_z0_qoverp;   //!
   TBranch        *b_el_trackcov_phi_theta;   //!
   TBranch        *b_el_trackcov_phi_qoverp;   //!
   TBranch        *b_el_trackcov_theta_qoverp;   //!
   TBranch        *b_el_trackfitchi2;   //!
   TBranch        *b_el_trackfitndof;   //!
   TBranch        *b_el_nBLHits;   //!
   TBranch        *b_el_nPixHits;   //!
   TBranch        *b_el_nSCTHits;   //!
   TBranch        *b_el_nTRTHits;   //!
   TBranch        *b_el_nTRTHighTHits;   //!
   TBranch        *b_el_nTRTXenonHits;   //!
   TBranch        *b_el_nPixHoles;   //!
   TBranch        *b_el_nSCTHoles;   //!
   TBranch        *b_el_nTRTHoles;   //!
   TBranch        *b_el_nPixelDeadSensors;   //!
   TBranch        *b_el_nSCTDeadSensors;   //!
   TBranch        *b_el_nBLSharedHits;   //!
   TBranch        *b_el_nPixSharedHits;   //!
   TBranch        *b_el_nSCTSharedHits;   //!
   TBranch        *b_el_nBLayerSplitHits;   //!
   TBranch        *b_el_nPixSplitHits;   //!
   TBranch        *b_el_nBLayerOutliers;   //!
   TBranch        *b_el_nPixelOutliers;   //!
   TBranch        *b_el_nSCTOutliers;   //!
   TBranch        *b_el_nTRTOutliers;   //!
   TBranch        *b_el_nTRTHighTOutliers;   //!
   TBranch        *b_el_nContribPixelLayers;   //!
   TBranch        *b_el_nGangedPixels;   //!
   TBranch        *b_el_nGangedFlaggedFakes;   //!
   TBranch        *b_el_nPixelSpoiltHits;   //!
   TBranch        *b_el_nSCTDoubleHoles;   //!
   TBranch        *b_el_nSCTSpoiltHits;   //!
   TBranch        *b_el_expectBLayerHit;   //!
   TBranch        *b_el_nSiHits;   //!
   TBranch        *b_el_TRTHighTHitsRatio;   //!
   TBranch        *b_el_TRTHighTOutliersRatio;   //!
   TBranch        *b_el_pixeldEdx;   //!
   TBranch        *b_el_nGoodHitsPixeldEdx;   //!
   TBranch        *b_el_massPixeldEdx;   //!
   TBranch        *b_el_likelihoodsPixeldEdx;   //!
   TBranch        *b_el_eProbabilityComb;   //!
   TBranch        *b_el_eProbabilityHT;   //!
   TBranch        *b_el_eProbabilityToT;   //!
   TBranch        *b_el_eProbabilityBrem;   //!
   TBranch        *b_el_vertweight;   //!
   TBranch        *b_el_vertx;   //!
   TBranch        *b_el_verty;   //!
   TBranch        *b_el_vertz;   //!
   TBranch        *b_el_trackd0beam;   //!
   TBranch        *b_el_trackz0beam;   //!
   TBranch        *b_el_tracksigd0beam;   //!
   TBranch        *b_el_tracksigz0beam;   //!
   TBranch        *b_el_trackd0pv;   //!
   TBranch        *b_el_trackz0pv;   //!
   TBranch        *b_el_tracksigd0pv;   //!
   TBranch        *b_el_tracksigz0pv;   //!
   TBranch        *b_el_trackIPEstimate_d0_biasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_z0_biasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_sigd0_biasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_sigz0_biasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_d0_unbiasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_z0_unbiasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_sigd0_unbiasedpvunbiased;   //!
   TBranch        *b_el_trackIPEstimate_sigz0_unbiasedpvunbiased;   //!
   TBranch        *b_el_trackd0pvunbiased;   //!
   TBranch        *b_el_trackz0pvunbiased;   //!
   TBranch        *b_el_tracksigd0pvunbiased;   //!
   TBranch        *b_el_tracksigz0pvunbiased;   //!
   TBranch        *b_el_Unrefittedtrack_d0;   //!
   TBranch        *b_el_Unrefittedtrack_z0;   //!
   TBranch        *b_el_Unrefittedtrack_phi;   //!
   TBranch        *b_el_Unrefittedtrack_theta;   //!
   TBranch        *b_el_Unrefittedtrack_qoverp;   //!
   TBranch        *b_el_Unrefittedtrack_pt;   //!
   TBranch        *b_el_Unrefittedtrack_eta;   //!
   TBranch        *b_el_theta_LM;   //!
   TBranch        *b_el_qoverp_LM;   //!
   TBranch        *b_el_locX_LM;   //!
   TBranch        *b_el_locY_LM;   //!
   TBranch        *b_el_phi_LM;   //!
   TBranch        *b_el_theta_err_LM;   //!
   TBranch        *b_el_qoverp_err_LM;   //!
   TBranch        *b_el_locX_err_LM;   //!
   TBranch        *b_el_locY_err_LM;   //!
   TBranch        *b_el_phi_err_LM;   //!
   TBranch        *b_el_locX_locY_err_LM;   //!
   TBranch        *b_el_locX_phi_err_LM;   //!
   TBranch        *b_el_locX_theta_err_LM;   //!
   TBranch        *b_el_locX_qoverp_err_LM;   //!
   TBranch        *b_el_locY_phi_err_LM;   //!
   TBranch        *b_el_locY_theta_err_LM;   //!
   TBranch        *b_el_locY_qoverp_err_LM;   //!
   TBranch        *b_el_phi_theta_err_LM;   //!
   TBranch        *b_el_phi_qoverp_err_LM;   //!
   TBranch        *b_el_theta_qoverp_err_LM;   //!
   TBranch        *b_el_hastrack;   //!
   TBranch        *b_el_deltaEmax2;   //!
   TBranch        *b_el_calibHitsShowerDepth;   //!
   TBranch        *b_el_isIso;   //!
   TBranch        *b_el_mvaptcone20;   //!
   TBranch        *b_el_mvaptcone30;   //!
   TBranch        *b_el_mvaptcone40;   //!
   TBranch        *b_el_CaloPointing_eta;   //!
   TBranch        *b_el_CaloPointing_sigma_eta;   //!
   TBranch        *b_el_CaloPointing_zvertex;   //!
   TBranch        *b_el_CaloPointing_sigma_zvertex;   //!
   TBranch        *b_el_HPV_eta;   //!
   TBranch        *b_el_HPV_sigma_eta;   //!
   TBranch        *b_el_HPV_zvertex;   //!
   TBranch        *b_el_HPV_sigma_zvertex;   //!
   TBranch        *b_el_truth_bremSi;   //!
   TBranch        *b_el_truth_bremLoc;   //!
   TBranch        *b_el_truth_sumbrem;   //!
   TBranch        *b_el_topoEtcone60;   //!
   TBranch        *b_el_ES0_real;   //!
   TBranch        *b_el_ES1_real;   //!
   TBranch        *b_el_ES2_real;   //!
   TBranch        *b_el_ES3_real;   //!
   TBranch        *b_el_EcellS0;   //!
   TBranch        *b_el_etacellS0;   //!
   TBranch        *b_el_Etcone40_ED_corrected;   //!
   TBranch        *b_el_Etcone40_corrected;   //!
   TBranch        *b_el_topoEtcone20_corrected;   //!
   TBranch        *b_el_topoEtcone30_corrected;   //!
   TBranch        *b_el_topoEtcone40_corrected;   //!
   TBranch        *b_el_ED_median;   //!
   TBranch        *b_el_ED_sigma;   //!
   TBranch        *b_el_ED_Njets;   //!
   TBranch        *b_el_EF_dr;   //!
   TBranch        *b_el_EF_index;   //!
   TBranch        *b_el_L2_dr;   //!
   TBranch        *b_el_L1_dr;   //!
   TBranch        *b_el_L1_index;   //!
   TBranch        *b_ph_n;   //!
   TBranch        *b_ph_E;   //!
   TBranch        *b_ph_Et;   //!
   TBranch        *b_ph_pt;   //!
   TBranch        *b_ph_m;   //!
   TBranch        *b_ph_eta;   //!
   TBranch        *b_ph_phi;   //!
   TBranch        *b_ph_px;   //!
   TBranch        *b_ph_py;   //!
   TBranch        *b_ph_pz;   //!
   TBranch        *b_ph_author;   //!
   TBranch        *b_ph_isRecovered;   //!
   TBranch        *b_ph_isEM;   //!
   TBranch        *b_ph_isEMLoose;   //!
   TBranch        *b_ph_isEMMedium;   //!
   TBranch        *b_ph_isEMTight;   //!
   TBranch        *b_ph_OQ;   //!
   TBranch        *b_ph_convFlag;   //!
   TBranch        *b_ph_isConv;   //!
   TBranch        *b_ph_nConv;   //!
   TBranch        *b_ph_nSingleTrackConv;   //!
   TBranch        *b_ph_nDoubleTrackConv;   //!
   TBranch        *b_ph_type;   //!
   TBranch        *b_ph_origin;   //!
   TBranch        *b_ph_truth_deltaRRecPhoton;   //!
   TBranch        *b_ph_truth_E;   //!
   TBranch        *b_ph_truth_pt;   //!
   TBranch        *b_ph_truth_eta;   //!
   TBranch        *b_ph_truth_phi;   //!
   TBranch        *b_ph_truth_type;   //!
   TBranch        *b_ph_truth_status;   //!
   TBranch        *b_ph_truth_barcode;   //!
   TBranch        *b_ph_truth_mothertype;   //!
   TBranch        *b_ph_truth_motherbarcode;   //!
   TBranch        *b_ph_truth_matched;   //!
   TBranch        *b_ph_loose;   //!
   TBranch        *b_ph_looseIso;   //!
   TBranch        *b_ph_tight;   //!
   TBranch        *b_ph_tightIso;   //!
   TBranch        *b_ph_looseAR;   //!
   TBranch        *b_ph_looseARIso;   //!
   TBranch        *b_ph_tightAR;   //!
   TBranch        *b_ph_tightARIso;   //!
   TBranch        *b_ph_goodOQ;   //!
   TBranch        *b_ph_Ethad;   //!
   TBranch        *b_ph_Ethad1;   //!
   TBranch        *b_ph_E033;   //!
   TBranch        *b_ph_f1;   //!
   TBranch        *b_ph_f1core;   //!
   TBranch        *b_ph_Emins1;   //!
   TBranch        *b_ph_fside;   //!
   TBranch        *b_ph_Emax2;   //!
   TBranch        *b_ph_ws3;   //!
   TBranch        *b_ph_wstot;   //!
   TBranch        *b_ph_E132;   //!
   TBranch        *b_ph_E1152;   //!
   TBranch        *b_ph_emaxs1;   //!
   TBranch        *b_ph_deltaEs;   //!
   TBranch        *b_ph_E233;   //!
   TBranch        *b_ph_E237;   //!
   TBranch        *b_ph_E277;   //!
   TBranch        *b_ph_weta2;   //!
   TBranch        *b_ph_f3;   //!
   TBranch        *b_ph_f3core;   //!
   TBranch        *b_ph_rphiallcalo;   //!
   TBranch        *b_ph_Etcone45;   //!
   TBranch        *b_ph_Etcone15;   //!
   TBranch        *b_ph_Etcone20;   //!
   TBranch        *b_ph_Etcone25;   //!
   TBranch        *b_ph_Etcone30;   //!
   TBranch        *b_ph_Etcone35;   //!
   TBranch        *b_ph_Etcone40;   //!
   TBranch        *b_ph_ptcone20;   //!
   TBranch        *b_ph_ptcone30;   //!
   TBranch        *b_ph_ptcone40;   //!
   TBranch        *b_ph_nucone20;   //!
   TBranch        *b_ph_nucone30;   //!
   TBranch        *b_ph_nucone40;   //!
   TBranch        *b_ph_Etcone15_pt_corrected;   //!
   TBranch        *b_ph_Etcone20_pt_corrected;   //!
   TBranch        *b_ph_Etcone25_pt_corrected;   //!
   TBranch        *b_ph_Etcone30_pt_corrected;   //!
   TBranch        *b_ph_Etcone35_pt_corrected;   //!
   TBranch        *b_ph_Etcone40_pt_corrected;   //!
   TBranch        *b_ph_convanglematch;   //!
   TBranch        *b_ph_convtrackmatch;   //!
   TBranch        *b_ph_hasconv;   //!
   TBranch        *b_ph_convvtxx;   //!
   TBranch        *b_ph_convvtxy;   //!
   TBranch        *b_ph_convvtxz;   //!
   TBranch        *b_ph_Rconv;   //!
   TBranch        *b_ph_zconv;   //!
   TBranch        *b_ph_convvtxchi2;   //!
   TBranch        *b_ph_pt1conv;   //!
   TBranch        *b_ph_convtrk1nBLHits;   //!
   TBranch        *b_ph_convtrk1nPixHits;   //!
   TBranch        *b_ph_convtrk1nSCTHits;   //!
   TBranch        *b_ph_convtrk1nTRTHits;   //!
   TBranch        *b_ph_pt2conv;   //!
   TBranch        *b_ph_convtrk2nBLHits;   //!
   TBranch        *b_ph_convtrk2nPixHits;   //!
   TBranch        *b_ph_convtrk2nSCTHits;   //!
   TBranch        *b_ph_convtrk2nTRTHits;   //!
   TBranch        *b_ph_ptconv;   //!
   TBranch        *b_ph_pzconv;   //!
   TBranch        *b_ph_reta;   //!
   TBranch        *b_ph_rphi;   //!
   TBranch        *b_ph_topoEtcone20;   //!
   TBranch        *b_ph_topoEtcone30;   //!
   TBranch        *b_ph_topoEtcone40;   //!
   TBranch        *b_ph_materialTraversed;   //!
   TBranch        *b_ph_EtringnoisedR03sig2;   //!
   TBranch        *b_ph_EtringnoisedR03sig3;   //!
   TBranch        *b_ph_EtringnoisedR03sig4;   //!
   TBranch        *b_ph_ptcone20_zpv05;   //!
   TBranch        *b_ph_ptcone30_zpv05;   //!
   TBranch        *b_ph_ptcone40_zpv05;   //!
   TBranch        *b_ph_nucone20_zpv05;   //!
   TBranch        *b_ph_nucone30_zpv05;   //!
   TBranch        *b_ph_nucone40_zpv05;   //!
   TBranch        *b_ph_isolationlikelihoodjets;   //!
   TBranch        *b_ph_isolationlikelihoodhqelectrons;   //!
   TBranch        *b_ph_loglikelihood;   //!
   TBranch        *b_ph_photonweight;   //!
   TBranch        *b_ph_photonbgweight;   //!
   TBranch        *b_ph_neuralnet;   //!
   TBranch        *b_ph_Hmatrix;   //!
   TBranch        *b_ph_Hmatrix5;   //!
   TBranch        *b_ph_adaboost;   //!
   TBranch        *b_ph_ringernn;   //!
   TBranch        *b_ph_zvertex;   //!
   TBranch        *b_ph_errz;   //!
   TBranch        *b_ph_etap;   //!
   TBranch        *b_ph_depth;   //!
   TBranch        *b_ph_cl_E;   //!
   TBranch        *b_ph_cl_pt;   //!
   TBranch        *b_ph_cl_eta;   //!
   TBranch        *b_ph_cl_phi;   //!
   TBranch        *b_ph_cl_etaCalo;   //!
   TBranch        *b_ph_cl_phiCalo;   //!
   TBranch        *b_ph_Es0;   //!
   TBranch        *b_ph_etas0;   //!
   TBranch        *b_ph_phis0;   //!
   TBranch        *b_ph_Es1;   //!
   TBranch        *b_ph_etas1;   //!
   TBranch        *b_ph_phis1;   //!
   TBranch        *b_ph_Es2;   //!
   TBranch        *b_ph_etas2;   //!
   TBranch        *b_ph_phis2;   //!
   TBranch        *b_ph_Es3;   //!
   TBranch        *b_ph_etas3;   //!
   TBranch        *b_ph_phis3;   //!
   TBranch        *b_ph_rawcl_Es0;   //!
   TBranch        *b_ph_rawcl_etas0;   //!
   TBranch        *b_ph_rawcl_phis0;   //!
   TBranch        *b_ph_rawcl_Es1;   //!
   TBranch        *b_ph_rawcl_etas1;   //!
   TBranch        *b_ph_rawcl_phis1;   //!
   TBranch        *b_ph_rawcl_Es2;   //!
   TBranch        *b_ph_rawcl_etas2;   //!
   TBranch        *b_ph_rawcl_phis2;   //!
   TBranch        *b_ph_rawcl_Es3;   //!
   TBranch        *b_ph_rawcl_etas3;   //!
   TBranch        *b_ph_rawcl_phis3;   //!
   TBranch        *b_ph_rawcl_E;   //!
   TBranch        *b_ph_rawcl_pt;   //!
   TBranch        *b_ph_rawcl_eta;   //!
   TBranch        *b_ph_rawcl_phi;   //!
   TBranch        *b_ph_convMatchDeltaEta1;   //!
   TBranch        *b_ph_convMatchDeltaEta2;   //!
   TBranch        *b_ph_convMatchDeltaPhi1;   //!
   TBranch        *b_ph_convMatchDeltaPhi2;   //!
   TBranch        *b_ph_rings_E;   //!
   TBranch        *b_ph_vx_n;   //!
   TBranch        *b_ph_vx_x;   //!
   TBranch        *b_ph_vx_y;   //!
   TBranch        *b_ph_vx_z;   //!
   TBranch        *b_ph_vx_px;   //!
   TBranch        *b_ph_vx_py;   //!
   TBranch        *b_ph_vx_pz;   //!
   TBranch        *b_ph_vx_E;   //!
   TBranch        *b_ph_vx_m;   //!
   TBranch        *b_ph_vx_nTracks;   //!
   TBranch        *b_ph_vx_sumPt;   //!
   TBranch        *b_ph_vx_convTrk_weight;   //!
   TBranch        *b_ph_vx_convTrk_n;   //!
   TBranch        *b_ph_vx_convTrk_fitter;   //!
   TBranch        *b_ph_vx_convTrk_patternReco1;   //!
   TBranch        *b_ph_vx_convTrk_patternReco2;   //!
   TBranch        *b_ph_vx_convTrk_trackProperties;   //!
   TBranch        *b_ph_vx_convTrk_particleHypothesis;   //!
   TBranch        *b_ph_vx_convTrk_nBLHits;   //!
   TBranch        *b_ph_vx_convTrk_nPixHits;   //!
   TBranch        *b_ph_vx_convTrk_nSCTHits;   //!
   TBranch        *b_ph_vx_convTrk_nTRTHits;   //!
   TBranch        *b_ph_vx_convTrk_nTRTHighTHits;   //!
   TBranch        *b_ph_vx_convTrk_nTRTXenonHits;   //!
   TBranch        *b_ph_vx_convTrk_nPixHoles;   //!
   TBranch        *b_ph_vx_convTrk_nSCTHoles;   //!
   TBranch        *b_ph_vx_convTrk_nTRTHoles;   //!
   TBranch        *b_ph_vx_convTrk_nPixelDeadSensors;   //!
   TBranch        *b_ph_vx_convTrk_nSCTDeadSensors;   //!
   TBranch        *b_ph_vx_convTrk_nBLSharedHits;   //!
   TBranch        *b_ph_vx_convTrk_nPixSharedHits;   //!
   TBranch        *b_ph_vx_convTrk_nSCTSharedHits;   //!
   TBranch        *b_ph_vx_convTrk_nBLayerSplitHits;   //!
   TBranch        *b_ph_vx_convTrk_nPixSplitHits;   //!
   TBranch        *b_ph_vx_convTrk_nBLayerOutliers;   //!
   TBranch        *b_ph_vx_convTrk_nPixelOutliers;   //!
   TBranch        *b_ph_vx_convTrk_nSCTOutliers;   //!
   TBranch        *b_ph_vx_convTrk_nTRTOutliers;   //!
   TBranch        *b_ph_vx_convTrk_nTRTHighTOutliers;   //!
   TBranch        *b_ph_vx_convTrk_nContribPixelLayers;   //!
   TBranch        *b_ph_vx_convTrk_nGangedPixels;   //!
   TBranch        *b_ph_vx_convTrk_nGangedFlaggedFakes;   //!
   TBranch        *b_ph_vx_convTrk_nPixelSpoiltHits;   //!
   TBranch        *b_ph_vx_convTrk_nSCTDoubleHoles;   //!
   TBranch        *b_ph_vx_convTrk_nSCTSpoiltHits;   //!
   TBranch        *b_ph_vx_convTrk_nTRTDeadStraws;   //!
   TBranch        *b_ph_vx_convTrk_nTRTTubeHits;   //!
   TBranch        *b_ph_vx_convTrk_nOutliersOnTrack;   //!
   TBranch        *b_ph_vx_convTrk_standardDeviationOfChi2OS;   //!
   TBranch        *b_ph_vx_convTrk_expectBLayerHit;   //!
   TBranch        *b_ph_vx_convTrk_nMDTHits;   //!
   TBranch        *b_ph_vx_convTrk_nCSCEtaHits;   //!
   TBranch        *b_ph_vx_convTrk_nCSCPhiHits;   //!
   TBranch        *b_ph_vx_convTrk_nRPCEtaHits;   //!
   TBranch        *b_ph_vx_convTrk_nRPCPhiHits;   //!
   TBranch        *b_ph_vx_convTrk_nTGCEtaHits;   //!
   TBranch        *b_ph_vx_convTrk_nTGCPhiHits;   //!
   TBranch        *b_ph_vx_convTrk_nMdtHoles;   //!
   TBranch        *b_ph_vx_convTrk_nCscEtaHoles;   //!
   TBranch        *b_ph_vx_convTrk_nCscPhiHoles;   //!
   TBranch        *b_ph_vx_convTrk_nRpcEtaHoles;   //!
   TBranch        *b_ph_vx_convTrk_nRpcPhiHoles;   //!
   TBranch        *b_ph_vx_convTrk_nTgcEtaHoles;   //!
   TBranch        *b_ph_vx_convTrk_nTgcPhiHoles;   //!
   TBranch        *b_ph_vx_convTrk_nHits;   //!
   TBranch        *b_ph_vx_convTrk_nHoles;   //!
   TBranch        *b_ph_vx_convTrk_hitPattern;   //!
   TBranch        *b_ph_vx_convTrk_nSiHits;   //!
   TBranch        *b_ph_vx_convTrk_TRTHighTHitsRatio;   //!
   TBranch        *b_ph_vx_convTrk_TRTHighTOutliersRatio;   //!
   TBranch        *b_ph_vx_convTrk_eProbabilityComb;   //!
   TBranch        *b_ph_vx_convTrk_eProbabilityHT;   //!
   TBranch        *b_ph_vx_convTrk_eProbabilityToT;   //!
   TBranch        *b_ph_vx_convTrk_eProbabilityBrem;   //!
   TBranch        *b_ph_vx_convTrk_chi2;   //!
   TBranch        *b_ph_vx_convTrk_ndof;   //!
   TBranch        *b_ph_truth_isConv;   //!
   TBranch        *b_ph_truth_isBrem;   //!
   TBranch        *b_ph_truth_isFromHardProc;   //!
   TBranch        *b_ph_truth_isPhotonFromHardProc;   //!
   TBranch        *b_ph_truth_Rconv;   //!
   TBranch        *b_ph_truth_zconv;   //!
   TBranch        *b_ph_deltaEmax2;   //!
   TBranch        *b_ph_calibHitsShowerDepth;   //!
   TBranch        *b_ph_isIso;   //!
   TBranch        *b_ph_mvaptcone20;   //!
   TBranch        *b_ph_mvaptcone30;   //!
   TBranch        *b_ph_mvaptcone40;   //!
   TBranch        *b_ph_topoEtcone60;   //!
   TBranch        *b_ph_vx_Chi2;   //!
   TBranch        *b_ph_vx_Dcottheta;   //!
   TBranch        *b_ph_vx_Dphi;   //!
   TBranch        *b_ph_vx_Dist;   //!
   TBranch        *b_ph_vx_DR1R2;   //!
   TBranch        *b_ph_CaloPointing_eta;   //!
   TBranch        *b_ph_CaloPointing_sigma_eta;   //!
   TBranch        *b_ph_CaloPointing_zvertex;   //!
   TBranch        *b_ph_CaloPointing_sigma_zvertex;   //!
   TBranch        *b_ph_HPV_eta;   //!
   TBranch        *b_ph_HPV_sigma_eta;   //!
   TBranch        *b_ph_HPV_zvertex;   //!
   TBranch        *b_ph_HPV_sigma_zvertex;   //!
   TBranch        *b_ph_NN_passes;   //!
   TBranch        *b_ph_NN_discriminant;   //!
   TBranch        *b_ph_ES0_real;   //!
   TBranch        *b_ph_ES1_real;   //!
   TBranch        *b_ph_ES2_real;   //!
   TBranch        *b_ph_ES3_real;   //!
   TBranch        *b_ph_EcellS0;   //!
   TBranch        *b_ph_etacellS0;   //!
   TBranch        *b_ph_Etcone40_ED_corrected;   //!
   TBranch        *b_ph_Etcone40_corrected;   //!
   TBranch        *b_ph_topoEtcone20_corrected;   //!
   TBranch        *b_ph_topoEtcone30_corrected;   //!
   TBranch        *b_ph_topoEtcone40_corrected;   //!
   TBranch        *b_ph_ED_median;   //!
   TBranch        *b_ph_ED_sigma;   //!
   TBranch        *b_ph_ED_Njets;   //!
   TBranch        *b_ph_convIP;   //!
   TBranch        *b_ph_convIPRev;   //!
   TBranch        *b_ph_el_index;   //!
   TBranch        *b_ph_EF_dr;   //!
   TBranch        *b_ph_EF_index;   //!
   TBranch        *b_ph_L2_dr;   //!
   TBranch        *b_ph_L1_dr;   //!
   TBranch        *b_ph_L1_index;   //!
   TBranch        *b_mcevt_n;   //!
   TBranch        *b_mcevt_signal_process_id;   //!
   TBranch        *b_mcevt_event_number;   //!
   TBranch        *b_mcevt_event_scale;   //!
   TBranch        *b_mcevt_alphaQCD;   //!
   TBranch        *b_mcevt_alphaQED;   //!
   TBranch        *b_mcevt_pdf_id1;   //!
   TBranch        *b_mcevt_pdf_id2;   //!
   TBranch        *b_mcevt_pdf_x1;   //!
   TBranch        *b_mcevt_pdf_x2;   //!
   TBranch        *b_mcevt_pdf_scale;   //!
   TBranch        *b_mcevt_pdf1;   //!
   TBranch        *b_mcevt_pdf2;   //!
   TBranch        *b_mcevt_weight;   //!
   TBranch        *b_mcVx_n;   //!
   TBranch        *b_mcVx_x;   //!
   TBranch        *b_mcVx_y;   //!
   TBranch        *b_mcVx_z;   //!
   TBranch        *b_mc_n;   //!
   TBranch        *b_mc_gen_E;   //!
   TBranch        *b_mc_gen_pt;   //!
   TBranch        *b_mc_gen_eta;   //!
   TBranch        *b_mc_gen_phi;   //!
   TBranch        *b_mc_gen_type;   //!
   TBranch        *b_mc_gen_status;   //!
   TBranch        *b_mc_gen_barcode;   //!
   TBranch        *b_mc_gen_mothertype;   //!
   TBranch        *b_mc_gen_motherbarcode;   //!
   TBranch        *b_mc_perigee_ok;   //!
   TBranch        *b_mc_perigee_d0;   //!
   TBranch        *b_mc_perigee_z0;   //!
   TBranch        *b_mc_perigee_phi;   //!
   TBranch        *b_mc_perigee_theta;   //!
   TBranch        *b_mc_perigee_qoverp;   //!
   TBranch        *b_mc_charge;   //!
   TBranch        *b_mc_child_n;   //!
   TBranch        *b_mc_child_barcode;   //!
   TBranch        *b_mc_child_pdg;   //!
   TBranch        *b_mc_begVtx_x;   //!
   TBranch        *b_mc_begVtx_y;   //!
   TBranch        *b_mc_begVtx_z;   //!
   TBranch        *b_mc_begVtx_barcode;   //!
   TBranch        *b_mc_endVtx_x;   //!
   TBranch        *b_mc_endVtx_y;   //!
   TBranch        *b_mc_endVtx_z;   //!
   TBranch        *b_mc_endVtx_barcode;   //!
   TBranch        *b_mc_unstable_n;   //!
   TBranch        *b_mc_unstable_gen_pt;   //!
   TBranch        *b_mc_unstable_gen_eta;   //!
   TBranch        *b_mc_unstable_gen_phi;   //!
   TBranch        *b_mc_unstable_gen_energy;   //!
   TBranch        *b_mc_unstable_perigee_ok;   //!
   TBranch        *b_mc_unstable_perigee_d0;   //!
   TBranch        *b_mc_unstable_perigee_z0;   //!
   TBranch        *b_mc_unstable_perigee_phi;   //!
   TBranch        *b_mc_unstable_perigee_theta;   //!
   TBranch        *b_mc_unstable_perigee_qoverp;   //!
   TBranch        *b_mc_unstable_pdg;   //!
   TBranch        *b_mc_unstable_charge;   //!
   TBranch        *b_mc_unstable_barcode;   //!
   TBranch        *b_mc_unstable_status;   //!
   TBranch        *b_mc_unstable_mother_pdg;   //!
   TBranch        *b_mc_unstable_mother_barcode;   //!
   TBranch        *b_mc_unstable_child_n;   //!
   TBranch        *b_mc_unstable_child_barcode;   //!
   TBranch        *b_mc_unstable_begVtx_x;   //!
   TBranch        *b_mc_unstable_begVtx_y;   //!
   TBranch        *b_mc_unstable_begVtx_z;   //!
   TBranch        *b_mc_unstable_begVtx_barcode;   //!
   TBranch        *b_mc_unstable_endVtx_x;   //!
   TBranch        *b_mc_unstable_endVtx_y;   //!
   TBranch        *b_mc_unstable_endVtx_z;   //!
   TBranch        *b_mc_unstable_endVtx_barcode;   //!

   MonteCarlo(TTree *tree=0);
   virtual ~MonteCarlo();
   virtual Int_t    Cut(Long64_t entry);
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init(TTree *tree);
   virtual void     Loop();
   virtual Bool_t   Notify();
   virtual void     Show(Long64_t entry = -1);
};

#endif

#ifdef MonteCarlo_cxx
MonteCarlo::MonteCarlo(TTree *tree) : fChain(0) 
{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
   if (tree == 0) {
      TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("NTUP_HI.01397074._000239.root.1");
      if (!f || !f->IsOpen()) {
         f = new TFile("NTUP_HI.01397074._000239.root.1");
      }
      f->GetObject("HeavyIonD3PD",tree);

   }
   Init(tree);
}

MonteCarlo::~MonteCarlo()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t MonteCarlo::GetEntry(Long64_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}
Long64_t MonteCarlo::LoadTree(Long64_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Long64_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (fChain->GetTreeNumber() != fCurrent) {
      fCurrent = fChain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void MonteCarlo::Init(TTree *tree)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set object pointer
   trig_EF_ph_EF_2g10_loose = 0;
   trig_EF_ph_EF_2g10_medium = 0;
   trig_EF_ph_EF_2g5_loose = 0;
   trig_EF_ph_EF_2g5_medium = 0;
   trig_EF_ph_EF_2g7_loose = 0;
   trig_EF_ph_EF_2g7_medium = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM10 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM12 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM14 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM16 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_2J5 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_EMPTY = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_MV_VTE50 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE20 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE50 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM4 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM5 = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM5_EMPTY = 0;
   trig_EF_ph_EF_L1ItemStreamer_L1_EM7 = 0;
   trig_EF_ph_EF_SeededStreamerL1Calo = 0;
   trig_EF_ph_EF_g10_loose = 0;
   trig_EF_ph_EF_g10_loose_larcalib = 0;
   trig_EF_ph_EF_g10_medium = 0;
   trig_EF_ph_EF_g10_medium_2j10_a4hi_EFFS_L1EM5 = 0;
   trig_EF_ph_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5 = 0;
   trig_EF_ph_EF_g10_tight = 0;
   trig_EF_ph_EF_g12_loose = 0;
   trig_EF_ph_EF_g12_medium = 0;
   trig_EF_ph_EF_g12_tight = 0;
   trig_EF_ph_EF_g15_loose = 0;
   trig_EF_ph_EF_g15_medium = 0;
   trig_EF_ph_EF_g15_tight = 0;
   trig_EF_ph_EF_g20_loose = 0;
   trig_EF_ph_EF_g20_medium = 0;
   trig_EF_ph_EF_g5_NoCut_cosmic = 0;
   trig_EF_ph_EF_g5_loose = 0;
   trig_EF_ph_EF_g5_loose_2L1J5 = 0;
   trig_EF_ph_EF_g5_loose_larcalib = 0;
   trig_EF_ph_EF_g5_medium = 0;
   trig_EF_ph_EF_g5_medium_2L1J5 = 0;
   trig_EF_ph_EF_g5_tight = 0;
   trig_EF_ph_EF_g7_loose = 0;
   trig_EF_ph_EF_g7_medium = 0;
   trig_EF_ph_EF_g7_medium_2j10_a4hi_EFFS_L1EM3 = 0;
   trig_EF_ph_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3 = 0;
   trig_EF_ph_EF_g7_tight = 0;
   trig_EF_ph_EF_g9_etcut = 0;
   trig_EF_ph_EF_g9_tight = 0;
   trig_EF_el_EF_2e5_loose1 = 0;
   trig_EF_el_EF_2e5_medium1 = 0;
   trig_EF_el_EF_2e5_tight1 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM10 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM12 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM14 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM16 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_2J5 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_EMPTY = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_MV_VTE50 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE20 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE50 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM4 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM5 = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM5_EMPTY = 0;
   trig_EF_el_EF_L1ItemStreamer_L1_EM7 = 0;
   trig_EF_el_EF_SeededStreamerL1Calo = 0;
   trig_EF_el_EF_e10_loose1 = 0;
   trig_EF_el_EF_e10_medium1 = 0;
   trig_EF_el_EF_e14_tight1 = 0;
   trig_EF_el_EF_e15_loose0 = 0;
   trig_EF_el_EF_e15_loose1 = 0;
   trig_EF_el_EF_e15_loose1_IDTrkNoCut = 0;
   trig_EF_el_EF_e15_medium1 = 0;
   trig_EF_el_EF_e5_loose1 = 0;
   trig_EF_el_EF_e5_medium1 = 0;
   trig_EF_el_EF_e5_medium1_IDTrkNoCut = 0;
   trig_EF_el_EF_e5_tight1 = 0;
   trig_EF_el_EF_e5_tight1_e5_NoCut = 0;
   trig_EF_el_EF_e7_loose1 = 0;
   trig_EF_el_EF_e7_medium1 = 0;
   trig_EF_el_EF_e7_tight1 = 0;
   trig_EF_el_EF_e9_tight1 = 0;
   trig_EF_el_EF_e9_tight1_e5_etcut = 0;
   trig_EF_trigmuonef_EF_2mu2_EFFS = 0;
   trig_EF_trigmuonef_EF_2mu2_EFFS_L1MU0 = 0;
   trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS = 0;
   trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MU0 = 0;
   trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR = 0;
   trig_EF_trigmuonef_EF_2mu4 = 0;
   trig_EF_trigmuonef_EF_2mu4T_MSonly = 0;
   trig_EF_trigmuonef_EF_2mu4_Jpsimumu_IDTrkNoCut = 0;
   trig_EF_trigmuonef_EF_2mu4_MSonly = 0;
   trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0 = 0;
   trig_EF_trigmuonef_EF_2mu6T_MSonly = 0;
   trig_EF_trigmuonef_EF_2mu6_MSonly = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE20 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6 = 0;
   trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY = 0;
   trig_EF_trigmuonef_EF_mu10 = 0;
   trig_EF_trigmuonef_EF_mu10T_MSonly = 0;
   trig_EF_trigmuonef_EF_mu10_IDTrkNoCut = 0;
   trig_EF_trigmuonef_EF_mu10_MSonly = 0;
   trig_EF_trigmuonef_EF_mu13T_MSonly = 0;
   trig_EF_trigmuonef_EF_mu13_MSonly = 0;
   trig_EF_trigmuonef_EF_mu2 = 0;
   trig_EF_trigmuonef_EF_mu4 = 0;
   trig_EF_trigmuonef_EF_mu4T = 0;
   trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut = 0;
   trig_EF_trigmuonef_EF_mu4T_MSonly = 0;
   trig_EF_trigmuonef_EF_mu4T_MSonly_barrel = 0;
   trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic = 0;
   trig_EF_trigmuonef_EF_mu4T_cosmic = 0;
   trig_EF_trigmuonef_EF_mu4_IDTrkNoCut = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly_barrel = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly_cosmic = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_MSonly_j15_a4tchad_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_cosmic = 0;
   trig_EF_trigmuonef_EF_mu4_j10_a4hi_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j10_a4tchad_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j15_a4hi_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j15_a4tchad_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j20_a4hi_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j20_a4tchad_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j30_a4hi_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j30_a4tchad_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_j40_a4tchad_EFFS_matched = 0;
   trig_EF_trigmuonef_EF_mu4_mu2_EFFS = 0;
   trig_EF_trigmuonef_EF_mu4_mu2_EFFS_L1MU0 = 0;
   trig_EF_trigmuonef_EF_mu6 = 0;
   trig_EF_trigmuonef_EF_mu6T = 0;
   trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut = 0;
   trig_EF_trigmuonef_EF_mu6T_MSonly = 0;
   trig_EF_trigmuonef_EF_mu6_IDTrkNoCut = 0;
   trig_EF_trigmuonef_EF_mu6_MSonly = 0;
   trig_EF_trigmuonef_EF_mu8 = 0;
   trig_EF_trigmuonef_EF_mu8_IDTrkNoCut = 0;
   mb_E = 0;
   mb_eta = 0;
   mb_phi = 0;
   mb_time = 0;
   mb_quality = 0;
   mb_type = 0;
   mb_module = 0;
   mb_channel = 0;
   alfa_Scaler = 0;
   alfa_TrigPat = 0;
   alfa_FiberHitsMD = 0;
   alfa_MultiMD = 0;
   alfa_FiberHitsODPos = 0;
   alfa_FiberHitsODNeg = 0;
   alfa_MultiODPos = 0;
   alfa_MultiODNeg = 0;
   alfa_x_Det = 0;
   alfa_y_Det = 0;
   alfa_Detector = 0;
   alfa_OverU = 0;
   alfa_OverV = 0;
   alfa_OverY = 0;
   alfa_NU = 0;
   alfa_NV = 0;
   alfa_NY = 0;
   alfa_Fib_SelMD = 0;
   alfa_Fib_SelOD = 0;
   alfa_x_LHC = 0;
   alfa_y_LHC = 0;
   alfa_z_LHC = 0;
   alfa_x_Pot = 0;
   alfa_y_Pot = 0;
   alfa_x_Stat = 0;
   alfa_y_Stat = 0;
   alfa_x_Beam = 0;
   alfa_y_Beam = 0;
   cc_fcal_E = 0;
   cc_fcal_pt = 0;
   cc_fcal_eta = 0;
   cc_fcal_phi = 0;
   cc_fcal_QCells = 0;
   cc_fcal_GainCells = 0;
   cc_fcal_DetCells = 0;
   cc_fcal_TimeCells = 0;
   cc_fcal_xCells = 0;
   cc_fcal_yCells = 0;
   cc_fcal_zCells = 0;
   cc_fcal_BadCells = 0;
   cc_fcal_IdCells = 0;
   cc_fcal_Sigma = 0;
   ccc_Eh_PresB = 0;
   ccc_Eh_EMB = 0;
   ccc_Eh_EMEC = 0;
   ccc_Eh_Tile = 0;
   ccc_Eh_TileGap = 0;
   ccc_Eh_HEC = 0;
   ccc_Eh_FCal = 0;
   ccc_Eh_PresE = 0;
   ccc_Eh_Scint = 0;
   cccEt_Et_Eh_PresB = 0;
   cccEt_Et_Eh_EMB = 0;
   cccEt_Et_Eh_EMEC = 0;
   cccEt_Et_Eh_Tile = 0;
   cccEt_Et_Eh_TileGap = 0;
   cccEt_Et_Eh_HEC = 0;
   cccEt_Et_Eh_FCal = 0;
   cccEt_Et_Eh_PresE = 0;
   cccEt_Et_Eh_Scint = 0;
   cccEt_p_Eh_PresB = 0;
   cccEt_p_Eh_EMB = 0;
   cccEt_p_Eh_EMEC = 0;
   cccEt_p_Eh_Tile = 0;
   cccEt_p_Eh_TileGap = 0;
   cccEt_p_Eh_HEC = 0;
   cccEt_p_Eh_FCal = 0;
   cccEt_p_Eh_PresE = 0;
   cccEt_p_Eh_Scint = 0;
   cccEt_n_Eh_PresB = 0;
   cccEt_n_Eh_EMB = 0;
   cccEt_n_Eh_EMEC = 0;
   cccEt_n_Eh_Tile = 0;
   cccEt_n_Eh_TileGap = 0;
   cccEt_n_Eh_HEC = 0;
   cccEt_n_Eh_FCal = 0;
   cccEt_n_Eh_PresE = 0;
   cccEt_n_Eh_Scint = 0;
   TotalEt_layer_eta = 0;
   TotalEt_layer_phi = 0;
   TotalEt_layer_area = 0;
   TotalEt_layer_sampling = 0;
   TotalEt_layer_sampling_calib = 0;
   trk_d0 = 0;
   trk_z0 = 0;
   trk_phi = 0;
   trk_theta = 0;
   trk_qoverp = 0;
   trk_pt = 0;
   trk_eta = 0;
   trk_err_d0 = 0;
   trk_err_z0 = 0;
   trk_err_phi = 0;
   trk_err_theta = 0;
   trk_err_qoverp = 0;
   trk_cov_d0_z0 = 0;
   trk_cov_d0_phi = 0;
   trk_cov_d0_theta = 0;
   trk_cov_d0_qoverp = 0;
   trk_cov_z0_phi = 0;
   trk_cov_z0_theta = 0;
   trk_cov_z0_qoverp = 0;
   trk_cov_phi_theta = 0;
   trk_cov_phi_qoverp = 0;
   trk_cov_theta_qoverp = 0;
   trk_d0_wrtPV = 0;
   trk_z0_wrtPV = 0;
   trk_phi_wrtPV = 0;
   trk_err_d0_wrtPV = 0;
   trk_err_z0_wrtPV = 0;
   trk_err_phi_wrtPV = 0;
   trk_err_theta_wrtPV = 0;
   trk_err_qoverp_wrtPV = 0;
   trk_cov_d0_z0_wrtPV = 0;
   trk_cov_d0_phi_wrtPV = 0;
   trk_cov_d0_theta_wrtPV = 0;
   trk_cov_d0_qoverp_wrtPV = 0;
   trk_cov_z0_phi_wrtPV = 0;
   trk_cov_z0_theta_wrtPV = 0;
   trk_cov_z0_qoverp_wrtPV = 0;
   trk_cov_phi_theta_wrtPV = 0;
   trk_cov_phi_qoverp_wrtPV = 0;
   trk_cov_theta_qoverp_wrtPV = 0;
   trk_d0_wrtBS = 0;
   trk_z0_wrtBS = 0;
   trk_phi_wrtBS = 0;
   trk_err_d0_wrtBS = 0;
   trk_err_z0_wrtBS = 0;
   trk_err_phi_wrtBS = 0;
   trk_err_theta_wrtBS = 0;
   trk_err_qoverp_wrtBS = 0;
   trk_cov_d0_z0_wrtBS = 0;
   trk_cov_d0_phi_wrtBS = 0;
   trk_cov_d0_theta_wrtBS = 0;
   trk_cov_d0_qoverp_wrtBS = 0;
   trk_cov_z0_phi_wrtBS = 0;
   trk_cov_z0_theta_wrtBS = 0;
   trk_cov_z0_qoverp_wrtBS = 0;
   trk_cov_phi_theta_wrtBS = 0;
   trk_cov_phi_qoverp_wrtBS = 0;
   trk_cov_theta_qoverp_wrtBS = 0;
   trk_d0_wrtBL = 0;
   trk_z0_wrtBL = 0;
   trk_phi_wrtBL = 0;
   trk_d0_err_wrtBL = 0;
   trk_z0_err_wrtBL = 0;
   trk_phi_err_wrtBL = 0;
   trk_theta_err_wrtBL = 0;
   trk_qoverp_err_wrtBL = 0;
   trk_d0_z0_err_wrtBL = 0;
   trk_d0_phi_err_wrtBL = 0;
   trk_d0_theta_err_wrtBL = 0;
   trk_d0_qoverp_err_wrtBL = 0;
   trk_z0_phi_err_wrtBL = 0;
   trk_z0_theta_err_wrtBL = 0;
   trk_z0_qoverp_err_wrtBL = 0;
   trk_phi_theta_err_wrtBL = 0;
   trk_phi_qoverp_err_wrtBL = 0;
   trk_theta_qoverp_err_wrtBL = 0;
   trk_chi2 = 0;
   trk_ndof = 0;
   trk_nBLHits = 0;
   trk_nPixHits = 0;
   trk_nSCTHits = 0;
   trk_nTRTHits = 0;
   trk_nTRTHighTHits = 0;
   trk_nTRTXenonHits = 0;
   trk_nPixHoles = 0;
   trk_nSCTHoles = 0;
   trk_nTRTHoles = 0;
   trk_nPixelDeadSensors = 0;
   trk_nSCTDeadSensors = 0;
   trk_nBLSharedHits = 0;
   trk_nPixSharedHits = 0;
   trk_nSCTSharedHits = 0;
   trk_nBLayerSplitHits = 0;
   trk_nPixSplitHits = 0;
   trk_expectBLayerHit = 0;
   trk_nMDTHits = 0;
   trk_nCSCEtaHits = 0;
   trk_nCSCPhiHits = 0;
   trk_nRPCEtaHits = 0;
   trk_nRPCPhiHits = 0;
   trk_nTGCEtaHits = 0;
   trk_nTGCPhiHits = 0;
   trk_nHits = 0;
   trk_nHoles = 0;
   trk_hitPattern = 0;
   trk_TRTHighTHitsRatio = 0;
   trk_TRTHighTOutliersRatio = 0;
   trk_pixeldEdx = 0;
   trk_nGoodHitsPixeldEdx = 0;
   trk_massPixeldEdx = 0;
   trk_likelihoodsPixeldEdx = 0;
   trk_fitter = 0;
   trk_patternReco1 = 0;
   trk_patternReco2 = 0;
   trk_trackProperties = 0;
   trk_particleHypothesis = 0;
   trk_blayerPrediction_x = 0;
   trk_blayerPrediction_y = 0;
   trk_blayerPrediction_z = 0;
   trk_blayerPrediction_locX = 0;
   trk_blayerPrediction_locY = 0;
   trk_blayerPrediction_err_locX = 0;
   trk_blayerPrediction_err_locY = 0;
   trk_blayerPrediction_etaDistToEdge = 0;
   trk_blayerPrediction_phiDistToEdge = 0;
   trk_blayerPrediction_detElementId = 0;
   trk_blayerPrediction_row = 0;
   trk_blayerPrediction_col = 0;
   trk_blayerPrediction_type = 0;
   trk_mc_probability = 0;
   trk_mc_barcode = 0;
   trk_mc_index = 0;
   ItrEMBkgrlayer_CaloBkgrEt = 0;
   ItrEMBkgrlayer_CaloBkgrRMS = 0;
   ItrEMBkgrlayer_CaloBkgrCounts = 0;
   ItrEMBkgrlayer_CaloBkgrEta = 0;
   ItrSeedJets_E = 0;
   ItrSeedJets_Et = 0;
   ItrSeedJets_pt = 0;
   ItrSeedJets_m = 0;
   ItrSeedJets_eta = 0;
   ItrSeedJets_phi = 0;
   antikt4Track_E = 0;
   antikt4Track_pt = 0;
   antikt4Track_m = 0;
   antikt4Track_eta = 0;
   antikt4Track_phi = 0;
   antikt4Track_const_n = 0;
   antikt4Track_const_pt = 0;
   antikt4Track_const_eta = 0;
   antikt4Track_const_phi = 0;
   antikt4Track_const_chi2 = 0;
   antikt4Track_const_d0_wrtPV = 0;
   antikt4Track_const_z0_wrtPV = 0;
   antikt4Track_const_phi0_wrtPV = 0;
   antikt4Track_const_theta_wrtPV = 0;
   antikt4Track_const_qop = 0;
   antikt4Track_const_ndof = 0;
   antikt4Track_const_nBLayerHits = 0;
   antikt4Track_const_nPixelHits = 0;
   antikt4Track_const_nSCTHits = 0;
   antikt4Track_const_nTRTHits = 0;
   antikt2HIItrEM_E = 0;
   antikt2HIItrEM_Et = 0;
   antikt2HIItrEM_pt = 0;
   antikt2HIItrEM_m = 0;
   antikt2HIItrEM_eta = 0;
   antikt2HIItrEM_phi = 0;
   antikt2HIItrEM_SubtractedEt = 0;
   antikt2HIItrEM_NoFlow = 0;
   antikt2HIItrEM_UncalibEt = 0;
   antikt2HIItrEM_PassedFR = 0;
   antikt2HIItrEM_const_n = 0;
   antikt2HIItrEM_const_et = 0;
   antikt2HIItrEM_const_eta = 0;
   antikt2HIItrEM_const_phi = 0;
   antikt2HIItrEM_sampling_et = 0;
   antikt2HIItrEM_sampling_et_unsubtr = 0;
   antikt2HIItrEM_bad_cell_n = 0;
   antikt2HIItrEM_bad_cell_et = 0;
   antikt2HIItrEM_bad_cell_area = 0;
   antikt2HIItrEM_empty_cell_n = 0;
   antikt2HIItrEM_empty_cell_et = 0;
   antikt2HIItrEM_empty_cell_area = 0;
   antikt2HIItrEM_total_cell_n = 0;
   antikt2HIItrEM_total_cell_et = 0;
   antikt2HIItrEM_total_cell_area = 0;
   antikt2HIItrEM_n90 = 0;
   antikt2HIItrEM_fracSamplingMax = 0;
   antikt2HIItrEM_SamplingMax = 0;
   antikt2HIItrEM_n90constituents = 0;
   antikt2HIItrEM_Timing = 0;
   antikt2HIItrEM_LArQuality = 0;
   antikt2HIItrEM_HECQuality = 0;
   antikt2HIItrEM_TileQuality = 0;
   antikt2HIItrEM_NegativeE = 0;
   antikt2HIItrEM_AverageLArQF = 0;
   antikt2HIItrEM_sumPtTrk = 0;
   antikt2HIItrEM_BCH_CORR_CELL = 0;
   antikt2HIItrEM_BCH_CORR_DOTX = 0;
   antikt2HIItrEM_BCH_CORR_JET = 0;
   antikt2HIItrEM_BCH_CORR_JET_FORCELL = 0;
   antikt2HIItrEM_ENG_BAD_CELLS = 0;
   antikt2HIItrEM_N_BAD_CELLS = 0;
   antikt2HIItrEM_N_BAD_CELLS_CORR = 0;
   antikt2HIItrEM_BAD_CELLS_CORR_E = 0;
   antikt2HIItrEM_emfrac = 0;
   antikt2HIItrEM_hecf = 0;
   antikt2HIItrEM_tgap3f = 0;
   antikt2HIItrEM_isUgly = 0;
   antikt2HIItrEM_isBadLooseMinus = 0;
   antikt2HIItrEM_isBadLoose = 0;
   antikt2HIItrEM_isBadMedium = 0;
   antikt2HIItrEM_isBadTight = 0;
   antikt2HIItrEM_jvtx_x = 0;
   antikt2HIItrEM_jvtx_y = 0;
   antikt2HIItrEM_jvtx_z = 0;
   antikt2HIItrEM_jvtxf = 0;
   antikt2HIItrEM_flavor_weight_Comb = 0;
   antikt2HIItrEM_flavor_weight_IP2D = 0;
   antikt2HIItrEM_flavor_weight_IP3D = 0;
   antikt2HIItrEM_flavor_weight_SV0 = 0;
   antikt2HIItrEM_flavor_weight_SV1 = 0;
   antikt2HIItrEM_flavor_weight_SV2 = 0;
   antikt2HIItrEM_flavor_weight_SoftMuonTagChi2 = 0;
   antikt2HIItrEM_flavor_weight_SecondSoftMuonTagChi2 = 0;
   antikt2HIItrEM_flavor_weight_JetFitterTagNN = 0;
   antikt2HIItrEM_flavor_weight_JetFitterCOMBNN = 0;
   antikt2HIItrEM_flavor_weight_MV1 = 0;
   antikt2HIItrEM_flavor_weight_MV2 = 0;
   antikt2HIItrEM_flavor_weight_GbbNN = 0;
   antikt2HIItrEM_flavor_truth_label = 0;
   antikt2HIItrEM_flavor_truth_dRminToB = 0;
   antikt2HIItrEM_flavor_truth_dRminToC = 0;
   antikt2HIItrEM_flavor_truth_dRminToT = 0;
   antikt2HIItrEM_flavor_truth_BHadronpdg = 0;
   antikt2HIItrEM_flavor_truth_vx_x = 0;
   antikt2HIItrEM_flavor_truth_vx_y = 0;
   antikt2HIItrEM_flavor_truth_vx_z = 0;
   antikt2HIItrEM_flavor_component_assoctrk_signOfIP = 0;
   antikt2HIItrEM_flavor_component_assoctrk_signOfZIP = 0;
   antikt2HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx = 0;
   antikt2HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx = 0;
   antikt2HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx = 0;
   antikt2HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx = 0;
   antikt2HIItrEM_flavor_component_gentruthlepton_origin = 0;
   antikt2HIItrEM_flavor_component_gentruthlepton_slbarcode = 0;
   antikt2HIItrEM_flavor_component_ip2d_pu = 0;
   antikt2HIItrEM_flavor_component_ip2d_pb = 0;
   antikt2HIItrEM_flavor_component_ip2d_isValid = 0;
   antikt2HIItrEM_flavor_component_ip2d_ntrk = 0;
   antikt2HIItrEM_flavor_component_ip3d_pu = 0;
   antikt2HIItrEM_flavor_component_ip3d_pb = 0;
   antikt2HIItrEM_flavor_component_ip3d_isValid = 0;
   antikt2HIItrEM_flavor_component_ip3d_ntrk = 0;
   antikt2HIItrEM_flavor_component_jetprob_ntrk = 0;
   antikt2HIItrEM_flavor_component_sv1_pu = 0;
   antikt2HIItrEM_flavor_component_sv1_pb = 0;
   antikt2HIItrEM_flavor_component_sv1_isValid = 0;
   antikt2HIItrEM_flavor_component_sv2_pu = 0;
   antikt2HIItrEM_flavor_component_sv2_pb = 0;
   antikt2HIItrEM_flavor_component_sv2_isValid = 0;
   antikt2HIItrEM_flavor_component_jfit_pu = 0;
   antikt2HIItrEM_flavor_component_jfit_pb = 0;
   antikt2HIItrEM_flavor_component_jfit_pc = 0;
   antikt2HIItrEM_flavor_component_jfit_isValid = 0;
   antikt2HIItrEM_flavor_component_jfitcomb_pu = 0;
   antikt2HIItrEM_flavor_component_jfitcomb_pb = 0;
   antikt2HIItrEM_flavor_component_jfitcomb_pc = 0;
   antikt2HIItrEM_flavor_component_jfitcomb_isValid = 0;
   antikt2HIItrEM_flavor_component_gbbnn_nMatchingTracks = 0;
   antikt2HIItrEM_flavor_component_gbbnn_trkJetWidth = 0;
   antikt2HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR = 0;
   antikt2HIItrEM_flavor_component_jfit_nvtx = 0;
   antikt2HIItrEM_flavor_component_jfit_nvtx1t = 0;
   antikt2HIItrEM_flavor_component_jfit_ntrkAtVx = 0;
   antikt2HIItrEM_flavor_component_jfit_efrc = 0;
   antikt2HIItrEM_flavor_component_jfit_mass = 0;
   antikt2HIItrEM_flavor_component_jfit_sig3d = 0;
   antikt2HIItrEM_flavor_component_jfit_deltaPhi = 0;
   antikt2HIItrEM_flavor_component_jfit_deltaEta = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_d0val = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_d0sig = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_z0val = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_z0sig = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_w2D = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_w3D = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_pJP = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_pJPneg = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_grade = 0;
   antikt2HIItrEM_flavor_component_ipplus_trk_isFromV0 = 0;
   antikt2HIItrEM_flavor_component_svp_isValid = 0;
   antikt2HIItrEM_flavor_component_svp_ntrkv = 0;
   antikt2HIItrEM_flavor_component_svp_ntrkj = 0;
   antikt2HIItrEM_flavor_component_svp_n2t = 0;
   antikt2HIItrEM_flavor_component_svp_mass = 0;
   antikt2HIItrEM_flavor_component_svp_efrc = 0;
   antikt2HIItrEM_flavor_component_svp_x = 0;
   antikt2HIItrEM_flavor_component_svp_y = 0;
   antikt2HIItrEM_flavor_component_svp_z = 0;
   antikt2HIItrEM_flavor_component_svp_err_x = 0;
   antikt2HIItrEM_flavor_component_svp_err_y = 0;
   antikt2HIItrEM_flavor_component_svp_err_z = 0;
   antikt2HIItrEM_flavor_component_svp_cov_xy = 0;
   antikt2HIItrEM_flavor_component_svp_cov_xz = 0;
   antikt2HIItrEM_flavor_component_svp_cov_yz = 0;
   antikt2HIItrEM_flavor_component_svp_chi2 = 0;
   antikt2HIItrEM_flavor_component_svp_ndof = 0;
   antikt2HIItrEM_flavor_component_svp_ntrk = 0;
   antikt2HIItrEM_flavor_component_sv0p_isValid = 0;
   antikt2HIItrEM_flavor_component_sv0p_ntrkv = 0;
   antikt2HIItrEM_flavor_component_sv0p_ntrkj = 0;
   antikt2HIItrEM_flavor_component_sv0p_n2t = 0;
   antikt2HIItrEM_flavor_component_sv0p_mass = 0;
   antikt2HIItrEM_flavor_component_sv0p_efrc = 0;
   antikt2HIItrEM_flavor_component_sv0p_x = 0;
   antikt2HIItrEM_flavor_component_sv0p_y = 0;
   antikt2HIItrEM_flavor_component_sv0p_z = 0;
   antikt2HIItrEM_flavor_component_sv0p_err_x = 0;
   antikt2HIItrEM_flavor_component_sv0p_err_y = 0;
   antikt2HIItrEM_flavor_component_sv0p_err_z = 0;
   antikt2HIItrEM_flavor_component_sv0p_cov_xy = 0;
   antikt2HIItrEM_flavor_component_sv0p_cov_xz = 0;
   antikt2HIItrEM_flavor_component_sv0p_cov_yz = 0;
   antikt2HIItrEM_flavor_component_sv0p_chi2 = 0;
   antikt2HIItrEM_flavor_component_sv0p_ndof = 0;
   antikt2HIItrEM_flavor_component_sv0p_ntrk = 0;
   antikt2HIItrEM_flavor_component_softmuoninfo_muon_w = 0;
   antikt2HIItrEM_flavor_component_softmuoninfo_muon_pTRel = 0;
   antikt2HIItrEM_flavor_component_softmuoninfo_muon_dRJet = 0;
   antikt2HIItrEM_flavor_component_softmuon2info_muon2_w = 0;
   antikt2HIItrEM_flavor_component_softmuon2info_muon2_pTRel = 0;
   antikt2HIItrEM_flavor_component_softmuon2info_muon2_dRJet = 0;
   antikt2HIItrEM_flavor_component_softmuonchi2info_muon_w = 0;
   antikt2HIItrEM_flavor_component_softmuonchi2info_muon_pTRel = 0;
   antikt2HIItrEM_flavor_component_softmuonchi2info_muon_dRJet = 0;
   antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_w = 0;
   antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel = 0;
   antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet = 0;
   antikt2HIItrEM_flavor_component_msvp_isValid = 0;
   antikt2HIItrEM_flavor_component_msvp_ntrkv = 0;
   antikt2HIItrEM_flavor_component_msvp_ntrkj = 0;
   antikt2HIItrEM_flavor_component_msvp_n2t = 0;
   antikt2HIItrEM_flavor_component_msvp_nVtx = 0;
   antikt2HIItrEM_flavor_component_msvp_normWeightedDist = 0;
   antikt3HIItrEM_E = 0;
   antikt3HIItrEM_Et = 0;
   antikt3HIItrEM_pt = 0;
   antikt3HIItrEM_m = 0;
   antikt3HIItrEM_eta = 0;
   antikt3HIItrEM_phi = 0;
   antikt3HIItrEM_SubtractedEt = 0;
   antikt3HIItrEM_NoFlow = 0;
   antikt3HIItrEM_UncalibEt = 0;
   antikt3HIItrEM_PassedFR = 0;
   antikt3HIItrEM_const_n = 0;
   antikt3HIItrEM_const_et = 0;
   antikt3HIItrEM_const_eta = 0;
   antikt3HIItrEM_const_phi = 0;
   antikt3HIItrEM_sampling_et = 0;
   antikt3HIItrEM_sampling_et_unsubtr = 0;
   antikt3HIItrEM_bad_cell_n = 0;
   antikt3HIItrEM_bad_cell_et = 0;
   antikt3HIItrEM_bad_cell_area = 0;
   antikt3HIItrEM_empty_cell_n = 0;
   antikt3HIItrEM_empty_cell_et = 0;
   antikt3HIItrEM_empty_cell_area = 0;
   antikt3HIItrEM_total_cell_n = 0;
   antikt3HIItrEM_total_cell_et = 0;
   antikt3HIItrEM_total_cell_area = 0;
   antikt3HIItrEM_n90 = 0;
   antikt3HIItrEM_fracSamplingMax = 0;
   antikt3HIItrEM_SamplingMax = 0;
   antikt3HIItrEM_n90constituents = 0;
   antikt3HIItrEM_Timing = 0;
   antikt3HIItrEM_LArQuality = 0;
   antikt3HIItrEM_HECQuality = 0;
   antikt3HIItrEM_TileQuality = 0;
   antikt3HIItrEM_NegativeE = 0;
   antikt3HIItrEM_AverageLArQF = 0;
   antikt3HIItrEM_sumPtTrk = 0;
   antikt3HIItrEM_BCH_CORR_CELL = 0;
   antikt3HIItrEM_BCH_CORR_DOTX = 0;
   antikt3HIItrEM_BCH_CORR_JET = 0;
   antikt3HIItrEM_BCH_CORR_JET_FORCELL = 0;
   antikt3HIItrEM_ENG_BAD_CELLS = 0;
   antikt3HIItrEM_N_BAD_CELLS = 0;
   antikt3HIItrEM_N_BAD_CELLS_CORR = 0;
   antikt3HIItrEM_BAD_CELLS_CORR_E = 0;
   antikt3HIItrEM_emfrac = 0;
   antikt3HIItrEM_hecf = 0;
   antikt3HIItrEM_tgap3f = 0;
   antikt3HIItrEM_isUgly = 0;
   antikt3HIItrEM_isBadLooseMinus = 0;
   antikt3HIItrEM_isBadLoose = 0;
   antikt3HIItrEM_isBadMedium = 0;
   antikt3HIItrEM_isBadTight = 0;
   antikt3HIItrEM_jvtx_x = 0;
   antikt3HIItrEM_jvtx_y = 0;
   antikt3HIItrEM_jvtx_z = 0;
   antikt3HIItrEM_jvtxf = 0;
   antikt3HIItrEM_flavor_weight_Comb = 0;
   antikt3HIItrEM_flavor_weight_IP2D = 0;
   antikt3HIItrEM_flavor_weight_IP3D = 0;
   antikt3HIItrEM_flavor_weight_SV0 = 0;
   antikt3HIItrEM_flavor_weight_SV1 = 0;
   antikt3HIItrEM_flavor_weight_SV2 = 0;
   antikt3HIItrEM_flavor_weight_SoftMuonTagChi2 = 0;
   antikt3HIItrEM_flavor_weight_SecondSoftMuonTagChi2 = 0;
   antikt3HIItrEM_flavor_weight_JetFitterTagNN = 0;
   antikt3HIItrEM_flavor_weight_JetFitterCOMBNN = 0;
   antikt3HIItrEM_flavor_weight_MV1 = 0;
   antikt3HIItrEM_flavor_weight_MV2 = 0;
   antikt3HIItrEM_flavor_weight_GbbNN = 0;
   antikt3HIItrEM_flavor_truth_label = 0;
   antikt3HIItrEM_flavor_truth_dRminToB = 0;
   antikt3HIItrEM_flavor_truth_dRminToC = 0;
   antikt3HIItrEM_flavor_truth_dRminToT = 0;
   antikt3HIItrEM_flavor_truth_BHadronpdg = 0;
   antikt3HIItrEM_flavor_truth_vx_x = 0;
   antikt3HIItrEM_flavor_truth_vx_y = 0;
   antikt3HIItrEM_flavor_truth_vx_z = 0;
   antikt3HIItrEM_flavor_component_assoctrk_signOfIP = 0;
   antikt3HIItrEM_flavor_component_assoctrk_signOfZIP = 0;
   antikt3HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx = 0;
   antikt3HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx = 0;
   antikt3HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx = 0;
   antikt3HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx = 0;
   antikt3HIItrEM_flavor_component_gentruthlepton_origin = 0;
   antikt3HIItrEM_flavor_component_gentruthlepton_slbarcode = 0;
   antikt3HIItrEM_flavor_component_ip2d_pu = 0;
   antikt3HIItrEM_flavor_component_ip2d_pb = 0;
   antikt3HIItrEM_flavor_component_ip2d_isValid = 0;
   antikt3HIItrEM_flavor_component_ip2d_ntrk = 0;
   antikt3HIItrEM_flavor_component_ip3d_pu = 0;
   antikt3HIItrEM_flavor_component_ip3d_pb = 0;
   antikt3HIItrEM_flavor_component_ip3d_isValid = 0;
   antikt3HIItrEM_flavor_component_ip3d_ntrk = 0;
   antikt3HIItrEM_flavor_component_jetprob_ntrk = 0;
   antikt3HIItrEM_flavor_component_sv1_pu = 0;
   antikt3HIItrEM_flavor_component_sv1_pb = 0;
   antikt3HIItrEM_flavor_component_sv1_isValid = 0;
   antikt3HIItrEM_flavor_component_sv2_pu = 0;
   antikt3HIItrEM_flavor_component_sv2_pb = 0;
   antikt3HIItrEM_flavor_component_sv2_isValid = 0;
   antikt3HIItrEM_flavor_component_jfit_pu = 0;
   antikt3HIItrEM_flavor_component_jfit_pb = 0;
   antikt3HIItrEM_flavor_component_jfit_pc = 0;
   antikt3HIItrEM_flavor_component_jfit_isValid = 0;
   antikt3HIItrEM_flavor_component_jfitcomb_pu = 0;
   antikt3HIItrEM_flavor_component_jfitcomb_pb = 0;
   antikt3HIItrEM_flavor_component_jfitcomb_pc = 0;
   antikt3HIItrEM_flavor_component_jfitcomb_isValid = 0;
   antikt3HIItrEM_flavor_component_gbbnn_nMatchingTracks = 0;
   antikt3HIItrEM_flavor_component_gbbnn_trkJetWidth = 0;
   antikt3HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR = 0;
   antikt3HIItrEM_flavor_component_jfit_nvtx = 0;
   antikt3HIItrEM_flavor_component_jfit_nvtx1t = 0;
   antikt3HIItrEM_flavor_component_jfit_ntrkAtVx = 0;
   antikt3HIItrEM_flavor_component_jfit_efrc = 0;
   antikt3HIItrEM_flavor_component_jfit_mass = 0;
   antikt3HIItrEM_flavor_component_jfit_sig3d = 0;
   antikt3HIItrEM_flavor_component_jfit_deltaPhi = 0;
   antikt3HIItrEM_flavor_component_jfit_deltaEta = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_d0val = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_d0sig = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_z0val = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_z0sig = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_w2D = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_w3D = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_pJP = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_pJPneg = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_grade = 0;
   antikt3HIItrEM_flavor_component_ipplus_trk_isFromV0 = 0;
   antikt3HIItrEM_flavor_component_svp_isValid = 0;
   antikt3HIItrEM_flavor_component_svp_ntrkv = 0;
   antikt3HIItrEM_flavor_component_svp_ntrkj = 0;
   antikt3HIItrEM_flavor_component_svp_n2t = 0;
   antikt3HIItrEM_flavor_component_svp_mass = 0;
   antikt3HIItrEM_flavor_component_svp_efrc = 0;
   antikt3HIItrEM_flavor_component_svp_x = 0;
   antikt3HIItrEM_flavor_component_svp_y = 0;
   antikt3HIItrEM_flavor_component_svp_z = 0;
   antikt3HIItrEM_flavor_component_svp_err_x = 0;
   antikt3HIItrEM_flavor_component_svp_err_y = 0;
   antikt3HIItrEM_flavor_component_svp_err_z = 0;
   antikt3HIItrEM_flavor_component_svp_cov_xy = 0;
   antikt3HIItrEM_flavor_component_svp_cov_xz = 0;
   antikt3HIItrEM_flavor_component_svp_cov_yz = 0;
   antikt3HIItrEM_flavor_component_svp_chi2 = 0;
   antikt3HIItrEM_flavor_component_svp_ndof = 0;
   antikt3HIItrEM_flavor_component_svp_ntrk = 0;
   antikt3HIItrEM_flavor_component_sv0p_isValid = 0;
   antikt3HIItrEM_flavor_component_sv0p_ntrkv = 0;
   antikt3HIItrEM_flavor_component_sv0p_ntrkj = 0;
   antikt3HIItrEM_flavor_component_sv0p_n2t = 0;
   antikt3HIItrEM_flavor_component_sv0p_mass = 0;
   antikt3HIItrEM_flavor_component_sv0p_efrc = 0;
   antikt3HIItrEM_flavor_component_sv0p_x = 0;
   antikt3HIItrEM_flavor_component_sv0p_y = 0;
   antikt3HIItrEM_flavor_component_sv0p_z = 0;
   antikt3HIItrEM_flavor_component_sv0p_err_x = 0;
   antikt3HIItrEM_flavor_component_sv0p_err_y = 0;
   antikt3HIItrEM_flavor_component_sv0p_err_z = 0;
   antikt3HIItrEM_flavor_component_sv0p_cov_xy = 0;
   antikt3HIItrEM_flavor_component_sv0p_cov_xz = 0;
   antikt3HIItrEM_flavor_component_sv0p_cov_yz = 0;
   antikt3HIItrEM_flavor_component_sv0p_chi2 = 0;
   antikt3HIItrEM_flavor_component_sv0p_ndof = 0;
   antikt3HIItrEM_flavor_component_sv0p_ntrk = 0;
   antikt3HIItrEM_flavor_component_softmuoninfo_muon_w = 0;
   antikt3HIItrEM_flavor_component_softmuoninfo_muon_pTRel = 0;
   antikt3HIItrEM_flavor_component_softmuoninfo_muon_dRJet = 0;
   antikt3HIItrEM_flavor_component_softmuon2info_muon2_w = 0;
   antikt3HIItrEM_flavor_component_softmuon2info_muon2_pTRel = 0;
   antikt3HIItrEM_flavor_component_softmuon2info_muon2_dRJet = 0;
   antikt3HIItrEM_flavor_component_softmuonchi2info_muon_w = 0;
   antikt3HIItrEM_flavor_component_softmuonchi2info_muon_pTRel = 0;
   antikt3HIItrEM_flavor_component_softmuonchi2info_muon_dRJet = 0;
   antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_w = 0;
   antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel = 0;
   antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet = 0;
   antikt3HIItrEM_flavor_component_msvp_isValid = 0;
   antikt3HIItrEM_flavor_component_msvp_ntrkv = 0;
   antikt3HIItrEM_flavor_component_msvp_ntrkj = 0;
   antikt3HIItrEM_flavor_component_msvp_n2t = 0;
   antikt3HIItrEM_flavor_component_msvp_nVtx = 0;
   antikt3HIItrEM_flavor_component_msvp_normWeightedDist = 0;
   antikt4HIItrEM_E = 0;
   antikt4HIItrEM_Et = 0;
   antikt4HIItrEM_pt = 0;
   antikt4HIItrEM_m = 0;
   antikt4HIItrEM_eta = 0;
   antikt4HIItrEM_phi = 0;
   antikt4HIItrEM_SubtractedEt = 0;
   antikt4HIItrEM_NoFlow = 0;
   antikt4HIItrEM_UncalibEt = 0;
   antikt4HIItrEM_PassedFR = 0;
   antikt4HIItrEM_const_n = 0;
   antikt4HIItrEM_const_et = 0;
   antikt4HIItrEM_const_eta = 0;
   antikt4HIItrEM_const_phi = 0;
   antikt4HIItrEM_sampling_et = 0;
   antikt4HIItrEM_sampling_et_unsubtr = 0;
   antikt4HIItrEM_bad_cell_n = 0;
   antikt4HIItrEM_bad_cell_et = 0;
   antikt4HIItrEM_bad_cell_area = 0;
   antikt4HIItrEM_empty_cell_n = 0;
   antikt4HIItrEM_empty_cell_et = 0;
   antikt4HIItrEM_empty_cell_area = 0;
   antikt4HIItrEM_total_cell_n = 0;
   antikt4HIItrEM_total_cell_et = 0;
   antikt4HIItrEM_total_cell_area = 0;
   antikt4HIItrEM_n90 = 0;
   antikt4HIItrEM_fracSamplingMax = 0;
   antikt4HIItrEM_SamplingMax = 0;
   antikt4HIItrEM_n90constituents = 0;
   antikt4HIItrEM_Timing = 0;
   antikt4HIItrEM_LArQuality = 0;
   antikt4HIItrEM_HECQuality = 0;
   antikt4HIItrEM_TileQuality = 0;
   antikt4HIItrEM_NegativeE = 0;
   antikt4HIItrEM_AverageLArQF = 0;
   antikt4HIItrEM_sumPtTrk = 0;
   antikt4HIItrEM_BCH_CORR_CELL = 0;
   antikt4HIItrEM_BCH_CORR_DOTX = 0;
   antikt4HIItrEM_BCH_CORR_JET = 0;
   antikt4HIItrEM_BCH_CORR_JET_FORCELL = 0;
   antikt4HIItrEM_ENG_BAD_CELLS = 0;
   antikt4HIItrEM_N_BAD_CELLS = 0;
   antikt4HIItrEM_N_BAD_CELLS_CORR = 0;
   antikt4HIItrEM_BAD_CELLS_CORR_E = 0;
   antikt4HIItrEM_emfrac = 0;
   antikt4HIItrEM_hecf = 0;
   antikt4HIItrEM_tgap3f = 0;
   antikt4HIItrEM_isUgly = 0;
   antikt4HIItrEM_isBadLooseMinus = 0;
   antikt4HIItrEM_isBadLoose = 0;
   antikt4HIItrEM_isBadMedium = 0;
   antikt4HIItrEM_isBadTight = 0;
   antikt4HIItrEM_jvtx_x = 0;
   antikt4HIItrEM_jvtx_y = 0;
   antikt4HIItrEM_jvtx_z = 0;
   antikt4HIItrEM_jvtxf = 0;
   antikt4HIItrEM_flavor_weight_Comb = 0;
   antikt4HIItrEM_flavor_weight_IP2D = 0;
   antikt4HIItrEM_flavor_weight_IP3D = 0;
   antikt4HIItrEM_flavor_weight_SV0 = 0;
   antikt4HIItrEM_flavor_weight_SV1 = 0;
   antikt4HIItrEM_flavor_weight_SV2 = 0;
   antikt4HIItrEM_flavor_weight_SoftMuonTagChi2 = 0;
   antikt4HIItrEM_flavor_weight_SecondSoftMuonTagChi2 = 0;
   antikt4HIItrEM_flavor_weight_JetFitterTagNN = 0;
   antikt4HIItrEM_flavor_weight_JetFitterCOMBNN = 0;
   antikt4HIItrEM_flavor_weight_MV1 = 0;
   antikt4HIItrEM_flavor_weight_MV2 = 0;
   antikt4HIItrEM_flavor_weight_GbbNN = 0;
   antikt4HIItrEM_flavor_truth_label = 0;
   antikt4HIItrEM_flavor_truth_dRminToB = 0;
   antikt4HIItrEM_flavor_truth_dRminToC = 0;
   antikt4HIItrEM_flavor_truth_dRminToT = 0;
   antikt4HIItrEM_flavor_truth_BHadronpdg = 0;
   antikt4HIItrEM_flavor_truth_vx_x = 0;
   antikt4HIItrEM_flavor_truth_vx_y = 0;
   antikt4HIItrEM_flavor_truth_vx_z = 0;
   antikt4HIItrEM_flavor_component_assoctrk_signOfIP = 0;
   antikt4HIItrEM_flavor_component_assoctrk_signOfZIP = 0;
   antikt4HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx = 0;
   antikt4HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx = 0;
   antikt4HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx = 0;
   antikt4HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx = 0;
   antikt4HIItrEM_flavor_component_gentruthlepton_origin = 0;
   antikt4HIItrEM_flavor_component_gentruthlepton_slbarcode = 0;
   antikt4HIItrEM_flavor_component_ip2d_pu = 0;
   antikt4HIItrEM_flavor_component_ip2d_pb = 0;
   antikt4HIItrEM_flavor_component_ip2d_isValid = 0;
   antikt4HIItrEM_flavor_component_ip2d_ntrk = 0;
   antikt4HIItrEM_flavor_component_ip3d_pu = 0;
   antikt4HIItrEM_flavor_component_ip3d_pb = 0;
   antikt4HIItrEM_flavor_component_ip3d_isValid = 0;
   antikt4HIItrEM_flavor_component_ip3d_ntrk = 0;
   antikt4HIItrEM_flavor_component_jetprob_ntrk = 0;
   antikt4HIItrEM_flavor_component_sv1_pu = 0;
   antikt4HIItrEM_flavor_component_sv1_pb = 0;
   antikt4HIItrEM_flavor_component_sv1_isValid = 0;
   antikt4HIItrEM_flavor_component_sv2_pu = 0;
   antikt4HIItrEM_flavor_component_sv2_pb = 0;
   antikt4HIItrEM_flavor_component_sv2_isValid = 0;
   antikt4HIItrEM_flavor_component_jfit_pu = 0;
   antikt4HIItrEM_flavor_component_jfit_pb = 0;
   antikt4HIItrEM_flavor_component_jfit_pc = 0;
   antikt4HIItrEM_flavor_component_jfit_isValid = 0;
   antikt4HIItrEM_flavor_component_jfitcomb_pu = 0;
   antikt4HIItrEM_flavor_component_jfitcomb_pb = 0;
   antikt4HIItrEM_flavor_component_jfitcomb_pc = 0;
   antikt4HIItrEM_flavor_component_jfitcomb_isValid = 0;
   antikt4HIItrEM_flavor_component_gbbnn_nMatchingTracks = 0;
   antikt4HIItrEM_flavor_component_gbbnn_trkJetWidth = 0;
   antikt4HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR = 0;
   antikt4HIItrEM_flavor_component_jfit_nvtx = 0;
   antikt4HIItrEM_flavor_component_jfit_nvtx1t = 0;
   antikt4HIItrEM_flavor_component_jfit_ntrkAtVx = 0;
   antikt4HIItrEM_flavor_component_jfit_efrc = 0;
   antikt4HIItrEM_flavor_component_jfit_mass = 0;
   antikt4HIItrEM_flavor_component_jfit_sig3d = 0;
   antikt4HIItrEM_flavor_component_jfit_deltaPhi = 0;
   antikt4HIItrEM_flavor_component_jfit_deltaEta = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_d0val = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_d0sig = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_z0val = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_z0sig = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_w2D = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_w3D = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_pJP = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_pJPneg = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_grade = 0;
   antikt4HIItrEM_flavor_component_ipplus_trk_isFromV0 = 0;
   antikt4HIItrEM_flavor_component_svp_isValid = 0;
   antikt4HIItrEM_flavor_component_svp_ntrkv = 0;
   antikt4HIItrEM_flavor_component_svp_ntrkj = 0;
   antikt4HIItrEM_flavor_component_svp_n2t = 0;
   antikt4HIItrEM_flavor_component_svp_mass = 0;
   antikt4HIItrEM_flavor_component_svp_efrc = 0;
   antikt4HIItrEM_flavor_component_svp_x = 0;
   antikt4HIItrEM_flavor_component_svp_y = 0;
   antikt4HIItrEM_flavor_component_svp_z = 0;
   antikt4HIItrEM_flavor_component_svp_err_x = 0;
   antikt4HIItrEM_flavor_component_svp_err_y = 0;
   antikt4HIItrEM_flavor_component_svp_err_z = 0;
   antikt4HIItrEM_flavor_component_svp_cov_xy = 0;
   antikt4HIItrEM_flavor_component_svp_cov_xz = 0;
   antikt4HIItrEM_flavor_component_svp_cov_yz = 0;
   antikt4HIItrEM_flavor_component_svp_chi2 = 0;
   antikt4HIItrEM_flavor_component_svp_ndof = 0;
   antikt4HIItrEM_flavor_component_svp_ntrk = 0;
   antikt4HIItrEM_flavor_component_sv0p_isValid = 0;
   antikt4HIItrEM_flavor_component_sv0p_ntrkv = 0;
   antikt4HIItrEM_flavor_component_sv0p_ntrkj = 0;
   antikt4HIItrEM_flavor_component_sv0p_n2t = 0;
   antikt4HIItrEM_flavor_component_sv0p_mass = 0;
   antikt4HIItrEM_flavor_component_sv0p_efrc = 0;
   antikt4HIItrEM_flavor_component_sv0p_x = 0;
   antikt4HIItrEM_flavor_component_sv0p_y = 0;
   antikt4HIItrEM_flavor_component_sv0p_z = 0;
   antikt4HIItrEM_flavor_component_sv0p_err_x = 0;
   antikt4HIItrEM_flavor_component_sv0p_err_y = 0;
   antikt4HIItrEM_flavor_component_sv0p_err_z = 0;
   antikt4HIItrEM_flavor_component_sv0p_cov_xy = 0;
   antikt4HIItrEM_flavor_component_sv0p_cov_xz = 0;
   antikt4HIItrEM_flavor_component_sv0p_cov_yz = 0;
   antikt4HIItrEM_flavor_component_sv0p_chi2 = 0;
   antikt4HIItrEM_flavor_component_sv0p_ndof = 0;
   antikt4HIItrEM_flavor_component_sv0p_ntrk = 0;
   antikt4HIItrEM_flavor_component_softmuoninfo_muon_w = 0;
   antikt4HIItrEM_flavor_component_softmuoninfo_muon_pTRel = 0;
   antikt4HIItrEM_flavor_component_softmuoninfo_muon_dRJet = 0;
   antikt4HIItrEM_flavor_component_softmuon2info_muon2_w = 0;
   antikt4HIItrEM_flavor_component_softmuon2info_muon2_pTRel = 0;
   antikt4HIItrEM_flavor_component_softmuon2info_muon2_dRJet = 0;
   antikt4HIItrEM_flavor_component_softmuonchi2info_muon_w = 0;
   antikt4HIItrEM_flavor_component_softmuonchi2info_muon_pTRel = 0;
   antikt4HIItrEM_flavor_component_softmuonchi2info_muon_dRJet = 0;
   antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_w = 0;
   antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel = 0;
   antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet = 0;
   antikt4HIItrEM_flavor_component_msvp_isValid = 0;
   antikt4HIItrEM_flavor_component_msvp_ntrkv = 0;
   antikt4HIItrEM_flavor_component_msvp_ntrkj = 0;
   antikt4HIItrEM_flavor_component_msvp_n2t = 0;
   antikt4HIItrEM_flavor_component_msvp_nVtx = 0;
   antikt4HIItrEM_flavor_component_msvp_normWeightedDist = 0;
   antikt5HIItrEM_E = 0;
   antikt5HIItrEM_Et = 0;
   antikt5HIItrEM_pt = 0;
   antikt5HIItrEM_m = 0;
   antikt5HIItrEM_eta = 0;
   antikt5HIItrEM_phi = 0;
   antikt5HIItrEM_SubtractedEt = 0;
   antikt5HIItrEM_NoFlow = 0;
   antikt5HIItrEM_UncalibEt = 0;
   antikt5HIItrEM_PassedFR = 0;
   antikt5HIItrEM_const_n = 0;
   antikt5HIItrEM_const_et = 0;
   antikt5HIItrEM_const_eta = 0;
   antikt5HIItrEM_const_phi = 0;
   antikt5HIItrEM_sampling_et = 0;
   antikt5HIItrEM_sampling_et_unsubtr = 0;
   antikt5HIItrEM_bad_cell_n = 0;
   antikt5HIItrEM_bad_cell_et = 0;
   antikt5HIItrEM_bad_cell_area = 0;
   antikt5HIItrEM_empty_cell_n = 0;
   antikt5HIItrEM_empty_cell_et = 0;
   antikt5HIItrEM_empty_cell_area = 0;
   antikt5HIItrEM_total_cell_n = 0;
   antikt5HIItrEM_total_cell_et = 0;
   antikt5HIItrEM_total_cell_area = 0;
   antikt5HIItrEM_n90 = 0;
   antikt5HIItrEM_fracSamplingMax = 0;
   antikt5HIItrEM_SamplingMax = 0;
   antikt5HIItrEM_n90constituents = 0;
   antikt5HIItrEM_Timing = 0;
   antikt5HIItrEM_LArQuality = 0;
   antikt5HIItrEM_HECQuality = 0;
   antikt5HIItrEM_TileQuality = 0;
   antikt5HIItrEM_NegativeE = 0;
   antikt5HIItrEM_AverageLArQF = 0;
   antikt5HIItrEM_sumPtTrk = 0;
   antikt5HIItrEM_BCH_CORR_CELL = 0;
   antikt5HIItrEM_BCH_CORR_DOTX = 0;
   antikt5HIItrEM_BCH_CORR_JET = 0;
   antikt5HIItrEM_BCH_CORR_JET_FORCELL = 0;
   antikt5HIItrEM_ENG_BAD_CELLS = 0;
   antikt5HIItrEM_N_BAD_CELLS = 0;
   antikt5HIItrEM_N_BAD_CELLS_CORR = 0;
   antikt5HIItrEM_BAD_CELLS_CORR_E = 0;
   antikt5HIItrEM_emfrac = 0;
   antikt5HIItrEM_hecf = 0;
   antikt5HIItrEM_tgap3f = 0;
   antikt5HIItrEM_isUgly = 0;
   antikt5HIItrEM_isBadLooseMinus = 0;
   antikt5HIItrEM_isBadLoose = 0;
   antikt5HIItrEM_isBadMedium = 0;
   antikt5HIItrEM_isBadTight = 0;
   antikt5HIItrEM_jvtx_x = 0;
   antikt5HIItrEM_jvtx_y = 0;
   antikt5HIItrEM_jvtx_z = 0;
   antikt5HIItrEM_jvtxf = 0;
   antikt5HIItrEM_flavor_weight_Comb = 0;
   antikt5HIItrEM_flavor_weight_IP2D = 0;
   antikt5HIItrEM_flavor_weight_IP3D = 0;
   antikt5HIItrEM_flavor_weight_SV0 = 0;
   antikt5HIItrEM_flavor_weight_SV1 = 0;
   antikt5HIItrEM_flavor_weight_SV2 = 0;
   antikt5HIItrEM_flavor_weight_SoftMuonTagChi2 = 0;
   antikt5HIItrEM_flavor_weight_SecondSoftMuonTagChi2 = 0;
   antikt5HIItrEM_flavor_weight_JetFitterTagNN = 0;
   antikt5HIItrEM_flavor_weight_JetFitterCOMBNN = 0;
   antikt5HIItrEM_flavor_weight_MV1 = 0;
   antikt5HIItrEM_flavor_weight_MV2 = 0;
   antikt5HIItrEM_flavor_weight_GbbNN = 0;
   antikt5HIItrEM_flavor_truth_label = 0;
   antikt5HIItrEM_flavor_truth_dRminToB = 0;
   antikt5HIItrEM_flavor_truth_dRminToC = 0;
   antikt5HIItrEM_flavor_truth_dRminToT = 0;
   antikt5HIItrEM_flavor_truth_BHadronpdg = 0;
   antikt5HIItrEM_flavor_truth_vx_x = 0;
   antikt5HIItrEM_flavor_truth_vx_y = 0;
   antikt5HIItrEM_flavor_truth_vx_z = 0;
   antikt5HIItrEM_flavor_component_assoctrk_signOfIP = 0;
   antikt5HIItrEM_flavor_component_assoctrk_signOfZIP = 0;
   antikt5HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx = 0;
   antikt5HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx = 0;
   antikt5HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx = 0;
   antikt5HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx = 0;
   antikt5HIItrEM_flavor_component_gentruthlepton_origin = 0;
   antikt5HIItrEM_flavor_component_gentruthlepton_slbarcode = 0;
   antikt5HIItrEM_flavor_component_ip2d_pu = 0;
   antikt5HIItrEM_flavor_component_ip2d_pb = 0;
   antikt5HIItrEM_flavor_component_ip2d_isValid = 0;
   antikt5HIItrEM_flavor_component_ip2d_ntrk = 0;
   antikt5HIItrEM_flavor_component_ip3d_pu = 0;
   antikt5HIItrEM_flavor_component_ip3d_pb = 0;
   antikt5HIItrEM_flavor_component_ip3d_isValid = 0;
   antikt5HIItrEM_flavor_component_ip3d_ntrk = 0;
   antikt5HIItrEM_flavor_component_jetprob_ntrk = 0;
   antikt5HIItrEM_flavor_component_sv1_pu = 0;
   antikt5HIItrEM_flavor_component_sv1_pb = 0;
   antikt5HIItrEM_flavor_component_sv1_isValid = 0;
   antikt5HIItrEM_flavor_component_sv2_pu = 0;
   antikt5HIItrEM_flavor_component_sv2_pb = 0;
   antikt5HIItrEM_flavor_component_sv2_isValid = 0;
   antikt5HIItrEM_flavor_component_jfit_pu = 0;
   antikt5HIItrEM_flavor_component_jfit_pb = 0;
   antikt5HIItrEM_flavor_component_jfit_pc = 0;
   antikt5HIItrEM_flavor_component_jfit_isValid = 0;
   antikt5HIItrEM_flavor_component_jfitcomb_pu = 0;
   antikt5HIItrEM_flavor_component_jfitcomb_pb = 0;
   antikt5HIItrEM_flavor_component_jfitcomb_pc = 0;
   antikt5HIItrEM_flavor_component_jfitcomb_isValid = 0;
   antikt5HIItrEM_flavor_component_gbbnn_nMatchingTracks = 0;
   antikt5HIItrEM_flavor_component_gbbnn_trkJetWidth = 0;
   antikt5HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR = 0;
   antikt5HIItrEM_flavor_component_jfit_nvtx = 0;
   antikt5HIItrEM_flavor_component_jfit_nvtx1t = 0;
   antikt5HIItrEM_flavor_component_jfit_ntrkAtVx = 0;
   antikt5HIItrEM_flavor_component_jfit_efrc = 0;
   antikt5HIItrEM_flavor_component_jfit_mass = 0;
   antikt5HIItrEM_flavor_component_jfit_sig3d = 0;
   antikt5HIItrEM_flavor_component_jfit_deltaPhi = 0;
   antikt5HIItrEM_flavor_component_jfit_deltaEta = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_d0val = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_d0sig = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_z0val = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_z0sig = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_w2D = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_w3D = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_pJP = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_pJPneg = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_grade = 0;
   antikt5HIItrEM_flavor_component_ipplus_trk_isFromV0 = 0;
   antikt5HIItrEM_flavor_component_svp_isValid = 0;
   antikt5HIItrEM_flavor_component_svp_ntrkv = 0;
   antikt5HIItrEM_flavor_component_svp_ntrkj = 0;
   antikt5HIItrEM_flavor_component_svp_n2t = 0;
   antikt5HIItrEM_flavor_component_svp_mass = 0;
   antikt5HIItrEM_flavor_component_svp_efrc = 0;
   antikt5HIItrEM_flavor_component_svp_x = 0;
   antikt5HIItrEM_flavor_component_svp_y = 0;
   antikt5HIItrEM_flavor_component_svp_z = 0;
   antikt5HIItrEM_flavor_component_svp_err_x = 0;
   antikt5HIItrEM_flavor_component_svp_err_y = 0;
   antikt5HIItrEM_flavor_component_svp_err_z = 0;
   antikt5HIItrEM_flavor_component_svp_cov_xy = 0;
   antikt5HIItrEM_flavor_component_svp_cov_xz = 0;
   antikt5HIItrEM_flavor_component_svp_cov_yz = 0;
   antikt5HIItrEM_flavor_component_svp_chi2 = 0;
   antikt5HIItrEM_flavor_component_svp_ndof = 0;
   antikt5HIItrEM_flavor_component_svp_ntrk = 0;
   antikt5HIItrEM_flavor_component_sv0p_isValid = 0;
   antikt5HIItrEM_flavor_component_sv0p_ntrkv = 0;
   antikt5HIItrEM_flavor_component_sv0p_ntrkj = 0;
   antikt5HIItrEM_flavor_component_sv0p_n2t = 0;
   antikt5HIItrEM_flavor_component_sv0p_mass = 0;
   antikt5HIItrEM_flavor_component_sv0p_efrc = 0;
   antikt5HIItrEM_flavor_component_sv0p_x = 0;
   antikt5HIItrEM_flavor_component_sv0p_y = 0;
   antikt5HIItrEM_flavor_component_sv0p_z = 0;
   antikt5HIItrEM_flavor_component_sv0p_err_x = 0;
   antikt5HIItrEM_flavor_component_sv0p_err_y = 0;
   antikt5HIItrEM_flavor_component_sv0p_err_z = 0;
   antikt5HIItrEM_flavor_component_sv0p_cov_xy = 0;
   antikt5HIItrEM_flavor_component_sv0p_cov_xz = 0;
   antikt5HIItrEM_flavor_component_sv0p_cov_yz = 0;
   antikt5HIItrEM_flavor_component_sv0p_chi2 = 0;
   antikt5HIItrEM_flavor_component_sv0p_ndof = 0;
   antikt5HIItrEM_flavor_component_sv0p_ntrk = 0;
   antikt5HIItrEM_flavor_component_softmuoninfo_muon_w = 0;
   antikt5HIItrEM_flavor_component_softmuoninfo_muon_pTRel = 0;
   antikt5HIItrEM_flavor_component_softmuoninfo_muon_dRJet = 0;
   antikt5HIItrEM_flavor_component_softmuon2info_muon2_w = 0;
   antikt5HIItrEM_flavor_component_softmuon2info_muon2_pTRel = 0;
   antikt5HIItrEM_flavor_component_softmuon2info_muon2_dRJet = 0;
   antikt5HIItrEM_flavor_component_softmuonchi2info_muon_w = 0;
   antikt5HIItrEM_flavor_component_softmuonchi2info_muon_pTRel = 0;
   antikt5HIItrEM_flavor_component_softmuonchi2info_muon_dRJet = 0;
   antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_w = 0;
   antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel = 0;
   antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet = 0;
   antikt5HIItrEM_flavor_component_msvp_isValid = 0;
   antikt5HIItrEM_flavor_component_msvp_ntrkv = 0;
   antikt5HIItrEM_flavor_component_msvp_ntrkj = 0;
   antikt5HIItrEM_flavor_component_msvp_n2t = 0;
   antikt5HIItrEM_flavor_component_msvp_nVtx = 0;
   antikt5HIItrEM_flavor_component_msvp_normWeightedDist = 0;
   antikt6HIItrEM_E = 0;
   antikt6HIItrEM_Et = 0;
   antikt6HIItrEM_pt = 0;
   antikt6HIItrEM_m = 0;
   antikt6HIItrEM_eta = 0;
   antikt6HIItrEM_phi = 0;
   antikt6HIItrEM_SubtractedEt = 0;
   antikt6HIItrEM_NoFlow = 0;
   antikt6HIItrEM_UncalibEt = 0;
   antikt6HIItrEM_PassedFR = 0;
   antikt6HIItrEM_const_n = 0;
   antikt6HIItrEM_const_et = 0;
   antikt6HIItrEM_const_eta = 0;
   antikt6HIItrEM_const_phi = 0;
   antikt6HIItrEM_sampling_et = 0;
   antikt6HIItrEM_sampling_et_unsubtr = 0;
   antikt6HIItrEM_bad_cell_n = 0;
   antikt6HIItrEM_bad_cell_et = 0;
   antikt6HIItrEM_bad_cell_area = 0;
   antikt6HIItrEM_empty_cell_n = 0;
   antikt6HIItrEM_empty_cell_et = 0;
   antikt6HIItrEM_empty_cell_area = 0;
   antikt6HIItrEM_total_cell_n = 0;
   antikt6HIItrEM_total_cell_et = 0;
   antikt6HIItrEM_total_cell_area = 0;
   antikt6HIItrEM_n90 = 0;
   antikt6HIItrEM_fracSamplingMax = 0;
   antikt6HIItrEM_SamplingMax = 0;
   antikt6HIItrEM_n90constituents = 0;
   antikt6HIItrEM_Timing = 0;
   antikt6HIItrEM_LArQuality = 0;
   antikt6HIItrEM_HECQuality = 0;
   antikt6HIItrEM_TileQuality = 0;
   antikt6HIItrEM_NegativeE = 0;
   antikt6HIItrEM_AverageLArQF = 0;
   antikt6HIItrEM_sumPtTrk = 0;
   antikt6HIItrEM_BCH_CORR_CELL = 0;
   antikt6HIItrEM_BCH_CORR_DOTX = 0;
   antikt6HIItrEM_BCH_CORR_JET = 0;
   antikt6HIItrEM_BCH_CORR_JET_FORCELL = 0;
   antikt6HIItrEM_ENG_BAD_CELLS = 0;
   antikt6HIItrEM_N_BAD_CELLS = 0;
   antikt6HIItrEM_N_BAD_CELLS_CORR = 0;
   antikt6HIItrEM_BAD_CELLS_CORR_E = 0;
   antikt6HIItrEM_emfrac = 0;
   antikt6HIItrEM_hecf = 0;
   antikt6HIItrEM_tgap3f = 0;
   antikt6HIItrEM_isUgly = 0;
   antikt6HIItrEM_isBadLooseMinus = 0;
   antikt6HIItrEM_isBadLoose = 0;
   antikt6HIItrEM_isBadMedium = 0;
   antikt6HIItrEM_isBadTight = 0;
   antikt6HIItrEM_jvtx_x = 0;
   antikt6HIItrEM_jvtx_y = 0;
   antikt6HIItrEM_jvtx_z = 0;
   antikt6HIItrEM_jvtxf = 0;
   antikt6HIItrEM_flavor_weight_Comb = 0;
   antikt6HIItrEM_flavor_weight_IP2D = 0;
   antikt6HIItrEM_flavor_weight_IP3D = 0;
   antikt6HIItrEM_flavor_weight_SV0 = 0;
   antikt6HIItrEM_flavor_weight_SV1 = 0;
   antikt6HIItrEM_flavor_weight_SV2 = 0;
   antikt6HIItrEM_flavor_weight_SoftMuonTagChi2 = 0;
   antikt6HIItrEM_flavor_weight_SecondSoftMuonTagChi2 = 0;
   antikt6HIItrEM_flavor_weight_JetFitterTagNN = 0;
   antikt6HIItrEM_flavor_weight_JetFitterCOMBNN = 0;
   antikt6HIItrEM_flavor_weight_MV1 = 0;
   antikt6HIItrEM_flavor_weight_MV2 = 0;
   antikt6HIItrEM_flavor_weight_GbbNN = 0;
   antikt6HIItrEM_flavor_truth_label = 0;
   antikt6HIItrEM_flavor_truth_dRminToB = 0;
   antikt6HIItrEM_flavor_truth_dRminToC = 0;
   antikt6HIItrEM_flavor_truth_dRminToT = 0;
   antikt6HIItrEM_flavor_truth_BHadronpdg = 0;
   antikt6HIItrEM_flavor_truth_vx_x = 0;
   antikt6HIItrEM_flavor_truth_vx_y = 0;
   antikt6HIItrEM_flavor_truth_vx_z = 0;
   antikt6HIItrEM_flavor_component_assoctrk_signOfIP = 0;
   antikt6HIItrEM_flavor_component_assoctrk_signOfZIP = 0;
   antikt6HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx = 0;
   antikt6HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx = 0;
   antikt6HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx = 0;
   antikt6HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx = 0;
   antikt6HIItrEM_flavor_component_gentruthlepton_origin = 0;
   antikt6HIItrEM_flavor_component_gentruthlepton_slbarcode = 0;
   antikt6HIItrEM_flavor_component_ip2d_pu = 0;
   antikt6HIItrEM_flavor_component_ip2d_pb = 0;
   antikt6HIItrEM_flavor_component_ip2d_isValid = 0;
   antikt6HIItrEM_flavor_component_ip2d_ntrk = 0;
   antikt6HIItrEM_flavor_component_ip3d_pu = 0;
   antikt6HIItrEM_flavor_component_ip3d_pb = 0;
   antikt6HIItrEM_flavor_component_ip3d_isValid = 0;
   antikt6HIItrEM_flavor_component_ip3d_ntrk = 0;
   antikt6HIItrEM_flavor_component_jetprob_ntrk = 0;
   antikt6HIItrEM_flavor_component_sv1_pu = 0;
   antikt6HIItrEM_flavor_component_sv1_pb = 0;
   antikt6HIItrEM_flavor_component_sv1_isValid = 0;
   antikt6HIItrEM_flavor_component_sv2_pu = 0;
   antikt6HIItrEM_flavor_component_sv2_pb = 0;
   antikt6HIItrEM_flavor_component_sv2_isValid = 0;
   antikt6HIItrEM_flavor_component_jfit_pu = 0;
   antikt6HIItrEM_flavor_component_jfit_pb = 0;
   antikt6HIItrEM_flavor_component_jfit_pc = 0;
   antikt6HIItrEM_flavor_component_jfit_isValid = 0;
   antikt6HIItrEM_flavor_component_jfitcomb_pu = 0;
   antikt6HIItrEM_flavor_component_jfitcomb_pb = 0;
   antikt6HIItrEM_flavor_component_jfitcomb_pc = 0;
   antikt6HIItrEM_flavor_component_jfitcomb_isValid = 0;
   antikt6HIItrEM_flavor_component_gbbnn_nMatchingTracks = 0;
   antikt6HIItrEM_flavor_component_gbbnn_trkJetWidth = 0;
   antikt6HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR = 0;
   antikt6HIItrEM_flavor_component_jfit_nvtx = 0;
   antikt6HIItrEM_flavor_component_jfit_nvtx1t = 0;
   antikt6HIItrEM_flavor_component_jfit_ntrkAtVx = 0;
   antikt6HIItrEM_flavor_component_jfit_efrc = 0;
   antikt6HIItrEM_flavor_component_jfit_mass = 0;
   antikt6HIItrEM_flavor_component_jfit_sig3d = 0;
   antikt6HIItrEM_flavor_component_jfit_deltaPhi = 0;
   antikt6HIItrEM_flavor_component_jfit_deltaEta = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_d0val = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_d0sig = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_z0val = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_z0sig = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_w2D = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_w3D = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_pJP = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_pJPneg = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_grade = 0;
   antikt6HIItrEM_flavor_component_ipplus_trk_isFromV0 = 0;
   antikt6HIItrEM_flavor_component_svp_isValid = 0;
   antikt6HIItrEM_flavor_component_svp_ntrkv = 0;
   antikt6HIItrEM_flavor_component_svp_ntrkj = 0;
   antikt6HIItrEM_flavor_component_svp_n2t = 0;
   antikt6HIItrEM_flavor_component_svp_mass = 0;
   antikt6HIItrEM_flavor_component_svp_efrc = 0;
   antikt6HIItrEM_flavor_component_svp_x = 0;
   antikt6HIItrEM_flavor_component_svp_y = 0;
   antikt6HIItrEM_flavor_component_svp_z = 0;
   antikt6HIItrEM_flavor_component_svp_err_x = 0;
   antikt6HIItrEM_flavor_component_svp_err_y = 0;
   antikt6HIItrEM_flavor_component_svp_err_z = 0;
   antikt6HIItrEM_flavor_component_svp_cov_xy = 0;
   antikt6HIItrEM_flavor_component_svp_cov_xz = 0;
   antikt6HIItrEM_flavor_component_svp_cov_yz = 0;
   antikt6HIItrEM_flavor_component_svp_chi2 = 0;
   antikt6HIItrEM_flavor_component_svp_ndof = 0;
   antikt6HIItrEM_flavor_component_svp_ntrk = 0;
   antikt6HIItrEM_flavor_component_sv0p_isValid = 0;
   antikt6HIItrEM_flavor_component_sv0p_ntrkv = 0;
   antikt6HIItrEM_flavor_component_sv0p_ntrkj = 0;
   antikt6HIItrEM_flavor_component_sv0p_n2t = 0;
   antikt6HIItrEM_flavor_component_sv0p_mass = 0;
   antikt6HIItrEM_flavor_component_sv0p_efrc = 0;
   antikt6HIItrEM_flavor_component_sv0p_x = 0;
   antikt6HIItrEM_flavor_component_sv0p_y = 0;
   antikt6HIItrEM_flavor_component_sv0p_z = 0;
   antikt6HIItrEM_flavor_component_sv0p_err_x = 0;
   antikt6HIItrEM_flavor_component_sv0p_err_y = 0;
   antikt6HIItrEM_flavor_component_sv0p_err_z = 0;
   antikt6HIItrEM_flavor_component_sv0p_cov_xy = 0;
   antikt6HIItrEM_flavor_component_sv0p_cov_xz = 0;
   antikt6HIItrEM_flavor_component_sv0p_cov_yz = 0;
   antikt6HIItrEM_flavor_component_sv0p_chi2 = 0;
   antikt6HIItrEM_flavor_component_sv0p_ndof = 0;
   antikt6HIItrEM_flavor_component_sv0p_ntrk = 0;
   antikt6HIItrEM_flavor_component_softmuoninfo_muon_w = 0;
   antikt6HIItrEM_flavor_component_softmuoninfo_muon_pTRel = 0;
   antikt6HIItrEM_flavor_component_softmuoninfo_muon_dRJet = 0;
   antikt6HIItrEM_flavor_component_softmuon2info_muon2_w = 0;
   antikt6HIItrEM_flavor_component_softmuon2info_muon2_pTRel = 0;
   antikt6HIItrEM_flavor_component_softmuon2info_muon2_dRJet = 0;
   antikt6HIItrEM_flavor_component_softmuonchi2info_muon_w = 0;
   antikt6HIItrEM_flavor_component_softmuonchi2info_muon_pTRel = 0;
   antikt6HIItrEM_flavor_component_softmuonchi2info_muon_dRJet = 0;
   antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_w = 0;
   antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel = 0;
   antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet = 0;
   antikt6HIItrEM_flavor_component_msvp_isValid = 0;
   antikt6HIItrEM_flavor_component_msvp_ntrkv = 0;
   antikt6HIItrEM_flavor_component_msvp_ntrkj = 0;
   antikt6HIItrEM_flavor_component_msvp_n2t = 0;
   antikt6HIItrEM_flavor_component_msvp_nVtx = 0;
   antikt6HIItrEM_flavor_component_msvp_normWeightedDist = 0;
   ItrEMFlowBkgrlayer_CaloBkgrEt = 0;
   ItrEMFlowBkgrlayer_CaloBkgrRMS = 0;
   ItrEMFlowBkgrlayer_CaloBkgrCounts = 0;
   ItrEMFlowBkgrlayer_CaloBkgrEta = 0;
   JetFlow_EtInLayer = 0;
   JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   JetFlow_PsiHICaloUtilLayers = 0;
   JetFlow_PsiEtHICaloUtilLayers = 0;
   JetFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   antikt4HIItrEMFlow_E = 0;
   antikt4HIItrEMFlow_Et = 0;
   antikt4HIItrEMFlow_pt = 0;
   antikt4HIItrEMFlow_m = 0;
   antikt4HIItrEMFlow_eta = 0;
   antikt4HIItrEMFlow_phi = 0;
   antikt4HIItrEMFlow_SubtractedEt = 0;
   antikt4HIItrEMFlow_NoFlow = 0;
   antikt4HIItrEMFlow_UncalibEt = 0;
   antikt4HIItrEMFlow_PassedFR = 0;
   antikt4HIItrEMFlow_const_n = 0;
   antikt4HIItrEMFlow_const_et = 0;
   antikt4HIItrEMFlow_const_eta = 0;
   antikt4HIItrEMFlow_const_phi = 0;
   antikt4HIItrEMFlow_sampling_et = 0;
   antikt4HIItrEMFlow_sampling_et_unsubtr = 0;
   antikt4HIItrEMFlow_bad_cell_n = 0;
   antikt4HIItrEMFlow_bad_cell_et = 0;
   antikt4HIItrEMFlow_bad_cell_area = 0;
   antikt4HIItrEMFlow_empty_cell_n = 0;
   antikt4HIItrEMFlow_empty_cell_et = 0;
   antikt4HIItrEMFlow_empty_cell_area = 0;
   antikt4HIItrEMFlow_total_cell_n = 0;
   antikt4HIItrEMFlow_total_cell_et = 0;
   antikt4HIItrEMFlow_total_cell_area = 0;
   antikt4HIItrEMFlow_n90 = 0;
   antikt4HIItrEMFlow_fracSamplingMax = 0;
   antikt4HIItrEMFlow_SamplingMax = 0;
   antikt4HIItrEMFlow_n90constituents = 0;
   antikt4HIItrEMFlow_Timing = 0;
   antikt4HIItrEMFlow_LArQuality = 0;
   antikt4HIItrEMFlow_HECQuality = 0;
   antikt4HIItrEMFlow_TileQuality = 0;
   antikt4HIItrEMFlow_NegativeE = 0;
   antikt4HIItrEMFlow_AverageLArQF = 0;
   antikt4HIItrEMFlow_sumPtTrk = 0;
   antikt4HIItrEMFlow_BCH_CORR_CELL = 0;
   antikt4HIItrEMFlow_BCH_CORR_DOTX = 0;
   antikt4HIItrEMFlow_BCH_CORR_JET = 0;
   antikt4HIItrEMFlow_BCH_CORR_JET_FORCELL = 0;
   antikt4HIItrEMFlow_ENG_BAD_CELLS = 0;
   antikt4HIItrEMFlow_N_BAD_CELLS = 0;
   antikt4HIItrEMFlow_N_BAD_CELLS_CORR = 0;
   antikt4HIItrEMFlow_BAD_CELLS_CORR_E = 0;
   antikt4HIItrEMFlow_emfrac = 0;
   antikt4HIItrEMFlow_hecf = 0;
   antikt4HIItrEMFlow_tgap3f = 0;
   antikt4HIItrEMFlow_isUgly = 0;
   antikt4HIItrEMFlow_isBadLooseMinus = 0;
   antikt4HIItrEMFlow_isBadLoose = 0;
   antikt4HIItrEMFlow_isBadMedium = 0;
   antikt4HIItrEMFlow_isBadTight = 0;
   antikt4HIItrEMFlow_jvtx_x = 0;
   antikt4HIItrEMFlow_jvtx_y = 0;
   antikt4HIItrEMFlow_jvtx_z = 0;
   antikt4HIItrEMFlow_jvtxf = 0;
   antikt4HIItrEMFlow_flavor_weight_Comb = 0;
   antikt4HIItrEMFlow_flavor_weight_IP2D = 0;
   antikt4HIItrEMFlow_flavor_weight_IP3D = 0;
   antikt4HIItrEMFlow_flavor_weight_SV0 = 0;
   antikt4HIItrEMFlow_flavor_weight_SV1 = 0;
   antikt4HIItrEMFlow_flavor_weight_SV2 = 0;
   antikt4HIItrEMFlow_flavor_weight_SoftMuonTagChi2 = 0;
   antikt4HIItrEMFlow_flavor_weight_SecondSoftMuonTagChi2 = 0;
   antikt4HIItrEMFlow_flavor_weight_JetFitterTagNN = 0;
   antikt4HIItrEMFlow_flavor_weight_JetFitterCOMBNN = 0;
   antikt4HIItrEMFlow_flavor_weight_MV1 = 0;
   antikt4HIItrEMFlow_flavor_weight_MV2 = 0;
   antikt4HIItrEMFlow_flavor_weight_GbbNN = 0;
   antikt4HIItrEMFlow_flavor_truth_label = 0;
   antikt4HIItrEMFlow_flavor_truth_dRminToB = 0;
   antikt4HIItrEMFlow_flavor_truth_dRminToC = 0;
   antikt4HIItrEMFlow_flavor_truth_dRminToT = 0;
   antikt4HIItrEMFlow_flavor_truth_BHadronpdg = 0;
   antikt4HIItrEMFlow_flavor_truth_vx_x = 0;
   antikt4HIItrEMFlow_flavor_truth_vx_y = 0;
   antikt4HIItrEMFlow_flavor_truth_vx_z = 0;
   antikt4HIItrEMFlow_flavor_component_assoctrk_signOfIP = 0;
   antikt4HIItrEMFlow_flavor_component_assoctrk_signOfZIP = 0;
   antikt4HIItrEMFlow_flavor_component_assoctrk_ud0wrtPriVtx = 0;
   antikt4HIItrEMFlow_flavor_component_assoctrk_ud0ErrwrtPriVtx = 0;
   antikt4HIItrEMFlow_flavor_component_assoctrk_uz0wrtPriVtx = 0;
   antikt4HIItrEMFlow_flavor_component_assoctrk_uz0ErrwrtPriVtx = 0;
   antikt4HIItrEMFlow_flavor_component_gentruthlepton_origin = 0;
   antikt4HIItrEMFlow_flavor_component_gentruthlepton_slbarcode = 0;
   antikt4HIItrEMFlow_flavor_component_ip2d_pu = 0;
   antikt4HIItrEMFlow_flavor_component_ip2d_pb = 0;
   antikt4HIItrEMFlow_flavor_component_ip2d_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_ip2d_ntrk = 0;
   antikt4HIItrEMFlow_flavor_component_ip3d_pu = 0;
   antikt4HIItrEMFlow_flavor_component_ip3d_pb = 0;
   antikt4HIItrEMFlow_flavor_component_ip3d_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_ip3d_ntrk = 0;
   antikt4HIItrEMFlow_flavor_component_jetprob_ntrk = 0;
   antikt4HIItrEMFlow_flavor_component_sv1_pu = 0;
   antikt4HIItrEMFlow_flavor_component_sv1_pb = 0;
   antikt4HIItrEMFlow_flavor_component_sv1_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_sv2_pu = 0;
   antikt4HIItrEMFlow_flavor_component_sv2_pb = 0;
   antikt4HIItrEMFlow_flavor_component_sv2_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_pu = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_pb = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_pc = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_jfitcomb_pu = 0;
   antikt4HIItrEMFlow_flavor_component_jfitcomb_pb = 0;
   antikt4HIItrEMFlow_flavor_component_jfitcomb_pc = 0;
   antikt4HIItrEMFlow_flavor_component_jfitcomb_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_gbbnn_nMatchingTracks = 0;
   antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetWidth = 0;
   antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetMaxDeltaR = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_nvtx = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_nvtx1t = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_ntrkAtVx = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_efrc = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_mass = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_sig3d = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_deltaPhi = 0;
   antikt4HIItrEMFlow_flavor_component_jfit_deltaEta = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0val = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0sig = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0val = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0sig = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_w2D = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_w3D = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJP = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJPneg = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_grade = 0;
   antikt4HIItrEMFlow_flavor_component_ipplus_trk_isFromV0 = 0;
   antikt4HIItrEMFlow_flavor_component_svp_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_svp_ntrkv = 0;
   antikt4HIItrEMFlow_flavor_component_svp_ntrkj = 0;
   antikt4HIItrEMFlow_flavor_component_svp_n2t = 0;
   antikt4HIItrEMFlow_flavor_component_svp_mass = 0;
   antikt4HIItrEMFlow_flavor_component_svp_efrc = 0;
   antikt4HIItrEMFlow_flavor_component_svp_x = 0;
   antikt4HIItrEMFlow_flavor_component_svp_y = 0;
   antikt4HIItrEMFlow_flavor_component_svp_z = 0;
   antikt4HIItrEMFlow_flavor_component_svp_err_x = 0;
   antikt4HIItrEMFlow_flavor_component_svp_err_y = 0;
   antikt4HIItrEMFlow_flavor_component_svp_err_z = 0;
   antikt4HIItrEMFlow_flavor_component_svp_cov_xy = 0;
   antikt4HIItrEMFlow_flavor_component_svp_cov_xz = 0;
   antikt4HIItrEMFlow_flavor_component_svp_cov_yz = 0;
   antikt4HIItrEMFlow_flavor_component_svp_chi2 = 0;
   antikt4HIItrEMFlow_flavor_component_svp_ndof = 0;
   antikt4HIItrEMFlow_flavor_component_svp_ntrk = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_ntrkv = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_ntrkj = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_n2t = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_mass = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_efrc = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_x = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_y = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_z = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_err_x = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_err_y = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_err_z = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_cov_xy = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_cov_xz = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_cov_yz = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_chi2 = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_ndof = 0;
   antikt4HIItrEMFlow_flavor_component_sv0p_ntrk = 0;
   antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_w = 0;
   antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_pTRel = 0;
   antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_dRJet = 0;
   antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_w = 0;
   antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_pTRel = 0;
   antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_dRJet = 0;
   antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_w = 0;
   antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_pTRel = 0;
   antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_dRJet = 0;
   antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_w = 0;
   antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_pTRel = 0;
   antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_dRJet = 0;
   antikt4HIItrEMFlow_flavor_component_msvp_isValid = 0;
   antikt4HIItrEMFlow_flavor_component_msvp_ntrkv = 0;
   antikt4HIItrEMFlow_flavor_component_msvp_ntrkj = 0;
   antikt4HIItrEMFlow_flavor_component_msvp_n2t = 0;
   antikt4HIItrEMFlow_flavor_component_msvp_nVtx = 0;
   antikt4HIItrEMFlow_flavor_component_msvp_normWeightedDist = 0;
   antikt2Truth_E = 0;
   antikt2Truth_Et = 0;
   antikt2Truth_pt = 0;
   antikt2Truth_m = 0;
   antikt2Truth_eta = 0;
   antikt2Truth_phi = 0;
   antikt3Truth_E = 0;
   antikt3Truth_Et = 0;
   antikt3Truth_pt = 0;
   antikt3Truth_m = 0;
   antikt3Truth_eta = 0;
   antikt3Truth_phi = 0;
   antikt4Truth_E = 0;
   antikt4Truth_Et = 0;
   antikt4Truth_pt = 0;
   antikt4Truth_m = 0;
   antikt4Truth_eta = 0;
   antikt4Truth_phi = 0;
   antikt5Truth_E = 0;
   antikt5Truth_Et = 0;
   antikt5Truth_pt = 0;
   antikt5Truth_m = 0;
   antikt5Truth_eta = 0;
   antikt5Truth_phi = 0;
   antikt6Truth_E = 0;
   antikt6Truth_Et = 0;
   antikt6Truth_pt = 0;
   antikt6Truth_m = 0;
   antikt6Truth_eta = 0;
   antikt6Truth_phi = 0;
   antikt4TruthHijing_E = 0;
   antikt4TruthHijing_Et = 0;
   antikt4TruthHijing_pt = 0;
   antikt4TruthHijing_m = 0;
   antikt4TruthHijing_eta = 0;
   antikt4TruthHijing_phi = 0;
   AntiKt4TopoEM_E = 0;
   AntiKt4TopoEM_pt = 0;
   AntiKt4TopoEM_m = 0;
   AntiKt4TopoEM_eta = 0;
   AntiKt4TopoEM_phi = 0;
   AntiKt4TopoEM_EtaOrigin = 0;
   AntiKt4TopoEM_PhiOrigin = 0;
   AntiKt4TopoEM_MOrigin = 0;
   AntiKt4TopoEM_WIDTH = 0;
   AntiKt4TopoEM_n90 = 0;
   AntiKt4TopoEM_Timing = 0;
   AntiKt4TopoEM_LArQuality = 0;
   AntiKt4TopoEM_nTrk = 0;
   AntiKt4TopoEM_sumPtTrk = 0;
   AntiKt4TopoEM_OriginIndex = 0;
   AntiKt4TopoEM_HECQuality = 0;
   AntiKt4TopoEM_NegativeE = 0;
   AntiKt4TopoEM_AverageLArQF = 0;
   AntiKt4TopoEM_BCH_CORR_CELL = 0;
   AntiKt4TopoEM_BCH_CORR_DOTX = 0;
   AntiKt4TopoEM_BCH_CORR_JET = 0;
   AntiKt4TopoEM_BCH_CORR_JET_FORCELL = 0;
   AntiKt4TopoEM_ENG_BAD_CELLS = 0;
   AntiKt4TopoEM_N_BAD_CELLS = 0;
   AntiKt4TopoEM_N_BAD_CELLS_CORR = 0;
   AntiKt4TopoEM_BAD_CELLS_CORR_E = 0;
   AntiKt4TopoEM_NumTowers = 0;
   AntiKt4TopoEM_ootFracCells5 = 0;
   AntiKt4TopoEM_ootFracCells10 = 0;
   AntiKt4TopoEM_ootFracClusters5 = 0;
   AntiKt4TopoEM_ootFracClusters10 = 0;
   AntiKt4TopoEM_SamplingMax = 0;
   AntiKt4TopoEM_fracSamplingMax = 0;
   AntiKt4TopoEM_hecf = 0;
   AntiKt4TopoEM_tgap3f = 0;
   AntiKt4TopoEM_isUgly = 0;
   AntiKt4TopoEM_isBadLooseMinus = 0;
   AntiKt4TopoEM_isBadLoose = 0;
   AntiKt4TopoEM_isBadMedium = 0;
   AntiKt4TopoEM_isBadTight = 0;
   AntiKt4TopoEM_emfrac = 0;
   AntiKt4TopoEM_Offset = 0;
   AntiKt4TopoEM_EMJES = 0;
   AntiKt4TopoEM_EMJES_EtaCorr = 0;
   AntiKt4TopoEM_EMJESnooffset = 0;
   AntiKt4TopoEM_LCJES = 0;
   AntiKt4TopoEM_LCJES_EtaCorr = 0;
   AntiKt4TopoEM_emscale_E = 0;
   AntiKt4TopoEM_emscale_pt = 0;
   AntiKt4TopoEM_emscale_m = 0;
   AntiKt4TopoEM_emscale_eta = 0;
   AntiKt4TopoEM_emscale_phi = 0;
   AntiKt4TopoEM_jvtx_x = 0;
   AntiKt4TopoEM_jvtx_y = 0;
   AntiKt4TopoEM_jvtx_z = 0;
   AntiKt4TopoEM_jvtxf = 0;
   AntiKt4TopoEM_GSCFactorF = 0;
   AntiKt4TopoEM_WidthFraction = 0;
   AntiKt4TopoEM_e_PreSamplerB = 0;
   AntiKt4TopoEM_e_EMB1 = 0;
   AntiKt4TopoEM_e_EMB2 = 0;
   AntiKt4TopoEM_e_EMB3 = 0;
   AntiKt4TopoEM_e_PreSamplerE = 0;
   AntiKt4TopoEM_e_EME1 = 0;
   AntiKt4TopoEM_e_EME2 = 0;
   AntiKt4TopoEM_e_EME3 = 0;
   AntiKt4TopoEM_e_HEC0 = 0;
   AntiKt4TopoEM_e_HEC1 = 0;
   AntiKt4TopoEM_e_HEC2 = 0;
   AntiKt4TopoEM_e_HEC3 = 0;
   AntiKt4TopoEM_e_TileBar0 = 0;
   AntiKt4TopoEM_e_TileBar1 = 0;
   AntiKt4TopoEM_e_TileBar2 = 0;
   AntiKt4TopoEM_e_TileGap1 = 0;
   AntiKt4TopoEM_e_TileGap2 = 0;
   AntiKt4TopoEM_e_TileGap3 = 0;
   AntiKt4TopoEM_e_TileExt0 = 0;
   AntiKt4TopoEM_e_TileExt1 = 0;
   AntiKt4TopoEM_e_TileExt2 = 0;
   AntiKt4TopoEM_e_FCAL0 = 0;
   AntiKt4TopoEM_e_FCAL1 = 0;
   AntiKt4TopoEM_e_FCAL2 = 0;
   AntiKt4TopoEM_shapeBins = 0;
   AntiKt4TopoEM_Nconst = 0;
   AntiKt4TopoEM_ptconst_default = 0;
   AntiKt4TopoEM_econst_default = 0;
   AntiKt4TopoEM_etaconst_default = 0;
   AntiKt4TopoEM_phiconst_default = 0;
   AntiKt4TopoEM_weightconst_default = 0;
   AntiKt4TopoEM_constscale_E = 0;
   AntiKt4TopoEM_constscale_pt = 0;
   AntiKt4TopoEM_constscale_m = 0;
   AntiKt4TopoEM_constscale_eta = 0;
   AntiKt4TopoEM_constscale_phi = 0;
   AntiKt4TopoEM_el_dr = 0;
   AntiKt4TopoEM_el_matched = 0;
   AntiKt4TopoEM_mu_dr = 0;
   AntiKt4TopoEM_mu_matched = 0;
   AntiKt4TopoEM_L1_dr = 0;
   AntiKt4TopoEM_L1_matched = 0;
   AntiKt4TopoEM_L2_dr = 0;
   AntiKt4TopoEM_L2_matched = 0;
   AntiKt4TopoEM_EF_dr = 0;
   AntiKt4TopoEM_EF_matched = 0;
   AntiKt4LCTopo_E = 0;
   AntiKt4LCTopo_pt = 0;
   AntiKt4LCTopo_m = 0;
   AntiKt4LCTopo_eta = 0;
   AntiKt4LCTopo_phi = 0;
   AntiKt4LCTopo_EtaOrigin = 0;
   AntiKt4LCTopo_PhiOrigin = 0;
   AntiKt4LCTopo_MOrigin = 0;
   AntiKt4LCTopo_WIDTH = 0;
   AntiKt4LCTopo_n90 = 0;
   AntiKt4LCTopo_Timing = 0;
   AntiKt4LCTopo_LArQuality = 0;
   AntiKt4LCTopo_nTrk = 0;
   AntiKt4LCTopo_sumPtTrk = 0;
   AntiKt4LCTopo_OriginIndex = 0;
   AntiKt4LCTopo_HECQuality = 0;
   AntiKt4LCTopo_NegativeE = 0;
   AntiKt4LCTopo_AverageLArQF = 0;
   AntiKt4LCTopo_BCH_CORR_CELL = 0;
   AntiKt4LCTopo_BCH_CORR_DOTX = 0;
   AntiKt4LCTopo_BCH_CORR_JET = 0;
   AntiKt4LCTopo_BCH_CORR_JET_FORCELL = 0;
   AntiKt4LCTopo_ENG_BAD_CELLS = 0;
   AntiKt4LCTopo_N_BAD_CELLS = 0;
   AntiKt4LCTopo_N_BAD_CELLS_CORR = 0;
   AntiKt4LCTopo_BAD_CELLS_CORR_E = 0;
   AntiKt4LCTopo_NumTowers = 0;
   AntiKt4LCTopo_ootFracCells5 = 0;
   AntiKt4LCTopo_ootFracCells10 = 0;
   AntiKt4LCTopo_ootFracClusters5 = 0;
   AntiKt4LCTopo_ootFracClusters10 = 0;
   AntiKt4LCTopo_SamplingMax = 0;
   AntiKt4LCTopo_fracSamplingMax = 0;
   AntiKt4LCTopo_hecf = 0;
   AntiKt4LCTopo_tgap3f = 0;
   AntiKt4LCTopo_isUgly = 0;
   AntiKt4LCTopo_isBadLooseMinus = 0;
   AntiKt4LCTopo_isBadLoose = 0;
   AntiKt4LCTopo_isBadMedium = 0;
   AntiKt4LCTopo_isBadTight = 0;
   AntiKt4LCTopo_emfrac = 0;
   AntiKt4LCTopo_Offset = 0;
   AntiKt4LCTopo_EMJES = 0;
   AntiKt4LCTopo_EMJES_EtaCorr = 0;
   AntiKt4LCTopo_EMJESnooffset = 0;
   AntiKt4LCTopo_LCJES = 0;
   AntiKt4LCTopo_LCJES_EtaCorr = 0;
   AntiKt4LCTopo_emscale_E = 0;
   AntiKt4LCTopo_emscale_pt = 0;
   AntiKt4LCTopo_emscale_m = 0;
   AntiKt4LCTopo_emscale_eta = 0;
   AntiKt4LCTopo_emscale_phi = 0;
   AntiKt4LCTopo_jvtx_x = 0;
   AntiKt4LCTopo_jvtx_y = 0;
   AntiKt4LCTopo_jvtx_z = 0;
   AntiKt4LCTopo_jvtxf = 0;
   AntiKt4LCTopo_GSCFactorF = 0;
   AntiKt4LCTopo_WidthFraction = 0;
   AntiKt4LCTopo_e_PreSamplerB = 0;
   AntiKt4LCTopo_e_EMB1 = 0;
   AntiKt4LCTopo_e_EMB2 = 0;
   AntiKt4LCTopo_e_EMB3 = 0;
   AntiKt4LCTopo_e_PreSamplerE = 0;
   AntiKt4LCTopo_e_EME1 = 0;
   AntiKt4LCTopo_e_EME2 = 0;
   AntiKt4LCTopo_e_EME3 = 0;
   AntiKt4LCTopo_e_HEC0 = 0;
   AntiKt4LCTopo_e_HEC1 = 0;
   AntiKt4LCTopo_e_HEC2 = 0;
   AntiKt4LCTopo_e_HEC3 = 0;
   AntiKt4LCTopo_e_TileBar0 = 0;
   AntiKt4LCTopo_e_TileBar1 = 0;
   AntiKt4LCTopo_e_TileBar2 = 0;
   AntiKt4LCTopo_e_TileGap1 = 0;
   AntiKt4LCTopo_e_TileGap2 = 0;
   AntiKt4LCTopo_e_TileGap3 = 0;
   AntiKt4LCTopo_e_TileExt0 = 0;
   AntiKt4LCTopo_e_TileExt1 = 0;
   AntiKt4LCTopo_e_TileExt2 = 0;
   AntiKt4LCTopo_e_FCAL0 = 0;
   AntiKt4LCTopo_e_FCAL1 = 0;
   AntiKt4LCTopo_e_FCAL2 = 0;
   AntiKt4LCTopo_shapeBins = 0;
   AntiKt4LCTopo_Nconst = 0;
   AntiKt4LCTopo_ptconst_default = 0;
   AntiKt4LCTopo_econst_default = 0;
   AntiKt4LCTopo_etaconst_default = 0;
   AntiKt4LCTopo_phiconst_default = 0;
   AntiKt4LCTopo_weightconst_default = 0;
   AntiKt4LCTopo_constscale_E = 0;
   AntiKt4LCTopo_constscale_pt = 0;
   AntiKt4LCTopo_constscale_m = 0;
   AntiKt4LCTopo_constscale_eta = 0;
   AntiKt4LCTopo_constscale_phi = 0;
   AntiKt4LCTopo_el_dr = 0;
   AntiKt4LCTopo_el_matched = 0;
   AntiKt4LCTopo_mu_dr = 0;
   AntiKt4LCTopo_mu_matched = 0;
   AntiKt4LCTopo_L1_dr = 0;
   AntiKt4LCTopo_L1_matched = 0;
   AntiKt4LCTopo_L2_dr = 0;
   AntiKt4LCTopo_L2_matched = 0;
   AntiKt4LCTopo_EF_dr = 0;
   AntiKt4LCTopo_EF_matched = 0;
   AntiKt6Tower_E = 0;
   AntiKt6Tower_pt = 0;
   AntiKt6Tower_m = 0;
   AntiKt6Tower_eta = 0;
   AntiKt6Tower_phi = 0;
   AntiKt6Tower_EtaOrigin = 0;
   AntiKt6Tower_PhiOrigin = 0;
   AntiKt6Tower_MOrigin = 0;
   AntiKt6Tower_WIDTH = 0;
   AntiKt6Tower_n90 = 0;
   AntiKt6Tower_Timing = 0;
   AntiKt6Tower_LArQuality = 0;
   AntiKt6Tower_nTrk = 0;
   AntiKt6Tower_sumPtTrk = 0;
   AntiKt6Tower_OriginIndex = 0;
   AntiKt6Tower_HECQuality = 0;
   AntiKt6Tower_NegativeE = 0;
   AntiKt6Tower_AverageLArQF = 0;
   AntiKt6Tower_BCH_CORR_CELL = 0;
   AntiKt6Tower_BCH_CORR_DOTX = 0;
   AntiKt6Tower_BCH_CORR_JET = 0;
   AntiKt6Tower_BCH_CORR_JET_FORCELL = 0;
   AntiKt6Tower_ENG_BAD_CELLS = 0;
   AntiKt6Tower_N_BAD_CELLS = 0;
   AntiKt6Tower_N_BAD_CELLS_CORR = 0;
   AntiKt6Tower_BAD_CELLS_CORR_E = 0;
   AntiKt6Tower_NumTowers = 0;
   AntiKt6Tower_ootFracCells5 = 0;
   AntiKt6Tower_ootFracCells10 = 0;
   AntiKt6Tower_ootFracClusters5 = 0;
   AntiKt6Tower_ootFracClusters10 = 0;
   AntiKt6Tower_SamplingMax = 0;
   AntiKt6Tower_fracSamplingMax = 0;
   AntiKt6Tower_hecf = 0;
   AntiKt6Tower_tgap3f = 0;
   AntiKt6Tower_isUgly = 0;
   AntiKt6Tower_isBadLooseMinus = 0;
   AntiKt6Tower_isBadLoose = 0;
   AntiKt6Tower_isBadMedium = 0;
   AntiKt6Tower_isBadTight = 0;
   AntiKt6Tower_emfrac = 0;
   AntiKt6Tower_Offset = 0;
   AntiKt6Tower_EMJES = 0;
   AntiKt6Tower_EMJES_EtaCorr = 0;
   AntiKt6Tower_EMJESnooffset = 0;
   AntiKt6Tower_LCJES = 0;
   AntiKt6Tower_LCJES_EtaCorr = 0;
   AntiKt6Tower_emscale_E = 0;
   AntiKt6Tower_emscale_pt = 0;
   AntiKt6Tower_emscale_m = 0;
   AntiKt6Tower_emscale_eta = 0;
   AntiKt6Tower_emscale_phi = 0;
   AntiKt6Tower_jvtx_x = 0;
   AntiKt6Tower_jvtx_y = 0;
   AntiKt6Tower_jvtx_z = 0;
   AntiKt6Tower_jvtxf = 0;
   AntiKt6Tower_GSCFactorF = 0;
   AntiKt6Tower_WidthFraction = 0;
   AntiKt6Tower_e_PreSamplerB = 0;
   AntiKt6Tower_e_EMB1 = 0;
   AntiKt6Tower_e_EMB2 = 0;
   AntiKt6Tower_e_EMB3 = 0;
   AntiKt6Tower_e_PreSamplerE = 0;
   AntiKt6Tower_e_EME1 = 0;
   AntiKt6Tower_e_EME2 = 0;
   AntiKt6Tower_e_EME3 = 0;
   AntiKt6Tower_e_HEC0 = 0;
   AntiKt6Tower_e_HEC1 = 0;
   AntiKt6Tower_e_HEC2 = 0;
   AntiKt6Tower_e_HEC3 = 0;
   AntiKt6Tower_e_TileBar0 = 0;
   AntiKt6Tower_e_TileBar1 = 0;
   AntiKt6Tower_e_TileBar2 = 0;
   AntiKt6Tower_e_TileGap1 = 0;
   AntiKt6Tower_e_TileGap2 = 0;
   AntiKt6Tower_e_TileGap3 = 0;
   AntiKt6Tower_e_TileExt0 = 0;
   AntiKt6Tower_e_TileExt1 = 0;
   AntiKt6Tower_e_TileExt2 = 0;
   AntiKt6Tower_e_FCAL0 = 0;
   AntiKt6Tower_e_FCAL1 = 0;
   AntiKt6Tower_e_FCAL2 = 0;
   AntiKt6Tower_shapeBins = 0;
   AntiKt6Tower_Nconst = 0;
   AntiKt6Tower_ptconst_default = 0;
   AntiKt6Tower_econst_default = 0;
   AntiKt6Tower_etaconst_default = 0;
   AntiKt6Tower_phiconst_default = 0;
   AntiKt6Tower_weightconst_default = 0;
   AntiKt6Tower_constscale_E = 0;
   AntiKt6Tower_constscale_pt = 0;
   AntiKt6Tower_constscale_m = 0;
   AntiKt6Tower_constscale_eta = 0;
   AntiKt6Tower_constscale_phi = 0;
   AntiKt6Tower_el_dr = 0;
   AntiKt6Tower_el_matched = 0;
   AntiKt6Tower_mu_dr = 0;
   AntiKt6Tower_mu_matched = 0;
   AntiKt6Tower_L1_dr = 0;
   AntiKt6Tower_L1_matched = 0;
   AntiKt6Tower_L2_dr = 0;
   AntiKt6Tower_L2_matched = 0;
   AntiKt6Tower_EF_dr = 0;
   AntiKt6Tower_EF_matched = 0;
   AntiKt6LCTopo_E = 0;
   AntiKt6LCTopo_pt = 0;
   AntiKt6LCTopo_m = 0;
   AntiKt6LCTopo_eta = 0;
   AntiKt6LCTopo_phi = 0;
   AntiKt6LCTopo_EtaOrigin = 0;
   AntiKt6LCTopo_PhiOrigin = 0;
   AntiKt6LCTopo_MOrigin = 0;
   AntiKt6LCTopo_WIDTH = 0;
   AntiKt6LCTopo_n90 = 0;
   AntiKt6LCTopo_Timing = 0;
   AntiKt6LCTopo_LArQuality = 0;
   AntiKt6LCTopo_nTrk = 0;
   AntiKt6LCTopo_sumPtTrk = 0;
   AntiKt6LCTopo_OriginIndex = 0;
   AntiKt6LCTopo_HECQuality = 0;
   AntiKt6LCTopo_NegativeE = 0;
   AntiKt6LCTopo_AverageLArQF = 0;
   AntiKt6LCTopo_BCH_CORR_CELL = 0;
   AntiKt6LCTopo_BCH_CORR_DOTX = 0;
   AntiKt6LCTopo_BCH_CORR_JET = 0;
   AntiKt6LCTopo_BCH_CORR_JET_FORCELL = 0;
   AntiKt6LCTopo_ENG_BAD_CELLS = 0;
   AntiKt6LCTopo_N_BAD_CELLS = 0;
   AntiKt6LCTopo_N_BAD_CELLS_CORR = 0;
   AntiKt6LCTopo_BAD_CELLS_CORR_E = 0;
   AntiKt6LCTopo_NumTowers = 0;
   AntiKt6LCTopo_ootFracCells5 = 0;
   AntiKt6LCTopo_ootFracCells10 = 0;
   AntiKt6LCTopo_ootFracClusters5 = 0;
   AntiKt6LCTopo_ootFracClusters10 = 0;
   AntiKt6LCTopo_SamplingMax = 0;
   AntiKt6LCTopo_fracSamplingMax = 0;
   AntiKt6LCTopo_hecf = 0;
   AntiKt6LCTopo_tgap3f = 0;
   AntiKt6LCTopo_isUgly = 0;
   AntiKt6LCTopo_isBadLooseMinus = 0;
   AntiKt6LCTopo_isBadLoose = 0;
   AntiKt6LCTopo_isBadMedium = 0;
   AntiKt6LCTopo_isBadTight = 0;
   AntiKt6LCTopo_emfrac = 0;
   AntiKt6LCTopo_Offset = 0;
   AntiKt6LCTopo_EMJES = 0;
   AntiKt6LCTopo_EMJES_EtaCorr = 0;
   AntiKt6LCTopo_EMJESnooffset = 0;
   AntiKt6LCTopo_LCJES = 0;
   AntiKt6LCTopo_LCJES_EtaCorr = 0;
   AntiKt6LCTopo_emscale_E = 0;
   AntiKt6LCTopo_emscale_pt = 0;
   AntiKt6LCTopo_emscale_m = 0;
   AntiKt6LCTopo_emscale_eta = 0;
   AntiKt6LCTopo_emscale_phi = 0;
   AntiKt6LCTopo_jvtx_x = 0;
   AntiKt6LCTopo_jvtx_y = 0;
   AntiKt6LCTopo_jvtx_z = 0;
   AntiKt6LCTopo_jvtxf = 0;
   AntiKt6LCTopo_GSCFactorF = 0;
   AntiKt6LCTopo_WidthFraction = 0;
   AntiKt6LCTopo_e_PreSamplerB = 0;
   AntiKt6LCTopo_e_EMB1 = 0;
   AntiKt6LCTopo_e_EMB2 = 0;
   AntiKt6LCTopo_e_EMB3 = 0;
   AntiKt6LCTopo_e_PreSamplerE = 0;
   AntiKt6LCTopo_e_EME1 = 0;
   AntiKt6LCTopo_e_EME2 = 0;
   AntiKt6LCTopo_e_EME3 = 0;
   AntiKt6LCTopo_e_HEC0 = 0;
   AntiKt6LCTopo_e_HEC1 = 0;
   AntiKt6LCTopo_e_HEC2 = 0;
   AntiKt6LCTopo_e_HEC3 = 0;
   AntiKt6LCTopo_e_TileBar0 = 0;
   AntiKt6LCTopo_e_TileBar1 = 0;
   AntiKt6LCTopo_e_TileBar2 = 0;
   AntiKt6LCTopo_e_TileGap1 = 0;
   AntiKt6LCTopo_e_TileGap2 = 0;
   AntiKt6LCTopo_e_TileGap3 = 0;
   AntiKt6LCTopo_e_TileExt0 = 0;
   AntiKt6LCTopo_e_TileExt1 = 0;
   AntiKt6LCTopo_e_TileExt2 = 0;
   AntiKt6LCTopo_e_FCAL0 = 0;
   AntiKt6LCTopo_e_FCAL1 = 0;
   AntiKt6LCTopo_e_FCAL2 = 0;
   AntiKt6LCTopo_shapeBins = 0;
   AntiKt6LCTopo_Nconst = 0;
   AntiKt6LCTopo_ptconst_default = 0;
   AntiKt6LCTopo_econst_default = 0;
   AntiKt6LCTopo_etaconst_default = 0;
   AntiKt6LCTopo_phiconst_default = 0;
   AntiKt6LCTopo_weightconst_default = 0;
   AntiKt6LCTopo_constscale_E = 0;
   AntiKt6LCTopo_constscale_pt = 0;
   AntiKt6LCTopo_constscale_m = 0;
   AntiKt6LCTopo_constscale_eta = 0;
   AntiKt6LCTopo_constscale_phi = 0;
   AntiKt6LCTopo_el_dr = 0;
   AntiKt6LCTopo_el_matched = 0;
   AntiKt6LCTopo_mu_dr = 0;
   AntiKt6LCTopo_mu_matched = 0;
   AntiKt6LCTopo_L1_dr = 0;
   AntiKt6LCTopo_L1_matched = 0;
   AntiKt6LCTopo_L2_dr = 0;
   AntiKt6LCTopo_L2_matched = 0;
   AntiKt6LCTopo_EF_dr = 0;
   AntiKt6LCTopo_EF_matched = 0;
   AntiKt6TopoEM_E = 0;
   AntiKt6TopoEM_pt = 0;
   AntiKt6TopoEM_m = 0;
   AntiKt6TopoEM_eta = 0;
   AntiKt6TopoEM_phi = 0;
   AntiKt6TopoEM_EtaOrigin = 0;
   AntiKt6TopoEM_PhiOrigin = 0;
   AntiKt6TopoEM_MOrigin = 0;
   AntiKt6TopoEM_WIDTH = 0;
   AntiKt6TopoEM_n90 = 0;
   AntiKt6TopoEM_Timing = 0;
   AntiKt6TopoEM_LArQuality = 0;
   AntiKt6TopoEM_nTrk = 0;
   AntiKt6TopoEM_sumPtTrk = 0;
   AntiKt6TopoEM_OriginIndex = 0;
   AntiKt6TopoEM_HECQuality = 0;
   AntiKt6TopoEM_NegativeE = 0;
   AntiKt6TopoEM_AverageLArQF = 0;
   AntiKt6TopoEM_BCH_CORR_CELL = 0;
   AntiKt6TopoEM_BCH_CORR_DOTX = 0;
   AntiKt6TopoEM_BCH_CORR_JET = 0;
   AntiKt6TopoEM_BCH_CORR_JET_FORCELL = 0;
   AntiKt6TopoEM_ENG_BAD_CELLS = 0;
   AntiKt6TopoEM_N_BAD_CELLS = 0;
   AntiKt6TopoEM_N_BAD_CELLS_CORR = 0;
   AntiKt6TopoEM_BAD_CELLS_CORR_E = 0;
   AntiKt6TopoEM_NumTowers = 0;
   AntiKt6TopoEM_ootFracCells5 = 0;
   AntiKt6TopoEM_ootFracCells10 = 0;
   AntiKt6TopoEM_ootFracClusters5 = 0;
   AntiKt6TopoEM_ootFracClusters10 = 0;
   AntiKt6TopoEM_SamplingMax = 0;
   AntiKt6TopoEM_fracSamplingMax = 0;
   AntiKt6TopoEM_hecf = 0;
   AntiKt6TopoEM_tgap3f = 0;
   AntiKt6TopoEM_isUgly = 0;
   AntiKt6TopoEM_isBadLooseMinus = 0;
   AntiKt6TopoEM_isBadLoose = 0;
   AntiKt6TopoEM_isBadMedium = 0;
   AntiKt6TopoEM_isBadTight = 0;
   AntiKt6TopoEM_emfrac = 0;
   AntiKt6TopoEM_Offset = 0;
   AntiKt6TopoEM_EMJES = 0;
   AntiKt6TopoEM_EMJES_EtaCorr = 0;
   AntiKt6TopoEM_EMJESnooffset = 0;
   AntiKt6TopoEM_LCJES = 0;
   AntiKt6TopoEM_LCJES_EtaCorr = 0;
   AntiKt6TopoEM_emscale_E = 0;
   AntiKt6TopoEM_emscale_pt = 0;
   AntiKt6TopoEM_emscale_m = 0;
   AntiKt6TopoEM_emscale_eta = 0;
   AntiKt6TopoEM_emscale_phi = 0;
   AntiKt6TopoEM_jvtx_x = 0;
   AntiKt6TopoEM_jvtx_y = 0;
   AntiKt6TopoEM_jvtx_z = 0;
   AntiKt6TopoEM_jvtxf = 0;
   AntiKt6TopoEM_GSCFactorF = 0;
   AntiKt6TopoEM_WidthFraction = 0;
   AntiKt6TopoEM_e_PreSamplerB = 0;
   AntiKt6TopoEM_e_EMB1 = 0;
   AntiKt6TopoEM_e_EMB2 = 0;
   AntiKt6TopoEM_e_EMB3 = 0;
   AntiKt6TopoEM_e_PreSamplerE = 0;
   AntiKt6TopoEM_e_EME1 = 0;
   AntiKt6TopoEM_e_EME2 = 0;
   AntiKt6TopoEM_e_EME3 = 0;
   AntiKt6TopoEM_e_HEC0 = 0;
   AntiKt6TopoEM_e_HEC1 = 0;
   AntiKt6TopoEM_e_HEC2 = 0;
   AntiKt6TopoEM_e_HEC3 = 0;
   AntiKt6TopoEM_e_TileBar0 = 0;
   AntiKt6TopoEM_e_TileBar1 = 0;
   AntiKt6TopoEM_e_TileBar2 = 0;
   AntiKt6TopoEM_e_TileGap1 = 0;
   AntiKt6TopoEM_e_TileGap2 = 0;
   AntiKt6TopoEM_e_TileGap3 = 0;
   AntiKt6TopoEM_e_TileExt0 = 0;
   AntiKt6TopoEM_e_TileExt1 = 0;
   AntiKt6TopoEM_e_TileExt2 = 0;
   AntiKt6TopoEM_e_FCAL0 = 0;
   AntiKt6TopoEM_e_FCAL1 = 0;
   AntiKt6TopoEM_e_FCAL2 = 0;
   AntiKt6TopoEM_shapeBins = 0;
   AntiKt6TopoEM_Nconst = 0;
   AntiKt6TopoEM_ptconst_default = 0;
   AntiKt6TopoEM_econst_default = 0;
   AntiKt6TopoEM_etaconst_default = 0;
   AntiKt6TopoEM_phiconst_default = 0;
   AntiKt6TopoEM_weightconst_default = 0;
   AntiKt6TopoEM_constscale_E = 0;
   AntiKt6TopoEM_constscale_pt = 0;
   AntiKt6TopoEM_constscale_m = 0;
   AntiKt6TopoEM_constscale_eta = 0;
   AntiKt6TopoEM_constscale_phi = 0;
   AntiKt6TopoEM_el_dr = 0;
   AntiKt6TopoEM_el_matched = 0;
   AntiKt6TopoEM_mu_dr = 0;
   AntiKt6TopoEM_mu_matched = 0;
   AntiKt6TopoEM_L1_dr = 0;
   AntiKt6TopoEM_L1_matched = 0;
   AntiKt6TopoEM_L2_dr = 0;
   AntiKt6TopoEM_L2_matched = 0;
   AntiKt6TopoEM_EF_dr = 0;
   AntiKt6TopoEM_EF_matched = 0;
   HIFlow_v1_EtInLayer = 0;
   HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v1_PsiHICaloUtilLayers = 0;
   HIFlow_v1_PsiEtHICaloUtilLayers = 0;
   HIFlow_v1_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v2_EtInLayer = 0;
   HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v2_PsiHICaloUtilLayers = 0;
   HIFlow_v2_PsiEtHICaloUtilLayers = 0;
   HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v3_EtInLayer = 0;
   HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v3_PsiHICaloUtilLayers = 0;
   HIFlow_v3_PsiEtHICaloUtilLayers = 0;
   HIFlow_v3_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v4_EtInLayer = 0;
   HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v4_PsiHICaloUtilLayers = 0;
   HIFlow_v4_PsiEtHICaloUtilLayers = 0;
   HIFlow_v4_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v5_EtInLayer = 0;
   HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v5_PsiHICaloUtilLayers = 0;
   HIFlow_v5_PsiEtHICaloUtilLayers = 0;
   HIFlow_v5_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v6_EtInLayer = 0;
   HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0;
   HIFlow_v6_PsiHICaloUtilLayers = 0;
   HIFlow_v6_PsiEtHICaloUtilLayers = 0;
   HIFlow_v6_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0;
   cccEt2_Et2_Eh_PresB = 0;
   cccEt2_Et2_Eh_EMB = 0;
   cccEt2_Et2_Eh_EMEC = 0;
   cccEt2_Et2_Eh_Tile = 0;
   cccEt2_Et2_Eh_TileGap = 0;
   cccEt2_Et2_Eh_HEC = 0;
   cccEt2_Et2_Eh_FCal = 0;
   cccEt2_Et2_Eh_PresE = 0;
   cccEt2_Et2_Eh_Scint = 0;
   cccEt2_p2_Eh_PresB = 0;
   cccEt2_p2_Eh_EMB = 0;
   cccEt2_p2_Eh_EMEC = 0;
   cccEt2_p2_Eh_Tile = 0;
   cccEt2_p2_Eh_TileGap = 0;
   cccEt2_p2_Eh_HEC = 0;
   cccEt2_p2_Eh_FCal = 0;
   cccEt2_p2_Eh_PresE = 0;
   cccEt2_p2_Eh_Scint = 0;
   cccEt2_n2_Eh_PresB = 0;
   cccEt2_n2_Eh_EMB = 0;
   cccEt2_n2_Eh_EMEC = 0;
   cccEt2_n2_Eh_Tile = 0;
   cccEt2_n2_Eh_TileGap = 0;
   cccEt2_n2_Eh_HEC = 0;
   cccEt2_n2_Eh_FCal = 0;
   cccEt2_n2_Eh_PresE = 0;
   cccEt2_n2_Eh_Scint = 0;
   cl_hadTopo_E = 0;
   cl_hadTopo_pt = 0;
   cl_hadTopo_eta = 0;
   cl_hadTopo_phi = 0;
   cl_hadTopo_E_em = 0;
   cl_hadTopo_E_had = 0;
   cl_hadTopo_significance = 0;
   cl_hadTopo_cellSignificance = 0;
   cl_hadTopo_cellSigSampling = 0;
   cl_hadTopo_firstEdens = 0;
   cl_hadTopo_cellmaxfrac = 0;
   cl_hadTopo_longitudinal = 0;
   cl_hadTopo_secondlambda = 0;
   cl_hadTopo_lateral = 0;
   cl_hadTopo_secondR = 0;
   cl_hadTopo_centerlambda = 0;
   cl_hadTopo_deltaTheta = 0;
   cl_hadTopo_deltaPhi = 0;
   cl_hadTopo_centermag = 0;
   cl_hadTopo_time = 0;
   cl_hadTopo_E_PreSamplerB = 0;
   cl_hadTopo_E_EMB1 = 0;
   cl_hadTopo_E_EMB2 = 0;
   cl_hadTopo_E_EMB3 = 0;
   cl_hadTopo_E_PreSamplerE = 0;
   cl_hadTopo_E_EME1 = 0;
   cl_hadTopo_E_EME2 = 0;
   cl_hadTopo_E_EME3 = 0;
   cl_hadTopo_E_HEC0 = 0;
   cl_hadTopo_E_HEC1 = 0;
   cl_hadTopo_E_HEC2 = 0;
   cl_hadTopo_E_HEC3 = 0;
   cl_hadTopo_E_TileBar0 = 0;
   cl_hadTopo_E_TileBar1 = 0;
   cl_hadTopo_E_TileBar2 = 0;
   cl_hadTopo_E_TileGap1 = 0;
   cl_hadTopo_E_TileGap2 = 0;
   cl_hadTopo_E_TileGap3 = 0;
   cl_hadTopo_E_TileExt0 = 0;
   cl_hadTopo_E_TileExt1 = 0;
   cl_hadTopo_E_TileExt2 = 0;
   cl_hadTopo_E_FCAL0 = 0;
   cl_hadTopo_E_FCAL1 = 0;
   cl_hadTopo_E_FCAL2 = 0;
   HIEtaGap_lowerEta = 0;
   HIEtaGap_upperEta = 0;
   HIEtaGap_lowerEdgeType = 0;
   HIEtaGap_upperEdgeType = 0;
   emcl_E = 0;
   emcl_pt = 0;
   emcl_m = 0;
   emcl_eta = 0;
   emcl_phi = 0;
   emcl_E_em = 0;
   emcl_E_had = 0;
   mu_staco_E = 0;
   mu_staco_pt = 0;
   mu_staco_m = 0;
   mu_staco_eta = 0;
   mu_staco_phi = 0;
   mu_staco_px = 0;
   mu_staco_py = 0;
   mu_staco_pz = 0;
   mu_staco_charge = 0;
   mu_staco_allauthor = 0;
   mu_staco_author = 0;
   mu_staco_beta = 0;
   mu_staco_isMuonLikelihood = 0;
   mu_staco_matchchi2 = 0;
   mu_staco_matchndof = 0;
   mu_staco_etcone20 = 0;
   mu_staco_etcone30 = 0;
   mu_staco_etcone40 = 0;
   mu_staco_nucone20 = 0;
   mu_staco_nucone30 = 0;
   mu_staco_nucone40 = 0;
   mu_staco_ptcone20 = 0;
   mu_staco_ptcone30 = 0;
   mu_staco_ptcone40 = 0;
   mu_staco_etconeNoEm10 = 0;
   mu_staco_etconeNoEm20 = 0;
   mu_staco_etconeNoEm30 = 0;
   mu_staco_etconeNoEm40 = 0;
   mu_staco_scatteringCurvatureSignificance = 0;
   mu_staco_scatteringNeighbourSignificance = 0;
   mu_staco_momentumBalanceSignificance = 0;
   mu_staco_energyLossPar = 0;
   mu_staco_energyLossErr = 0;
   mu_staco_etCore = 0;
   mu_staco_energyLossType = 0;
   mu_staco_caloMuonIdTag = 0;
   mu_staco_caloLRLikelihood = 0;
   mu_staco_bestMatch = 0;
   mu_staco_isStandAloneMuon = 0;
   mu_staco_isCombinedMuon = 0;
   mu_staco_isLowPtReconstructedMuon = 0;
   mu_staco_isSegmentTaggedMuon = 0;
   mu_staco_isCaloMuonId = 0;
   mu_staco_alsoFoundByLowPt = 0;
   mu_staco_alsoFoundByCaloMuonId = 0;
   mu_staco_isSiliconAssociatedForwardMuon = 0;
   mu_staco_loose = 0;
   mu_staco_medium = 0;
   mu_staco_tight = 0;
   mu_staco_d0_exPV = 0;
   mu_staco_z0_exPV = 0;
   mu_staco_phi_exPV = 0;
   mu_staco_theta_exPV = 0;
   mu_staco_qoverp_exPV = 0;
   mu_staco_cb_d0_exPV = 0;
   mu_staco_cb_z0_exPV = 0;
   mu_staco_cb_phi_exPV = 0;
   mu_staco_cb_theta_exPV = 0;
   mu_staco_cb_qoverp_exPV = 0;
   mu_staco_id_d0_exPV = 0;
   mu_staco_id_z0_exPV = 0;
   mu_staco_id_phi_exPV = 0;
   mu_staco_id_theta_exPV = 0;
   mu_staco_id_qoverp_exPV = 0;
   mu_staco_me_d0_exPV = 0;
   mu_staco_me_z0_exPV = 0;
   mu_staco_me_phi_exPV = 0;
   mu_staco_me_theta_exPV = 0;
   mu_staco_me_qoverp_exPV = 0;
   mu_staco_ie_d0_exPV = 0;
   mu_staco_ie_z0_exPV = 0;
   mu_staco_ie_phi_exPV = 0;
   mu_staco_ie_theta_exPV = 0;
   mu_staco_ie_qoverp_exPV = 0;
   mu_staco_SpaceTime_detID = 0;
   mu_staco_SpaceTime_t = 0;
   mu_staco_SpaceTime_tError = 0;
   mu_staco_SpaceTime_weight = 0;
   mu_staco_SpaceTime_x = 0;
   mu_staco_SpaceTime_y = 0;
   mu_staco_SpaceTime_z = 0;
   mu_staco_cov_d0_exPV = 0;
   mu_staco_cov_z0_exPV = 0;
   mu_staco_cov_phi_exPV = 0;
   mu_staco_cov_theta_exPV = 0;
   mu_staco_cov_qoverp_exPV = 0;
   mu_staco_cov_d0_z0_exPV = 0;
   mu_staco_cov_d0_phi_exPV = 0;
   mu_staco_cov_d0_theta_exPV = 0;
   mu_staco_cov_d0_qoverp_exPV = 0;
   mu_staco_cov_z0_phi_exPV = 0;
   mu_staco_cov_z0_theta_exPV = 0;
   mu_staco_cov_z0_qoverp_exPV = 0;
   mu_staco_cov_phi_theta_exPV = 0;
   mu_staco_cov_phi_qoverp_exPV = 0;
   mu_staco_cov_theta_qoverp_exPV = 0;
   mu_staco_id_cov_d0_exPV = 0;
   mu_staco_id_cov_z0_exPV = 0;
   mu_staco_id_cov_phi_exPV = 0;
   mu_staco_id_cov_theta_exPV = 0;
   mu_staco_id_cov_qoverp_exPV = 0;
   mu_staco_me_cov_d0_exPV = 0;
   mu_staco_me_cov_z0_exPV = 0;
   mu_staco_me_cov_phi_exPV = 0;
   mu_staco_me_cov_theta_exPV = 0;
   mu_staco_me_cov_qoverp_exPV = 0;
   mu_staco_ms_d0 = 0;
   mu_staco_ms_z0 = 0;
   mu_staco_ms_phi = 0;
   mu_staco_ms_theta = 0;
   mu_staco_ms_qoverp = 0;
   mu_staco_id_d0 = 0;
   mu_staco_id_z0 = 0;
   mu_staco_id_phi = 0;
   mu_staco_id_theta = 0;
   mu_staco_id_qoverp = 0;
   mu_staco_me_d0 = 0;
   mu_staco_me_z0 = 0;
   mu_staco_me_phi = 0;
   mu_staco_me_theta = 0;
   mu_staco_me_qoverp = 0;
   mu_staco_ie_d0 = 0;
   mu_staco_ie_z0 = 0;
   mu_staco_ie_phi = 0;
   mu_staco_ie_theta = 0;
   mu_staco_ie_qoverp = 0;
   mu_staco_nOutliersOnTrack = 0;
   mu_staco_nBLHits = 0;
   mu_staco_nPixHits = 0;
   mu_staco_nSCTHits = 0;
   mu_staco_nTRTHits = 0;
   mu_staco_nTRTHighTHits = 0;
   mu_staco_nBLSharedHits = 0;
   mu_staco_nPixSharedHits = 0;
   mu_staco_nPixHoles = 0;
   mu_staco_nSCTSharedHits = 0;
   mu_staco_nSCTHoles = 0;
   mu_staco_nTRTOutliers = 0;
   mu_staco_nTRTHighTOutliers = 0;
   mu_staco_nGangedPixels = 0;
   mu_staco_nPixelDeadSensors = 0;
   mu_staco_nSCTDeadSensors = 0;
   mu_staco_nTRTDeadStraws = 0;
   mu_staco_expectBLayerHit = 0;
   mu_staco_nMDTHits = 0;
   mu_staco_nMDTHoles = 0;
   mu_staco_nCSCEtaHits = 0;
   mu_staco_nCSCEtaHoles = 0;
   mu_staco_nCSCUnspoiledEtaHits = 0;
   mu_staco_nCSCPhiHits = 0;
   mu_staco_nCSCPhiHoles = 0;
   mu_staco_nRPCEtaHits = 0;
   mu_staco_nRPCEtaHoles = 0;
   mu_staco_nRPCPhiHits = 0;
   mu_staco_nRPCPhiHoles = 0;
   mu_staco_nTGCEtaHits = 0;
   mu_staco_nTGCEtaHoles = 0;
   mu_staco_nTGCPhiHits = 0;
   mu_staco_nTGCPhiHoles = 0;
   mu_staco_nprecisionLayers = 0;
   mu_staco_nprecisionHoleLayers = 0;
   mu_staco_nphiLayers = 0;
   mu_staco_ntrigEtaLayers = 0;
   mu_staco_nphiHoleLayers = 0;
   mu_staco_ntrigEtaHoleLayers = 0;
   mu_staco_nMDTBIHits = 0;
   mu_staco_nMDTBMHits = 0;
   mu_staco_nMDTBOHits = 0;
   mu_staco_nMDTBEEHits = 0;
   mu_staco_nMDTBIS78Hits = 0;
   mu_staco_nMDTEIHits = 0;
   mu_staco_nMDTEMHits = 0;
   mu_staco_nMDTEOHits = 0;
   mu_staco_nMDTEEHits = 0;
   mu_staco_nRPCLayer1EtaHits = 0;
   mu_staco_nRPCLayer2EtaHits = 0;
   mu_staco_nRPCLayer3EtaHits = 0;
   mu_staco_nRPCLayer1PhiHits = 0;
   mu_staco_nRPCLayer2PhiHits = 0;
   mu_staco_nRPCLayer3PhiHits = 0;
   mu_staco_nTGCLayer1EtaHits = 0;
   mu_staco_nTGCLayer2EtaHits = 0;
   mu_staco_nTGCLayer3EtaHits = 0;
   mu_staco_nTGCLayer4EtaHits = 0;
   mu_staco_nTGCLayer1PhiHits = 0;
   mu_staco_nTGCLayer2PhiHits = 0;
   mu_staco_nTGCLayer3PhiHits = 0;
   mu_staco_nTGCLayer4PhiHits = 0;
   mu_staco_barrelSectors = 0;
   mu_staco_endcapSectors = 0;
   mu_staco_trackd0 = 0;
   mu_staco_trackz0 = 0;
   mu_staco_trackphi = 0;
   mu_staco_tracktheta = 0;
   mu_staco_trackqoverp = 0;
   mu_staco_trackcov_d0 = 0;
   mu_staco_trackcov_z0 = 0;
   mu_staco_trackcov_phi = 0;
   mu_staco_trackcov_theta = 0;
   mu_staco_trackcov_qoverp = 0;
   mu_staco_trackcov_d0_z0 = 0;
   mu_staco_trackcov_d0_phi = 0;
   mu_staco_trackcov_d0_theta = 0;
   mu_staco_trackcov_d0_qoverp = 0;
   mu_staco_trackcov_z0_phi = 0;
   mu_staco_trackcov_z0_theta = 0;
   mu_staco_trackcov_z0_qoverp = 0;
   mu_staco_trackcov_phi_theta = 0;
   mu_staco_trackcov_phi_qoverp = 0;
   mu_staco_trackcov_theta_qoverp = 0;
   mu_staco_trackfitchi2 = 0;
   mu_staco_trackfitndof = 0;
   mu_staco_hastrack = 0;
   mu_staco_trackd0beam = 0;
   mu_staco_trackz0beam = 0;
   mu_staco_tracksigd0beam = 0;
   mu_staco_tracksigz0beam = 0;
   mu_staco_trackd0pv = 0;
   mu_staco_trackz0pv = 0;
   mu_staco_tracksigd0pv = 0;
   mu_staco_tracksigz0pv = 0;
   mu_staco_trackIPEstimate_d0_biasedpvunbiased = 0;
   mu_staco_trackIPEstimate_z0_biasedpvunbiased = 0;
   mu_staco_trackIPEstimate_sigd0_biasedpvunbiased = 0;
   mu_staco_trackIPEstimate_sigz0_biasedpvunbiased = 0;
   mu_staco_trackIPEstimate_d0_unbiasedpvunbiased = 0;
   mu_staco_trackIPEstimate_z0_unbiasedpvunbiased = 0;
   mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased = 0;
   mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased = 0;
   mu_staco_trackd0pvunbiased = 0;
   mu_staco_trackz0pvunbiased = 0;
   mu_staco_tracksigd0pvunbiased = 0;
   mu_staco_tracksigz0pvunbiased = 0;
   mu_staco_type = 0;
   mu_staco_origin = 0;
   mu_staco_truth_dr = 0;
   mu_staco_truth_E = 0;
   mu_staco_truth_pt = 0;
   mu_staco_truth_eta = 0;
   mu_staco_truth_phi = 0;
   mu_staco_truth_type = 0;
   mu_staco_truth_status = 0;
   mu_staco_truth_barcode = 0;
   mu_staco_truth_mothertype = 0;
   mu_staco_truth_motherbarcode = 0;
   mu_staco_truth_matched = 0;
   mu_staco_EFCB_dr = 0;
   mu_staco_EFCB_n = 0;
   mu_staco_EFCB_MuonType = 0;
   mu_staco_EFCB_pt = 0;
   mu_staco_EFCB_eta = 0;
   mu_staco_EFCB_phi = 0;
   mu_staco_EFCB_hasCB = 0;
   mu_staco_EFCB_matched = 0;
   mu_staco_EFMG_dr = 0;
   mu_staco_EFMG_n = 0;
   mu_staco_EFMG_MuonType = 0;
   mu_staco_EFMG_pt = 0;
   mu_staco_EFMG_eta = 0;
   mu_staco_EFMG_phi = 0;
   mu_staco_EFMG_hasMG = 0;
   mu_staco_EFMG_matched = 0;
   mu_staco_EFME_dr = 0;
   mu_staco_EFME_n = 0;
   mu_staco_EFME_MuonType = 0;
   mu_staco_EFME_pt = 0;
   mu_staco_EFME_eta = 0;
   mu_staco_EFME_phi = 0;
   mu_staco_EFME_hasME = 0;
   mu_staco_EFME_matched = 0;
   mu_staco_L2CB_dr = 0;
   mu_staco_L2CB_pt = 0;
   mu_staco_L2CB_eta = 0;
   mu_staco_L2CB_phi = 0;
   mu_staco_L2CB_id_pt = 0;
   mu_staco_L2CB_ms_pt = 0;
   mu_staco_L2CB_nPixHits = 0;
   mu_staco_L2CB_nSCTHits = 0;
   mu_staco_L2CB_nTRTHits = 0;
   mu_staco_L2CB_nTRTHighTHits = 0;
   mu_staco_L2CB_matched = 0;
   mu_staco_L1_dr = 0;
   mu_staco_L1_pt = 0;
   mu_staco_L1_eta = 0;
   mu_staco_L1_phi = 0;
   mu_staco_L1_thrNumber = 0;
   mu_staco_L1_RoINumber = 0;
   mu_staco_L1_sectorAddress = 0;
   mu_staco_L1_firstCandidate = 0;
   mu_staco_L1_moreCandInRoI = 0;
   mu_staco_L1_moreCandInSector = 0;
   mu_staco_L1_source = 0;
   mu_staco_L1_hemisphere = 0;
   mu_staco_L1_charge = 0;
   mu_staco_L1_vetoed = 0;
   mu_staco_L1_matched = 0;
   mu_muid_E = 0;
   mu_muid_pt = 0;
   mu_muid_m = 0;
   mu_muid_eta = 0;
   mu_muid_phi = 0;
   mu_muid_px = 0;
   mu_muid_py = 0;
   mu_muid_pz = 0;
   mu_muid_charge = 0;
   mu_muid_allauthor = 0;
   mu_muid_author = 0;
   mu_muid_beta = 0;
   mu_muid_isMuonLikelihood = 0;
   mu_muid_matchchi2 = 0;
   mu_muid_matchndof = 0;
   mu_muid_etcone20 = 0;
   mu_muid_etcone30 = 0;
   mu_muid_etcone40 = 0;
   mu_muid_nucone20 = 0;
   mu_muid_nucone30 = 0;
   mu_muid_nucone40 = 0;
   mu_muid_ptcone20 = 0;
   mu_muid_ptcone30 = 0;
   mu_muid_ptcone40 = 0;
   mu_muid_etconeNoEm10 = 0;
   mu_muid_etconeNoEm20 = 0;
   mu_muid_etconeNoEm30 = 0;
   mu_muid_etconeNoEm40 = 0;
   mu_muid_scatteringCurvatureSignificance = 0;
   mu_muid_scatteringNeighbourSignificance = 0;
   mu_muid_momentumBalanceSignificance = 0;
   mu_muid_energyLossPar = 0;
   mu_muid_energyLossErr = 0;
   mu_muid_etCore = 0;
   mu_muid_energyLossType = 0;
   mu_muid_caloMuonIdTag = 0;
   mu_muid_caloLRLikelihood = 0;
   mu_muid_bestMatch = 0;
   mu_muid_isStandAloneMuon = 0;
   mu_muid_isCombinedMuon = 0;
   mu_muid_isLowPtReconstructedMuon = 0;
   mu_muid_isSegmentTaggedMuon = 0;
   mu_muid_isCaloMuonId = 0;
   mu_muid_alsoFoundByLowPt = 0;
   mu_muid_alsoFoundByCaloMuonId = 0;
   mu_muid_isSiliconAssociatedForwardMuon = 0;
   mu_muid_loose = 0;
   mu_muid_medium = 0;
   mu_muid_tight = 0;
   mu_muid_d0_exPV = 0;
   mu_muid_z0_exPV = 0;
   mu_muid_phi_exPV = 0;
   mu_muid_theta_exPV = 0;
   mu_muid_qoverp_exPV = 0;
   mu_muid_cb_d0_exPV = 0;
   mu_muid_cb_z0_exPV = 0;
   mu_muid_cb_phi_exPV = 0;
   mu_muid_cb_theta_exPV = 0;
   mu_muid_cb_qoverp_exPV = 0;
   mu_muid_id_d0_exPV = 0;
   mu_muid_id_z0_exPV = 0;
   mu_muid_id_phi_exPV = 0;
   mu_muid_id_theta_exPV = 0;
   mu_muid_id_qoverp_exPV = 0;
   mu_muid_me_d0_exPV = 0;
   mu_muid_me_z0_exPV = 0;
   mu_muid_me_phi_exPV = 0;
   mu_muid_me_theta_exPV = 0;
   mu_muid_me_qoverp_exPV = 0;
   mu_muid_ie_d0_exPV = 0;
   mu_muid_ie_z0_exPV = 0;
   mu_muid_ie_phi_exPV = 0;
   mu_muid_ie_theta_exPV = 0;
   mu_muid_ie_qoverp_exPV = 0;
   mu_muid_SpaceTime_detID = 0;
   mu_muid_SpaceTime_t = 0;
   mu_muid_SpaceTime_tError = 0;
   mu_muid_SpaceTime_weight = 0;
   mu_muid_SpaceTime_x = 0;
   mu_muid_SpaceTime_y = 0;
   mu_muid_SpaceTime_z = 0;
   mu_muid_cov_d0_exPV = 0;
   mu_muid_cov_z0_exPV = 0;
   mu_muid_cov_phi_exPV = 0;
   mu_muid_cov_theta_exPV = 0;
   mu_muid_cov_qoverp_exPV = 0;
   mu_muid_cov_d0_z0_exPV = 0;
   mu_muid_cov_d0_phi_exPV = 0;
   mu_muid_cov_d0_theta_exPV = 0;
   mu_muid_cov_d0_qoverp_exPV = 0;
   mu_muid_cov_z0_phi_exPV = 0;
   mu_muid_cov_z0_theta_exPV = 0;
   mu_muid_cov_z0_qoverp_exPV = 0;
   mu_muid_cov_phi_theta_exPV = 0;
   mu_muid_cov_phi_qoverp_exPV = 0;
   mu_muid_cov_theta_qoverp_exPV = 0;
   mu_muid_id_cov_d0_exPV = 0;
   mu_muid_id_cov_z0_exPV = 0;
   mu_muid_id_cov_phi_exPV = 0;
   mu_muid_id_cov_theta_exPV = 0;
   mu_muid_id_cov_qoverp_exPV = 0;
   mu_muid_me_cov_d0_exPV = 0;
   mu_muid_me_cov_z0_exPV = 0;
   mu_muid_me_cov_phi_exPV = 0;
   mu_muid_me_cov_theta_exPV = 0;
   mu_muid_me_cov_qoverp_exPV = 0;
   mu_muid_ms_d0 = 0;
   mu_muid_ms_z0 = 0;
   mu_muid_ms_phi = 0;
   mu_muid_ms_theta = 0;
   mu_muid_ms_qoverp = 0;
   mu_muid_id_d0 = 0;
   mu_muid_id_z0 = 0;
   mu_muid_id_phi = 0;
   mu_muid_id_theta = 0;
   mu_muid_id_qoverp = 0;
   mu_muid_me_d0 = 0;
   mu_muid_me_z0 = 0;
   mu_muid_me_phi = 0;
   mu_muid_me_theta = 0;
   mu_muid_me_qoverp = 0;
   mu_muid_ie_d0 = 0;
   mu_muid_ie_z0 = 0;
   mu_muid_ie_phi = 0;
   mu_muid_ie_theta = 0;
   mu_muid_ie_qoverp = 0;
   mu_muid_nOutliersOnTrack = 0;
   mu_muid_nBLHits = 0;
   mu_muid_nPixHits = 0;
   mu_muid_nSCTHits = 0;
   mu_muid_nTRTHits = 0;
   mu_muid_nTRTHighTHits = 0;
   mu_muid_nBLSharedHits = 0;
   mu_muid_nPixSharedHits = 0;
   mu_muid_nPixHoles = 0;
   mu_muid_nSCTSharedHits = 0;
   mu_muid_nSCTHoles = 0;
   mu_muid_nTRTOutliers = 0;
   mu_muid_nTRTHighTOutliers = 0;
   mu_muid_nGangedPixels = 0;
   mu_muid_nPixelDeadSensors = 0;
   mu_muid_nSCTDeadSensors = 0;
   mu_muid_nTRTDeadStraws = 0;
   mu_muid_expectBLayerHit = 0;
   mu_muid_nMDTHits = 0;
   mu_muid_nMDTHoles = 0;
   mu_muid_nCSCEtaHits = 0;
   mu_muid_nCSCEtaHoles = 0;
   mu_muid_nCSCUnspoiledEtaHits = 0;
   mu_muid_nCSCPhiHits = 0;
   mu_muid_nCSCPhiHoles = 0;
   mu_muid_nRPCEtaHits = 0;
   mu_muid_nRPCEtaHoles = 0;
   mu_muid_nRPCPhiHits = 0;
   mu_muid_nRPCPhiHoles = 0;
   mu_muid_nTGCEtaHits = 0;
   mu_muid_nTGCEtaHoles = 0;
   mu_muid_nTGCPhiHits = 0;
   mu_muid_nTGCPhiHoles = 0;
   mu_muid_nprecisionLayers = 0;
   mu_muid_nprecisionHoleLayers = 0;
   mu_muid_nphiLayers = 0;
   mu_muid_ntrigEtaLayers = 0;
   mu_muid_nphiHoleLayers = 0;
   mu_muid_ntrigEtaHoleLayers = 0;
   mu_muid_nMDTBIHits = 0;
   mu_muid_nMDTBMHits = 0;
   mu_muid_nMDTBOHits = 0;
   mu_muid_nMDTBEEHits = 0;
   mu_muid_nMDTBIS78Hits = 0;
   mu_muid_nMDTEIHits = 0;
   mu_muid_nMDTEMHits = 0;
   mu_muid_nMDTEOHits = 0;
   mu_muid_nMDTEEHits = 0;
   mu_muid_nRPCLayer1EtaHits = 0;
   mu_muid_nRPCLayer2EtaHits = 0;
   mu_muid_nRPCLayer3EtaHits = 0;
   mu_muid_nRPCLayer1PhiHits = 0;
   mu_muid_nRPCLayer2PhiHits = 0;
   mu_muid_nRPCLayer3PhiHits = 0;
   mu_muid_nTGCLayer1EtaHits = 0;
   mu_muid_nTGCLayer2EtaHits = 0;
   mu_muid_nTGCLayer3EtaHits = 0;
   mu_muid_nTGCLayer4EtaHits = 0;
   mu_muid_nTGCLayer1PhiHits = 0;
   mu_muid_nTGCLayer2PhiHits = 0;
   mu_muid_nTGCLayer3PhiHits = 0;
   mu_muid_nTGCLayer4PhiHits = 0;
   mu_muid_barrelSectors = 0;
   mu_muid_endcapSectors = 0;
   mu_muid_trackd0 = 0;
   mu_muid_trackz0 = 0;
   mu_muid_trackphi = 0;
   mu_muid_tracktheta = 0;
   mu_muid_trackqoverp = 0;
   mu_muid_trackcov_d0 = 0;
   mu_muid_trackcov_z0 = 0;
   mu_muid_trackcov_phi = 0;
   mu_muid_trackcov_theta = 0;
   mu_muid_trackcov_qoverp = 0;
   mu_muid_trackcov_d0_z0 = 0;
   mu_muid_trackcov_d0_phi = 0;
   mu_muid_trackcov_d0_theta = 0;
   mu_muid_trackcov_d0_qoverp = 0;
   mu_muid_trackcov_z0_phi = 0;
   mu_muid_trackcov_z0_theta = 0;
   mu_muid_trackcov_z0_qoverp = 0;
   mu_muid_trackcov_phi_theta = 0;
   mu_muid_trackcov_phi_qoverp = 0;
   mu_muid_trackcov_theta_qoverp = 0;
   mu_muid_trackfitchi2 = 0;
   mu_muid_trackfitndof = 0;
   mu_muid_hastrack = 0;
   mu_muid_trackd0beam = 0;
   mu_muid_trackz0beam = 0;
   mu_muid_tracksigd0beam = 0;
   mu_muid_tracksigz0beam = 0;
   mu_muid_trackd0pv = 0;
   mu_muid_trackz0pv = 0;
   mu_muid_tracksigd0pv = 0;
   mu_muid_tracksigz0pv = 0;
   mu_muid_trackIPEstimate_d0_biasedpvunbiased = 0;
   mu_muid_trackIPEstimate_z0_biasedpvunbiased = 0;
   mu_muid_trackIPEstimate_sigd0_biasedpvunbiased = 0;
   mu_muid_trackIPEstimate_sigz0_biasedpvunbiased = 0;
   mu_muid_trackIPEstimate_d0_unbiasedpvunbiased = 0;
   mu_muid_trackIPEstimate_z0_unbiasedpvunbiased = 0;
   mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased = 0;
   mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased = 0;
   mu_muid_trackd0pvunbiased = 0;
   mu_muid_trackz0pvunbiased = 0;
   mu_muid_tracksigd0pvunbiased = 0;
   mu_muid_tracksigz0pvunbiased = 0;
   mu_muid_type = 0;
   mu_muid_origin = 0;
   mu_muid_truth_dr = 0;
   mu_muid_truth_E = 0;
   mu_muid_truth_pt = 0;
   mu_muid_truth_eta = 0;
   mu_muid_truth_phi = 0;
   mu_muid_truth_type = 0;
   mu_muid_truth_status = 0;
   mu_muid_truth_barcode = 0;
   mu_muid_truth_mothertype = 0;
   mu_muid_truth_motherbarcode = 0;
   mu_muid_truth_matched = 0;
   mu_muid_EFCB_dr = 0;
   mu_muid_EFCB_n = 0;
   mu_muid_EFCB_MuonType = 0;
   mu_muid_EFCB_pt = 0;
   mu_muid_EFCB_eta = 0;
   mu_muid_EFCB_phi = 0;
   mu_muid_EFCB_hasCB = 0;
   mu_muid_EFCB_matched = 0;
   mu_muid_EFMG_dr = 0;
   mu_muid_EFMG_n = 0;
   mu_muid_EFMG_MuonType = 0;
   mu_muid_EFMG_pt = 0;
   mu_muid_EFMG_eta = 0;
   mu_muid_EFMG_phi = 0;
   mu_muid_EFMG_hasMG = 0;
   mu_muid_EFMG_matched = 0;
   mu_muid_EFME_dr = 0;
   mu_muid_EFME_n = 0;
   mu_muid_EFME_MuonType = 0;
   mu_muid_EFME_pt = 0;
   mu_muid_EFME_eta = 0;
   mu_muid_EFME_phi = 0;
   mu_muid_EFME_hasME = 0;
   mu_muid_EFME_matched = 0;
   mu_muid_L2CB_dr = 0;
   mu_muid_L2CB_pt = 0;
   mu_muid_L2CB_eta = 0;
   mu_muid_L2CB_phi = 0;
   mu_muid_L2CB_id_pt = 0;
   mu_muid_L2CB_ms_pt = 0;
   mu_muid_L2CB_nPixHits = 0;
   mu_muid_L2CB_nSCTHits = 0;
   mu_muid_L2CB_nTRTHits = 0;
   mu_muid_L2CB_nTRTHighTHits = 0;
   mu_muid_L2CB_matched = 0;
   mu_muid_L1_dr = 0;
   mu_muid_L1_pt = 0;
   mu_muid_L1_eta = 0;
   mu_muid_L1_phi = 0;
   mu_muid_L1_thrNumber = 0;
   mu_muid_L1_RoINumber = 0;
   mu_muid_L1_sectorAddress = 0;
   mu_muid_L1_firstCandidate = 0;
   mu_muid_L1_moreCandInRoI = 0;
   mu_muid_L1_moreCandInSector = 0;
   mu_muid_L1_source = 0;
   mu_muid_L1_hemisphere = 0;
   mu_muid_L1_charge = 0;
   mu_muid_L1_vetoed = 0;
   mu_muid_L1_matched = 0;
   muid_nScatters = 0;
   muid_scatSignificance = 0;
   muid_neighbourSignificance = 0;
   muid_eta = 0;
   muid_probability = 0;
   muid_barcode = 0;
   muid_index = 0;
   mu_E = 0;
   mu_pt = 0;
   mu_m = 0;
   mu_eta = 0;
   mu_phi = 0;
   mu_px = 0;
   mu_py = 0;
   mu_pz = 0;
   mu_charge = 0;
   mu_allauthor = 0;
   mu_author = 0;
   mu_beta = 0;
   mu_isMuonLikelihood = 0;
   mu_matchchi2 = 0;
   mu_matchndof = 0;
   mu_etcone20 = 0;
   mu_etcone30 = 0;
   mu_etcone40 = 0;
   mu_nucone20 = 0;
   mu_nucone30 = 0;
   mu_nucone40 = 0;
   mu_ptcone20 = 0;
   mu_ptcone30 = 0;
   mu_ptcone40 = 0;
   mu_etconeNoEm10 = 0;
   mu_etconeNoEm20 = 0;
   mu_etconeNoEm30 = 0;
   mu_etconeNoEm40 = 0;
   mu_scatteringCurvatureSignificance = 0;
   mu_scatteringNeighbourSignificance = 0;
   mu_momentumBalanceSignificance = 0;
   mu_energyLossPar = 0;
   mu_energyLossErr = 0;
   mu_etCore = 0;
   mu_energyLossType = 0;
   mu_caloMuonIdTag = 0;
   mu_caloLRLikelihood = 0;
   mu_bestMatch = 0;
   mu_isStandAloneMuon = 0;
   mu_isCombinedMuon = 0;
   mu_isLowPtReconstructedMuon = 0;
   mu_isSegmentTaggedMuon = 0;
   mu_isCaloMuonId = 0;
   mu_alsoFoundByLowPt = 0;
   mu_alsoFoundByCaloMuonId = 0;
   mu_isSiliconAssociatedForwardMuon = 0;
   mu_loose = 0;
   mu_medium = 0;
   mu_tight = 0;
   mu_d0_exPV = 0;
   mu_z0_exPV = 0;
   mu_phi_exPV = 0;
   mu_theta_exPV = 0;
   mu_qoverp_exPV = 0;
   mu_cb_d0_exPV = 0;
   mu_cb_z0_exPV = 0;
   mu_cb_phi_exPV = 0;
   mu_cb_theta_exPV = 0;
   mu_cb_qoverp_exPV = 0;
   mu_id_d0_exPV = 0;
   mu_id_z0_exPV = 0;
   mu_id_phi_exPV = 0;
   mu_id_theta_exPV = 0;
   mu_id_qoverp_exPV = 0;
   mu_me_d0_exPV = 0;
   mu_me_z0_exPV = 0;
   mu_me_phi_exPV = 0;
   mu_me_theta_exPV = 0;
   mu_me_qoverp_exPV = 0;
   mu_ie_d0_exPV = 0;
   mu_ie_z0_exPV = 0;
   mu_ie_phi_exPV = 0;
   mu_ie_theta_exPV = 0;
   mu_ie_qoverp_exPV = 0;
   mu_SpaceTime_detID = 0;
   mu_SpaceTime_t = 0;
   mu_SpaceTime_tError = 0;
   mu_SpaceTime_weight = 0;
   mu_SpaceTime_x = 0;
   mu_SpaceTime_y = 0;
   mu_SpaceTime_z = 0;
   mu_cov_d0_exPV = 0;
   mu_cov_z0_exPV = 0;
   mu_cov_phi_exPV = 0;
   mu_cov_theta_exPV = 0;
   mu_cov_qoverp_exPV = 0;
   mu_cov_d0_z0_exPV = 0;
   mu_cov_d0_phi_exPV = 0;
   mu_cov_d0_theta_exPV = 0;
   mu_cov_d0_qoverp_exPV = 0;
   mu_cov_z0_phi_exPV = 0;
   mu_cov_z0_theta_exPV = 0;
   mu_cov_z0_qoverp_exPV = 0;
   mu_cov_phi_theta_exPV = 0;
   mu_cov_phi_qoverp_exPV = 0;
   mu_cov_theta_qoverp_exPV = 0;
   mu_id_cov_d0_exPV = 0;
   mu_id_cov_z0_exPV = 0;
   mu_id_cov_phi_exPV = 0;
   mu_id_cov_theta_exPV = 0;
   mu_id_cov_qoverp_exPV = 0;
   mu_me_cov_d0_exPV = 0;
   mu_me_cov_z0_exPV = 0;
   mu_me_cov_phi_exPV = 0;
   mu_me_cov_theta_exPV = 0;
   mu_me_cov_qoverp_exPV = 0;
   mu_ms_d0 = 0;
   mu_ms_z0 = 0;
   mu_ms_phi = 0;
   mu_ms_theta = 0;
   mu_ms_qoverp = 0;
   mu_id_d0 = 0;
   mu_id_z0 = 0;
   mu_id_phi = 0;
   mu_id_theta = 0;
   mu_id_qoverp = 0;
   mu_me_d0 = 0;
   mu_me_z0 = 0;
   mu_me_phi = 0;
   mu_me_theta = 0;
   mu_me_qoverp = 0;
   mu_ie_d0 = 0;
   mu_ie_z0 = 0;
   mu_ie_phi = 0;
   mu_ie_theta = 0;
   mu_ie_qoverp = 0;
   mu_nOutliersOnTrack = 0;
   mu_nBLHits = 0;
   mu_nPixHits = 0;
   mu_nSCTHits = 0;
   mu_nTRTHits = 0;
   mu_nTRTHighTHits = 0;
   mu_nBLSharedHits = 0;
   mu_nPixSharedHits = 0;
   mu_nPixHoles = 0;
   mu_nSCTSharedHits = 0;
   mu_nSCTHoles = 0;
   mu_nTRTOutliers = 0;
   mu_nTRTHighTOutliers = 0;
   mu_nGangedPixels = 0;
   mu_nPixelDeadSensors = 0;
   mu_nSCTDeadSensors = 0;
   mu_nTRTDeadStraws = 0;
   mu_expectBLayerHit = 0;
   mu_nMDTHits = 0;
   mu_nMDTHoles = 0;
   mu_nCSCEtaHits = 0;
   mu_nCSCEtaHoles = 0;
   mu_nCSCUnspoiledEtaHits = 0;
   mu_nCSCPhiHits = 0;
   mu_nCSCPhiHoles = 0;
   mu_nRPCEtaHits = 0;
   mu_nRPCEtaHoles = 0;
   mu_nRPCPhiHits = 0;
   mu_nRPCPhiHoles = 0;
   mu_nTGCEtaHits = 0;
   mu_nTGCEtaHoles = 0;
   mu_nTGCPhiHits = 0;
   mu_nTGCPhiHoles = 0;
   mu_nprecisionLayers = 0;
   mu_nprecisionHoleLayers = 0;
   mu_nphiLayers = 0;
   mu_ntrigEtaLayers = 0;
   mu_nphiHoleLayers = 0;
   mu_ntrigEtaHoleLayers = 0;
   mu_nMDTBIHits = 0;
   mu_nMDTBMHits = 0;
   mu_nMDTBOHits = 0;
   mu_nMDTBEEHits = 0;
   mu_nMDTBIS78Hits = 0;
   mu_nMDTEIHits = 0;
   mu_nMDTEMHits = 0;
   mu_nMDTEOHits = 0;
   mu_nMDTEEHits = 0;
   mu_nRPCLayer1EtaHits = 0;
   mu_nRPCLayer2EtaHits = 0;
   mu_nRPCLayer3EtaHits = 0;
   mu_nRPCLayer1PhiHits = 0;
   mu_nRPCLayer2PhiHits = 0;
   mu_nRPCLayer3PhiHits = 0;
   mu_nTGCLayer1EtaHits = 0;
   mu_nTGCLayer2EtaHits = 0;
   mu_nTGCLayer3EtaHits = 0;
   mu_nTGCLayer4EtaHits = 0;
   mu_nTGCLayer1PhiHits = 0;
   mu_nTGCLayer2PhiHits = 0;
   mu_nTGCLayer3PhiHits = 0;
   mu_nTGCLayer4PhiHits = 0;
   mu_barrelSectors = 0;
   mu_endcapSectors = 0;
   mu_trackd0 = 0;
   mu_trackz0 = 0;
   mu_trackphi = 0;
   mu_tracktheta = 0;
   mu_trackqoverp = 0;
   mu_trackcov_d0 = 0;
   mu_trackcov_z0 = 0;
   mu_trackcov_phi = 0;
   mu_trackcov_theta = 0;
   mu_trackcov_qoverp = 0;
   mu_trackcov_d0_z0 = 0;
   mu_trackcov_d0_phi = 0;
   mu_trackcov_d0_theta = 0;
   mu_trackcov_d0_qoverp = 0;
   mu_trackcov_z0_phi = 0;
   mu_trackcov_z0_theta = 0;
   mu_trackcov_z0_qoverp = 0;
   mu_trackcov_phi_theta = 0;
   mu_trackcov_phi_qoverp = 0;
   mu_trackcov_theta_qoverp = 0;
   mu_trackfitchi2 = 0;
   mu_trackfitndof = 0;
   mu_hastrack = 0;
   mu_trackd0beam = 0;
   mu_trackz0beam = 0;
   mu_tracksigd0beam = 0;
   mu_tracksigz0beam = 0;
   mu_trackd0pv = 0;
   mu_trackz0pv = 0;
   mu_tracksigd0pv = 0;
   mu_tracksigz0pv = 0;
   mu_trackIPEstimate_d0_biasedpvunbiased = 0;
   mu_trackIPEstimate_z0_biasedpvunbiased = 0;
   mu_trackIPEstimate_sigd0_biasedpvunbiased = 0;
   mu_trackIPEstimate_sigz0_biasedpvunbiased = 0;
   mu_trackIPEstimate_d0_unbiasedpvunbiased = 0;
   mu_trackIPEstimate_z0_unbiasedpvunbiased = 0;
   mu_trackIPEstimate_sigd0_unbiasedpvunbiased = 0;
   mu_trackIPEstimate_sigz0_unbiasedpvunbiased = 0;
   mu_trackd0pvunbiased = 0;
   mu_trackz0pvunbiased = 0;
   mu_tracksigd0pvunbiased = 0;
   mu_tracksigz0pvunbiased = 0;
   mu_type = 0;
   mu_origin = 0;
   mu_truth_dr = 0;
   mu_truth_E = 0;
   mu_truth_pt = 0;
   mu_truth_eta = 0;
   mu_truth_phi = 0;
   mu_truth_type = 0;
   mu_truth_status = 0;
   mu_truth_barcode = 0;
   mu_truth_mothertype = 0;
   mu_truth_motherbarcode = 0;
   mu_truth_matched = 0;
   mu_EFCB_dr = 0;
   mu_EFCB_n = 0;
   mu_EFCB_MuonType = 0;
   mu_EFCB_pt = 0;
   mu_EFCB_eta = 0;
   mu_EFCB_phi = 0;
   mu_EFCB_hasCB = 0;
   mu_EFCB_matched = 0;
   mu_EFMG_dr = 0;
   mu_EFMG_n = 0;
   mu_EFMG_MuonType = 0;
   mu_EFMG_pt = 0;
   mu_EFMG_eta = 0;
   mu_EFMG_phi = 0;
   mu_EFMG_hasMG = 0;
   mu_EFMG_matched = 0;
   mu_EFME_dr = 0;
   mu_EFME_n = 0;
   mu_EFME_MuonType = 0;
   mu_EFME_pt = 0;
   mu_EFME_eta = 0;
   mu_EFME_phi = 0;
   mu_EFME_hasME = 0;
   mu_EFME_matched = 0;
   mu_L2CB_dr = 0;
   mu_L2CB_pt = 0;
   mu_L2CB_eta = 0;
   mu_L2CB_phi = 0;
   mu_L2CB_id_pt = 0;
   mu_L2CB_ms_pt = 0;
   mu_L2CB_nPixHits = 0;
   mu_L2CB_nSCTHits = 0;
   mu_L2CB_nTRTHits = 0;
   mu_L2CB_nTRTHighTHits = 0;
   mu_L2CB_matched = 0;
   mu_L1_dr = 0;
   mu_L1_pt = 0;
   mu_L1_eta = 0;
   mu_L1_phi = 0;
   mu_L1_thrNumber = 0;
   mu_L1_RoINumber = 0;
   mu_L1_sectorAddress = 0;
   mu_L1_firstCandidate = 0;
   mu_L1_moreCandInRoI = 0;
   mu_L1_moreCandInSector = 0;
   mu_L1_source = 0;
   mu_L1_hemisphere = 0;
   mu_L1_charge = 0;
   mu_L1_vetoed = 0;
   mu_L1_matched = 0;
   trig_L1_TAV = 0;
   trig_L2_passedPhysics = 0;
   trig_EF_passedPhysics = 0;
   trig_L1_TBP = 0;
   trig_L1_TAP = 0;
   trig_L2_passedRaw = 0;
   trig_EF_passedRaw = 0;
   trig_L2_resurrected = 0;
   trig_EF_resurrected = 0;
   trig_L2_passedThrough = 0;
   trig_EF_passedThrough = 0;
   trig_L2_wasPrescaled = 0;
   trig_L2_wasResurrected = 0;
   trig_EF_wasPrescaled = 0;
   trig_EF_wasResurrected = 0;
   trig_L1_jet_eta = 0;
   trig_L1_jet_phi = 0;
   trig_L1_jet_thrNames = 0;
   trig_L1_jet_thrValues = 0;
   trig_L1_jet_thrPattern = 0;
   trig_L1_jet_RoIWord = 0;
   trig_L1_jet_et4x4 = 0;
   trig_L1_jet_et6x6 = 0;
   trig_L1_jet_et8x8 = 0;
   trig_L1_emtau_eta = 0;
   trig_L1_emtau_phi = 0;
   trig_L1_emtau_thrNames = 0;
   trig_L1_emtau_thrValues = 0;
   trig_L1_emtau_core = 0;
   trig_L1_emtau_EMClus = 0;
   trig_L1_emtau_tauClus = 0;
   trig_L1_emtau_EMIsol = 0;
   trig_L1_emtau_hadIsol = 0;
   trig_L1_emtau_hadCore = 0;
   trig_L1_emtau_thrPattern = 0;
   trig_L1_emtau_RoIWord = 0;
   trig_L1_mu_pt = 0;
   trig_L1_mu_eta = 0;
   trig_L1_mu_phi = 0;
   trig_L1_mu_thrName = 0;
   trig_L1_mu_thrNumber = 0;
   trig_L1_mu_RoINumber = 0;
   trig_L1_mu_sectorAddress = 0;
   trig_L1_mu_firstCandidate = 0;
   trig_L1_mu_moreCandInRoI = 0;
   trig_L1_mu_moreCandInSector = 0;
   trig_L1_mu_source = 0;
   trig_L1_mu_hemisphere = 0;
   trig_L1_mu_charge = 0;
   trig_L1_mu_vetoed = 0;
   trig_L1_mu_RoIWord = 0;
   trig_EF_jet_E = 0;
   trig_EF_jet_pt = 0;
   trig_EF_jet_m = 0;
   trig_EF_jet_eta = 0;
   trig_EF_jet_phi = 0;
   trig_EF_jet_a4tcem = 0;
   trig_EF_jet_a2tcem = 0;
   trig_EF_jet_a4tchad = 0;
   trig_EF_jet_a4hi = 0;
   trig_EF_jet_a2hi = 0;
   trig_EF_jet_RoIword = 0;
   trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5 = 0;
   trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5_L1TE90 = 0;
   trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE100 = 0;
   trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE90 = 0;
   trig_EF_jet_EF_2j10_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j10_a4hi_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j10_a4hi_eta50_deta40 = 0;
   trig_EF_jet_EF_2j10_a4hi_eta50_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j10_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_deta40_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_deta40_L2te_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0 = 0;
   trig_EF_jet_EF_2j15_a4hi_EFFS_2L1J5 = 0;
   trig_EF_jet_EF_2j15_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j15_a4hi_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j15_a4hi_eta50_deta40 = 0;
   trig_EF_jet_EF_2j15_a4hi_eta50_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j15_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_2j15_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_2j15_a4tchad_L2FS = 0;
   trig_EF_jet_EF_2j15_a4tchad_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j15_a4tchad_eta50_deta40_L2mbMbts = 0;
   trig_EF_jet_EF_2j20_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j20_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j7_a4hi_EFFS_2L1J5 = 0;
   trig_EF_jet_EF_2j7_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_2j7_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_3j15_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_3j15_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_3j15_a4tchad_L2FS = 0;
   trig_EF_jet_EF_3j15_a4tchad_L2FS_2L1J5 = 0;
   trig_EF_jet_EF_fj10_a4hi_EFFS_L1FJ0 = 0;
   trig_EF_jet_EF_fj10_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_fj10_a4tchad_EFFS_L1FJ0 = 0;
   trig_EF_jet_EF_fj10_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_fj10_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_fj15_a4hi_EFFS_L1FJ0 = 0;
   trig_EF_jet_EF_fj15_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_fj15_a4tchad_EFFS_L1FJ0 = 0;
   trig_EF_jet_EF_fj15_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_fj15_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_fj7_a4hi_EFFS_L1FJ0 = 0;
   trig_EF_jet_EF_fj7_a4tchad_EFFS_L1FJ0 = 0;
   trig_EF_jet_EF_j100_a4hi_EFFS_L1J20 = 0;
   trig_EF_jet_EF_j100_a4tchad_EFFS_L1J20 = 0;
   trig_EF_jet_EF_j10_a4hi_EFFS_L1EM3 = 0;
   trig_EF_jet_EF_j10_a4hi_EFFS_L1J5 = 0;
   trig_EF_jet_EF_j10_a4hi_EFFS_L1TAU3 = 0;
   trig_EF_jet_EF_j10_a4hi_EFFS_L1TE100 = 0;
   trig_EF_jet_EF_j10_a4hi_EFFS_L1TE90 = 0;
   trig_EF_jet_EF_j10_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j10_a4tchad_EFFS_L1J5 = 0;
   trig_EF_jet_EF_j10_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_j10_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_j10_u0uchad_LArNoiseBurst = 0;
   trig_EF_jet_EF_j10_u0uchad_empty_LArNoiseBurst = 0;
   trig_EF_jet_EF_j10_u0uchad_firstempty_LArNoiseBurst = 0;
   trig_EF_jet_EF_j15_Ecorr = 0;
   trig_EF_jet_EF_j15_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j15_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_j15_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_j15_a4tj_EFFS_L1ZDC = 0;
   trig_EF_jet_EF_j20_Ecorr = 0;
   trig_EF_jet_EF_j20_a4hi_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j20_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j20_a4tchad_EFFS_L1J5 = 0;
   trig_EF_jet_EF_j20_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_j20_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_j20_a4tj_EFFS_L1ZDC = 0;
   trig_EF_jet_EF_j30_a4hi_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j30_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j30_a4tchad_EFFS_L1J5 = 0;
   trig_EF_jet_EF_j30_a4tchad_EFFS_L1RD0 = 0;
   trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0 = 0;
   trig_EF_jet_EF_j30_a4tchad_EFFS_L2te_L1RD0 = 0;
   trig_EF_jet_EF_j30_u0uchad_empty_LArNoiseBurst = 0;
   trig_EF_jet_EF_j40_a4hi_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j40_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j40_a4tchad_EFFS_L1J5 = 0;
   trig_EF_jet_EF_j40_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j40_a4tj_EFFS_L1ZDC = 0;
   trig_EF_jet_EF_j50_a4hi_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j50_a4hi_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j50_a4tchad_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j50_a4tchad_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j50_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j60_a4hi_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j60_a4tchad_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j60_a4tchad_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j75_a4hi_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j75_a4hi_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j75_a4tchad_EFFS_L1J10 = 0;
   trig_EF_jet_EF_j75_a4tchad_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j75_a4tj_EFFS_L1ZDC = 0;
   trig_EF_jet_EF_j7_a4tchad_EFFS_L1J5 = 0;
   trig_EF_jet_EF_j7_a4tchad_EFFS_L2mbMbts = 0;
   trig_EF_jet_EF_j80_a4hi_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j80_a4tchad_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j90_a4hi_EFFS_L1J15 = 0;
   trig_EF_jet_EF_j90_a4tchad_EFFS_L1J15 = 0;
   trig_L1_esum_thrNames = 0;
   trig_EF_met_nameOfComponent = 0;
   trig_EF_met_MExComponent = 0;
   trig_EF_met_MEyComponent = 0;
   trig_EF_met_MEzComponent = 0;
   trig_EF_met_sumEtComponent = 0;
   trig_EF_met_sumEComponent = 0;
   trig_EF_met_componentCalib0 = 0;
   trig_EF_met_componentCalib1 = 0;
   trig_EF_met_sumOfSigns = 0;
   trig_EF_met_usedChannels = 0;
   trig_EF_met_status = 0;
   trig_EF_ph_E = 0;
   trig_EF_ph_Et = 0;
   trig_EF_ph_pt = 0;
   trig_EF_ph_m = 0;
   trig_EF_ph_eta = 0;
   trig_EF_ph_phi = 0;
   trig_EF_ph_px = 0;
   trig_EF_ph_py = 0;
   trig_EF_ph_pz = 0;
   trig_EF_ph_author = 0;
   trig_EF_ph_isRecovered = 0;
   trig_EF_ph_isEM = 0;
   trig_EF_ph_isEMLoose = 0;
   trig_EF_ph_isEMMedium = 0;
   trig_EF_ph_isEMTight = 0;
   trig_EF_ph_convFlag = 0;
   trig_EF_ph_isConv = 0;
   trig_EF_ph_nConv = 0;
   trig_EF_ph_nSingleTrackConv = 0;
   trig_EF_ph_nDoubleTrackConv = 0;
   trig_EF_ph_loose = 0;
   trig_EF_ph_looseIso = 0;
   trig_EF_ph_tight = 0;
   trig_EF_ph_tightIso = 0;
   trig_EF_ph_looseAR = 0;
   trig_EF_ph_looseARIso = 0;
   trig_EF_ph_tightAR = 0;
   trig_EF_ph_tightARIso = 0;
   trig_EF_ph_Ethad = 0;
   trig_EF_ph_Ethad1 = 0;
   trig_EF_ph_E033 = 0;
   trig_EF_ph_f1 = 0;
   trig_EF_ph_f1core = 0;
   trig_EF_ph_Emins1 = 0;
   trig_EF_ph_fside = 0;
   trig_EF_ph_Emax2 = 0;
   trig_EF_ph_ws3 = 0;
   trig_EF_ph_wstot = 0;
   trig_EF_ph_E132 = 0;
   trig_EF_ph_E1152 = 0;
   trig_EF_ph_emaxs1 = 0;
   trig_EF_ph_deltaEs = 0;
   trig_EF_ph_E233 = 0;
   trig_EF_ph_E237 = 0;
   trig_EF_ph_E277 = 0;
   trig_EF_ph_weta2 = 0;
   trig_EF_ph_f3 = 0;
   trig_EF_ph_f3core = 0;
   trig_EF_ph_rphiallcalo = 0;
   trig_EF_ph_Etcone45 = 0;
   trig_EF_ph_Etcone15 = 0;
   trig_EF_ph_Etcone20 = 0;
   trig_EF_ph_Etcone25 = 0;
   trig_EF_ph_Etcone30 = 0;
   trig_EF_ph_Etcone35 = 0;
   trig_EF_ph_Etcone40 = 0;
   trig_EF_ph_ptcone20 = 0;
   trig_EF_ph_ptcone30 = 0;
   trig_EF_ph_ptcone40 = 0;
   trig_EF_ph_convanglematch = 0;
   trig_EF_ph_convtrackmatch = 0;
   trig_EF_ph_hasconv = 0;
   trig_EF_ph_convvtxx = 0;
   trig_EF_ph_convvtxy = 0;
   trig_EF_ph_convvtxz = 0;
   trig_EF_ph_Rconv = 0;
   trig_EF_ph_zconv = 0;
   trig_EF_ph_convvtxchi2 = 0;
   trig_EF_ph_pt1conv = 0;
   trig_EF_ph_convtrk1nBLHits = 0;
   trig_EF_ph_convtrk1nPixHits = 0;
   trig_EF_ph_convtrk1nSCTHits = 0;
   trig_EF_ph_convtrk1nTRTHits = 0;
   trig_EF_ph_pt2conv = 0;
   trig_EF_ph_convtrk2nBLHits = 0;
   trig_EF_ph_convtrk2nPixHits = 0;
   trig_EF_ph_convtrk2nSCTHits = 0;
   trig_EF_ph_convtrk2nTRTHits = 0;
   trig_EF_ph_ptconv = 0;
   trig_EF_ph_pzconv = 0;
   trig_EF_ph_reta = 0;
   trig_EF_ph_rphi = 0;
   trig_EF_ph_cl_E = 0;
   trig_EF_ph_cl_pt = 0;
   trig_EF_ph_cl_eta = 0;
   trig_EF_ph_cl_phi = 0;
   trig_EF_ph_cl_etas2 = 0;
   trig_EF_el_E = 0;
   trig_EF_el_Et = 0;
   trig_EF_el_pt = 0;
   trig_EF_el_m = 0;
   trig_EF_el_eta = 0;
   trig_EF_el_phi = 0;
   trig_EF_el_px = 0;
   trig_EF_el_py = 0;
   trig_EF_el_pz = 0;
   trig_EF_el_charge = 0;
   trig_EF_el_author = 0;
   trig_EF_el_isEM = 0;
   trig_EF_el_isEMLoose = 0;
   trig_EF_el_isEMMedium = 0;
   trig_EF_el_isEMTight = 0;
   trig_EF_el_loose = 0;
   trig_EF_el_looseIso = 0;
   trig_EF_el_medium = 0;
   trig_EF_el_mediumIso = 0;
   trig_EF_el_mediumWithoutTrack = 0;
   trig_EF_el_mediumIsoWithoutTrack = 0;
   trig_EF_el_tight = 0;
   trig_EF_el_tightIso = 0;
   trig_EF_el_tightWithoutTrack = 0;
   trig_EF_el_tightIsoWithoutTrack = 0;
   trig_EF_el_loosePP = 0;
   trig_EF_el_loosePPIso = 0;
   trig_EF_el_mediumPP = 0;
   trig_EF_el_mediumPPIso = 0;
   trig_EF_el_tightPP = 0;
   trig_EF_el_tightPPIso = 0;
   trig_EF_el_Ethad = 0;
   trig_EF_el_Ethad1 = 0;
   trig_EF_el_f1 = 0;
   trig_EF_el_f1core = 0;
   trig_EF_el_Emins1 = 0;
   trig_EF_el_fside = 0;
   trig_EF_el_Emax2 = 0;
   trig_EF_el_ws3 = 0;
   trig_EF_el_wstot = 0;
   trig_EF_el_emaxs1 = 0;
   trig_EF_el_deltaEs = 0;
   trig_EF_el_E233 = 0;
   trig_EF_el_E237 = 0;
   trig_EF_el_E277 = 0;
   trig_EF_el_weta2 = 0;
   trig_EF_el_f3 = 0;
   trig_EF_el_f3core = 0;
   trig_EF_el_rphiallcalo = 0;
   trig_EF_el_Etcone45 = 0;
   trig_EF_el_Etcone15 = 0;
   trig_EF_el_Etcone20 = 0;
   trig_EF_el_Etcone25 = 0;
   trig_EF_el_Etcone30 = 0;
   trig_EF_el_Etcone35 = 0;
   trig_EF_el_Etcone40 = 0;
   trig_EF_el_ptcone20 = 0;
   trig_EF_el_ptcone30 = 0;
   trig_EF_el_ptcone40 = 0;
   trig_EF_el_pos7 = 0;
   trig_EF_el_etacorrmag = 0;
   trig_EF_el_deltaeta1 = 0;
   trig_EF_el_deltaeta2 = 0;
   trig_EF_el_deltaphi2 = 0;
   trig_EF_el_expectHitInBLayer = 0;
   trig_EF_el_trackd0_physics = 0;
   trig_EF_el_reta = 0;
   trig_EF_el_rphi = 0;
   trig_EF_el_EtringnoisedR03sig2 = 0;
   trig_EF_el_EtringnoisedR03sig3 = 0;
   trig_EF_el_EtringnoisedR03sig4 = 0;
   trig_EF_el_isolationlikelihoodjets = 0;
   trig_EF_el_isolationlikelihoodhqelectrons = 0;
   trig_EF_el_electronweight = 0;
   trig_EF_el_electronbgweight = 0;
   trig_EF_el_softeweight = 0;
   trig_EF_el_softebgweight = 0;
   trig_EF_el_neuralnet = 0;
   trig_EF_el_Hmatrix = 0;
   trig_EF_el_Hmatrix5 = 0;
   trig_EF_el_adaboost = 0;
   trig_EF_el_softeneuralnet = 0;
   trig_EF_el_zvertex = 0;
   trig_EF_el_errz = 0;
   trig_EF_el_etap = 0;
   trig_EF_el_depth = 0;
   trig_EF_el_Es0 = 0;
   trig_EF_el_etas0 = 0;
   trig_EF_el_phis0 = 0;
   trig_EF_el_Es1 = 0;
   trig_EF_el_etas1 = 0;
   trig_EF_el_phis1 = 0;
   trig_EF_el_Es2 = 0;
   trig_EF_el_etas2 = 0;
   trig_EF_el_phis2 = 0;
   trig_EF_el_Es3 = 0;
   trig_EF_el_etas3 = 0;
   trig_EF_el_phis3 = 0;
   trig_EF_el_cl_E = 0;
   trig_EF_el_cl_pt = 0;
   trig_EF_el_cl_eta = 0;
   trig_EF_el_cl_phi = 0;
   trig_EF_el_trackd0 = 0;
   trig_EF_el_trackz0 = 0;
   trig_EF_el_trackphi = 0;
   trig_EF_el_tracktheta = 0;
   trig_EF_el_trackqoverp = 0;
   trig_EF_el_trackpt = 0;
   trig_EF_el_tracketa = 0;
   trig_EF_el_trackfitchi2 = 0;
   trig_EF_el_trackfitndof = 0;
   trig_EF_el_nBLHits = 0;
   trig_EF_el_nPixHits = 0;
   trig_EF_el_nSCTHits = 0;
   trig_EF_el_nTRTHits = 0;
   trig_EF_el_nTRTHighTHits = 0;
   trig_EF_el_nTRTXenonHits = 0;
   trig_EF_el_nPixHoles = 0;
   trig_EF_el_nSCTHoles = 0;
   trig_EF_el_nTRTHoles = 0;
   trig_EF_el_nPixelDeadSensors = 0;
   trig_EF_el_nSCTDeadSensors = 0;
   trig_EF_el_nBLSharedHits = 0;
   trig_EF_el_nPixSharedHits = 0;
   trig_EF_el_nSCTSharedHits = 0;
   trig_EF_el_nBLayerSplitHits = 0;
   trig_EF_el_nPixSplitHits = 0;
   trig_EF_el_nBLayerOutliers = 0;
   trig_EF_el_nPixelOutliers = 0;
   trig_EF_el_nSCTOutliers = 0;
   trig_EF_el_nTRTOutliers = 0;
   trig_EF_el_nTRTHighTOutliers = 0;
   trig_EF_el_expectBLayerHit = 0;
   trig_EF_el_nSiHits = 0;
   trig_EF_el_TRTHighTHitsRatio = 0;
   trig_EF_el_TRTHighTOutliersRatio = 0;
   trig_EF_el_pixeldEdx = 0;
   trig_EF_el_nGoodHitsPixeldEdx = 0;
   trig_EF_el_massPixeldEdx = 0;
   trig_EF_el_likelihoodsPixeldEdx = 0;
   trig_EF_el_eProbabilityComb = 0;
   trig_EF_el_eProbabilityHT = 0;
   trig_EF_el_eProbabilityToT = 0;
   trig_EF_el_eProbabilityBrem = 0;
   trig_EF_el_vertweight = 0;
   trig_EF_el_vertx = 0;
   trig_EF_el_verty = 0;
   trig_EF_el_vertz = 0;
   trig_EF_el_hastrack = 0;
   trig_EF_trigmuonef_effs15 = 0;
   trig_EF_trigmuonef_effs18 = 0;
   trig_EF_trigmuonef_effs24 = 0;
   trig_EF_trigmuonef_RoINum = 0;
   trig_EF_trigmuonef_NSegments = 0;
   trig_EF_trigmuonef_NMdtHits = 0;
   trig_EF_trigmuonef_NRpcHits = 0;
   trig_EF_trigmuonef_NTgcHits = 0;
   trig_EF_trigmuonef_NCscHits = 0;
   trig_EF_trigmuonef_EtaPreviousLevel = 0;
   trig_EF_trigmuonef_PhiPreviousLevel = 0;
   trig_EF_trigmuonef_track_n = 0;
   trig_EF_trigmuonef_track_MuonType = 0;
   trig_EF_trigmuonef_track_MS_pt = 0;
   trig_EF_trigmuonef_track_MS_eta = 0;
   trig_EF_trigmuonef_track_MS_phi = 0;
   trig_EF_trigmuonef_track_MS_charge = 0;
   trig_EF_trigmuonef_track_MS_d0 = 0;
   trig_EF_trigmuonef_track_MS_z0 = 0;
   trig_EF_trigmuonef_track_MS_chi2 = 0;
   trig_EF_trigmuonef_track_MS_chi2prob = 0;
   trig_EF_trigmuonef_track_MS_posX = 0;
   trig_EF_trigmuonef_track_MS_posY = 0;
   trig_EF_trigmuonef_track_MS_posZ = 0;
   trig_EF_trigmuonef_track_MS_NRpcHitsPhi = 0;
   trig_EF_trigmuonef_track_MS_NTgcHitsPhi = 0;
   trig_EF_trigmuonef_track_MS_NCscHitsPhi = 0;
   trig_EF_trigmuonef_track_MS_NRpcHitsEta = 0;
   trig_EF_trigmuonef_track_MS_NTgcHitsEta = 0;
   trig_EF_trigmuonef_track_MS_NCscHitsEta = 0;
   trig_EF_trigmuonef_track_MS_NMdtHits = 0;
   trig_EF_trigmuonef_track_MS_hasMS = 0;
   trig_EF_trigmuonef_track_SA_pt = 0;
   trig_EF_trigmuonef_track_SA_eta = 0;
   trig_EF_trigmuonef_track_SA_phi = 0;
   trig_EF_trigmuonef_track_SA_charge = 0;
   trig_EF_trigmuonef_track_SA_d0 = 0;
   trig_EF_trigmuonef_track_SA_z0 = 0;
   trig_EF_trigmuonef_track_SA_chi2 = 0;
   trig_EF_trigmuonef_track_SA_chi2prob = 0;
   trig_EF_trigmuonef_track_SA_posX = 0;
   trig_EF_trigmuonef_track_SA_posY = 0;
   trig_EF_trigmuonef_track_SA_posZ = 0;
   trig_EF_trigmuonef_track_SA_hasSA = 0;
   trig_EF_trigmuonef_track_CB_pt = 0;
   trig_EF_trigmuonef_track_CB_eta = 0;
   trig_EF_trigmuonef_track_CB_phi = 0;
   trig_EF_trigmuonef_track_CB_charge = 0;
   trig_EF_trigmuonef_track_CB_d0 = 0;
   trig_EF_trigmuonef_track_CB_z0 = 0;
   trig_EF_trigmuonef_track_CB_chi2 = 0;
   trig_EF_trigmuonef_track_CB_chi2prob = 0;
   trig_EF_trigmuonef_track_CB_posX = 0;
   trig_EF_trigmuonef_track_CB_posY = 0;
   trig_EF_trigmuonef_track_CB_posZ = 0;
   trig_EF_trigmuonef_track_CB_matchChi2 = 0;
   trig_EF_trigmuonef_track_CB_NIdSctHits = 0;
   trig_EF_trigmuonef_track_CB_NIdPixelHits = 0;
   trig_EF_trigmuonef_track_CB_NTrtHits = 0;
   trig_EF_trigmuonef_track_CB_hasCB = 0;
   bcmRDO_channel = 0;
   bcmRDO_nhits = 0;
   bcmRDO_pulse1pos = 0;
   bcmRDO_pulse1width = 0;
   bcmRDO_pulse2pos = 0;
   bcmRDO_pulse2width = 0;
   bcmRDO_lvl1a = 0;
   bcmRDO_bcid = 0;
   bcmRDO_lvl1id = 0;
   ctpRDO_pit = 0;
   ctpRDO_tbp = 0;
   ctpRDO_tap = 0;
   ctpRDO_tav = 0;
   ctp_decisionItems = 0;
   ctp_decisionWords = 0;
   mbtsLvl2_energies = 0;
   mbtsLvl2_times = 0;
   lvl2_sp_pixelClusEndcapC_contents = 0;
   lvl2_sp_pixelClusBarrel_contents = 0;
   lvl2_sp_pixelClusEndcapA_contents = 0;
   lvl2_sp_droppedPixelModuleIds = 0;
   lvl2_sp_droppedSctModuleIds = 0;
   lvl2_mbTrt_endcapC_contents = 0;
   lvl2_mbTrt_barrel_contents = 0;
   lvl2_mbTrt_endcapA_contents = 0;
   ef_trk_z0_pt_contents = 0;
   ef_trk_eta_phi_contents = 0;
   trig_L2_jet_E = 0;
   trig_L2_jet_eta = 0;
   trig_L2_jet_phi = 0;
   trig_L2_jet_RoIWord = 0;
   trig_L2_jet_InputType = 0;
   trig_L2_jet_OutputType = 0;
   trig_L2_jet_counter = 0;
   trig_L2_jet_c4cchad = 0;
   trig_L2_jet_c4ccem = 0;
   trig_L2_jet_c4uchad = 0;
   trig_L2_jet_ehad0 = 0;
   trig_L2_jet_eem0 = 0;
   trig_L2_jet_nLeadingCells = 0;
   trig_L2_jet_hecf = 0;
   trig_L2_jet_jetQuality = 0;
   trig_L2_jet_emf = 0;
   trig_L2_jet_jetTimeCells = 0;
   vx_x = 0;
   vx_y = 0;
   vx_z = 0;
   vx_err_x = 0;
   vx_err_y = 0;
   vx_err_z = 0;
   vx_cov_xy = 0;
   vx_cov_xz = 0;
   vx_cov_yz = 0;
   vx_type = 0;
   vx_chi2 = 0;
   vx_ndof = 0;
   vx_px = 0;
   vx_py = 0;
   vx_pz = 0;
   vx_E = 0;
   vx_m = 0;
   vx_nTracks = 0;
   vx_sumPt = 0;
   vx_trk_weight = 0;
   vx_trk_n = 0;
   vx_trk_index = 0;
   el_E = 0;
   el_Et = 0;
   el_pt = 0;
   el_m = 0;
   el_eta = 0;
   el_phi = 0;
   el_px = 0;
   el_py = 0;
   el_pz = 0;
   el_charge = 0;
   el_author = 0;
   el_isEM = 0;
   el_isEMLoose = 0;
   el_isEMMedium = 0;
   el_isEMTight = 0;
   el_OQ = 0;
   el_convFlag = 0;
   el_isConv = 0;
   el_nConv = 0;
   el_nSingleTrackConv = 0;
   el_nDoubleTrackConv = 0;
   el_type = 0;
   el_origin = 0;
   el_typebkg = 0;
   el_originbkg = 0;
   el_mediumWithoutTrack = 0;
   el_mediumIsoWithoutTrack = 0;
   el_tightWithoutTrack = 0;
   el_tightIsoWithoutTrack = 0;
   el_loose = 0;
   el_looseIso = 0;
   el_medium = 0;
   el_mediumIso = 0;
   el_tight = 0;
   el_tightIso = 0;
   el_loosePP = 0;
   el_loosePPIso = 0;
   el_mediumPP = 0;
   el_mediumPPIso = 0;
   el_tightPP = 0;
   el_tightPPIso = 0;
   el_goodOQ = 0;
   el_Ethad = 0;
   el_Ethad1 = 0;
   el_f1 = 0;
   el_f1core = 0;
   el_Emins1 = 0;
   el_fside = 0;
   el_Emax2 = 0;
   el_ws3 = 0;
   el_wstot = 0;
   el_emaxs1 = 0;
   el_deltaEs = 0;
   el_E233 = 0;
   el_E237 = 0;
   el_E277 = 0;
   el_weta2 = 0;
   el_f3 = 0;
   el_f3core = 0;
   el_rphiallcalo = 0;
   el_Etcone45 = 0;
   el_Etcone15 = 0;
   el_Etcone20 = 0;
   el_Etcone25 = 0;
   el_Etcone30 = 0;
   el_Etcone35 = 0;
   el_Etcone40 = 0;
   el_ptcone20 = 0;
   el_ptcone30 = 0;
   el_ptcone40 = 0;
   el_nucone20 = 0;
   el_nucone30 = 0;
   el_nucone40 = 0;
   el_Etcone15_pt_corrected = 0;
   el_Etcone20_pt_corrected = 0;
   el_Etcone25_pt_corrected = 0;
   el_Etcone30_pt_corrected = 0;
   el_Etcone35_pt_corrected = 0;
   el_Etcone40_pt_corrected = 0;
   el_convanglematch = 0;
   el_convtrackmatch = 0;
   el_pos7 = 0;
   el_etacorrmag = 0;
   el_deltaeta1 = 0;
   el_deltaeta2 = 0;
   el_deltaphi2 = 0;
   el_deltaphiRescaled = 0;
   el_deltaPhiFromLast = 0;
   el_deltaPhiRot = 0;
   el_expectHitInBLayer = 0;
   el_trackd0_physics = 0;
   el_etaSampling1 = 0;
   el_reta = 0;
   el_rphi = 0;
   el_topoEtcone20 = 0;
   el_topoEtcone30 = 0;
   el_topoEtcone40 = 0;
   el_materialTraversed = 0;
   el_EtringnoisedR03sig2 = 0;
   el_EtringnoisedR03sig3 = 0;
   el_EtringnoisedR03sig4 = 0;
   el_ptcone20_zpv05 = 0;
   el_ptcone30_zpv05 = 0;
   el_ptcone40_zpv05 = 0;
   el_nucone20_zpv05 = 0;
   el_nucone30_zpv05 = 0;
   el_nucone40_zpv05 = 0;
   el_isolationlikelihoodjets = 0;
   el_isolationlikelihoodhqelectrons = 0;
   el_electronweight = 0;
   el_electronbgweight = 0;
   el_softeweight = 0;
   el_softebgweight = 0;
   el_neuralnet = 0;
   el_Hmatrix = 0;
   el_Hmatrix5 = 0;
   el_adaboost = 0;
   el_softeneuralnet = 0;
   el_ringernn = 0;
   el_zvertex = 0;
   el_errz = 0;
   el_etap = 0;
   el_depth = 0;
   el_refittedTrack_n = 0;
   el_refittedTrack_author = 0;
   el_refittedTrack_chi2 = 0;
   el_refittedTrack_hasBrem = 0;
   el_refittedTrack_bremRadius = 0;
   el_refittedTrack_bremZ = 0;
   el_refittedTrack_bremRadiusErr = 0;
   el_refittedTrack_bremZErr = 0;
   el_refittedTrack_bremFitStatus = 0;
   el_refittedTrack_qoverp = 0;
   el_refittedTrack_d0 = 0;
   el_refittedTrack_z0 = 0;
   el_refittedTrack_theta = 0;
   el_refittedTrack_phi = 0;
   el_refittedTrack_LMqoverp = 0;
   el_refittedTrack_covd0 = 0;
   el_refittedTrack_covz0 = 0;
   el_refittedTrack_covphi = 0;
   el_refittedTrack_covtheta = 0;
   el_refittedTrack_covqoverp = 0;
   el_refittedTrack_covd0z0 = 0;
   el_refittedTrack_covz0phi = 0;
   el_refittedTrack_covz0theta = 0;
   el_refittedTrack_covz0qoverp = 0;
   el_refittedTrack_covd0phi = 0;
   el_refittedTrack_covd0theta = 0;
   el_refittedTrack_covd0qoverp = 0;
   el_refittedTrack_covphitheta = 0;
   el_refittedTrack_covphiqoverp = 0;
   el_refittedTrack_covthetaqoverp = 0;
   el_refittedTrack_d0_wrtBL = 0;
   el_refittedTrack_z0_wrtBL = 0;
   el_refittedTrack_phi_wrtBL = 0;
   el_refittedTrack_theta_wrtBL = 0;
   el_refittedTrack_qoverp_wrtBL = 0;
   el_refittedTrack_d0_err_wrtBL = 0;
   el_refittedTrack_z0_err_wrtBL = 0;
   el_refittedTrack_phi_err_wrtBL = 0;
   el_refittedTrack_theta_err_wrtBL = 0;
   el_refittedTrack_qoverp_err_wrtBL = 0;
   el_refittedTrack_d0_z0_err_wrtBL = 0;
   el_refittedTrack_d0_phi_err_wrtBL = 0;
   el_refittedTrack_d0_theta_err_wrtBL = 0;
   el_refittedTrack_d0_qoverp_err_wrtBL = 0;
   el_refittedTrack_z0_phi_err_wrtBL = 0;
   el_refittedTrack_z0_theta_err_wrtBL = 0;
   el_refittedTrack_z0_qoverp_err_wrtBL = 0;
   el_refittedTrack_phi_theta_err_wrtBL = 0;
   el_refittedTrack_phi_qoverp_err_wrtBL = 0;
   el_refittedTrack_theta_qoverp_err_wrtBL = 0;
   el_Es0 = 0;
   el_etas0 = 0;
   el_phis0 = 0;
   el_Es1 = 0;
   el_etas1 = 0;
   el_phis1 = 0;
   el_Es2 = 0;
   el_etas2 = 0;
   el_phis2 = 0;
   el_Es3 = 0;
   el_etas3 = 0;
   el_phis3 = 0;
   el_E_PreSamplerB = 0;
   el_E_EMB1 = 0;
   el_E_EMB2 = 0;
   el_E_EMB3 = 0;
   el_E_PreSamplerE = 0;
   el_E_EME1 = 0;
   el_E_EME2 = 0;
   el_E_EME3 = 0;
   el_E_HEC0 = 0;
   el_E_HEC1 = 0;
   el_E_HEC2 = 0;
   el_E_HEC3 = 0;
   el_E_TileBar0 = 0;
   el_E_TileBar1 = 0;
   el_E_TileBar2 = 0;
   el_E_TileGap1 = 0;
   el_E_TileGap2 = 0;
   el_E_TileGap3 = 0;
   el_E_TileExt0 = 0;
   el_E_TileExt1 = 0;
   el_E_TileExt2 = 0;
   el_E_FCAL0 = 0;
   el_E_FCAL1 = 0;
   el_E_FCAL2 = 0;
   el_cl_E = 0;
   el_cl_pt = 0;
   el_cl_eta = 0;
   el_cl_phi = 0;
   el_cl_etaCalo = 0;
   el_cl_phiCalo = 0;
   el_firstEdens = 0;
   el_cellmaxfrac = 0;
   el_longitudinal = 0;
   el_secondlambda = 0;
   el_lateral = 0;
   el_secondR = 0;
   el_centerlambda = 0;
   el_rawcl_Es0 = 0;
   el_rawcl_etas0 = 0;
   el_rawcl_phis0 = 0;
   el_rawcl_Es1 = 0;
   el_rawcl_etas1 = 0;
   el_rawcl_phis1 = 0;
   el_rawcl_Es2 = 0;
   el_rawcl_etas2 = 0;
   el_rawcl_phis2 = 0;
   el_rawcl_Es3 = 0;
   el_rawcl_etas3 = 0;
   el_rawcl_phis3 = 0;
   el_rawcl_E = 0;
   el_rawcl_pt = 0;
   el_rawcl_eta = 0;
   el_rawcl_phi = 0;
   el_trackd0 = 0;
   el_trackz0 = 0;
   el_trackphi = 0;
   el_tracktheta = 0;
   el_trackqoverp = 0;
   el_trackpt = 0;
   el_tracketa = 0;
   el_trackcov_d0 = 0;
   el_trackcov_z0 = 0;
   el_trackcov_phi = 0;
   el_trackcov_theta = 0;
   el_trackcov_qoverp = 0;
   el_trackcov_d0_z0 = 0;
   el_trackcov_d0_phi = 0;
   el_trackcov_d0_theta = 0;
   el_trackcov_d0_qoverp = 0;
   el_trackcov_z0_phi = 0;
   el_trackcov_z0_theta = 0;
   el_trackcov_z0_qoverp = 0;
   el_trackcov_phi_theta = 0;
   el_trackcov_phi_qoverp = 0;
   el_trackcov_theta_qoverp = 0;
   el_trackfitchi2 = 0;
   el_trackfitndof = 0;
   el_nBLHits = 0;
   el_nPixHits = 0;
   el_nSCTHits = 0;
   el_nTRTHits = 0;
   el_nTRTHighTHits = 0;
   el_nTRTXenonHits = 0;
   el_nPixHoles = 0;
   el_nSCTHoles = 0;
   el_nTRTHoles = 0;
   el_nPixelDeadSensors = 0;
   el_nSCTDeadSensors = 0;
   el_nBLSharedHits = 0;
   el_nPixSharedHits = 0;
   el_nSCTSharedHits = 0;
   el_nBLayerSplitHits = 0;
   el_nPixSplitHits = 0;
   el_nBLayerOutliers = 0;
   el_nPixelOutliers = 0;
   el_nSCTOutliers = 0;
   el_nTRTOutliers = 0;
   el_nTRTHighTOutliers = 0;
   el_nContribPixelLayers = 0;
   el_nGangedPixels = 0;
   el_nGangedFlaggedFakes = 0;
   el_nPixelSpoiltHits = 0;
   el_nSCTDoubleHoles = 0;
   el_nSCTSpoiltHits = 0;
   el_expectBLayerHit = 0;
   el_nSiHits = 0;
   el_TRTHighTHitsRatio = 0;
   el_TRTHighTOutliersRatio = 0;
   el_pixeldEdx = 0;
   el_nGoodHitsPixeldEdx = 0;
   el_massPixeldEdx = 0;
   el_likelihoodsPixeldEdx = 0;
   el_eProbabilityComb = 0;
   el_eProbabilityHT = 0;
   el_eProbabilityToT = 0;
   el_eProbabilityBrem = 0;
   el_vertweight = 0;
   el_vertx = 0;
   el_verty = 0;
   el_vertz = 0;
   el_trackd0beam = 0;
   el_trackz0beam = 0;
   el_tracksigd0beam = 0;
   el_tracksigz0beam = 0;
   el_trackd0pv = 0;
   el_trackz0pv = 0;
   el_tracksigd0pv = 0;
   el_tracksigz0pv = 0;
   el_trackIPEstimate_d0_biasedpvunbiased = 0;
   el_trackIPEstimate_z0_biasedpvunbiased = 0;
   el_trackIPEstimate_sigd0_biasedpvunbiased = 0;
   el_trackIPEstimate_sigz0_biasedpvunbiased = 0;
   el_trackIPEstimate_d0_unbiasedpvunbiased = 0;
   el_trackIPEstimate_z0_unbiasedpvunbiased = 0;
   el_trackIPEstimate_sigd0_unbiasedpvunbiased = 0;
   el_trackIPEstimate_sigz0_unbiasedpvunbiased = 0;
   el_trackd0pvunbiased = 0;
   el_trackz0pvunbiased = 0;
   el_tracksigd0pvunbiased = 0;
   el_tracksigz0pvunbiased = 0;
   el_Unrefittedtrack_d0 = 0;
   el_Unrefittedtrack_z0 = 0;
   el_Unrefittedtrack_phi = 0;
   el_Unrefittedtrack_theta = 0;
   el_Unrefittedtrack_qoverp = 0;
   el_Unrefittedtrack_pt = 0;
   el_Unrefittedtrack_eta = 0;
   el_theta_LM = 0;
   el_qoverp_LM = 0;
   el_locX_LM = 0;
   el_locY_LM = 0;
   el_phi_LM = 0;
   el_theta_err_LM = 0;
   el_qoverp_err_LM = 0;
   el_locX_err_LM = 0;
   el_locY_err_LM = 0;
   el_phi_err_LM = 0;
   el_locX_locY_err_LM = 0;
   el_locX_phi_err_LM = 0;
   el_locX_theta_err_LM = 0;
   el_locX_qoverp_err_LM = 0;
   el_locY_phi_err_LM = 0;
   el_locY_theta_err_LM = 0;
   el_locY_qoverp_err_LM = 0;
   el_phi_theta_err_LM = 0;
   el_phi_qoverp_err_LM = 0;
   el_theta_qoverp_err_LM = 0;
   el_hastrack = 0;
   el_deltaEmax2 = 0;
   el_calibHitsShowerDepth = 0;
   el_isIso = 0;
   el_mvaptcone20 = 0;
   el_mvaptcone30 = 0;
   el_mvaptcone40 = 0;
   el_CaloPointing_eta = 0;
   el_CaloPointing_sigma_eta = 0;
   el_CaloPointing_zvertex = 0;
   el_CaloPointing_sigma_zvertex = 0;
   el_HPV_eta = 0;
   el_HPV_sigma_eta = 0;
   el_HPV_zvertex = 0;
   el_HPV_sigma_zvertex = 0;
   el_truth_bremSi = 0;
   el_truth_bremLoc = 0;
   el_truth_sumbrem = 0;
   el_topoEtcone60 = 0;
   el_ES0_real = 0;
   el_ES1_real = 0;
   el_ES2_real = 0;
   el_ES3_real = 0;
   el_EcellS0 = 0;
   el_etacellS0 = 0;
   el_Etcone40_ED_corrected = 0;
   el_Etcone40_corrected = 0;
   el_topoEtcone20_corrected = 0;
   el_topoEtcone30_corrected = 0;
   el_topoEtcone40_corrected = 0;
   el_ED_median = 0;
   el_ED_sigma = 0;
   el_ED_Njets = 0;
   el_EF_dr = 0;
   el_EF_index = 0;
   el_L2_dr = 0;
   el_L1_dr = 0;
   el_L1_index = 0;
   ph_E = 0;
   ph_Et = 0;
   ph_pt = 0;
   ph_m = 0;
   ph_eta = 0;
   ph_phi = 0;
   ph_px = 0;
   ph_py = 0;
   ph_pz = 0;
   ph_author = 0;
   ph_isRecovered = 0;
   ph_isEM = 0;
   ph_isEMLoose = 0;
   ph_isEMMedium = 0;
   ph_isEMTight = 0;
   ph_OQ = 0;
   ph_convFlag = 0;
   ph_isConv = 0;
   ph_nConv = 0;
   ph_nSingleTrackConv = 0;
   ph_nDoubleTrackConv = 0;
   ph_type = 0;
   ph_origin = 0;
   ph_truth_deltaRRecPhoton = 0;
   ph_truth_E = 0;
   ph_truth_pt = 0;
   ph_truth_eta = 0;
   ph_truth_phi = 0;
   ph_truth_type = 0;
   ph_truth_status = 0;
   ph_truth_barcode = 0;
   ph_truth_mothertype = 0;
   ph_truth_motherbarcode = 0;
   ph_truth_matched = 0;
   ph_loose = 0;
   ph_looseIso = 0;
   ph_tight = 0;
   ph_tightIso = 0;
   ph_looseAR = 0;
   ph_looseARIso = 0;
   ph_tightAR = 0;
   ph_tightARIso = 0;
   ph_goodOQ = 0;
   ph_Ethad = 0;
   ph_Ethad1 = 0;
   ph_E033 = 0;
   ph_f1 = 0;
   ph_f1core = 0;
   ph_Emins1 = 0;
   ph_fside = 0;
   ph_Emax2 = 0;
   ph_ws3 = 0;
   ph_wstot = 0;
   ph_E132 = 0;
   ph_E1152 = 0;
   ph_emaxs1 = 0;
   ph_deltaEs = 0;
   ph_E233 = 0;
   ph_E237 = 0;
   ph_E277 = 0;
   ph_weta2 = 0;
   ph_f3 = 0;
   ph_f3core = 0;
   ph_rphiallcalo = 0;
   ph_Etcone45 = 0;
   ph_Etcone15 = 0;
   ph_Etcone20 = 0;
   ph_Etcone25 = 0;
   ph_Etcone30 = 0;
   ph_Etcone35 = 0;
   ph_Etcone40 = 0;
   ph_ptcone20 = 0;
   ph_ptcone30 = 0;
   ph_ptcone40 = 0;
   ph_nucone20 = 0;
   ph_nucone30 = 0;
   ph_nucone40 = 0;
   ph_Etcone15_pt_corrected = 0;
   ph_Etcone20_pt_corrected = 0;
   ph_Etcone25_pt_corrected = 0;
   ph_Etcone30_pt_corrected = 0;
   ph_Etcone35_pt_corrected = 0;
   ph_Etcone40_pt_corrected = 0;
   ph_convanglematch = 0;
   ph_convtrackmatch = 0;
   ph_hasconv = 0;
   ph_convvtxx = 0;
   ph_convvtxy = 0;
   ph_convvtxz = 0;
   ph_Rconv = 0;
   ph_zconv = 0;
   ph_convvtxchi2 = 0;
   ph_pt1conv = 0;
   ph_convtrk1nBLHits = 0;
   ph_convtrk1nPixHits = 0;
   ph_convtrk1nSCTHits = 0;
   ph_convtrk1nTRTHits = 0;
   ph_pt2conv = 0;
   ph_convtrk2nBLHits = 0;
   ph_convtrk2nPixHits = 0;
   ph_convtrk2nSCTHits = 0;
   ph_convtrk2nTRTHits = 0;
   ph_ptconv = 0;
   ph_pzconv = 0;
   ph_reta = 0;
   ph_rphi = 0;
   ph_topoEtcone20 = 0;
   ph_topoEtcone30 = 0;
   ph_topoEtcone40 = 0;
   ph_materialTraversed = 0;
   ph_EtringnoisedR03sig2 = 0;
   ph_EtringnoisedR03sig3 = 0;
   ph_EtringnoisedR03sig4 = 0;
   ph_ptcone20_zpv05 = 0;
   ph_ptcone30_zpv05 = 0;
   ph_ptcone40_zpv05 = 0;
   ph_nucone20_zpv05 = 0;
   ph_nucone30_zpv05 = 0;
   ph_nucone40_zpv05 = 0;
   ph_isolationlikelihoodjets = 0;
   ph_isolationlikelihoodhqelectrons = 0;
   ph_loglikelihood = 0;
   ph_photonweight = 0;
   ph_photonbgweight = 0;
   ph_neuralnet = 0;
   ph_Hmatrix = 0;
   ph_Hmatrix5 = 0;
   ph_adaboost = 0;
   ph_ringernn = 0;
   ph_zvertex = 0;
   ph_errz = 0;
   ph_etap = 0;
   ph_depth = 0;
   ph_cl_E = 0;
   ph_cl_pt = 0;
   ph_cl_eta = 0;
   ph_cl_phi = 0;
   ph_cl_etaCalo = 0;
   ph_cl_phiCalo = 0;
   ph_Es0 = 0;
   ph_etas0 = 0;
   ph_phis0 = 0;
   ph_Es1 = 0;
   ph_etas1 = 0;
   ph_phis1 = 0;
   ph_Es2 = 0;
   ph_etas2 = 0;
   ph_phis2 = 0;
   ph_Es3 = 0;
   ph_etas3 = 0;
   ph_phis3 = 0;
   ph_rawcl_Es0 = 0;
   ph_rawcl_etas0 = 0;
   ph_rawcl_phis0 = 0;
   ph_rawcl_Es1 = 0;
   ph_rawcl_etas1 = 0;
   ph_rawcl_phis1 = 0;
   ph_rawcl_Es2 = 0;
   ph_rawcl_etas2 = 0;
   ph_rawcl_phis2 = 0;
   ph_rawcl_Es3 = 0;
   ph_rawcl_etas3 = 0;
   ph_rawcl_phis3 = 0;
   ph_rawcl_E = 0;
   ph_rawcl_pt = 0;
   ph_rawcl_eta = 0;
   ph_rawcl_phi = 0;
   ph_convMatchDeltaEta1 = 0;
   ph_convMatchDeltaEta2 = 0;
   ph_convMatchDeltaPhi1 = 0;
   ph_convMatchDeltaPhi2 = 0;
   ph_rings_E = 0;
   ph_vx_n = 0;
   ph_vx_x = 0;
   ph_vx_y = 0;
   ph_vx_z = 0;
   ph_vx_px = 0;
   ph_vx_py = 0;
   ph_vx_pz = 0;
   ph_vx_E = 0;
   ph_vx_m = 0;
   ph_vx_nTracks = 0;
   ph_vx_sumPt = 0;
   ph_vx_convTrk_weight = 0;
   ph_vx_convTrk_n = 0;
   ph_vx_convTrk_fitter = 0;
   ph_vx_convTrk_patternReco1 = 0;
   ph_vx_convTrk_patternReco2 = 0;
   ph_vx_convTrk_trackProperties = 0;
   ph_vx_convTrk_particleHypothesis = 0;
   ph_vx_convTrk_nBLHits = 0;
   ph_vx_convTrk_nPixHits = 0;
   ph_vx_convTrk_nSCTHits = 0;
   ph_vx_convTrk_nTRTHits = 0;
   ph_vx_convTrk_nTRTHighTHits = 0;
   ph_vx_convTrk_nTRTXenonHits = 0;
   ph_vx_convTrk_nPixHoles = 0;
   ph_vx_convTrk_nSCTHoles = 0;
   ph_vx_convTrk_nTRTHoles = 0;
   ph_vx_convTrk_nPixelDeadSensors = 0;
   ph_vx_convTrk_nSCTDeadSensors = 0;
   ph_vx_convTrk_nBLSharedHits = 0;
   ph_vx_convTrk_nPixSharedHits = 0;
   ph_vx_convTrk_nSCTSharedHits = 0;
   ph_vx_convTrk_nBLayerSplitHits = 0;
   ph_vx_convTrk_nPixSplitHits = 0;
   ph_vx_convTrk_nBLayerOutliers = 0;
   ph_vx_convTrk_nPixelOutliers = 0;
   ph_vx_convTrk_nSCTOutliers = 0;
   ph_vx_convTrk_nTRTOutliers = 0;
   ph_vx_convTrk_nTRTHighTOutliers = 0;
   ph_vx_convTrk_nContribPixelLayers = 0;
   ph_vx_convTrk_nGangedPixels = 0;
   ph_vx_convTrk_nGangedFlaggedFakes = 0;
   ph_vx_convTrk_nPixelSpoiltHits = 0;
   ph_vx_convTrk_nSCTDoubleHoles = 0;
   ph_vx_convTrk_nSCTSpoiltHits = 0;
   ph_vx_convTrk_nTRTDeadStraws = 0;
   ph_vx_convTrk_nTRTTubeHits = 0;
   ph_vx_convTrk_nOutliersOnTrack = 0;
   ph_vx_convTrk_standardDeviationOfChi2OS = 0;
   ph_vx_convTrk_expectBLayerHit = 0;
   ph_vx_convTrk_nMDTHits = 0;
   ph_vx_convTrk_nCSCEtaHits = 0;
   ph_vx_convTrk_nCSCPhiHits = 0;
   ph_vx_convTrk_nRPCEtaHits = 0;
   ph_vx_convTrk_nRPCPhiHits = 0;
   ph_vx_convTrk_nTGCEtaHits = 0;
   ph_vx_convTrk_nTGCPhiHits = 0;
   ph_vx_convTrk_nMdtHoles = 0;
   ph_vx_convTrk_nCscEtaHoles = 0;
   ph_vx_convTrk_nCscPhiHoles = 0;
   ph_vx_convTrk_nRpcEtaHoles = 0;
   ph_vx_convTrk_nRpcPhiHoles = 0;
   ph_vx_convTrk_nTgcEtaHoles = 0;
   ph_vx_convTrk_nTgcPhiHoles = 0;
   ph_vx_convTrk_nHits = 0;
   ph_vx_convTrk_nHoles = 0;
   ph_vx_convTrk_hitPattern = 0;
   ph_vx_convTrk_nSiHits = 0;
   ph_vx_convTrk_TRTHighTHitsRatio = 0;
   ph_vx_convTrk_TRTHighTOutliersRatio = 0;
   ph_vx_convTrk_eProbabilityComb = 0;
   ph_vx_convTrk_eProbabilityHT = 0;
   ph_vx_convTrk_eProbabilityToT = 0;
   ph_vx_convTrk_eProbabilityBrem = 0;
   ph_vx_convTrk_chi2 = 0;
   ph_vx_convTrk_ndof = 0;
   ph_truth_isConv = 0;
   ph_truth_isBrem = 0;
   ph_truth_isFromHardProc = 0;
   ph_truth_isPhotonFromHardProc = 0;
   ph_truth_Rconv = 0;
   ph_truth_zconv = 0;
   ph_deltaEmax2 = 0;
   ph_calibHitsShowerDepth = 0;
   ph_isIso = 0;
   ph_mvaptcone20 = 0;
   ph_mvaptcone30 = 0;
   ph_mvaptcone40 = 0;
   ph_topoEtcone60 = 0;
   ph_vx_Chi2 = 0;
   ph_vx_Dcottheta = 0;
   ph_vx_Dphi = 0;
   ph_vx_Dist = 0;
   ph_vx_DR1R2 = 0;
   ph_CaloPointing_eta = 0;
   ph_CaloPointing_sigma_eta = 0;
   ph_CaloPointing_zvertex = 0;
   ph_CaloPointing_sigma_zvertex = 0;
   ph_HPV_eta = 0;
   ph_HPV_sigma_eta = 0;
   ph_HPV_zvertex = 0;
   ph_HPV_sigma_zvertex = 0;
   ph_NN_passes = 0;
   ph_NN_discriminant = 0;
   ph_ES0_real = 0;
   ph_ES1_real = 0;
   ph_ES2_real = 0;
   ph_ES3_real = 0;
   ph_EcellS0 = 0;
   ph_etacellS0 = 0;
   ph_Etcone40_ED_corrected = 0;
   ph_Etcone40_corrected = 0;
   ph_topoEtcone20_corrected = 0;
   ph_topoEtcone30_corrected = 0;
   ph_topoEtcone40_corrected = 0;
   ph_ED_median = 0;
   ph_ED_sigma = 0;
   ph_ED_Njets = 0;
   ph_convIP = 0;
   ph_convIPRev = 0;
   ph_el_index = 0;
   ph_EF_dr = 0;
   ph_EF_index = 0;
   ph_L2_dr = 0;
   ph_L1_dr = 0;
   ph_L1_index = 0;
   mcevt_signal_process_id = 0;
   mcevt_event_number = 0;
   mcevt_event_scale = 0;
   mcevt_alphaQCD = 0;
   mcevt_alphaQED = 0;
   mcevt_pdf_id1 = 0;
   mcevt_pdf_id2 = 0;
   mcevt_pdf_x1 = 0;
   mcevt_pdf_x2 = 0;
   mcevt_pdf_scale = 0;
   mcevt_pdf1 = 0;
   mcevt_pdf2 = 0;
   mcevt_weight = 0;
   mcVx_x = 0;
   mcVx_y = 0;
   mcVx_z = 0;
   mc_gen_E = 0;
   mc_gen_pt = 0;
   mc_gen_eta = 0;
   mc_gen_phi = 0;
   mc_gen_type = 0;
   mc_gen_status = 0;
   mc_gen_barcode = 0;
   mc_gen_mothertype = 0;
   mc_gen_motherbarcode = 0;
   mc_perigee_ok = 0;
   mc_perigee_d0 = 0;
   mc_perigee_z0 = 0;
   mc_perigee_phi = 0;
   mc_perigee_theta = 0;
   mc_perigee_qoverp = 0;
   mc_charge = 0;
   mc_child_n = 0;
   mc_child_barcode = 0;
   mc_child_pdg = 0;
   mc_begVtx_x = 0;
   mc_begVtx_y = 0;
   mc_begVtx_z = 0;
   mc_begVtx_barcode = 0;
   mc_endVtx_x = 0;
   mc_endVtx_y = 0;
   mc_endVtx_z = 0;
   mc_endVtx_barcode = 0;
   mc_unstable_gen_pt = 0;
   mc_unstable_gen_eta = 0;
   mc_unstable_gen_phi = 0;
   mc_unstable_gen_energy = 0;
   mc_unstable_perigee_ok = 0;
   mc_unstable_perigee_d0 = 0;
   mc_unstable_perigee_z0 = 0;
   mc_unstable_perigee_phi = 0;
   mc_unstable_perigee_theta = 0;
   mc_unstable_perigee_qoverp = 0;
   mc_unstable_pdg = 0;
   mc_unstable_charge = 0;
   mc_unstable_barcode = 0;
   mc_unstable_status = 0;
   mc_unstable_mother_pdg = 0;
   mc_unstable_mother_barcode = 0;
   mc_unstable_child_n = 0;
   mc_unstable_child_barcode = 0;
   mc_unstable_begVtx_x = 0;
   mc_unstable_begVtx_y = 0;
   mc_unstable_begVtx_z = 0;
   mc_unstable_begVtx_barcode = 0;
   mc_unstable_endVtx_x = 0;
   mc_unstable_endVtx_y = 0;
   mc_unstable_endVtx_z = 0;
   mc_unstable_endVtx_barcode = 0;
   // Set branch addresses and branch pointers
   if (!tree) return;
   fChain = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("EF_2e5_loose1", &EF_2e5_loose1, &b_EF_2e5_loose1);
   fChain->SetBranchAddress("EF_2e5_medium1", &EF_2e5_medium1, &b_EF_2e5_medium1);
   fChain->SetBranchAddress("EF_2e5_tight1", &EF_2e5_tight1, &b_EF_2e5_tight1);
   fChain->SetBranchAddress("EF_2g10_loose", &EF_2g10_loose, &b_EF_2g10_loose);
   fChain->SetBranchAddress("EF_2g10_medium", &EF_2g10_medium, &b_EF_2g10_medium);
   fChain->SetBranchAddress("EF_2g5_loose", &EF_2g5_loose, &b_EF_2g5_loose);
   fChain->SetBranchAddress("EF_2g5_medium", &EF_2g5_medium, &b_EF_2g5_medium);
   fChain->SetBranchAddress("EF_2g7_loose", &EF_2g7_loose, &b_EF_2g7_loose);
   fChain->SetBranchAddress("EF_2g7_medium", &EF_2g7_medium, &b_EF_2g7_medium);
   fChain->SetBranchAddress("EF_2j10_a4hi_EFFS_2L1J5", &EF_2j10_a4hi_EFFS_2L1J5, &b_EF_2j10_a4hi_EFFS_2L1J5);
   fChain->SetBranchAddress("EF_2j10_a4hi_EFFS_2L1J5_L1TE90", &EF_2j10_a4hi_EFFS_2L1J5_L1TE90, &b_EF_2j10_a4hi_EFFS_2L1J5_L1TE90);
   fChain->SetBranchAddress("EF_2j10_a4hi_EFFS_L1TE100", &EF_2j10_a4hi_EFFS_L1TE100, &b_EF_2j10_a4hi_EFFS_L1TE100);
   fChain->SetBranchAddress("EF_2j10_a4hi_EFFS_L1TE90", &EF_2j10_a4hi_EFFS_L1TE90, &b_EF_2j10_a4hi_EFFS_L1TE90);
   fChain->SetBranchAddress("EF_2j10_a4hi_EFFS_L2mbMbts", &EF_2j10_a4hi_EFFS_L2mbMbts, &b_EF_2j10_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j10_a4hi_deta40_L2mbMbts", &EF_2j10_a4hi_deta40_L2mbMbts, &b_EF_2j10_a4hi_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j10_a4hi_eta50_deta40", &EF_2j10_a4hi_eta50_deta40, &b_EF_2j10_a4hi_eta50_deta40);
   fChain->SetBranchAddress("EF_2j10_a4hi_eta50_deta40_L2mbMbts", &EF_2j10_a4hi_eta50_deta40_L2mbMbts, &b_EF_2j10_a4hi_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j10_a4tchad_EFFS_L1RD0", &EF_2j10_a4tchad_EFFS_L1RD0, &b_EF_2j10_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_EFFS_L2mbMbts", &EF_2j10_a4tchad_EFFS_L2mbMbts, &b_EF_2j10_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_EFFS_L2te_L1RD0", &EF_2j10_a4tchad_EFFS_L2te_L1RD0, &b_EF_2j10_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_deta40_L1RD0", &EF_2j10_a4tchad_deta40_L1RD0, &b_EF_2j10_a4tchad_deta40_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_deta40_L2mbMbts", &EF_2j10_a4tchad_deta40_L2mbMbts, &b_EF_2j10_a4tchad_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0", &EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0, &b_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_deta40_L2te_L1RD0", &EF_2j10_a4tchad_deta40_L2te_L1RD0, &b_EF_2j10_a4tchad_deta40_L2te_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_eta50_deta40_L1RD0", &EF_2j10_a4tchad_eta50_deta40_L1RD0, &b_EF_2j10_a4tchad_eta50_deta40_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_eta50_deta40_L2mbMbts", &EF_2j10_a4tchad_eta50_deta40_L2mbMbts, &b_EF_2j10_a4tchad_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0", &EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0, &b_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0", &EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0, &b_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0);
   fChain->SetBranchAddress("EF_2j15_a4hi_EFFS_2L1J5", &EF_2j15_a4hi_EFFS_2L1J5, &b_EF_2j15_a4hi_EFFS_2L1J5);
   fChain->SetBranchAddress("EF_2j15_a4hi_EFFS_L2mbMbts", &EF_2j15_a4hi_EFFS_L2mbMbts, &b_EF_2j15_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j15_a4hi_deta40_L2mbMbts", &EF_2j15_a4hi_deta40_L2mbMbts, &b_EF_2j15_a4hi_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j15_a4hi_eta50_deta40", &EF_2j15_a4hi_eta50_deta40, &b_EF_2j15_a4hi_eta50_deta40);
   fChain->SetBranchAddress("EF_2j15_a4hi_eta50_deta40_L2mbMbts", &EF_2j15_a4hi_eta50_deta40_L2mbMbts, &b_EF_2j15_a4hi_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j15_a4tchad_EFFS_L1RD0", &EF_2j15_a4tchad_EFFS_L1RD0, &b_EF_2j15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_2j15_a4tchad_EFFS_L2mbMbts", &EF_2j15_a4tchad_EFFS_L2mbMbts, &b_EF_2j15_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_2j15_a4tchad_EFFS_L2te_L1RD0", &EF_2j15_a4tchad_EFFS_L2te_L1RD0, &b_EF_2j15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_2j15_a4tchad_L2FS", &EF_2j15_a4tchad_L2FS, &b_EF_2j15_a4tchad_L2FS);
   fChain->SetBranchAddress("EF_2j15_a4tchad_deta40_L2mbMbts", &EF_2j15_a4tchad_deta40_L2mbMbts, &b_EF_2j15_a4tchad_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j15_a4tchad_eta50_deta40_L2mbMbts", &EF_2j15_a4tchad_eta50_deta40_L2mbMbts, &b_EF_2j15_a4tchad_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("EF_2j20_a4hi_EFFS_L2mbMbts", &EF_2j20_a4hi_EFFS_L2mbMbts, &b_EF_2j20_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j20_a4tchad_EFFS_L2mbMbts", &EF_2j20_a4tchad_EFFS_L2mbMbts, &b_EF_2j20_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j7_a4hi_EFFS_2L1J5", &EF_2j7_a4hi_EFFS_2L1J5, &b_EF_2j7_a4hi_EFFS_2L1J5);
   fChain->SetBranchAddress("EF_2j7_a4hi_EFFS_L2mbMbts", &EF_2j7_a4hi_EFFS_L2mbMbts, &b_EF_2j7_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2j7_a4tchad_EFFS_L2mbMbts", &EF_2j7_a4tchad_EFFS_L2mbMbts, &b_EF_2j7_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_2mu2_EFFS", &EF_2mu2_EFFS, &b_EF_2mu2_EFFS);
   fChain->SetBranchAddress("EF_2mu2_EFFS_L1MU0", &EF_2mu2_EFFS_L1MU0, &b_EF_2mu2_EFFS_L1MU0);
   fChain->SetBranchAddress("EF_2mu2_MSonly_EFFS_L1MBTS", &EF_2mu2_MSonly_EFFS_L1MBTS, &b_EF_2mu2_MSonly_EFFS_L1MBTS);
   fChain->SetBranchAddress("EF_2mu2_MSonly_EFFS_L1MU0", &EF_2mu2_MSonly_EFFS_L1MU0, &b_EF_2mu2_MSonly_EFFS_L1MU0);
   fChain->SetBranchAddress("EF_2mu2_MSonly_EFFS_L1ZDC_OR", &EF_2mu2_MSonly_EFFS_L1ZDC_OR, &b_EF_2mu2_MSonly_EFFS_L1ZDC_OR);
   fChain->SetBranchAddress("EF_2mu4", &EF_2mu4, &b_EF_2mu4);
   fChain->SetBranchAddress("EF_2mu4T_MSonly", &EF_2mu4T_MSonly, &b_EF_2mu4T_MSonly);
   fChain->SetBranchAddress("EF_2mu4_Jpsimumu_IDTrkNoCut", &EF_2mu4_Jpsimumu_IDTrkNoCut, &b_EF_2mu4_Jpsimumu_IDTrkNoCut);
   fChain->SetBranchAddress("EF_2mu4_MSonly", &EF_2mu4_MSonly, &b_EF_2mu4_MSonly);
   fChain->SetBranchAddress("EF_2mu4_MSonly_EFFS_L1MU0", &EF_2mu4_MSonly_EFFS_L1MU0, &b_EF_2mu4_MSonly_EFFS_L1MU0);
   fChain->SetBranchAddress("EF_2mu6T_MSonly", &EF_2mu6T_MSonly, &b_EF_2mu6T_MSonly);
   fChain->SetBranchAddress("EF_2mu6_MSonly", &EF_2mu6_MSonly, &b_EF_2mu6_MSonly);
   fChain->SetBranchAddress("EF_3j15_a4tchad_EFFS_L1RD0", &EF_3j15_a4tchad_EFFS_L1RD0, &b_EF_3j15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_3j15_a4tchad_EFFS_L2te_L1RD0", &EF_3j15_a4tchad_EFFS_L2te_L1RD0, &b_EF_3j15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_3j15_a4tchad_L2FS", &EF_3j15_a4tchad_L2FS, &b_EF_3j15_a4tchad_L2FS);
   fChain->SetBranchAddress("EF_3j15_a4tchad_L2FS_2L1J5", &EF_3j15_a4tchad_L2FS_2L1J5, &b_EF_3j15_a4tchad_L2FS_2L1J5);
   fChain->SetBranchAddress("EF_Background", &EF_Background, &b_EF_Background);
   fChain->SetBranchAddress("EF_Background_RD0_EMPTY", &EF_Background_RD0_EMPTY, &b_EF_Background_RD0_EMPTY);
   fChain->SetBranchAddress("EF_Background_RD0_UNPAIRED_ISO", &EF_Background_RD0_UNPAIRED_ISO, &b_EF_Background_RD0_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_Background_RD0_UNPAIRED_NONISO", &EF_Background_RD0_UNPAIRED_NONISO, &b_EF_Background_RD0_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_CosmicsAllTeEFID", &EF_CosmicsAllTeEFID, &b_EF_CosmicsAllTeEFID);
   fChain->SetBranchAddress("EF_CosmicsAllTeIDSCAN_AllPhysics_4Hits_TrkHypo", &EF_CosmicsAllTeIDSCAN_AllPhysics_4Hits_TrkHypo, &b_EF_CosmicsAllTeIDSCAN_AllPhysics_4Hits_TrkHypo);
   fChain->SetBranchAddress("EF_CosmicsAllTeIDSCAN_AllPhysics_TrkHypo", &EF_CosmicsAllTeIDSCAN_AllPhysics_TrkHypo, &b_EF_CosmicsAllTeIDSCAN_AllPhysics_TrkHypo);
   fChain->SetBranchAddress("EF_CosmicsAllTeSiTrack_AllPhysics_4Hits_TrkHypo", &EF_CosmicsAllTeSiTrack_AllPhysics_4Hits_TrkHypo, &b_EF_CosmicsAllTeSiTrack_AllPhysics_4Hits_TrkHypo);
   fChain->SetBranchAddress("EF_CosmicsAllTeSiTrack_AllPhysics_TrkHypo", &EF_CosmicsAllTeSiTrack_AllPhysics_TrkHypo, &b_EF_CosmicsAllTeSiTrack_AllPhysics_TrkHypo);
   fChain->SetBranchAddress("EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics", &EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics, &b_EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics);
   fChain->SetBranchAddress("EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics_NoField", &EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics_NoField, &b_EF_CosmicsAllTeTRTxK_TRTTrkHypo_AllPhysics_NoField);
   fChain->SetBranchAddress("EF_CosmicsAllTeTRTxK_TRTTrkHypo_Pixel", &EF_CosmicsAllTeTRTxK_TRTTrkHypo_Pixel, &b_EF_CosmicsAllTeTRTxK_TRTTrkHypo_Pixel);
   fChain->SetBranchAddress("EF_HLTTimeBurner", &EF_HLTTimeBurner, &b_EF_HLTTimeBurner);
   fChain->SetBranchAddress("EF_InDetMon_FS", &EF_InDetMon_FS, &b_EF_InDetMon_FS);
   fChain->SetBranchAddress("EF_L1EM10_NoAlg", &EF_L1EM10_NoAlg, &b_EF_L1EM10_NoAlg);
   fChain->SetBranchAddress("EF_L1EM12_NoAlg", &EF_L1EM12_NoAlg, &b_EF_L1EM12_NoAlg);
   fChain->SetBranchAddress("EF_L1EM14_NoAlg", &EF_L1EM14_NoAlg, &b_EF_L1EM14_NoAlg);
   fChain->SetBranchAddress("EF_L1EM16_NoAlg", &EF_L1EM16_NoAlg, &b_EF_L1EM16_NoAlg);
   fChain->SetBranchAddress("EF_L1EM3_NoAlg", &EF_L1EM3_NoAlg, &b_EF_L1EM3_NoAlg);
   fChain->SetBranchAddress("EF_L1EM3_VTE20_hip_loose2_upc", &EF_L1EM3_VTE20_hip_loose2_upc, &b_EF_L1EM3_VTE20_hip_loose2_upc);
   fChain->SetBranchAddress("EF_L1EM3_VTE50_hip_loose2_upc", &EF_L1EM3_VTE50_hip_loose2_upc, &b_EF_L1EM3_VTE50_hip_loose2_upc);
   fChain->SetBranchAddress("EF_L1FJ0_empty_NoAlg", &EF_L1FJ0_empty_NoAlg, &b_EF_L1FJ0_empty_NoAlg);
   fChain->SetBranchAddress("EF_L1FJ5_empty_NoAlg", &EF_L1FJ5_empty_NoAlg, &b_EF_L1FJ5_empty_NoAlg);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2EM3", &EF_L1ItemStreamer_L1_2EM3, &b_EF_L1ItemStreamer_L1_2EM3);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2EM5", &EF_L1ItemStreamer_L1_2EM5, &b_EF_L1ItemStreamer_L1_2EM5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2J10", &EF_L1ItemStreamer_L1_2J10, &b_EF_L1ItemStreamer_L1_2J10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2J5", &EF_L1ItemStreamer_L1_2J5, &b_EF_L1ItemStreamer_L1_2J5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2J5_TE90", &EF_L1ItemStreamer_L1_2J5_TE90, &b_EF_L1ItemStreamer_L1_2J5_TE90);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU0", &EF_L1ItemStreamer_L1_2MU0, &b_EF_L1ItemStreamer_L1_2MU0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU0_EMPTY", &EF_L1ItemStreamer_L1_2MU0_EMPTY, &b_EF_L1ItemStreamer_L1_2MU0_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU11", &EF_L1ItemStreamer_L1_2MU11, &b_EF_L1ItemStreamer_L1_2MU11);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU4", &EF_L1ItemStreamer_L1_2MU4, &b_EF_L1ItemStreamer_L1_2MU4);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU4_EMPTY", &EF_L1ItemStreamer_L1_2MU4_EMPTY, &b_EF_L1ItemStreamer_L1_2MU4_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU6", &EF_L1ItemStreamer_L1_2MU6, &b_EF_L1ItemStreamer_L1_2MU6);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU6_EMPTY", &EF_L1ItemStreamer_L1_2MU6_EMPTY, &b_EF_L1ItemStreamer_L1_2MU6_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY", &EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_AC_CA_BGRP0", &EF_L1ItemStreamer_L1_BCM_AC_CA_BGRP0, &b_EF_L1ItemStreamer_L1_BCM_AC_CA_BGRP0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_BCM_AC_CA_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_HT_BGRP0", &EF_L1ItemStreamer_L1_BCM_HT_BGRP0, &b_EF_L1ItemStreamer_L1_BCM_HT_BGRP0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_Wide_BGRP0", &EF_L1ItemStreamer_L1_BCM_Wide_BGRP0, &b_EF_L1ItemStreamer_L1_BCM_Wide_BGRP0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_Wide_EMPTY", &EF_L1ItemStreamer_L1_BCM_Wide_EMPTY, &b_EF_L1ItemStreamer_L1_BCM_Wide_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_BCM_Wide_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BGRP1", &EF_L1ItemStreamer_L1_BGRP1, &b_EF_L1ItemStreamer_L1_BGRP1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BGRP7", &EF_L1ItemStreamer_L1_BGRP7, &b_EF_L1ItemStreamer_L1_BGRP7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BPTX0_BGRP0", &EF_L1ItemStreamer_L1_BPTX0_BGRP0, &b_EF_L1ItemStreamer_L1_BPTX0_BGRP0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_BPTX1_BGRP0", &EF_L1ItemStreamer_L1_BPTX1_BGRP0, &b_EF_L1ItemStreamer_L1_BPTX1_BGRP0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM10", &EF_L1ItemStreamer_L1_EM10, &b_EF_L1ItemStreamer_L1_EM10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM12", &EF_L1ItemStreamer_L1_EM12, &b_EF_L1ItemStreamer_L1_EM12);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM14", &EF_L1ItemStreamer_L1_EM14, &b_EF_L1ItemStreamer_L1_EM14);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM16", &EF_L1ItemStreamer_L1_EM16, &b_EF_L1ItemStreamer_L1_EM16);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3", &EF_L1ItemStreamer_L1_EM3, &b_EF_L1ItemStreamer_L1_EM3);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_2J5", &EF_L1ItemStreamer_L1_EM3_2J5, &b_EF_L1ItemStreamer_L1_EM3_2J5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_EMPTY", &EF_L1ItemStreamer_L1_EM3_EMPTY, &b_EF_L1ItemStreamer_L1_EM3_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY", &EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_MV_VTE50", &EF_L1ItemStreamer_L1_EM3_MV_VTE50, &b_EF_L1ItemStreamer_L1_EM3_MV_VTE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_VTE20", &EF_L1ItemStreamer_L1_EM3_VTE20, &b_EF_L1ItemStreamer_L1_EM3_VTE20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM3_VTE50", &EF_L1ItemStreamer_L1_EM3_VTE50, &b_EF_L1ItemStreamer_L1_EM3_VTE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM4", &EF_L1ItemStreamer_L1_EM4, &b_EF_L1ItemStreamer_L1_EM4);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM5", &EF_L1ItemStreamer_L1_EM5, &b_EF_L1ItemStreamer_L1_EM5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM5_EMPTY", &EF_L1ItemStreamer_L1_EM5_EMPTY, &b_EF_L1ItemStreamer_L1_EM5_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_EM7", &EF_L1ItemStreamer_L1_EM7, &b_EF_L1ItemStreamer_L1_EM7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ0", &EF_L1ItemStreamer_L1_FJ0, &b_EF_L1ItemStreamer_L1_FJ0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ0_A", &EF_L1ItemStreamer_L1_FJ0_A, &b_EF_L1ItemStreamer_L1_FJ0_A);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ0_C", &EF_L1ItemStreamer_L1_FJ0_C, &b_EF_L1ItemStreamer_L1_FJ0_C);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ0_EMPTY", &EF_L1ItemStreamer_L1_FJ0_EMPTY, &b_EF_L1ItemStreamer_L1_FJ0_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ0_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_FJ0_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_FJ0_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ10", &EF_L1ItemStreamer_L1_FJ10, &b_EF_L1ItemStreamer_L1_FJ10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ10_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_FJ10_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_FJ10_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ15", &EF_L1ItemStreamer_L1_FJ15, &b_EF_L1ItemStreamer_L1_FJ15);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ5", &EF_L1ItemStreamer_L1_FJ5, &b_EF_L1ItemStreamer_L1_FJ5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ5_EMPTY", &EF_L1ItemStreamer_L1_FJ5_EMPTY, &b_EF_L1ItemStreamer_L1_FJ5_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_FJ5_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_FJ5_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_FJ5_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J10", &EF_L1ItemStreamer_L1_J10, &b_EF_L1ItemStreamer_L1_J10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J10_EMPTY", &EF_L1ItemStreamer_L1_J10_EMPTY, &b_EF_L1ItemStreamer_L1_J10_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J10_FIRSTEMPTY", &EF_L1ItemStreamer_L1_J10_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_J10_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J10_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_J10_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_J10_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J10_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_J10_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_J10_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J15", &EF_L1ItemStreamer_L1_J15, &b_EF_L1ItemStreamer_L1_J15);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J18", &EF_L1ItemStreamer_L1_J18, &b_EF_L1ItemStreamer_L1_J18);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J20", &EF_L1ItemStreamer_L1_J20, &b_EF_L1ItemStreamer_L1_J20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J30", &EF_L1ItemStreamer_L1_J30, &b_EF_L1ItemStreamer_L1_J30);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J30_EMPTY", &EF_L1ItemStreamer_L1_J30_EMPTY, &b_EF_L1ItemStreamer_L1_J30_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J30_FIRSTEMPTY", &EF_L1ItemStreamer_L1_J30_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_J30_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J30_UNPAIRED", &EF_L1ItemStreamer_L1_J30_UNPAIRED, &b_EF_L1ItemStreamer_L1_J30_UNPAIRED);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5", &EF_L1ItemStreamer_L1_J5, &b_EF_L1ItemStreamer_L1_J5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J50", &EF_L1ItemStreamer_L1_J50, &b_EF_L1ItemStreamer_L1_J50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5_EMPTY", &EF_L1ItemStreamer_L1_J5_EMPTY, &b_EF_L1ItemStreamer_L1_J5_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5_FIRSTEMPTY", &EF_L1ItemStreamer_L1_J5_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_J5_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5_TE90", &EF_L1ItemStreamer_L1_J5_TE90, &b_EF_L1ItemStreamer_L1_J5_TE90);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_J5_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_J5_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_J5_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_J5_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_J5_win6", &EF_L1ItemStreamer_L1_J5_win6, &b_EF_L1ItemStreamer_L1_J5_win6);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_L1A_Mon", &EF_L1ItemStreamer_L1_L1A_Mon, &b_EF_L1ItemStreamer_L1_L1A_Mon);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LHCF", &EF_L1ItemStreamer_L1_LHCF, &b_EF_L1ItemStreamer_L1_LHCF);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID", &EF_L1ItemStreamer_L1_LUCID, &b_EF_L1ItemStreamer_L1_LUCID);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_A", &EF_L1ItemStreamer_L1_LUCID_A, &b_EF_L1ItemStreamer_L1_LUCID_A);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_A_C", &EF_L1ItemStreamer_L1_LUCID_A_C, &b_EF_L1ItemStreamer_L1_LUCID_A_C);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_A_C_EMPTY", &EF_L1ItemStreamer_L1_LUCID_A_C_EMPTY, &b_EF_L1ItemStreamer_L1_LUCID_A_C_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_LUCID_A_C_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_BGRP7", &EF_L1ItemStreamer_L1_LUCID_BGRP7, &b_EF_L1ItemStreamer_L1_LUCID_BGRP7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_C", &EF_L1ItemStreamer_L1_LUCID_C, &b_EF_L1ItemStreamer_L1_LUCID_C);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_COMM", &EF_L1ItemStreamer_L1_LUCID_COMM, &b_EF_L1ItemStreamer_L1_LUCID_COMM);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_COMM_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_LUCID_COMM_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_LUCID_COMM_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_EMPTY", &EF_L1ItemStreamer_L1_LUCID_EMPTY, &b_EF_L1ItemStreamer_L1_LUCID_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_LUCID_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_LUCID_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_LUCID_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_LUCID_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_LUCID_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA0", &EF_L1ItemStreamer_L1_MBTSA0, &b_EF_L1ItemStreamer_L1_MBTSA0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA1", &EF_L1ItemStreamer_L1_MBTSA1, &b_EF_L1ItemStreamer_L1_MBTSA1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA10", &EF_L1ItemStreamer_L1_MBTSA10, &b_EF_L1ItemStreamer_L1_MBTSA10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA11", &EF_L1ItemStreamer_L1_MBTSA11, &b_EF_L1ItemStreamer_L1_MBTSA11);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA12", &EF_L1ItemStreamer_L1_MBTSA12, &b_EF_L1ItemStreamer_L1_MBTSA12);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA13", &EF_L1ItemStreamer_L1_MBTSA13, &b_EF_L1ItemStreamer_L1_MBTSA13);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA14", &EF_L1ItemStreamer_L1_MBTSA14, &b_EF_L1ItemStreamer_L1_MBTSA14);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA15", &EF_L1ItemStreamer_L1_MBTSA15, &b_EF_L1ItemStreamer_L1_MBTSA15);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA2", &EF_L1ItemStreamer_L1_MBTSA2, &b_EF_L1ItemStreamer_L1_MBTSA2);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA3", &EF_L1ItemStreamer_L1_MBTSA3, &b_EF_L1ItemStreamer_L1_MBTSA3);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA4", &EF_L1ItemStreamer_L1_MBTSA4, &b_EF_L1ItemStreamer_L1_MBTSA4);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA5", &EF_L1ItemStreamer_L1_MBTSA5, &b_EF_L1ItemStreamer_L1_MBTSA5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA6", &EF_L1ItemStreamer_L1_MBTSA6, &b_EF_L1ItemStreamer_L1_MBTSA6);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA7", &EF_L1ItemStreamer_L1_MBTSA7, &b_EF_L1ItemStreamer_L1_MBTSA7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA8", &EF_L1ItemStreamer_L1_MBTSA8, &b_EF_L1ItemStreamer_L1_MBTSA8);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSA9", &EF_L1ItemStreamer_L1_MBTSA9, &b_EF_L1ItemStreamer_L1_MBTSA9);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC0", &EF_L1ItemStreamer_L1_MBTSC0, &b_EF_L1ItemStreamer_L1_MBTSC0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC1", &EF_L1ItemStreamer_L1_MBTSC1, &b_EF_L1ItemStreamer_L1_MBTSC1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC10", &EF_L1ItemStreamer_L1_MBTSC10, &b_EF_L1ItemStreamer_L1_MBTSC10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC11", &EF_L1ItemStreamer_L1_MBTSC11, &b_EF_L1ItemStreamer_L1_MBTSC11);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC12", &EF_L1ItemStreamer_L1_MBTSC12, &b_EF_L1ItemStreamer_L1_MBTSC12);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC13", &EF_L1ItemStreamer_L1_MBTSC13, &b_EF_L1ItemStreamer_L1_MBTSC13);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC14", &EF_L1ItemStreamer_L1_MBTSC14, &b_EF_L1ItemStreamer_L1_MBTSC14);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC15", &EF_L1ItemStreamer_L1_MBTSC15, &b_EF_L1ItemStreamer_L1_MBTSC15);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC2", &EF_L1ItemStreamer_L1_MBTSC2, &b_EF_L1ItemStreamer_L1_MBTSC2);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC3", &EF_L1ItemStreamer_L1_MBTSC3, &b_EF_L1ItemStreamer_L1_MBTSC3);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC4", &EF_L1ItemStreamer_L1_MBTSC4, &b_EF_L1ItemStreamer_L1_MBTSC4);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC5", &EF_L1ItemStreamer_L1_MBTSC5, &b_EF_L1ItemStreamer_L1_MBTSC5);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC6", &EF_L1ItemStreamer_L1_MBTSC6, &b_EF_L1ItemStreamer_L1_MBTSC6);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC7", &EF_L1ItemStreamer_L1_MBTSC7, &b_EF_L1ItemStreamer_L1_MBTSC7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC8", &EF_L1ItemStreamer_L1_MBTSC8, &b_EF_L1ItemStreamer_L1_MBTSC8);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTSC9", &EF_L1ItemStreamer_L1_MBTSC9, &b_EF_L1ItemStreamer_L1_MBTSC9);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1", &EF_L1ItemStreamer_L1_MBTS_1, &b_EF_L1ItemStreamer_L1_MBTS_1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_1", &EF_L1ItemStreamer_L1_MBTS_1_1, &b_EF_L1ItemStreamer_L1_MBTS_1_1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_1_EMPTY", &EF_L1ItemStreamer_L1_MBTS_1_1_EMPTY, &b_EF_L1ItemStreamer_L1_MBTS_1_1_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_1_OVERLAY", &EF_L1ItemStreamer_L1_MBTS_1_1_OVERLAY, &b_EF_L1ItemStreamer_L1_MBTS_1_1_OVERLAY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_1_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MBTS_1_1_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MBTS_1_1_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_EMPTY", &EF_L1ItemStreamer_L1_MBTS_1_EMPTY, &b_EF_L1ItemStreamer_L1_MBTS_1_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_MBTS_1_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2", &EF_L1ItemStreamer_L1_MBTS_2, &b_EF_L1ItemStreamer_L1_MBTS_2);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_2", &EF_L1ItemStreamer_L1_MBTS_2_2, &b_EF_L1ItemStreamer_L1_MBTS_2_2);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_2_EMPTY", &EF_L1ItemStreamer_L1_MBTS_2_2_EMPTY, &b_EF_L1ItemStreamer_L1_MBTS_2_2_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_2_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MBTS_2_2_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MBTS_2_2_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_BGRP7", &EF_L1ItemStreamer_L1_MBTS_2_BGRP7, &b_EF_L1ItemStreamer_L1_MBTS_2_BGRP7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_EMPTY", &EF_L1ItemStreamer_L1_MBTS_2_EMPTY, &b_EF_L1ItemStreamer_L1_MBTS_2_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_MBTS_2_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_3_3", &EF_L1ItemStreamer_L1_MBTS_3_3, &b_EF_L1ItemStreamer_L1_MBTS_3_3);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_3_3_EMPTY", &EF_L1ItemStreamer_L1_MBTS_3_3_EMPTY, &b_EF_L1ItemStreamer_L1_MBTS_3_3_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_3_3_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MBTS_3_3_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MBTS_3_3_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_4_4", &EF_L1ItemStreamer_L1_MBTS_4_4, &b_EF_L1ItemStreamer_L1_MBTS_4_4);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MBTS_4_4_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MBTS_4_4_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MBTS_4_4_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0", &EF_L1ItemStreamer_L1_MU0, &b_EF_L1ItemStreamer_L1_MU0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_EMPTY", &EF_L1ItemStreamer_L1_MU0_EMPTY, &b_EF_L1ItemStreamer_L1_MU0_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY", &EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_MV_VTE50", &EF_L1ItemStreamer_L1_MU0_MV_VTE50, &b_EF_L1ItemStreamer_L1_MU0_MV_VTE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_TE50", &EF_L1ItemStreamer_L1_MU0_TE50, &b_EF_L1ItemStreamer_L1_MU0_TE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_VTE20", &EF_L1ItemStreamer_L1_MU0_VTE20, &b_EF_L1ItemStreamer_L1_MU0_VTE20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU0_VTE50", &EF_L1ItemStreamer_L1_MU0_VTE50, &b_EF_L1ItemStreamer_L1_MU0_VTE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU11", &EF_L1ItemStreamer_L1_MU11, &b_EF_L1ItemStreamer_L1_MU11);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU11_EMPTY", &EF_L1ItemStreamer_L1_MU11_EMPTY, &b_EF_L1ItemStreamer_L1_MU11_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU15", &EF_L1ItemStreamer_L1_MU15, &b_EF_L1ItemStreamer_L1_MU15);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU20", &EF_L1ItemStreamer_L1_MU20, &b_EF_L1ItemStreamer_L1_MU20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4", &EF_L1ItemStreamer_L1_MU4, &b_EF_L1ItemStreamer_L1_MU4);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_EMPTY", &EF_L1ItemStreamer_L1_MU4_EMPTY, &b_EF_L1ItemStreamer_L1_MU4_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY", &EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_MV_VTE50", &EF_L1ItemStreamer_L1_MU4_MV_VTE50, &b_EF_L1ItemStreamer_L1_MU4_MV_VTE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_TE50", &EF_L1ItemStreamer_L1_MU4_TE50, &b_EF_L1ItemStreamer_L1_MU4_TE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU4_VTE50", &EF_L1ItemStreamer_L1_MU4_VTE50, &b_EF_L1ItemStreamer_L1_MU4_VTE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU6", &EF_L1ItemStreamer_L1_MU6, &b_EF_L1ItemStreamer_L1_MU6);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY", &EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_NIM_S8C2B21", &EF_L1ItemStreamer_L1_NIM_S8C2B21, &b_EF_L1ItemStreamer_L1_NIM_S8C2B21);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_NIM_S8C2B22", &EF_L1ItemStreamer_L1_NIM_S8C2B22, &b_EF_L1ItemStreamer_L1_NIM_S8C2B22);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_NIM_S8C2B23", &EF_L1ItemStreamer_L1_NIM_S8C2B23, &b_EF_L1ItemStreamer_L1_NIM_S8C2B23);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD0_EMPTY", &EF_L1ItemStreamer_L1_RD0_EMPTY, &b_EF_L1ItemStreamer_L1_RD0_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD0_FILLED", &EF_L1ItemStreamer_L1_RD0_FILLED, &b_EF_L1ItemStreamer_L1_RD0_FILLED);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD0_FIRSTEMPTY", &EF_L1ItemStreamer_L1_RD0_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_RD0_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD0_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_RD0_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_RD0_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD0_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_RD0_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_RD0_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD1_EMPTY", &EF_L1ItemStreamer_L1_RD1_EMPTY, &b_EF_L1ItemStreamer_L1_RD1_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_RD1_FILLED", &EF_L1ItemStreamer_L1_RD1_FILLED, &b_EF_L1ItemStreamer_L1_RD1_FILLED);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TAU3", &EF_L1ItemStreamer_L1_TAU3, &b_EF_L1ItemStreamer_L1_TAU3);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TAU8_EMPTY", &EF_L1ItemStreamer_L1_TAU8_EMPTY, &b_EF_L1ItemStreamer_L1_TAU8_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TAU8_FIRSTEMPTY", &EF_L1ItemStreamer_L1_TAU8_FIRSTEMPTY, &b_EF_L1ItemStreamer_L1_TAU8_FIRSTEMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TAU8_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_TAU8_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_TAU8_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TAU8_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_TAU8_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_TAU8_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE0", &EF_L1ItemStreamer_L1_TE0, &b_EF_L1ItemStreamer_L1_TE0);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE10", &EF_L1ItemStreamer_L1_TE10, &b_EF_L1ItemStreamer_L1_TE10);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE100", &EF_L1ItemStreamer_L1_TE100, &b_EF_L1ItemStreamer_L1_TE100);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE20", &EF_L1ItemStreamer_L1_TE20, &b_EF_L1ItemStreamer_L1_TE20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE35", &EF_L1ItemStreamer_L1_TE35, &b_EF_L1ItemStreamer_L1_TE35);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE50", &EF_L1ItemStreamer_L1_TE50, &b_EF_L1ItemStreamer_L1_TE50);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE65", &EF_L1ItemStreamer_L1_TE65, &b_EF_L1ItemStreamer_L1_TE65);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TE90", &EF_L1ItemStreamer_L1_TE90, &b_EF_L1ItemStreamer_L1_TE90);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_TRT", &EF_L1ItemStreamer_L1_TRT, &b_EF_L1ItemStreamer_L1_TRT);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZB", &EF_L1ItemStreamer_L1_ZB, &b_EF_L1ItemStreamer_L1_ZB);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC", &EF_L1ItemStreamer_L1_ZDC, &b_EF_L1ItemStreamer_L1_ZDC);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A", &EF_L1ItemStreamer_L1_ZDC_A, &b_EF_L1ItemStreamer_L1_ZDC_A);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_AND", &EF_L1ItemStreamer_L1_ZDC_AND, &b_EF_L1ItemStreamer_L1_ZDC_AND);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A_BGRP7", &EF_L1ItemStreamer_L1_ZDC_A_BGRP7, &b_EF_L1ItemStreamer_L1_ZDC_A_BGRP7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A_C", &EF_L1ItemStreamer_L1_ZDC_A_C, &b_EF_L1ItemStreamer_L1_ZDC_A_C);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A_C_EMPTY", &EF_L1ItemStreamer_L1_ZDC_A_C_EMPTY, &b_EF_L1ItemStreamer_L1_ZDC_A_C_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_ZDC_A_C_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_A_VTE20", &EF_L1ItemStreamer_L1_ZDC_A_VTE20, &b_EF_L1ItemStreamer_L1_ZDC_A_VTE20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_C", &EF_L1ItemStreamer_L1_ZDC_C, &b_EF_L1ItemStreamer_L1_ZDC_C);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_C_BGRP7", &EF_L1ItemStreamer_L1_ZDC_C_BGRP7, &b_EF_L1ItemStreamer_L1_ZDC_C_BGRP7);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_C_VTE20", &EF_L1ItemStreamer_L1_ZDC_C_VTE20, &b_EF_L1ItemStreamer_L1_ZDC_C_VTE20);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_EMPTY", &EF_L1ItemStreamer_L1_ZDC_EMPTY, &b_EF_L1ItemStreamer_L1_ZDC_EMPTY);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_MBTS_1", &EF_L1ItemStreamer_L1_ZDC_MBTS_1, &b_EF_L1ItemStreamer_L1_ZDC_MBTS_1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_MBTS_1_1", &EF_L1ItemStreamer_L1_ZDC_MBTS_1_1, &b_EF_L1ItemStreamer_L1_ZDC_MBTS_1_1);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_MBTS_2", &EF_L1ItemStreamer_L1_ZDC_MBTS_2, &b_EF_L1ItemStreamer_L1_ZDC_MBTS_2);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_MBTS_2_2", &EF_L1ItemStreamer_L1_ZDC_MBTS_2_2, &b_EF_L1ItemStreamer_L1_ZDC_MBTS_2_2);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_UNPAIRED_ISO", &EF_L1ItemStreamer_L1_ZDC_UNPAIRED_ISO, &b_EF_L1ItemStreamer_L1_ZDC_UNPAIRED_ISO);
   fChain->SetBranchAddress("EF_L1ItemStreamer_L1_ZDC_UNPAIRED_NONISO", &EF_L1ItemStreamer_L1_ZDC_UNPAIRED_NONISO, &b_EF_L1ItemStreamer_L1_ZDC_UNPAIRED_NONISO);
   fChain->SetBranchAddress("EF_L1J10_NoAlg", &EF_L1J10_NoAlg, &b_EF_L1J10_NoAlg);
   fChain->SetBranchAddress("EF_L1J10_empty_NoAlg", &EF_L1J10_empty_NoAlg, &b_EF_L1J10_empty_NoAlg);
   fChain->SetBranchAddress("EF_L1J10_firstempty_NoAlg", &EF_L1J10_firstempty_NoAlg, &b_EF_L1J10_firstempty_NoAlg);
   fChain->SetBranchAddress("EF_L1J30_empty_NoAlg", &EF_L1J30_empty_NoAlg, &b_EF_L1J30_empty_NoAlg);
   fChain->SetBranchAddress("EF_L1J30_firstempty_NoAlg", &EF_L1J30_firstempty_NoAlg, &b_EF_L1J30_firstempty_NoAlg);
   fChain->SetBranchAddress("EF_L1J5_NoAlg", &EF_L1J5_NoAlg, &b_EF_L1J5_NoAlg);
   fChain->SetBranchAddress("EF_L1J5_empty_NoAlg", &EF_L1J5_empty_NoAlg, &b_EF_L1J5_empty_NoAlg);
   fChain->SetBranchAddress("EF_L1J5_firstempty_NoAlg", &EF_L1J5_firstempty_NoAlg, &b_EF_L1J5_firstempty_NoAlg);
   fChain->SetBranchAddress("EF_L1LHCF_NoAlg", &EF_L1LHCF_NoAlg, &b_EF_L1LHCF_NoAlg);
   fChain->SetBranchAddress("EF_L1MBTS_1_1_NoAlg", &EF_L1MBTS_1_1_NoAlg, &b_EF_L1MBTS_1_1_NoAlg);
   fChain->SetBranchAddress("EF_L1MBTS_1_1_overlay_NoAlg", &EF_L1MBTS_1_1_overlay_NoAlg, &b_EF_L1MBTS_1_1_overlay_NoAlg);
   fChain->SetBranchAddress("EF_L1MBTS_2_NoAlg", &EF_L1MBTS_2_NoAlg, &b_EF_L1MBTS_2_NoAlg);
   fChain->SetBranchAddress("EF_L1MU0_NoAlg", &EF_L1MU0_NoAlg, &b_EF_L1MU0_NoAlg);
   fChain->SetBranchAddress("EF_L1MU0_VTE20_hip_loose2_upc", &EF_L1MU0_VTE20_hip_loose2_upc, &b_EF_L1MU0_VTE20_hip_loose2_upc);
   fChain->SetBranchAddress("EF_L1MU11_NoAlg", &EF_L1MU11_NoAlg, &b_EF_L1MU11_NoAlg);
   fChain->SetBranchAddress("EF_L1MU15_NoAlg", &EF_L1MU15_NoAlg, &b_EF_L1MU15_NoAlg);
   fChain->SetBranchAddress("EF_L1MU20_NoAlg", &EF_L1MU20_NoAlg, &b_EF_L1MU20_NoAlg);
   fChain->SetBranchAddress("EF_L1MU4_NoAlg", &EF_L1MU4_NoAlg, &b_EF_L1MU4_NoAlg);
   fChain->SetBranchAddress("EF_L1TAU3_NoAlg", &EF_L1TAU3_NoAlg, &b_EF_L1TAU3_NoAlg);
   fChain->SetBranchAddress("EF_L1TE0_NoAlg", &EF_L1TE0_NoAlg, &b_EF_L1TE0_NoAlg);
   fChain->SetBranchAddress("EF_L1TE100_NoAlg", &EF_L1TE100_NoAlg, &b_EF_L1TE100_NoAlg);
   fChain->SetBranchAddress("EF_L1TE10_NoAlg", &EF_L1TE10_NoAlg, &b_EF_L1TE10_NoAlg);
   fChain->SetBranchAddress("EF_L1TE20_NoAlg", &EF_L1TE20_NoAlg, &b_EF_L1TE20_NoAlg);
   fChain->SetBranchAddress("EF_L1TE35_NoAlg", &EF_L1TE35_NoAlg, &b_EF_L1TE35_NoAlg);
   fChain->SetBranchAddress("EF_L1TE50_NoAlg", &EF_L1TE50_NoAlg, &b_EF_L1TE50_NoAlg);
   fChain->SetBranchAddress("EF_L1TE65_NoAlg", &EF_L1TE65_NoAlg, &b_EF_L1TE65_NoAlg);
   fChain->SetBranchAddress("EF_L1TE90_NoAlg", &EF_L1TE90_NoAlg, &b_EF_L1TE90_NoAlg);
   fChain->SetBranchAddress("EF_L1ZDC_A_NoAlg", &EF_L1ZDC_A_NoAlg, &b_EF_L1ZDC_A_NoAlg);
   fChain->SetBranchAddress("EF_L1ZDC_A_VTE20_hip_loose2_upc", &EF_L1ZDC_A_VTE20_hip_loose2_upc, &b_EF_L1ZDC_A_VTE20_hip_loose2_upc);
   fChain->SetBranchAddress("EF_L1ZDC_C_NoAlg", &EF_L1ZDC_C_NoAlg, &b_EF_L1ZDC_C_NoAlg);
   fChain->SetBranchAddress("EF_L1ZDC_C_VTE20_hip_loose2_upc", &EF_L1ZDC_C_VTE20_hip_loose2_upc, &b_EF_L1ZDC_C_VTE20_hip_loose2_upc);
   fChain->SetBranchAddress("EF_L1ZDC_NoAlg", &EF_L1ZDC_NoAlg, &b_EF_L1ZDC_NoAlg);
   fChain->SetBranchAddress("EF_PreS_L1EM3_empty", &EF_PreS_L1EM3_empty, &b_EF_PreS_L1EM3_empty);
   fChain->SetBranchAddress("EF_PreS_L1EM5_empty", &EF_PreS_L1EM5_empty, &b_EF_PreS_L1EM5_empty);
   fChain->SetBranchAddress("EF_PreS_L1J10_empty", &EF_PreS_L1J10_empty, &b_EF_PreS_L1J10_empty);
   fChain->SetBranchAddress("EF_PreS_L1J10_firstempty", &EF_PreS_L1J10_firstempty, &b_EF_PreS_L1J10_firstempty);
   fChain->SetBranchAddress("EF_PreS_L1J30_empty", &EF_PreS_L1J30_empty, &b_EF_PreS_L1J30_empty);
   fChain->SetBranchAddress("EF_PreS_L1J30_firstempty", &EF_PreS_L1J30_firstempty, &b_EF_PreS_L1J30_firstempty);
   fChain->SetBranchAddress("EF_PreS_L1J5_empty", &EF_PreS_L1J5_empty, &b_EF_PreS_L1J5_empty);
   fChain->SetBranchAddress("EF_PreS_L1TAU8_empty", &EF_PreS_L1TAU8_empty, &b_EF_PreS_L1TAU8_empty);
   fChain->SetBranchAddress("EF_ROBRequestMon", &EF_ROBRequestMon, &b_EF_ROBRequestMon);
   fChain->SetBranchAddress("EF_ROBRequestMonUnseeded", &EF_ROBRequestMonUnseeded, &b_EF_ROBRequestMonUnseeded);
   fChain->SetBranchAddress("EF_SeededStreamerBCM_LUCID_ZDC", &EF_SeededStreamerBCM_LUCID_ZDC, &b_EF_SeededStreamerBCM_LUCID_ZDC);
   fChain->SetBranchAddress("EF_SeededStreamerL1Calo", &EF_SeededStreamerL1Calo, &b_EF_SeededStreamerL1Calo);
   fChain->SetBranchAddress("EF_SeededStreamerMBTS", &EF_SeededStreamerMBTS, &b_EF_SeededStreamerMBTS);
   fChain->SetBranchAddress("EF_SeededStreamerMinBias", &EF_SeededStreamerMinBias, &b_EF_SeededStreamerMinBias);
   fChain->SetBranchAddress("EF_SeededStreamerMuonswBeam", &EF_SeededStreamerMuonswBeam, &b_EF_SeededStreamerMuonswBeam);
   fChain->SetBranchAddress("EF_SeededStreamerRNDM", &EF_SeededStreamerRNDM, &b_EF_SeededStreamerRNDM);
   fChain->SetBranchAddress("EF_Standby", &EF_Standby, &b_EF_Standby);
   fChain->SetBranchAddress("EF_TileCalib_laser", &EF_TileCalib_laser, &b_EF_TileCalib_laser);
   fChain->SetBranchAddress("EF_allL1_NoAlg", &EF_allL1_NoAlg, &b_EF_allL1_NoAlg);
   fChain->SetBranchAddress("EF_centrality100_60", &EF_centrality100_60, &b_EF_centrality100_60);
   fChain->SetBranchAddress("EF_centrality80_60", &EF_centrality80_60, &b_EF_centrality80_60);
   fChain->SetBranchAddress("EF_cost_monitor", &EF_cost_monitor, &b_EF_cost_monitor);
   fChain->SetBranchAddress("EF_e10_loose1", &EF_e10_loose1, &b_EF_e10_loose1);
   fChain->SetBranchAddress("EF_e10_medium1", &EF_e10_medium1, &b_EF_e10_medium1);
   fChain->SetBranchAddress("EF_e14_tight1", &EF_e14_tight1, &b_EF_e14_tight1);
   fChain->SetBranchAddress("EF_e15_loose0", &EF_e15_loose0, &b_EF_e15_loose0);
   fChain->SetBranchAddress("EF_e15_loose1", &EF_e15_loose1, &b_EF_e15_loose1);
   fChain->SetBranchAddress("EF_e15_loose1_IDTrkNoCut", &EF_e15_loose1_IDTrkNoCut, &b_EF_e15_loose1_IDTrkNoCut);
   fChain->SetBranchAddress("EF_e15_medium1", &EF_e15_medium1, &b_EF_e15_medium1);
   fChain->SetBranchAddress("EF_e5_loose1", &EF_e5_loose1, &b_EF_e5_loose1);
   fChain->SetBranchAddress("EF_e5_medium1", &EF_e5_medium1, &b_EF_e5_medium1);
   fChain->SetBranchAddress("EF_e5_medium1_IDTrkNoCut", &EF_e5_medium1_IDTrkNoCut, &b_EF_e5_medium1_IDTrkNoCut);
   fChain->SetBranchAddress("EF_e5_tight1", &EF_e5_tight1, &b_EF_e5_tight1);
   fChain->SetBranchAddress("EF_e5_tight1_e5_NoCut", &EF_e5_tight1_e5_NoCut, &b_EF_e5_tight1_e5_NoCut);
   fChain->SetBranchAddress("EF_e7_loose1", &EF_e7_loose1, &b_EF_e7_loose1);
   fChain->SetBranchAddress("EF_e7_medium1", &EF_e7_medium1, &b_EF_e7_medium1);
   fChain->SetBranchAddress("EF_e7_tight1", &EF_e7_tight1, &b_EF_e7_tight1);
   fChain->SetBranchAddress("EF_e9_tight1", &EF_e9_tight1, &b_EF_e9_tight1);
   fChain->SetBranchAddress("EF_e9_tight1_e5_etcut", &EF_e9_tight1_e5_etcut, &b_EF_e9_tight1_e5_etcut);
   fChain->SetBranchAddress("EF_fj10_a4hi_EFFS_L1FJ0", &EF_fj10_a4hi_EFFS_L1FJ0, &b_EF_fj10_a4hi_EFFS_L1FJ0);
   fChain->SetBranchAddress("EF_fj10_a4hi_EFFS_L2mbMbts", &EF_fj10_a4hi_EFFS_L2mbMbts, &b_EF_fj10_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_fj10_a4tchad_EFFS_L1FJ0", &EF_fj10_a4tchad_EFFS_L1FJ0, &b_EF_fj10_a4tchad_EFFS_L1FJ0);
   fChain->SetBranchAddress("EF_fj10_a4tchad_EFFS_L1RD0", &EF_fj10_a4tchad_EFFS_L1RD0, &b_EF_fj10_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_fj10_a4tchad_EFFS_L2mbMbts", &EF_fj10_a4tchad_EFFS_L2mbMbts, &b_EF_fj10_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_fj10_a4tchad_EFFS_L2te_L1RD0", &EF_fj10_a4tchad_EFFS_L2te_L1RD0, &b_EF_fj10_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_fj15_a4hi_EFFS_L1FJ0", &EF_fj15_a4hi_EFFS_L1FJ0, &b_EF_fj15_a4hi_EFFS_L1FJ0);
   fChain->SetBranchAddress("EF_fj15_a4hi_EFFS_L2mbMbts", &EF_fj15_a4hi_EFFS_L2mbMbts, &b_EF_fj15_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_fj15_a4tchad_EFFS_L1FJ0", &EF_fj15_a4tchad_EFFS_L1FJ0, &b_EF_fj15_a4tchad_EFFS_L1FJ0);
   fChain->SetBranchAddress("EF_fj15_a4tchad_EFFS_L1RD0", &EF_fj15_a4tchad_EFFS_L1RD0, &b_EF_fj15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_fj15_a4tchad_EFFS_L2mbMbts", &EF_fj15_a4tchad_EFFS_L2mbMbts, &b_EF_fj15_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_fj15_a4tchad_EFFS_L2te_L1RD0", &EF_fj15_a4tchad_EFFS_L2te_L1RD0, &b_EF_fj15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_fj7_a4hi_EFFS_L1FJ0", &EF_fj7_a4hi_EFFS_L1FJ0, &b_EF_fj7_a4hi_EFFS_L1FJ0);
   fChain->SetBranchAddress("EF_fj7_a4tchad_EFFS_L1FJ0", &EF_fj7_a4tchad_EFFS_L1FJ0, &b_EF_fj7_a4tchad_EFFS_L1FJ0);
   fChain->SetBranchAddress("EF_fte75_veto", &EF_fte75_veto, &b_EF_fte75_veto);
   fChain->SetBranchAddress("EF_fte75_veto_mbMbts_2_2", &EF_fte75_veto_mbMbts_2_2, &b_EF_fte75_veto_mbMbts_2_2);
   fChain->SetBranchAddress("EF_g10_loose", &EF_g10_loose, &b_EF_g10_loose);
   fChain->SetBranchAddress("EF_g10_loose_larcalib", &EF_g10_loose_larcalib, &b_EF_g10_loose_larcalib);
   fChain->SetBranchAddress("EF_g10_medium", &EF_g10_medium, &b_EF_g10_medium);
   fChain->SetBranchAddress("EF_g10_medium_2j10_a4hi_EFFS_L1EM5", &EF_g10_medium_2j10_a4hi_EFFS_L1EM5, &b_EF_g10_medium_2j10_a4hi_EFFS_L1EM5);
   fChain->SetBranchAddress("EF_g10_medium_2j10_a4tchad_EFFS_L1EM5", &EF_g10_medium_2j10_a4tchad_EFFS_L1EM5, &b_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5);
   fChain->SetBranchAddress("EF_g10_tight", &EF_g10_tight, &b_EF_g10_tight);
   fChain->SetBranchAddress("EF_g12_loose", &EF_g12_loose, &b_EF_g12_loose);
   fChain->SetBranchAddress("EF_g12_medium", &EF_g12_medium, &b_EF_g12_medium);
   fChain->SetBranchAddress("EF_g12_tight", &EF_g12_tight, &b_EF_g12_tight);
   fChain->SetBranchAddress("EF_g15_loose", &EF_g15_loose, &b_EF_g15_loose);
   fChain->SetBranchAddress("EF_g15_medium", &EF_g15_medium, &b_EF_g15_medium);
   fChain->SetBranchAddress("EF_g15_tight", &EF_g15_tight, &b_EF_g15_tight);
   fChain->SetBranchAddress("EF_g20_loose", &EF_g20_loose, &b_EF_g20_loose);
   fChain->SetBranchAddress("EF_g20_medium", &EF_g20_medium, &b_EF_g20_medium);
   fChain->SetBranchAddress("EF_g5_NoCut_cosmic", &EF_g5_NoCut_cosmic, &b_EF_g5_NoCut_cosmic);
   fChain->SetBranchAddress("EF_g5_loose", &EF_g5_loose, &b_EF_g5_loose);
   fChain->SetBranchAddress("EF_g5_loose_2L1J5", &EF_g5_loose_2L1J5, &b_EF_g5_loose_2L1J5);
   fChain->SetBranchAddress("EF_g5_loose_larcalib", &EF_g5_loose_larcalib, &b_EF_g5_loose_larcalib);
   fChain->SetBranchAddress("EF_g5_medium", &EF_g5_medium, &b_EF_g5_medium);
   fChain->SetBranchAddress("EF_g5_medium_2L1J5", &EF_g5_medium_2L1J5, &b_EF_g5_medium_2L1J5);
   fChain->SetBranchAddress("EF_g5_tight", &EF_g5_tight, &b_EF_g5_tight);
   fChain->SetBranchAddress("EF_g7_loose", &EF_g7_loose, &b_EF_g7_loose);
   fChain->SetBranchAddress("EF_g7_medium", &EF_g7_medium, &b_EF_g7_medium);
   fChain->SetBranchAddress("EF_g7_medium_2j10_a4hi_EFFS_L1EM3", &EF_g7_medium_2j10_a4hi_EFFS_L1EM3, &b_EF_g7_medium_2j10_a4hi_EFFS_L1EM3);
   fChain->SetBranchAddress("EF_g7_medium_2j10_a4tchad_EFFS_L1EM3", &EF_g7_medium_2j10_a4tchad_EFFS_L1EM3, &b_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3);
   fChain->SetBranchAddress("EF_g7_tight", &EF_g7_tight, &b_EF_g7_tight);
   fChain->SetBranchAddress("EF_g9_etcut", &EF_g9_etcut, &b_EF_g9_etcut);
   fChain->SetBranchAddress("EF_g9_tight", &EF_g9_tight, &b_EF_g9_tight);
   fChain->SetBranchAddress("EF_j100_a4hi_EFFS_L1J20", &EF_j100_a4hi_EFFS_L1J20, &b_EF_j100_a4hi_EFFS_L1J20);
   fChain->SetBranchAddress("EF_j100_a4tchad_EFFS_L1J20", &EF_j100_a4tchad_EFFS_L1J20, &b_EF_j100_a4tchad_EFFS_L1J20);
   fChain->SetBranchAddress("EF_j10_a4hi_EFFS_L1EM3", &EF_j10_a4hi_EFFS_L1EM3, &b_EF_j10_a4hi_EFFS_L1EM3);
   fChain->SetBranchAddress("EF_j10_a4hi_EFFS_L1J5", &EF_j10_a4hi_EFFS_L1J5, &b_EF_j10_a4hi_EFFS_L1J5);
   fChain->SetBranchAddress("EF_j10_a4hi_EFFS_L1TAU3", &EF_j10_a4hi_EFFS_L1TAU3, &b_EF_j10_a4hi_EFFS_L1TAU3);
   fChain->SetBranchAddress("EF_j10_a4hi_EFFS_L1TE100", &EF_j10_a4hi_EFFS_L1TE100, &b_EF_j10_a4hi_EFFS_L1TE100);
   fChain->SetBranchAddress("EF_j10_a4hi_EFFS_L1TE90", &EF_j10_a4hi_EFFS_L1TE90, &b_EF_j10_a4hi_EFFS_L1TE90);
   fChain->SetBranchAddress("EF_j10_a4hi_EFFS_L2mbMbts", &EF_j10_a4hi_EFFS_L2mbMbts, &b_EF_j10_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j10_a4tchad_EFFS_L1J5", &EF_j10_a4tchad_EFFS_L1J5, &b_EF_j10_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("EF_j10_a4tchad_EFFS_L1RD0", &EF_j10_a4tchad_EFFS_L1RD0, &b_EF_j10_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_j10_a4tchad_EFFS_L2mbMbts", &EF_j10_a4tchad_EFFS_L2mbMbts, &b_EF_j10_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_j10_a4tchad_EFFS_L2te_L1RD0", &EF_j10_a4tchad_EFFS_L2te_L1RD0, &b_EF_j10_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_j10_u0uchad_LArNoiseBurst", &EF_j10_u0uchad_LArNoiseBurst, &b_EF_j10_u0uchad_LArNoiseBurst);
   fChain->SetBranchAddress("EF_j10_u0uchad_empty_LArNoiseBurst", &EF_j10_u0uchad_empty_LArNoiseBurst, &b_EF_j10_u0uchad_empty_LArNoiseBurst);
   fChain->SetBranchAddress("EF_j10_u0uchad_firstempty_LArNoiseBurst", &EF_j10_u0uchad_firstempty_LArNoiseBurst, &b_EF_j10_u0uchad_firstempty_LArNoiseBurst);
   fChain->SetBranchAddress("EF_j15_Ecorr", &EF_j15_Ecorr, &b_EF_j15_Ecorr);
   fChain->SetBranchAddress("EF_j15_a4hi_EFFS_L2mbMbts", &EF_j15_a4hi_EFFS_L2mbMbts, &b_EF_j15_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j15_a4tchad_EFFS_L1RD0", &EF_j15_a4tchad_EFFS_L1RD0, &b_EF_j15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_j15_a4tchad_EFFS_L2mbMbts", &EF_j15_a4tchad_EFFS_L2mbMbts, &b_EF_j15_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_j15_a4tchad_EFFS_L2te_L1RD0", &EF_j15_a4tchad_EFFS_L2te_L1RD0, &b_EF_j15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_j15_a4tj_EFFS_L1ZDC", &EF_j15_a4tj_EFFS_L1ZDC, &b_EF_j15_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("EF_j20_Ecorr", &EF_j20_Ecorr, &b_EF_j20_Ecorr);
   fChain->SetBranchAddress("EF_j20_a4hi_EFFS_L1J10", &EF_j20_a4hi_EFFS_L1J10, &b_EF_j20_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j20_a4hi_EFFS_L2mbMbts", &EF_j20_a4hi_EFFS_L2mbMbts, &b_EF_j20_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j20_a4tchad_EFFS_L1J5", &EF_j20_a4tchad_EFFS_L1J5, &b_EF_j20_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("EF_j20_a4tchad_EFFS_L1RD0", &EF_j20_a4tchad_EFFS_L1RD0, &b_EF_j20_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_j20_a4tchad_EFFS_L2mbMbts", &EF_j20_a4tchad_EFFS_L2mbMbts, &b_EF_j20_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_j20_a4tchad_EFFS_L2te_L1RD0", &EF_j20_a4tchad_EFFS_L2te_L1RD0, &b_EF_j20_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_j20_a4tj_EFFS_L1ZDC", &EF_j20_a4tj_EFFS_L1ZDC, &b_EF_j20_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("EF_j30_a4hi_EFFS_L1J10", &EF_j30_a4hi_EFFS_L1J10, &b_EF_j30_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j30_a4hi_EFFS_L2mbMbts", &EF_j30_a4hi_EFFS_L2mbMbts, &b_EF_j30_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j30_a4tchad_EFFS_L1J5", &EF_j30_a4tchad_EFFS_L1J5, &b_EF_j30_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("EF_j30_a4tchad_EFFS_L1RD0", &EF_j30_a4tchad_EFFS_L1RD0, &b_EF_j30_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("EF_j30_a4tchad_EFFS_L2mbMbts", &EF_j30_a4tchad_EFFS_L2mbMbts, &b_EF_j30_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0", &EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0, &b_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("EF_j30_a4tchad_EFFS_L2te_L1RD0", &EF_j30_a4tchad_EFFS_L2te_L1RD0, &b_EF_j30_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("EF_j30_u0uchad_empty_LArNoiseBurst", &EF_j30_u0uchad_empty_LArNoiseBurst, &b_EF_j30_u0uchad_empty_LArNoiseBurst);
   fChain->SetBranchAddress("EF_j40_a4hi_EFFS_L1J10", &EF_j40_a4hi_EFFS_L1J10, &b_EF_j40_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j40_a4hi_EFFS_L2mbMbts", &EF_j40_a4hi_EFFS_L2mbMbts, &b_EF_j40_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j40_a4tchad_EFFS_L1J5", &EF_j40_a4tchad_EFFS_L1J5, &b_EF_j40_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("EF_j40_a4tchad_EFFS_L2mbMbts", &EF_j40_a4tchad_EFFS_L2mbMbts, &b_EF_j40_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j40_a4tj_EFFS_L1ZDC", &EF_j40_a4tj_EFFS_L1ZDC, &b_EF_j40_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("EF_j50_a4hi_EFFS_L1J10", &EF_j50_a4hi_EFFS_L1J10, &b_EF_j50_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j50_a4hi_EFFS_L2mbMbts", &EF_j50_a4hi_EFFS_L2mbMbts, &b_EF_j50_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j50_a4tchad_EFFS_L1J10", &EF_j50_a4tchad_EFFS_L1J10, &b_EF_j50_a4tchad_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j50_a4tchad_EFFS_L1J15", &EF_j50_a4tchad_EFFS_L1J15, &b_EF_j50_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j50_a4tchad_EFFS_L2mbMbts", &EF_j50_a4tchad_EFFS_L2mbMbts, &b_EF_j50_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j60_a4hi_EFFS_L1J15", &EF_j60_a4hi_EFFS_L1J15, &b_EF_j60_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j60_a4tchad_EFFS_L1J10", &EF_j60_a4tchad_EFFS_L1J10, &b_EF_j60_a4tchad_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j60_a4tchad_EFFS_L1J15", &EF_j60_a4tchad_EFFS_L1J15, &b_EF_j60_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j75_a4hi_EFFS_L1J10", &EF_j75_a4hi_EFFS_L1J10, &b_EF_j75_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j75_a4hi_EFFS_L1J15", &EF_j75_a4hi_EFFS_L1J15, &b_EF_j75_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j75_a4tchad_EFFS_L1J10", &EF_j75_a4tchad_EFFS_L1J10, &b_EF_j75_a4tchad_EFFS_L1J10);
   fChain->SetBranchAddress("EF_j75_a4tchad_EFFS_L1J15", &EF_j75_a4tchad_EFFS_L1J15, &b_EF_j75_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j75_a4tj_EFFS_L1ZDC", &EF_j75_a4tj_EFFS_L1ZDC, &b_EF_j75_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("EF_j7_a4tchad_EFFS_L1J5", &EF_j7_a4tchad_EFFS_L1J5, &b_EF_j7_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("EF_j7_a4tchad_EFFS_L2mbMbts", &EF_j7_a4tchad_EFFS_L2mbMbts, &b_EF_j7_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("EF_j80_a4hi_EFFS_L1J15", &EF_j80_a4hi_EFFS_L1J15, &b_EF_j80_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j80_a4tchad_EFFS_L1J15", &EF_j80_a4tchad_EFFS_L1J15, &b_EF_j80_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j90_a4hi_EFFS_L1J15", &EF_j90_a4hi_EFFS_L1J15, &b_EF_j90_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("EF_j90_a4tchad_EFFS_L1J15", &EF_j90_a4tchad_EFFS_L1J15, &b_EF_j90_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("EF_mbLucid_eff", &EF_mbLucid_eff, &b_EF_mbLucid_eff);
   fChain->SetBranchAddress("EF_mbLucid_eff_unpaired_iso", &EF_mbLucid_eff_unpaired_iso, &b_EF_mbLucid_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_1_1", &EF_mbMbts_1_1, &b_EF_mbMbts_1_1);
   fChain->SetBranchAddress("EF_mbMbts_1_1_eff", &EF_mbMbts_1_1_eff, &b_EF_mbMbts_1_1_eff);
   fChain->SetBranchAddress("EF_mbMbts_1_1_eff_unpaired_iso", &EF_mbMbts_1_1_eff_unpaired_iso, &b_EF_mbMbts_1_1_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_1_1_overlay", &EF_mbMbts_1_1_overlay, &b_EF_mbMbts_1_1_overlay);
   fChain->SetBranchAddress("EF_mbMbts_1_1_unpaired_iso", &EF_mbMbts_1_1_unpaired_iso, &b_EF_mbMbts_1_1_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_2", &EF_mbMbts_2, &b_EF_mbMbts_2);
   fChain->SetBranchAddress("EF_mbMbts_2_2", &EF_mbMbts_2_2, &b_EF_mbMbts_2_2);
   fChain->SetBranchAddress("EF_mbMbts_2_2_eff", &EF_mbMbts_2_2_eff, &b_EF_mbMbts_2_2_eff);
   fChain->SetBranchAddress("EF_mbMbts_2_2_eff_unpaired_iso", &EF_mbMbts_2_2_eff_unpaired_iso, &b_EF_mbMbts_2_2_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_2_2_unpaired_iso", &EF_mbMbts_2_2_unpaired_iso, &b_EF_mbMbts_2_2_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_2_eff", &EF_mbMbts_2_eff, &b_EF_mbMbts_2_eff);
   fChain->SetBranchAddress("EF_mbMbts_2_eff_unpaired_iso", &EF_mbMbts_2_eff_unpaired_iso, &b_EF_mbMbts_2_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_2_unpaired_iso", &EF_mbMbts_2_unpaired_iso, &b_EF_mbMbts_2_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_3_3", &EF_mbMbts_3_3, &b_EF_mbMbts_3_3);
   fChain->SetBranchAddress("EF_mbMbts_3_3_eff", &EF_mbMbts_3_3_eff, &b_EF_mbMbts_3_3_eff);
   fChain->SetBranchAddress("EF_mbMbts_3_3_eff_unpaired_iso", &EF_mbMbts_3_3_eff_unpaired_iso, &b_EF_mbMbts_3_3_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_3_3_unpaired_iso", &EF_mbMbts_3_3_unpaired_iso, &b_EF_mbMbts_3_3_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_4_4", &EF_mbMbts_4_4, &b_EF_mbMbts_4_4);
   fChain->SetBranchAddress("EF_mbMbts_4_4_eff", &EF_mbMbts_4_4_eff, &b_EF_mbMbts_4_4_eff);
   fChain->SetBranchAddress("EF_mbMbts_4_4_eff_unpaired_iso", &EF_mbMbts_4_4_eff_unpaired_iso, &b_EF_mbMbts_4_4_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbMbts_4_4_unpaired_iso", &EF_mbMbts_4_4_unpaired_iso, &b_EF_mbMbts_4_4_unpaired_iso);
   fChain->SetBranchAddress("EF_mbRd0_eff_unpaired_iso", &EF_mbRd0_eff_unpaired_iso, &b_EF_mbRd0_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbRd1_eff", &EF_mbRd1_eff, &b_EF_mbRd1_eff);
   fChain->SetBranchAddress("EF_mbSpBg_noiseSup_unpaired_iso", &EF_mbSpBg_noiseSup_unpaired_iso, &b_EF_mbSpBg_noiseSup_unpaired_iso);
   fChain->SetBranchAddress("EF_mbSpBg_unpaired_iso", &EF_mbSpBg_unpaired_iso, &b_EF_mbSpBg_unpaired_iso);
   fChain->SetBranchAddress("EF_mbSpTrk", &EF_mbSpTrk, &b_EF_mbSpTrk);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh", &EF_mbSpTrkVtxMh, &b_EF_mbSpTrkVtxMh);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_eff", &EF_mbSpTrkVtxMh_eff, &b_EF_mbSpTrkVtxMh_eff);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk100_L1TE10", &EF_mbSpTrkVtxMh_hip_trk100_L1TE10, &b_EF_mbSpTrkVtxMh_hip_trk100_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk110_L1TE10", &EF_mbSpTrkVtxMh_hip_trk110_L1TE10, &b_EF_mbSpTrkVtxMh_hip_trk110_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk120_L1TE10", &EF_mbSpTrkVtxMh_hip_trk120_L1TE10, &b_EF_mbSpTrkVtxMh_hip_trk120_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk130_L1TE10", &EF_mbSpTrkVtxMh_hip_trk130_L1TE10, &b_EF_mbSpTrkVtxMh_hip_trk130_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk140_L1TE20", &EF_mbSpTrkVtxMh_hip_trk140_L1TE20, &b_EF_mbSpTrkVtxMh_hip_trk140_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk140_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_hip_trk140_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_hip_trk140_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk140_L1TE50", &EF_mbSpTrkVtxMh_hip_trk140_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk140_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk150_L1TE20", &EF_mbSpTrkVtxMh_hip_trk150_L1TE20, &b_EF_mbSpTrkVtxMh_hip_trk150_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk150_L1TE50", &EF_mbSpTrkVtxMh_hip_trk150_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk150_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk155_L1TE20", &EF_mbSpTrkVtxMh_hip_trk155_L1TE20, &b_EF_mbSpTrkVtxMh_hip_trk155_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk155_L1TE50", &EF_mbSpTrkVtxMh_hip_trk155_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk155_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk160_L1TE20", &EF_mbSpTrkVtxMh_hip_trk160_L1TE20, &b_EF_mbSpTrkVtxMh_hip_trk160_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk160_L1TE50", &EF_mbSpTrkVtxMh_hip_trk160_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk160_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk160_L1TE50_pileupSup", &EF_mbSpTrkVtxMh_hip_trk160_L1TE50_pileupSup, &b_EF_mbSpTrkVtxMh_hip_trk160_L1TE50_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk170_L1TE35", &EF_mbSpTrkVtxMh_hip_trk170_L1TE35, &b_EF_mbSpTrkVtxMh_hip_trk170_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk170_L1TE50", &EF_mbSpTrkVtxMh_hip_trk170_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk170_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk175_L1MBTS", &EF_mbSpTrkVtxMh_hip_trk175_L1MBTS, &b_EF_mbSpTrkVtxMh_hip_trk175_L1MBTS);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk175_L1TE35", &EF_mbSpTrkVtxMh_hip_trk175_L1TE35, &b_EF_mbSpTrkVtxMh_hip_trk175_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk175_L1TE50", &EF_mbSpTrkVtxMh_hip_trk175_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk175_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk180_L1TE35", &EF_mbSpTrkVtxMh_hip_trk180_L1TE35, &b_EF_mbSpTrkVtxMh_hip_trk180_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk180_L1TE50", &EF_mbSpTrkVtxMh_hip_trk180_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk180_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk180_L1TE50_pileupSup", &EF_mbSpTrkVtxMh_hip_trk180_L1TE50_pileupSup, &b_EF_mbSpTrkVtxMh_hip_trk180_L1TE50_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk180_L1TE65", &EF_mbSpTrkVtxMh_hip_trk180_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk180_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk190_L1TE35", &EF_mbSpTrkVtxMh_hip_trk190_L1TE35, &b_EF_mbSpTrkVtxMh_hip_trk190_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk190_L1TE50", &EF_mbSpTrkVtxMh_hip_trk190_L1TE50, &b_EF_mbSpTrkVtxMh_hip_trk190_L1TE50);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk190_L1TE65", &EF_mbSpTrkVtxMh_hip_trk190_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk190_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk200_L1TE65", &EF_mbSpTrkVtxMh_hip_trk200_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk200_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk200_L1TE65_pileupSup", &EF_mbSpTrkVtxMh_hip_trk200_L1TE65_pileupSup, &b_EF_mbSpTrkVtxMh_hip_trk200_L1TE65_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk200_L1TE90", &EF_mbSpTrkVtxMh_hip_trk200_L1TE90, &b_EF_mbSpTrkVtxMh_hip_trk200_L1TE90);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk210_L1TE65", &EF_mbSpTrkVtxMh_hip_trk210_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk210_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk210_L1TE90", &EF_mbSpTrkVtxMh_hip_trk210_L1TE90, &b_EF_mbSpTrkVtxMh_hip_trk210_L1TE90);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk220_L1TE65", &EF_mbSpTrkVtxMh_hip_trk220_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk220_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk220_L1TE90", &EF_mbSpTrkVtxMh_hip_trk220_L1TE90, &b_EF_mbSpTrkVtxMh_hip_trk220_L1TE90);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk225_L1TE65", &EF_mbSpTrkVtxMh_hip_trk225_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk225_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk230_L1TE65", &EF_mbSpTrkVtxMh_hip_trk230_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk230_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk230_L1TE90", &EF_mbSpTrkVtxMh_hip_trk230_L1TE90, &b_EF_mbSpTrkVtxMh_hip_trk230_L1TE90);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk240_L1TE65", &EF_mbSpTrkVtxMh_hip_trk240_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk240_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk240_L1TE90", &EF_mbSpTrkVtxMh_hip_trk240_L1TE90, &b_EF_mbSpTrkVtxMh_hip_trk240_L1TE90);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk240_L1TE90_pileupSup", &EF_mbSpTrkVtxMh_hip_trk240_L1TE90_pileupSup, &b_EF_mbSpTrkVtxMh_hip_trk240_L1TE90_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk245_L1TE65", &EF_mbSpTrkVtxMh_hip_trk245_L1TE65, &b_EF_mbSpTrkVtxMh_hip_trk245_L1TE65);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk260_L1TE90", &EF_mbSpTrkVtxMh_hip_trk260_L1TE90, &b_EF_mbSpTrkVtxMh_hip_trk260_L1TE90);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_hip_trk260_L1TE90_pileupSup", &EF_mbSpTrkVtxMh_hip_trk260_L1TE90_pileupSup, &b_EF_mbSpTrkVtxMh_hip_trk260_L1TE90_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE0", &EF_mbSpTrkVtxMh_pp_trk100_L1TE0, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk100_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE10", &EF_mbSpTrkVtxMh_pp_trk100_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk100_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE20", &EF_mbSpTrkVtxMh_pp_trk100_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk100_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE35", &EF_mbSpTrkVtxMh_pp_trk100_L1TE35, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk100_L1TE35_pileupSup", &EF_mbSpTrkVtxMh_pp_trk100_L1TE35_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk100_L1TE35_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk110_L1TE10", &EF_mbSpTrkVtxMh_pp_trk110_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk110_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk110_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk110_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk110_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk110_L1TE20", &EF_mbSpTrkVtxMh_pp_trk110_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk110_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk110_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk110_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk110_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk110_L1TE35", &EF_mbSpTrkVtxMh_pp_trk110_L1TE35, &b_EF_mbSpTrkVtxMh_pp_trk110_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk110_L1TE35_pileupSup", &EF_mbSpTrkVtxMh_pp_trk110_L1TE35_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk110_L1TE35_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk120_L1TE10", &EF_mbSpTrkVtxMh_pp_trk120_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk120_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk120_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk120_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk120_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk120_L1TE20", &EF_mbSpTrkVtxMh_pp_trk120_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk120_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk120_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk120_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk120_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk120_L1TE35", &EF_mbSpTrkVtxMh_pp_trk120_L1TE35, &b_EF_mbSpTrkVtxMh_pp_trk120_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk120_L1TE35_pileupSup", &EF_mbSpTrkVtxMh_pp_trk120_L1TE35_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk120_L1TE35_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk130_L1TE10", &EF_mbSpTrkVtxMh_pp_trk130_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk130_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk130_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk130_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk130_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk130_L1TE20", &EF_mbSpTrkVtxMh_pp_trk130_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk130_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk130_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk130_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk130_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk130_L1TE35", &EF_mbSpTrkVtxMh_pp_trk130_L1TE35, &b_EF_mbSpTrkVtxMh_pp_trk130_L1TE35);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk130_L1TE35_pileupSup", &EF_mbSpTrkVtxMh_pp_trk130_L1TE35_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk130_L1TE35_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk30_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk30_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk30_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk30_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk30_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk30_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk30_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk30_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk30_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk50_L1MBTS", &EF_mbSpTrkVtxMh_pp_trk50_L1MBTS, &b_EF_mbSpTrkVtxMh_pp_trk50_L1MBTS);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk50_L1MBTS_pileupSup", &EF_mbSpTrkVtxMh_pp_trk50_L1MBTS_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk50_L1MBTS_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk50_L1TE0", &EF_mbSpTrkVtxMh_pp_trk50_L1TE0, &b_EF_mbSpTrkVtxMh_pp_trk50_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk50_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk50_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk50_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk50_L1TE10", &EF_mbSpTrkVtxMh_pp_trk50_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk50_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk50_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk50_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk50_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk60_L1MBTS", &EF_mbSpTrkVtxMh_pp_trk60_L1MBTS, &b_EF_mbSpTrkVtxMh_pp_trk60_L1MBTS);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk60_L1MBTS_pileupSup", &EF_mbSpTrkVtxMh_pp_trk60_L1MBTS_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk60_L1MBTS_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk60_L1TE0", &EF_mbSpTrkVtxMh_pp_trk60_L1TE0, &b_EF_mbSpTrkVtxMh_pp_trk60_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk60_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk60_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk60_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk60_L1TE10", &EF_mbSpTrkVtxMh_pp_trk60_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk60_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk60_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk60_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk60_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk70_L1TE0", &EF_mbSpTrkVtxMh_pp_trk70_L1TE0, &b_EF_mbSpTrkVtxMh_pp_trk70_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk70_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk70_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk70_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk70_L1TE10", &EF_mbSpTrkVtxMh_pp_trk70_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk70_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk70_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk70_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk70_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk70_L1TE20", &EF_mbSpTrkVtxMh_pp_trk70_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk70_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk70_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk70_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk70_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk80_L1TE0", &EF_mbSpTrkVtxMh_pp_trk80_L1TE0, &b_EF_mbSpTrkVtxMh_pp_trk80_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk80_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk80_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk80_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk80_L1TE10", &EF_mbSpTrkVtxMh_pp_trk80_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk80_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk80_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk80_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk80_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk80_L1TE20", &EF_mbSpTrkVtxMh_pp_trk80_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk80_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk80_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk80_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk80_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk90_L1TE0", &EF_mbSpTrkVtxMh_pp_trk90_L1TE0, &b_EF_mbSpTrkVtxMh_pp_trk90_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk90_L1TE0_pileupSup", &EF_mbSpTrkVtxMh_pp_trk90_L1TE0_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk90_L1TE0_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk90_L1TE10", &EF_mbSpTrkVtxMh_pp_trk90_L1TE10, &b_EF_mbSpTrkVtxMh_pp_trk90_L1TE10);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk90_L1TE10_pileupSup", &EF_mbSpTrkVtxMh_pp_trk90_L1TE10_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk90_L1TE10_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk90_L1TE20", &EF_mbSpTrkVtxMh_pp_trk90_L1TE20, &b_EF_mbSpTrkVtxMh_pp_trk90_L1TE20);
   fChain->SetBranchAddress("EF_mbSpTrkVtxMh_pp_trk90_L1TE20_pileupSup", &EF_mbSpTrkVtxMh_pp_trk90_L1TE20_pileupSup, &b_EF_mbSpTrkVtxMh_pp_trk90_L1TE20_pileupSup);
   fChain->SetBranchAddress("EF_mbSpTrk_L1FJ0", &EF_mbSpTrk_L1FJ0, &b_EF_mbSpTrk_L1FJ0);
   fChain->SetBranchAddress("EF_mbSpTrk_L1FJ0_A", &EF_mbSpTrk_L1FJ0_A, &b_EF_mbSpTrk_L1FJ0_A);
   fChain->SetBranchAddress("EF_mbSpTrk_L1FJ0_C", &EF_mbSpTrk_L1FJ0_C, &b_EF_mbSpTrk_L1FJ0_C);
   fChain->SetBranchAddress("EF_mbSpTrk_L1LHCF", &EF_mbSpTrk_L1LHCF, &b_EF_mbSpTrk_L1LHCF);
   fChain->SetBranchAddress("EF_mbSpTrk_L1MBTS_1", &EF_mbSpTrk_L1MBTS_1, &b_EF_mbSpTrk_L1MBTS_1);
   fChain->SetBranchAddress("EF_mbSpTrk_L1MBTS_1_1", &EF_mbSpTrk_L1MBTS_1_1, &b_EF_mbSpTrk_L1MBTS_1_1);
   fChain->SetBranchAddress("EF_mbSpTrk_L1MBTS_2", &EF_mbSpTrk_L1MBTS_2, &b_EF_mbSpTrk_L1MBTS_2);
   fChain->SetBranchAddress("EF_mbSpTrk_L1TE0", &EF_mbSpTrk_L1TE0, &b_EF_mbSpTrk_L1TE0);
   fChain->SetBranchAddress("EF_mbSpTrk_L1ZDC", &EF_mbSpTrk_L1ZDC, &b_EF_mbSpTrk_L1ZDC);
   fChain->SetBranchAddress("EF_mbSpTrk_L1ZDC_A", &EF_mbSpTrk_L1ZDC_A, &b_EF_mbSpTrk_L1ZDC_A);
   fChain->SetBranchAddress("EF_mbSpTrk_L1ZDC_C", &EF_mbSpTrk_L1ZDC_C, &b_EF_mbSpTrk_L1ZDC_C);
   fChain->SetBranchAddress("EF_mbSpTrk_empty", &EF_mbSpTrk_empty, &b_EF_mbSpTrk_empty);
   fChain->SetBranchAddress("EF_mbSpTrk_noiseSup", &EF_mbSpTrk_noiseSup, &b_EF_mbSpTrk_noiseSup);
   fChain->SetBranchAddress("EF_mbSpTrk_noiseSup_unpaired_iso", &EF_mbSpTrk_noiseSup_unpaired_iso, &b_EF_mbSpTrk_noiseSup_unpaired_iso);
   fChain->SetBranchAddress("EF_mbSpTrk_unpaired_iso", &EF_mbSpTrk_unpaired_iso, &b_EF_mbSpTrk_unpaired_iso);
   fChain->SetBranchAddress("EF_mbSp_L1BGRP1", &EF_mbSp_L1BGRP1, &b_EF_mbSp_L1BGRP1);
   fChain->SetBranchAddress("EF_mbZdc_HG_eff", &EF_mbZdc_HG_eff, &b_EF_mbZdc_HG_eff);
   fChain->SetBranchAddress("EF_mbZdc_HG_eff_L1MBTS2", &EF_mbZdc_HG_eff_L1MBTS2, &b_EF_mbZdc_HG_eff_L1MBTS2);
   fChain->SetBranchAddress("EF_mbZdc_HG_sideA", &EF_mbZdc_HG_sideA, &b_EF_mbZdc_HG_sideA);
   fChain->SetBranchAddress("EF_mbZdc_HG_sideC", &EF_mbZdc_HG_sideC, &b_EF_mbZdc_HG_sideC);
   fChain->SetBranchAddress("EF_mbZdc_LG_eff", &EF_mbZdc_LG_eff, &b_EF_mbZdc_LG_eff);
   fChain->SetBranchAddress("EF_mbZdc_LG_sideA", &EF_mbZdc_LG_sideA, &b_EF_mbZdc_LG_sideA);
   fChain->SetBranchAddress("EF_mbZdc_LG_sideA_L1MBTS2", &EF_mbZdc_LG_sideA_L1MBTS2, &b_EF_mbZdc_LG_sideA_L1MBTS2);
   fChain->SetBranchAddress("EF_mbZdc_LG_sideC", &EF_mbZdc_LG_sideC, &b_EF_mbZdc_LG_sideC);
   fChain->SetBranchAddress("EF_mbZdc_LG_sideC_L1MBTS2", &EF_mbZdc_LG_sideC_L1MBTS2, &b_EF_mbZdc_LG_sideC_L1MBTS2);
   fChain->SetBranchAddress("EF_mbZdc_a_c_L2Zdc_eff", &EF_mbZdc_a_c_L2Zdc_eff, &b_EF_mbZdc_a_c_L2Zdc_eff);
   fChain->SetBranchAddress("EF_mbZdc_a_c_Mbts_1_1", &EF_mbZdc_a_c_Mbts_1_1, &b_EF_mbZdc_a_c_Mbts_1_1);
   fChain->SetBranchAddress("EF_mbZdc_a_c_Mbts_2_2", &EF_mbZdc_a_c_Mbts_2_2, &b_EF_mbZdc_a_c_Mbts_2_2);
   fChain->SetBranchAddress("EF_mbZdc_a_c_NoAlg", &EF_mbZdc_a_c_NoAlg, &b_EF_mbZdc_a_c_NoAlg);
   fChain->SetBranchAddress("EF_mbZdc_a_c_cosmic_NoAlg", &EF_mbZdc_a_c_cosmic_NoAlg, &b_EF_mbZdc_a_c_cosmic_NoAlg);
   fChain->SetBranchAddress("EF_mbZdc_a_c_eff", &EF_mbZdc_a_c_eff, &b_EF_mbZdc_a_c_eff);
   fChain->SetBranchAddress("EF_mbZdc_a_c_eff_unpaired_iso", &EF_mbZdc_a_c_eff_unpaired_iso, &b_EF_mbZdc_a_c_eff_unpaired_iso);
   fChain->SetBranchAddress("EF_mbZdc_and_Mbts_1_1", &EF_mbZdc_and_Mbts_1_1, &b_EF_mbZdc_and_Mbts_1_1);
   fChain->SetBranchAddress("EF_mbZdc_and_Mbts_2_2", &EF_mbZdc_and_Mbts_2_2, &b_EF_mbZdc_and_Mbts_2_2);
   fChain->SetBranchAddress("EF_mu10", &EF_mu10, &b_EF_mu10);
   fChain->SetBranchAddress("EF_mu10T_MSonly", &EF_mu10T_MSonly, &b_EF_mu10T_MSonly);
   fChain->SetBranchAddress("EF_mu10_IDTrkNoCut", &EF_mu10_IDTrkNoCut, &b_EF_mu10_IDTrkNoCut);
   fChain->SetBranchAddress("EF_mu10_MSonly", &EF_mu10_MSonly, &b_EF_mu10_MSonly);
   fChain->SetBranchAddress("EF_mu13T_MSonly", &EF_mu13T_MSonly, &b_EF_mu13T_MSonly);
   fChain->SetBranchAddress("EF_mu13_MSonly", &EF_mu13_MSonly, &b_EF_mu13_MSonly);
   fChain->SetBranchAddress("EF_mu2", &EF_mu2, &b_EF_mu2);
   fChain->SetBranchAddress("EF_mu4", &EF_mu4, &b_EF_mu4);
   fChain->SetBranchAddress("EF_mu4T", &EF_mu4T, &b_EF_mu4T);
   fChain->SetBranchAddress("EF_mu4T_IDTrkNoCut", &EF_mu4T_IDTrkNoCut, &b_EF_mu4T_IDTrkNoCut);
   fChain->SetBranchAddress("EF_mu4T_MSonly", &EF_mu4T_MSonly, &b_EF_mu4T_MSonly);
   fChain->SetBranchAddress("EF_mu4T_MSonly_barrel", &EF_mu4T_MSonly_barrel, &b_EF_mu4T_MSonly_barrel);
   fChain->SetBranchAddress("EF_mu4T_MSonly_cosmic", &EF_mu4T_MSonly_cosmic, &b_EF_mu4T_MSonly_cosmic);
   fChain->SetBranchAddress("EF_mu4T_cosmic", &EF_mu4T_cosmic, &b_EF_mu4T_cosmic);
   fChain->SetBranchAddress("EF_mu4_IDTrkNoCut", &EF_mu4_IDTrkNoCut, &b_EF_mu4_IDTrkNoCut);
   fChain->SetBranchAddress("EF_mu4_MSonly", &EF_mu4_MSonly, &b_EF_mu4_MSonly);
   fChain->SetBranchAddress("EF_mu4_MSonly_EFFS_L1MBTS", &EF_mu4_MSonly_EFFS_L1MBTS, &b_EF_mu4_MSonly_EFFS_L1MBTS);
   fChain->SetBranchAddress("EF_mu4_MSonly_EFFS_L1ZDC_OR", &EF_mu4_MSonly_EFFS_L1ZDC_OR, &b_EF_mu4_MSonly_EFFS_L1ZDC_OR);
   fChain->SetBranchAddress("EF_mu4_MSonly_barrel", &EF_mu4_MSonly_barrel, &b_EF_mu4_MSonly_barrel);
   fChain->SetBranchAddress("EF_mu4_MSonly_cosmic", &EF_mu4_MSonly_cosmic, &b_EF_mu4_MSonly_cosmic);
   fChain->SetBranchAddress("EF_mu4_MSonly_j15_a2hi_EFFS_matched", &EF_mu4_MSonly_j15_a2hi_EFFS_matched, &b_EF_mu4_MSonly_j15_a2hi_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_MSonly_j15_a4tchad_EFFS_matched", &EF_mu4_MSonly_j15_a4tchad_EFFS_matched, &b_EF_mu4_MSonly_j15_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_cosmic", &EF_mu4_cosmic, &b_EF_mu4_cosmic);
   fChain->SetBranchAddress("EF_mu4_j10_a4hi_EFFS_matched", &EF_mu4_j10_a4hi_EFFS_matched, &b_EF_mu4_j10_a4hi_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j10_a4tchad_EFFS_matched", &EF_mu4_j10_a4tchad_EFFS_matched, &b_EF_mu4_j10_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j15_a4hi_EFFS_matched", &EF_mu4_j15_a4hi_EFFS_matched, &b_EF_mu4_j15_a4hi_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j15_a4tchad_EFFS_matched", &EF_mu4_j15_a4tchad_EFFS_matched, &b_EF_mu4_j15_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j20_a4hi_EFFS_matched", &EF_mu4_j20_a4hi_EFFS_matched, &b_EF_mu4_j20_a4hi_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j20_a4tchad_EFFS_matched", &EF_mu4_j20_a4tchad_EFFS_matched, &b_EF_mu4_j20_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j30_a4hi_EFFS_matched", &EF_mu4_j30_a4hi_EFFS_matched, &b_EF_mu4_j30_a4hi_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j30_a4tchad_EFFS_matched", &EF_mu4_j30_a4tchad_EFFS_matched, &b_EF_mu4_j30_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j40_a4hi_EFFS_matched", &EF_mu4_j40_a4hi_EFFS_matched, &b_EF_mu4_j40_a4hi_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_j40_a4tchad_EFFS_matched", &EF_mu4_j40_a4tchad_EFFS_matched, &b_EF_mu4_j40_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("EF_mu4_mu2_EFFS", &EF_mu4_mu2_EFFS, &b_EF_mu4_mu2_EFFS);
   fChain->SetBranchAddress("EF_mu4_mu2_EFFS_L1MU0", &EF_mu4_mu2_EFFS_L1MU0, &b_EF_mu4_mu2_EFFS_L1MU0);
   fChain->SetBranchAddress("EF_mu6", &EF_mu6, &b_EF_mu6);
   fChain->SetBranchAddress("EF_mu6T", &EF_mu6T, &b_EF_mu6T);
   fChain->SetBranchAddress("EF_mu6T_IDTrkNoCut", &EF_mu6T_IDTrkNoCut, &b_EF_mu6T_IDTrkNoCut);
   fChain->SetBranchAddress("EF_mu6T_MSonly", &EF_mu6T_MSonly, &b_EF_mu6T_MSonly);
   fChain->SetBranchAddress("EF_mu6_IDTrkNoCut", &EF_mu6_IDTrkNoCut, &b_EF_mu6_IDTrkNoCut);
   fChain->SetBranchAddress("EF_mu6_MSonly", &EF_mu6_MSonly, &b_EF_mu6_MSonly);
   fChain->SetBranchAddress("EF_mu8", &EF_mu8, &b_EF_mu8);
   fChain->SetBranchAddress("EF_mu8_IDTrkNoCut", &EF_mu8_IDTrkNoCut, &b_EF_mu8_IDTrkNoCut);
   fChain->SetBranchAddress("EF_rd0_empty_NoAlg", &EF_rd0_empty_NoAlg, &b_EF_rd0_empty_NoAlg);
   fChain->SetBranchAddress("EF_rd0_filled_NoAlg", &EF_rd0_filled_NoAlg, &b_EF_rd0_filled_NoAlg);
   fChain->SetBranchAddress("EF_rd1_empty_NoAlg", &EF_rd1_empty_NoAlg, &b_EF_rd1_empty_NoAlg);
   fChain->SetBranchAddress("EF_tauNoCut_cosmic", &EF_tauNoCut_cosmic, &b_EF_tauNoCut_cosmic);
   fChain->SetBranchAddress("EF_xe20_FEB_L1EM5", &EF_xe20_FEB_L1EM5, &b_EF_xe20_FEB_L1EM5);
   fChain->SetBranchAddress("EF_xe20_FEB_L1J10", &EF_xe20_FEB_L1J10, &b_EF_xe20_FEB_L1J10);
   fChain->SetBranchAddress("EF_xe20_FEB_L1MU0", &EF_xe20_FEB_L1MU0, &b_EF_xe20_FEB_L1MU0);
   fChain->SetBranchAddress("EF_xe20_FEB_L1TE65", &EF_xe20_FEB_L1TE65, &b_EF_xe20_FEB_L1TE65);
   fChain->SetBranchAddress("EF_xe20_FEB_L1TE90", &EF_xe20_FEB_L1TE90, &b_EF_xe20_FEB_L1TE90);
   fChain->SetBranchAddress("EF_xe25_FEB_L1TE65", &EF_xe25_FEB_L1TE65, &b_EF_xe25_FEB_L1TE65);
   fChain->SetBranchAddress("EF_xe25_FEB_L1TE90", &EF_xe25_FEB_L1TE90, &b_EF_xe25_FEB_L1TE90);
   fChain->SetBranchAddress("EF_xe30_FEB_L1EM5", &EF_xe30_FEB_L1EM5, &b_EF_xe30_FEB_L1EM5);
   fChain->SetBranchAddress("EF_xe30_FEB_L1J10", &EF_xe30_FEB_L1J10, &b_EF_xe30_FEB_L1J10);
   fChain->SetBranchAddress("EF_xe30_FEB_L1MU0", &EF_xe30_FEB_L1MU0, &b_EF_xe30_FEB_L1MU0);
   fChain->SetBranchAddress("EF_xe30_FEB_L1TE65", &EF_xe30_FEB_L1TE65, &b_EF_xe30_FEB_L1TE65);
   fChain->SetBranchAddress("EF_xe30_FEB_L1TE90", &EF_xe30_FEB_L1TE90, &b_EF_xe30_FEB_L1TE90);
   fChain->SetBranchAddress("EF_xe40_FEB_L1EM5", &EF_xe40_FEB_L1EM5, &b_EF_xe40_FEB_L1EM5);
   fChain->SetBranchAddress("EF_xe40_FEB_L1J10", &EF_xe40_FEB_L1J10, &b_EF_xe40_FEB_L1J10);
   fChain->SetBranchAddress("EF_xe40_FEB_L1MU0", &EF_xe40_FEB_L1MU0, &b_EF_xe40_FEB_L1MU0);
   fChain->SetBranchAddress("EF_xe40_FEB_L1TE65", &EF_xe40_FEB_L1TE65, &b_EF_xe40_FEB_L1TE65);
   fChain->SetBranchAddress("EF_xe40_FEB_L1TE90", &EF_xe40_FEB_L1TE90, &b_EF_xe40_FEB_L1TE90);
   fChain->SetBranchAddress("EF_zerobias_NoAlg", &EF_zerobias_NoAlg, &b_EF_zerobias_NoAlg);
   fChain->SetBranchAddress("EF_zerobias_Overlay_L2mbMbts", &EF_zerobias_Overlay_L2mbMbts, &b_EF_zerobias_Overlay_L2mbMbts);
   fChain->SetBranchAddress("EF_zerobias_Overlay_L2te", &EF_zerobias_Overlay_L2te, &b_EF_zerobias_Overlay_L2te);
   fChain->SetBranchAddress("EF_zerobias_Overlay_NoAlg", &EF_zerobias_Overlay_NoAlg, &b_EF_zerobias_Overlay_NoAlg);
   fChain->SetBranchAddress("L1_2EM3", &L1_2EM3, &b_L1_2EM3);
   fChain->SetBranchAddress("L1_2EM5", &L1_2EM5, &b_L1_2EM5);
   fChain->SetBranchAddress("L1_2MU0", &L1_2MU0, &b_L1_2MU0);
   fChain->SetBranchAddress("L1_2MU0_EMPTY", &L1_2MU0_EMPTY, &b_L1_2MU0_EMPTY);
   fChain->SetBranchAddress("L1_2MU11", &L1_2MU11, &b_L1_2MU11);
   fChain->SetBranchAddress("L1_2MU20", &L1_2MU20, &b_L1_2MU20);
   fChain->SetBranchAddress("L1_2MU4", &L1_2MU4, &b_L1_2MU4);
   fChain->SetBranchAddress("L1_2MU4_EMPTY", &L1_2MU4_EMPTY, &b_L1_2MU4_EMPTY);
   fChain->SetBranchAddress("L1_2MU6", &L1_2MU6, &b_L1_2MU6);
   fChain->SetBranchAddress("L1_2MU6_EMPTY", &L1_2MU6_EMPTY, &b_L1_2MU6_EMPTY);
   fChain->SetBranchAddress("L1_2MU6_FIRSTEMPTY", &L1_2MU6_FIRSTEMPTY, &b_L1_2MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("L1_2MU6_UNPAIRED_ISO", &L1_2MU6_UNPAIRED_ISO, &b_L1_2MU6_UNPAIRED_ISO);
   fChain->SetBranchAddress("L1_2MU6_UNPAIRED_NONISO", &L1_2MU6_UNPAIRED_NONISO, &b_L1_2MU6_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L1_EM10", &L1_EM10, &b_L1_EM10);
   fChain->SetBranchAddress("L1_EM12", &L1_EM12, &b_L1_EM12);
   fChain->SetBranchAddress("L1_EM14", &L1_EM14, &b_L1_EM14);
   fChain->SetBranchAddress("L1_EM16", &L1_EM16, &b_L1_EM16);
   fChain->SetBranchAddress("L1_EM3", &L1_EM3, &b_L1_EM3);
   fChain->SetBranchAddress("L1_EM3_2J5", &L1_EM3_2J5, &b_L1_EM3_2J5);
   fChain->SetBranchAddress("L1_EM3_EMPTY", &L1_EM3_EMPTY, &b_L1_EM3_EMPTY);
   fChain->SetBranchAddress("L1_EM3_FIRSTEMPTY", &L1_EM3_FIRSTEMPTY, &b_L1_EM3_FIRSTEMPTY);
   fChain->SetBranchAddress("L1_EM3_MV_VTE50", &L1_EM3_MV_VTE50, &b_L1_EM3_MV_VTE50);
   fChain->SetBranchAddress("L1_EM3_UNPAIRED_ISO", &L1_EM3_UNPAIRED_ISO, &b_L1_EM3_UNPAIRED_ISO);
   fChain->SetBranchAddress("L1_EM3_UNPAIRED_NONISO", &L1_EM3_UNPAIRED_NONISO, &b_L1_EM3_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L1_EM3_VTE20", &L1_EM3_VTE20, &b_L1_EM3_VTE20);
   fChain->SetBranchAddress("L1_EM3_VTE50", &L1_EM3_VTE50, &b_L1_EM3_VTE50);
   fChain->SetBranchAddress("L1_EM4", &L1_EM4, &b_L1_EM4);
   fChain->SetBranchAddress("L1_EM5", &L1_EM5, &b_L1_EM5);
   fChain->SetBranchAddress("L1_EM5_EMPTY", &L1_EM5_EMPTY, &b_L1_EM5_EMPTY);
   fChain->SetBranchAddress("L1_EM7", &L1_EM7, &b_L1_EM7);
   fChain->SetBranchAddress("L1_MU0", &L1_MU0, &b_L1_MU0);
   fChain->SetBranchAddress("L1_MU0_EMPTY", &L1_MU0_EMPTY, &b_L1_MU0_EMPTY);
   fChain->SetBranchAddress("L1_MU0_FIRSTEMPTY", &L1_MU0_FIRSTEMPTY, &b_L1_MU0_FIRSTEMPTY);
   fChain->SetBranchAddress("L1_MU0_MV_VTE50", &L1_MU0_MV_VTE50, &b_L1_MU0_MV_VTE50);
   fChain->SetBranchAddress("L1_MU0_TE50", &L1_MU0_TE50, &b_L1_MU0_TE50);
   fChain->SetBranchAddress("L1_MU0_UNPAIRED_ISO", &L1_MU0_UNPAIRED_ISO, &b_L1_MU0_UNPAIRED_ISO);
   fChain->SetBranchAddress("L1_MU0_UNPAIRED_NONISO", &L1_MU0_UNPAIRED_NONISO, &b_L1_MU0_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L1_MU0_VTE20", &L1_MU0_VTE20, &b_L1_MU0_VTE20);
   fChain->SetBranchAddress("L1_MU0_VTE50", &L1_MU0_VTE50, &b_L1_MU0_VTE50);
   fChain->SetBranchAddress("L1_MU11", &L1_MU11, &b_L1_MU11);
   fChain->SetBranchAddress("L1_MU11_EMPTY", &L1_MU11_EMPTY, &b_L1_MU11_EMPTY);
   fChain->SetBranchAddress("L1_MU15", &L1_MU15, &b_L1_MU15);
   fChain->SetBranchAddress("L1_MU20", &L1_MU20, &b_L1_MU20);
   fChain->SetBranchAddress("L1_MU4", &L1_MU4, &b_L1_MU4);
   fChain->SetBranchAddress("L1_MU4_EMPTY", &L1_MU4_EMPTY, &b_L1_MU4_EMPTY);
   fChain->SetBranchAddress("L1_MU4_FIRSTEMPTY", &L1_MU4_FIRSTEMPTY, &b_L1_MU4_FIRSTEMPTY);
   fChain->SetBranchAddress("L1_MU4_MV_VTE50", &L1_MU4_MV_VTE50, &b_L1_MU4_MV_VTE50);
   fChain->SetBranchAddress("L1_MU4_TE50", &L1_MU4_TE50, &b_L1_MU4_TE50);
   fChain->SetBranchAddress("L1_MU4_UNPAIRED_ISO", &L1_MU4_UNPAIRED_ISO, &b_L1_MU4_UNPAIRED_ISO);
   fChain->SetBranchAddress("L1_MU4_UNPAIRED_NONISO", &L1_MU4_UNPAIRED_NONISO, &b_L1_MU4_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L1_MU4_VTE50", &L1_MU4_VTE50, &b_L1_MU4_VTE50);
   fChain->SetBranchAddress("L1_MU6", &L1_MU6, &b_L1_MU6);
   fChain->SetBranchAddress("L1_MU6_FIRSTEMPTY", &L1_MU6_FIRSTEMPTY, &b_L1_MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("L2_2e5_loose1", &L2_2e5_loose1, &b_L2_2e5_loose1);
   fChain->SetBranchAddress("L2_2e5_medium1", &L2_2e5_medium1, &b_L2_2e5_medium1);
   fChain->SetBranchAddress("L2_2e5_tight1", &L2_2e5_tight1, &b_L2_2e5_tight1);
   fChain->SetBranchAddress("L2_2g10_loose", &L2_2g10_loose, &b_L2_2g10_loose);
   fChain->SetBranchAddress("L2_2g10_medium", &L2_2g10_medium, &b_L2_2g10_medium);
   fChain->SetBranchAddress("L2_2g5_loose", &L2_2g5_loose, &b_L2_2g5_loose);
   fChain->SetBranchAddress("L2_2g5_medium", &L2_2g5_medium, &b_L2_2g5_medium);
   fChain->SetBranchAddress("L2_2g7_loose", &L2_2g7_loose, &b_L2_2g7_loose);
   fChain->SetBranchAddress("L2_2g7_medium", &L2_2g7_medium, &b_L2_2g7_medium);
   fChain->SetBranchAddress("L2_2mu2_EFFS_L1MU0", &L2_2mu2_EFFS_L1MU0, &b_L2_2mu2_EFFS_L1MU0);
   fChain->SetBranchAddress("L2_2mu2_MSonly_EFFS_L1MBTS", &L2_2mu2_MSonly_EFFS_L1MBTS, &b_L2_2mu2_MSonly_EFFS_L1MBTS);
   fChain->SetBranchAddress("L2_2mu2_MSonly_EFFS_L1MU0", &L2_2mu2_MSonly_EFFS_L1MU0, &b_L2_2mu2_MSonly_EFFS_L1MU0);
   fChain->SetBranchAddress("L2_2mu2_MSonly_EFFS_L1ZDC_OR", &L2_2mu2_MSonly_EFFS_L1ZDC_OR, &b_L2_2mu2_MSonly_EFFS_L1ZDC_OR);
   fChain->SetBranchAddress("L2_2mu4", &L2_2mu4, &b_L2_2mu4);
   fChain->SetBranchAddress("L2_2mu4T_MSonly", &L2_2mu4T_MSonly, &b_L2_2mu4T_MSonly);
   fChain->SetBranchAddress("L2_2mu4_Jpsimumu_IDTrkNoCut", &L2_2mu4_Jpsimumu_IDTrkNoCut, &b_L2_2mu4_Jpsimumu_IDTrkNoCut);
   fChain->SetBranchAddress("L2_2mu4_MSonly", &L2_2mu4_MSonly, &b_L2_2mu4_MSonly);
   fChain->SetBranchAddress("L2_2mu4_MSonly_EFFS_L1MU0", &L2_2mu4_MSonly_EFFS_L1MU0, &b_L2_2mu4_MSonly_EFFS_L1MU0);
   fChain->SetBranchAddress("L2_2mu6T_MSonly", &L2_2mu6T_MSonly, &b_L2_2mu6T_MSonly);
   fChain->SetBranchAddress("L2_2mu6_MSonly", &L2_2mu6_MSonly, &b_L2_2mu6_MSonly);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2EM3", &L2_L1ItemStreamer_L1_2EM3, &b_L2_L1ItemStreamer_L1_2EM3);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2EM5", &L2_L1ItemStreamer_L1_2EM5, &b_L2_L1ItemStreamer_L1_2EM5);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU0", &L2_L1ItemStreamer_L1_2MU0, &b_L2_L1ItemStreamer_L1_2MU0);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU0_EMPTY", &L2_L1ItemStreamer_L1_2MU0_EMPTY, &b_L2_L1ItemStreamer_L1_2MU0_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU11", &L2_L1ItemStreamer_L1_2MU11, &b_L2_L1ItemStreamer_L1_2MU11);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU4", &L2_L1ItemStreamer_L1_2MU4, &b_L2_L1ItemStreamer_L1_2MU4);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU4_EMPTY", &L2_L1ItemStreamer_L1_2MU4_EMPTY, &b_L2_L1ItemStreamer_L1_2MU4_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU6", &L2_L1ItemStreamer_L1_2MU6, &b_L2_L1ItemStreamer_L1_2MU6);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU6_EMPTY", &L2_L1ItemStreamer_L1_2MU6_EMPTY, &b_L2_L1ItemStreamer_L1_2MU6_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY", &L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY, &b_L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO", &L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO, &b_L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO", &L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO, &b_L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM10", &L2_L1ItemStreamer_L1_EM10, &b_L2_L1ItemStreamer_L1_EM10);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM12", &L2_L1ItemStreamer_L1_EM12, &b_L2_L1ItemStreamer_L1_EM12);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM14", &L2_L1ItemStreamer_L1_EM14, &b_L2_L1ItemStreamer_L1_EM14);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM16", &L2_L1ItemStreamer_L1_EM16, &b_L2_L1ItemStreamer_L1_EM16);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3", &L2_L1ItemStreamer_L1_EM3, &b_L2_L1ItemStreamer_L1_EM3);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_2J5", &L2_L1ItemStreamer_L1_EM3_2J5, &b_L2_L1ItemStreamer_L1_EM3_2J5);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_EMPTY", &L2_L1ItemStreamer_L1_EM3_EMPTY, &b_L2_L1ItemStreamer_L1_EM3_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY", &L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY, &b_L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_MV_VTE50", &L2_L1ItemStreamer_L1_EM3_MV_VTE50, &b_L2_L1ItemStreamer_L1_EM3_MV_VTE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO", &L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO, &b_L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO", &L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO, &b_L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_VTE20", &L2_L1ItemStreamer_L1_EM3_VTE20, &b_L2_L1ItemStreamer_L1_EM3_VTE20);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM3_VTE50", &L2_L1ItemStreamer_L1_EM3_VTE50, &b_L2_L1ItemStreamer_L1_EM3_VTE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM4", &L2_L1ItemStreamer_L1_EM4, &b_L2_L1ItemStreamer_L1_EM4);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM5", &L2_L1ItemStreamer_L1_EM5, &b_L2_L1ItemStreamer_L1_EM5);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM5_EMPTY", &L2_L1ItemStreamer_L1_EM5_EMPTY, &b_L2_L1ItemStreamer_L1_EM5_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_EM7", &L2_L1ItemStreamer_L1_EM7, &b_L2_L1ItemStreamer_L1_EM7);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0", &L2_L1ItemStreamer_L1_MU0, &b_L2_L1ItemStreamer_L1_MU0);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_EMPTY", &L2_L1ItemStreamer_L1_MU0_EMPTY, &b_L2_L1ItemStreamer_L1_MU0_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY", &L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY, &b_L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_MV_VTE50", &L2_L1ItemStreamer_L1_MU0_MV_VTE50, &b_L2_L1ItemStreamer_L1_MU0_MV_VTE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_TE50", &L2_L1ItemStreamer_L1_MU0_TE50, &b_L2_L1ItemStreamer_L1_MU0_TE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO", &L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO, &b_L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO", &L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO, &b_L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_VTE20", &L2_L1ItemStreamer_L1_MU0_VTE20, &b_L2_L1ItemStreamer_L1_MU0_VTE20);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU0_VTE50", &L2_L1ItemStreamer_L1_MU0_VTE50, &b_L2_L1ItemStreamer_L1_MU0_VTE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU11", &L2_L1ItemStreamer_L1_MU11, &b_L2_L1ItemStreamer_L1_MU11);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU11_EMPTY", &L2_L1ItemStreamer_L1_MU11_EMPTY, &b_L2_L1ItemStreamer_L1_MU11_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU15", &L2_L1ItemStreamer_L1_MU15, &b_L2_L1ItemStreamer_L1_MU15);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU20", &L2_L1ItemStreamer_L1_MU20, &b_L2_L1ItemStreamer_L1_MU20);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4", &L2_L1ItemStreamer_L1_MU4, &b_L2_L1ItemStreamer_L1_MU4);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_EMPTY", &L2_L1ItemStreamer_L1_MU4_EMPTY, &b_L2_L1ItemStreamer_L1_MU4_EMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY", &L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY, &b_L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_MV_VTE50", &L2_L1ItemStreamer_L1_MU4_MV_VTE50, &b_L2_L1ItemStreamer_L1_MU4_MV_VTE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_TE50", &L2_L1ItemStreamer_L1_MU4_TE50, &b_L2_L1ItemStreamer_L1_MU4_TE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO", &L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO, &b_L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO", &L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO, &b_L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU4_VTE50", &L2_L1ItemStreamer_L1_MU4_VTE50, &b_L2_L1ItemStreamer_L1_MU4_VTE50);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU6", &L2_L1ItemStreamer_L1_MU6, &b_L2_L1ItemStreamer_L1_MU6);
   fChain->SetBranchAddress("L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY", &L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY, &b_L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("L2_SeededStreamerL1Calo", &L2_SeededStreamerL1Calo, &b_L2_SeededStreamerL1Calo);
   fChain->SetBranchAddress("L2_e10_loose1", &L2_e10_loose1, &b_L2_e10_loose1);
   fChain->SetBranchAddress("L2_e10_medium1", &L2_e10_medium1, &b_L2_e10_medium1);
   fChain->SetBranchAddress("L2_e14_tight1", &L2_e14_tight1, &b_L2_e14_tight1);
   fChain->SetBranchAddress("L2_e15_loose0", &L2_e15_loose0, &b_L2_e15_loose0);
   fChain->SetBranchAddress("L2_e15_loose1", &L2_e15_loose1, &b_L2_e15_loose1);
   fChain->SetBranchAddress("L2_e15_loose1_IDTrkNoCut", &L2_e15_loose1_IDTrkNoCut, &b_L2_e15_loose1_IDTrkNoCut);
   fChain->SetBranchAddress("L2_e15_medium1", &L2_e15_medium1, &b_L2_e15_medium1);
   fChain->SetBranchAddress("L2_e5_loose1", &L2_e5_loose1, &b_L2_e5_loose1);
   fChain->SetBranchAddress("L2_e5_medium1", &L2_e5_medium1, &b_L2_e5_medium1);
   fChain->SetBranchAddress("L2_e5_medium1_IDTrkNoCut", &L2_e5_medium1_IDTrkNoCut, &b_L2_e5_medium1_IDTrkNoCut);
   fChain->SetBranchAddress("L2_e5_tight1", &L2_e5_tight1, &b_L2_e5_tight1);
   fChain->SetBranchAddress("L2_e5_tight1_e5_NoCut", &L2_e5_tight1_e5_NoCut, &b_L2_e5_tight1_e5_NoCut);
   fChain->SetBranchAddress("L2_e7_loose1", &L2_e7_loose1, &b_L2_e7_loose1);
   fChain->SetBranchAddress("L2_e7_medium1", &L2_e7_medium1, &b_L2_e7_medium1);
   fChain->SetBranchAddress("L2_e7_tight1", &L2_e7_tight1, &b_L2_e7_tight1);
   fChain->SetBranchAddress("L2_e9_tight1", &L2_e9_tight1, &b_L2_e9_tight1);
   fChain->SetBranchAddress("L2_e9_tight1_e5_etcut", &L2_e9_tight1_e5_etcut, &b_L2_e9_tight1_e5_etcut);
   fChain->SetBranchAddress("L2_em3_empty_larcalib", &L2_em3_empty_larcalib, &b_L2_em3_empty_larcalib);
   fChain->SetBranchAddress("L2_em5_empty_larcalib", &L2_em5_empty_larcalib, &b_L2_em5_empty_larcalib);
   fChain->SetBranchAddress("L2_g10_loose", &L2_g10_loose, &b_L2_g10_loose);
   fChain->SetBranchAddress("L2_g10_medium", &L2_g10_medium, &b_L2_g10_medium);
   fChain->SetBranchAddress("L2_g10_medium_2j10_a4hi_EFFS_L1EM5", &L2_g10_medium_2j10_a4hi_EFFS_L1EM5, &b_L2_g10_medium_2j10_a4hi_EFFS_L1EM5);
   fChain->SetBranchAddress("L2_g10_medium_2j10_a4tchad_EFFS_L1EM5", &L2_g10_medium_2j10_a4tchad_EFFS_L1EM5, &b_L2_g10_medium_2j10_a4tchad_EFFS_L1EM5);
   fChain->SetBranchAddress("L2_g10_tight", &L2_g10_tight, &b_L2_g10_tight);
   fChain->SetBranchAddress("L2_g12_loose", &L2_g12_loose, &b_L2_g12_loose);
   fChain->SetBranchAddress("L2_g12_medium", &L2_g12_medium, &b_L2_g12_medium);
   fChain->SetBranchAddress("L2_g12_tight", &L2_g12_tight, &b_L2_g12_tight);
   fChain->SetBranchAddress("L2_g15_loose", &L2_g15_loose, &b_L2_g15_loose);
   fChain->SetBranchAddress("L2_g15_medium", &L2_g15_medium, &b_L2_g15_medium);
   fChain->SetBranchAddress("L2_g15_tight", &L2_g15_tight, &b_L2_g15_tight);
   fChain->SetBranchAddress("L2_g20_loose", &L2_g20_loose, &b_L2_g20_loose);
   fChain->SetBranchAddress("L2_g20_medium", &L2_g20_medium, &b_L2_g20_medium);
   fChain->SetBranchAddress("L2_g5_NoCut_cosmic", &L2_g5_NoCut_cosmic, &b_L2_g5_NoCut_cosmic);
   fChain->SetBranchAddress("L2_g5_loose", &L2_g5_loose, &b_L2_g5_loose);
   fChain->SetBranchAddress("L2_g5_loose_2L1J5", &L2_g5_loose_2L1J5, &b_L2_g5_loose_2L1J5);
   fChain->SetBranchAddress("L2_g5_medium", &L2_g5_medium, &b_L2_g5_medium);
   fChain->SetBranchAddress("L2_g5_medium_2L1J5", &L2_g5_medium_2L1J5, &b_L2_g5_medium_2L1J5);
   fChain->SetBranchAddress("L2_g5_tight", &L2_g5_tight, &b_L2_g5_tight);
   fChain->SetBranchAddress("L2_g7_loose", &L2_g7_loose, &b_L2_g7_loose);
   fChain->SetBranchAddress("L2_g7_medium", &L2_g7_medium, &b_L2_g7_medium);
   fChain->SetBranchAddress("L2_g7_medium_2j10_a4hi_EFFS_L1EM3", &L2_g7_medium_2j10_a4hi_EFFS_L1EM3, &b_L2_g7_medium_2j10_a4hi_EFFS_L1EM3);
   fChain->SetBranchAddress("L2_g7_medium_2j10_a4tchad_EFFS_L1EM3", &L2_g7_medium_2j10_a4tchad_EFFS_L1EM3, &b_L2_g7_medium_2j10_a4tchad_EFFS_L1EM3);
   fChain->SetBranchAddress("L2_g7_tight", &L2_g7_tight, &b_L2_g7_tight);
   fChain->SetBranchAddress("L2_g9_etcut", &L2_g9_etcut, &b_L2_g9_etcut);
   fChain->SetBranchAddress("L2_g9_tight", &L2_g9_tight, &b_L2_g9_tight);
   fChain->SetBranchAddress("L2_mu10", &L2_mu10, &b_L2_mu10);
   fChain->SetBranchAddress("L2_mu10T_MSonly", &L2_mu10T_MSonly, &b_L2_mu10T_MSonly);
   fChain->SetBranchAddress("L2_mu10_IDTrkNoCut", &L2_mu10_IDTrkNoCut, &b_L2_mu10_IDTrkNoCut);
   fChain->SetBranchAddress("L2_mu10_MSonly", &L2_mu10_MSonly, &b_L2_mu10_MSonly);
   fChain->SetBranchAddress("L2_mu13T_MSonly", &L2_mu13T_MSonly, &b_L2_mu13T_MSonly);
   fChain->SetBranchAddress("L2_mu13_MSonly", &L2_mu13_MSonly, &b_L2_mu13_MSonly);
   fChain->SetBranchAddress("L2_mu2", &L2_mu2, &b_L2_mu2);
   fChain->SetBranchAddress("L2_mu4", &L2_mu4, &b_L2_mu4);
   fChain->SetBranchAddress("L2_mu4T", &L2_mu4T, &b_L2_mu4T);
   fChain->SetBranchAddress("L2_mu4T_IDTrkNoCut", &L2_mu4T_IDTrkNoCut, &b_L2_mu4T_IDTrkNoCut);
   fChain->SetBranchAddress("L2_mu4T_MSonly", &L2_mu4T_MSonly, &b_L2_mu4T_MSonly);
   fChain->SetBranchAddress("L2_mu4T_MSonly_barrel", &L2_mu4T_MSonly_barrel, &b_L2_mu4T_MSonly_barrel);
   fChain->SetBranchAddress("L2_mu4T_MSonly_cosmic", &L2_mu4T_MSonly_cosmic, &b_L2_mu4T_MSonly_cosmic);
   fChain->SetBranchAddress("L2_mu4T_cosmic", &L2_mu4T_cosmic, &b_L2_mu4T_cosmic);
   fChain->SetBranchAddress("L2_mu4T_l2cal", &L2_mu4T_l2cal, &b_L2_mu4T_l2cal);
   fChain->SetBranchAddress("L2_mu4_IDTrkNoCut", &L2_mu4_IDTrkNoCut, &b_L2_mu4_IDTrkNoCut);
   fChain->SetBranchAddress("L2_mu4_MSonly", &L2_mu4_MSonly, &b_L2_mu4_MSonly);
   fChain->SetBranchAddress("L2_mu4_MSonly_EFFS_L1MBTS", &L2_mu4_MSonly_EFFS_L1MBTS, &b_L2_mu4_MSonly_EFFS_L1MBTS);
   fChain->SetBranchAddress("L2_mu4_MSonly_EFFS_L1ZDC_OR", &L2_mu4_MSonly_EFFS_L1ZDC_OR, &b_L2_mu4_MSonly_EFFS_L1ZDC_OR);
   fChain->SetBranchAddress("L2_mu4_MSonly_barrel", &L2_mu4_MSonly_barrel, &b_L2_mu4_MSonly_barrel);
   fChain->SetBranchAddress("L2_mu4_MSonly_cosmic", &L2_mu4_MSonly_cosmic, &b_L2_mu4_MSonly_cosmic);
   fChain->SetBranchAddress("L2_mu4_cosmic", &L2_mu4_cosmic, &b_L2_mu4_cosmic);
   fChain->SetBranchAddress("L2_mu4_l2cal_empty", &L2_mu4_l2cal_empty, &b_L2_mu4_l2cal_empty);
   fChain->SetBranchAddress("L2_mu4_mu2_EFFS_L1MU0", &L2_mu4_mu2_EFFS_L1MU0, &b_L2_mu4_mu2_EFFS_L1MU0);
   fChain->SetBranchAddress("L2_mu6", &L2_mu6, &b_L2_mu6);
   fChain->SetBranchAddress("L2_mu6T", &L2_mu6T, &b_L2_mu6T);
   fChain->SetBranchAddress("L2_mu6T_IDTrkNoCut", &L2_mu6T_IDTrkNoCut, &b_L2_mu6T_IDTrkNoCut);
   fChain->SetBranchAddress("L2_mu6T_MSonly", &L2_mu6T_MSonly, &b_L2_mu6T_MSonly);
   fChain->SetBranchAddress("L2_mu6_IDTrkNoCut", &L2_mu6_IDTrkNoCut, &b_L2_mu6_IDTrkNoCut);
   fChain->SetBranchAddress("L2_mu6_MSonly", &L2_mu6_MSonly, &b_L2_mu6_MSonly);
   fChain->SetBranchAddress("L2_mu6_l2cal", &L2_mu6_l2cal, &b_L2_mu6_l2cal);
   fChain->SetBranchAddress("L2_mu8", &L2_mu8, &b_L2_mu8);
   fChain->SetBranchAddress("L2_mu8_IDTrkNoCut", &L2_mu8_IDTrkNoCut, &b_L2_mu8_IDTrkNoCut);
   fChain->SetBranchAddress("L2_xe20_FEB_L1EM5", &L2_xe20_FEB_L1EM5, &b_L2_xe20_FEB_L1EM5);
   fChain->SetBranchAddress("L2_xe20_FEB_L1J10", &L2_xe20_FEB_L1J10, &b_L2_xe20_FEB_L1J10);
   fChain->SetBranchAddress("L2_xe20_FEB_L1MU0", &L2_xe20_FEB_L1MU0, &b_L2_xe20_FEB_L1MU0);
   fChain->SetBranchAddress("L2_xe20_FEB_L1TE65", &L2_xe20_FEB_L1TE65, &b_L2_xe20_FEB_L1TE65);
   fChain->SetBranchAddress("L2_xe20_FEB_L1TE90", &L2_xe20_FEB_L1TE90, &b_L2_xe20_FEB_L1TE90);
   fChain->SetBranchAddress("L2_xe25_FEB_L1TE65", &L2_xe25_FEB_L1TE65, &b_L2_xe25_FEB_L1TE65);
   fChain->SetBranchAddress("L2_xe25_FEB_L1TE90", &L2_xe25_FEB_L1TE90, &b_L2_xe25_FEB_L1TE90);
   fChain->SetBranchAddress("L2_xe30_FEB_L1EM5", &L2_xe30_FEB_L1EM5, &b_L2_xe30_FEB_L1EM5);
   fChain->SetBranchAddress("L2_xe30_FEB_L1J10", &L2_xe30_FEB_L1J10, &b_L2_xe30_FEB_L1J10);
   fChain->SetBranchAddress("L2_xe30_FEB_L1MU0", &L2_xe30_FEB_L1MU0, &b_L2_xe30_FEB_L1MU0);
   fChain->SetBranchAddress("L2_xe30_FEB_L1TE65", &L2_xe30_FEB_L1TE65, &b_L2_xe30_FEB_L1TE65);
   fChain->SetBranchAddress("L2_xe30_FEB_L1TE90", &L2_xe30_FEB_L1TE90, &b_L2_xe30_FEB_L1TE90);
   fChain->SetBranchAddress("L2_xe40_FEB_L1EM5", &L2_xe40_FEB_L1EM5, &b_L2_xe40_FEB_L1EM5);
   fChain->SetBranchAddress("L2_xe40_FEB_L1J10", &L2_xe40_FEB_L1J10, &b_L2_xe40_FEB_L1J10);
   fChain->SetBranchAddress("L2_xe40_FEB_L1MU0", &L2_xe40_FEB_L1MU0, &b_L2_xe40_FEB_L1MU0);
   fChain->SetBranchAddress("L2_xe40_FEB_L1TE65", &L2_xe40_FEB_L1TE65, &b_L2_xe40_FEB_L1TE65);
   fChain->SetBranchAddress("L2_xe40_FEB_L1TE90", &L2_xe40_FEB_L1TE90, &b_L2_xe40_FEB_L1TE90);
   fChain->SetBranchAddress("trig_EF_ph_EF_2g10_loose", &trig_EF_ph_EF_2g10_loose, &b_trig_EF_ph_EF_2g10_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_2g10_medium", &trig_EF_ph_EF_2g10_medium, &b_trig_EF_ph_EF_2g10_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_2g5_loose", &trig_EF_ph_EF_2g5_loose, &b_trig_EF_ph_EF_2g5_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_2g5_medium", &trig_EF_ph_EF_2g5_medium, &b_trig_EF_ph_EF_2g5_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_2g7_loose", &trig_EF_ph_EF_2g7_loose, &b_trig_EF_ph_EF_2g7_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_2g7_medium", &trig_EF_ph_EF_2g7_medium, &b_trig_EF_ph_EF_2g7_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM10", &trig_EF_ph_EF_L1ItemStreamer_L1_EM10, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM10);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM12", &trig_EF_ph_EF_L1ItemStreamer_L1_EM12, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM12);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM14", &trig_EF_ph_EF_L1ItemStreamer_L1_EM14, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM14);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM16", &trig_EF_ph_EF_L1ItemStreamer_L1_EM16, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM16);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_2J5", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_2J5, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_2J5);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_EMPTY", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_EMPTY, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_EMPTY);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_MV_VTE50", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_MV_VTE50, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_MV_VTE50);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE20", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE20, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE20);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE50", &trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE50, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM3_VTE50);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM4", &trig_EF_ph_EF_L1ItemStreamer_L1_EM4, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM4);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM5", &trig_EF_ph_EF_L1ItemStreamer_L1_EM5, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM5);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM5_EMPTY", &trig_EF_ph_EF_L1ItemStreamer_L1_EM5_EMPTY, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM5_EMPTY);
   fChain->SetBranchAddress("trig_EF_ph_EF_L1ItemStreamer_L1_EM7", &trig_EF_ph_EF_L1ItemStreamer_L1_EM7, &b_trig_EF_ph_EF_L1ItemStreamer_L1_EM7);
   fChain->SetBranchAddress("trig_EF_ph_EF_SeededStreamerL1Calo", &trig_EF_ph_EF_SeededStreamerL1Calo, &b_trig_EF_ph_EF_SeededStreamerL1Calo);
   fChain->SetBranchAddress("trig_EF_ph_EF_g10_loose", &trig_EF_ph_EF_g10_loose, &b_trig_EF_ph_EF_g10_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_g10_loose_larcalib", &trig_EF_ph_EF_g10_loose_larcalib, &b_trig_EF_ph_EF_g10_loose_larcalib);
   fChain->SetBranchAddress("trig_EF_ph_EF_g10_medium", &trig_EF_ph_EF_g10_medium, &b_trig_EF_ph_EF_g10_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_g10_medium_2j10_a4hi_EFFS_L1EM5", &trig_EF_ph_EF_g10_medium_2j10_a4hi_EFFS_L1EM5, &b_trig_EF_ph_EF_g10_medium_2j10_a4hi_EFFS_L1EM5);
   fChain->SetBranchAddress("trig_EF_ph_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5", &trig_EF_ph_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5, &b_trig_EF_ph_EF_g10_medium_2j10_a4tchad_EFFS_L1EM5);
   fChain->SetBranchAddress("trig_EF_ph_EF_g10_tight", &trig_EF_ph_EF_g10_tight, &b_trig_EF_ph_EF_g10_tight);
   fChain->SetBranchAddress("trig_EF_ph_EF_g12_loose", &trig_EF_ph_EF_g12_loose, &b_trig_EF_ph_EF_g12_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_g12_medium", &trig_EF_ph_EF_g12_medium, &b_trig_EF_ph_EF_g12_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_g12_tight", &trig_EF_ph_EF_g12_tight, &b_trig_EF_ph_EF_g12_tight);
   fChain->SetBranchAddress("trig_EF_ph_EF_g15_loose", &trig_EF_ph_EF_g15_loose, &b_trig_EF_ph_EF_g15_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_g15_medium", &trig_EF_ph_EF_g15_medium, &b_trig_EF_ph_EF_g15_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_g15_tight", &trig_EF_ph_EF_g15_tight, &b_trig_EF_ph_EF_g15_tight);
   fChain->SetBranchAddress("trig_EF_ph_EF_g20_loose", &trig_EF_ph_EF_g20_loose, &b_trig_EF_ph_EF_g20_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_g20_medium", &trig_EF_ph_EF_g20_medium, &b_trig_EF_ph_EF_g20_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_NoCut_cosmic", &trig_EF_ph_EF_g5_NoCut_cosmic, &b_trig_EF_ph_EF_g5_NoCut_cosmic);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_loose", &trig_EF_ph_EF_g5_loose, &b_trig_EF_ph_EF_g5_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_loose_2L1J5", &trig_EF_ph_EF_g5_loose_2L1J5, &b_trig_EF_ph_EF_g5_loose_2L1J5);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_loose_larcalib", &trig_EF_ph_EF_g5_loose_larcalib, &b_trig_EF_ph_EF_g5_loose_larcalib);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_medium", &trig_EF_ph_EF_g5_medium, &b_trig_EF_ph_EF_g5_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_medium_2L1J5", &trig_EF_ph_EF_g5_medium_2L1J5, &b_trig_EF_ph_EF_g5_medium_2L1J5);
   fChain->SetBranchAddress("trig_EF_ph_EF_g5_tight", &trig_EF_ph_EF_g5_tight, &b_trig_EF_ph_EF_g5_tight);
   fChain->SetBranchAddress("trig_EF_ph_EF_g7_loose", &trig_EF_ph_EF_g7_loose, &b_trig_EF_ph_EF_g7_loose);
   fChain->SetBranchAddress("trig_EF_ph_EF_g7_medium", &trig_EF_ph_EF_g7_medium, &b_trig_EF_ph_EF_g7_medium);
   fChain->SetBranchAddress("trig_EF_ph_EF_g7_medium_2j10_a4hi_EFFS_L1EM3", &trig_EF_ph_EF_g7_medium_2j10_a4hi_EFFS_L1EM3, &b_trig_EF_ph_EF_g7_medium_2j10_a4hi_EFFS_L1EM3);
   fChain->SetBranchAddress("trig_EF_ph_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3", &trig_EF_ph_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3, &b_trig_EF_ph_EF_g7_medium_2j10_a4tchad_EFFS_L1EM3);
   fChain->SetBranchAddress("trig_EF_ph_EF_g7_tight", &trig_EF_ph_EF_g7_tight, &b_trig_EF_ph_EF_g7_tight);
   fChain->SetBranchAddress("trig_EF_ph_EF_g9_etcut", &trig_EF_ph_EF_g9_etcut, &b_trig_EF_ph_EF_g9_etcut);
   fChain->SetBranchAddress("trig_EF_ph_EF_g9_tight", &trig_EF_ph_EF_g9_tight, &b_trig_EF_ph_EF_g9_tight);
   fChain->SetBranchAddress("trig_EF_el_EF_2e5_loose1", &trig_EF_el_EF_2e5_loose1, &b_trig_EF_el_EF_2e5_loose1);
   fChain->SetBranchAddress("trig_EF_el_EF_2e5_medium1", &trig_EF_el_EF_2e5_medium1, &b_trig_EF_el_EF_2e5_medium1);
   fChain->SetBranchAddress("trig_EF_el_EF_2e5_tight1", &trig_EF_el_EF_2e5_tight1, &b_trig_EF_el_EF_2e5_tight1);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM10", &trig_EF_el_EF_L1ItemStreamer_L1_EM10, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM10);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM12", &trig_EF_el_EF_L1ItemStreamer_L1_EM12, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM12);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM14", &trig_EF_el_EF_L1ItemStreamer_L1_EM14, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM14);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM16", &trig_EF_el_EF_L1ItemStreamer_L1_EM16, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM16);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3", &trig_EF_el_EF_L1ItemStreamer_L1_EM3, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_2J5", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_2J5, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_2J5);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_EMPTY", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_EMPTY, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_EMPTY);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_MV_VTE50", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_MV_VTE50, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_MV_VTE50);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE20", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE20, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE20);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE50", &trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE50, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM3_VTE50);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM4", &trig_EF_el_EF_L1ItemStreamer_L1_EM4, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM4);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM5", &trig_EF_el_EF_L1ItemStreamer_L1_EM5, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM5);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM5_EMPTY", &trig_EF_el_EF_L1ItemStreamer_L1_EM5_EMPTY, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM5_EMPTY);
   fChain->SetBranchAddress("trig_EF_el_EF_L1ItemStreamer_L1_EM7", &trig_EF_el_EF_L1ItemStreamer_L1_EM7, &b_trig_EF_el_EF_L1ItemStreamer_L1_EM7);
   fChain->SetBranchAddress("trig_EF_el_EF_SeededStreamerL1Calo", &trig_EF_el_EF_SeededStreamerL1Calo, &b_trig_EF_el_EF_SeededStreamerL1Calo);
   fChain->SetBranchAddress("trig_EF_el_EF_e10_loose1", &trig_EF_el_EF_e10_loose1, &b_trig_EF_el_EF_e10_loose1);
   fChain->SetBranchAddress("trig_EF_el_EF_e10_medium1", &trig_EF_el_EF_e10_medium1, &b_trig_EF_el_EF_e10_medium1);
   fChain->SetBranchAddress("trig_EF_el_EF_e14_tight1", &trig_EF_el_EF_e14_tight1, &b_trig_EF_el_EF_e14_tight1);
   fChain->SetBranchAddress("trig_EF_el_EF_e15_loose0", &trig_EF_el_EF_e15_loose0, &b_trig_EF_el_EF_e15_loose0);
   fChain->SetBranchAddress("trig_EF_el_EF_e15_loose1", &trig_EF_el_EF_e15_loose1, &b_trig_EF_el_EF_e15_loose1);
   fChain->SetBranchAddress("trig_EF_el_EF_e15_loose1_IDTrkNoCut", &trig_EF_el_EF_e15_loose1_IDTrkNoCut, &b_trig_EF_el_EF_e15_loose1_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_el_EF_e15_medium1", &trig_EF_el_EF_e15_medium1, &b_trig_EF_el_EF_e15_medium1);
   fChain->SetBranchAddress("trig_EF_el_EF_e5_loose1", &trig_EF_el_EF_e5_loose1, &b_trig_EF_el_EF_e5_loose1);
   fChain->SetBranchAddress("trig_EF_el_EF_e5_medium1", &trig_EF_el_EF_e5_medium1, &b_trig_EF_el_EF_e5_medium1);
   fChain->SetBranchAddress("trig_EF_el_EF_e5_medium1_IDTrkNoCut", &trig_EF_el_EF_e5_medium1_IDTrkNoCut, &b_trig_EF_el_EF_e5_medium1_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_el_EF_e5_tight1", &trig_EF_el_EF_e5_tight1, &b_trig_EF_el_EF_e5_tight1);
   fChain->SetBranchAddress("trig_EF_el_EF_e5_tight1_e5_NoCut", &trig_EF_el_EF_e5_tight1_e5_NoCut, &b_trig_EF_el_EF_e5_tight1_e5_NoCut);
   fChain->SetBranchAddress("trig_EF_el_EF_e7_loose1", &trig_EF_el_EF_e7_loose1, &b_trig_EF_el_EF_e7_loose1);
   fChain->SetBranchAddress("trig_EF_el_EF_e7_medium1", &trig_EF_el_EF_e7_medium1, &b_trig_EF_el_EF_e7_medium1);
   fChain->SetBranchAddress("trig_EF_el_EF_e7_tight1", &trig_EF_el_EF_e7_tight1, &b_trig_EF_el_EF_e7_tight1);
   fChain->SetBranchAddress("trig_EF_el_EF_e9_tight1", &trig_EF_el_EF_e9_tight1, &b_trig_EF_el_EF_e9_tight1);
   fChain->SetBranchAddress("trig_EF_el_EF_e9_tight1_e5_etcut", &trig_EF_el_EF_e9_tight1_e5_etcut, &b_trig_EF_el_EF_e9_tight1_e5_etcut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu2_EFFS", &trig_EF_trigmuonef_EF_2mu2_EFFS, &b_trig_EF_trigmuonef_EF_2mu2_EFFS);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu2_EFFS_L1MU0", &trig_EF_trigmuonef_EF_2mu2_EFFS_L1MU0, &b_trig_EF_trigmuonef_EF_2mu2_EFFS_L1MU0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS", &trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS, &b_trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MU0", &trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MU0, &b_trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MU0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR", &trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR, &b_trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu4", &trig_EF_trigmuonef_EF_2mu4, &b_trig_EF_trigmuonef_EF_2mu4);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu4T_MSonly", &trig_EF_trigmuonef_EF_2mu4T_MSonly, &b_trig_EF_trigmuonef_EF_2mu4T_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu4_Jpsimumu_IDTrkNoCut", &trig_EF_trigmuonef_EF_2mu4_Jpsimumu_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_2mu4_Jpsimumu_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu4_MSonly", &trig_EF_trigmuonef_EF_2mu4_MSonly, &b_trig_EF_trigmuonef_EF_2mu4_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0", &trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0, &b_trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu6T_MSonly", &trig_EF_trigmuonef_EF_2mu6T_MSonly, &b_trig_EF_trigmuonef_EF_2mu6T_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_2mu6_MSonly", &trig_EF_trigmuonef_EF_2mu6_MSonly, &b_trig_EF_trigmuonef_EF_2mu6_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE20", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE20, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE20);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY", &trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY, &b_trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu10", &trig_EF_trigmuonef_EF_mu10, &b_trig_EF_trigmuonef_EF_mu10);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu10T_MSonly", &trig_EF_trigmuonef_EF_mu10T_MSonly, &b_trig_EF_trigmuonef_EF_mu10T_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu10_IDTrkNoCut", &trig_EF_trigmuonef_EF_mu10_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_mu10_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu10_MSonly", &trig_EF_trigmuonef_EF_mu10_MSonly, &b_trig_EF_trigmuonef_EF_mu10_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu13T_MSonly", &trig_EF_trigmuonef_EF_mu13T_MSonly, &b_trig_EF_trigmuonef_EF_mu13T_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu13_MSonly", &trig_EF_trigmuonef_EF_mu13_MSonly, &b_trig_EF_trigmuonef_EF_mu13_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu2", &trig_EF_trigmuonef_EF_mu2, &b_trig_EF_trigmuonef_EF_mu2);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4", &trig_EF_trigmuonef_EF_mu4, &b_trig_EF_trigmuonef_EF_mu4);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4T", &trig_EF_trigmuonef_EF_mu4T, &b_trig_EF_trigmuonef_EF_mu4T);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut", &trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4T_MSonly", &trig_EF_trigmuonef_EF_mu4T_MSonly, &b_trig_EF_trigmuonef_EF_mu4T_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4T_MSonly_barrel", &trig_EF_trigmuonef_EF_mu4T_MSonly_barrel, &b_trig_EF_trigmuonef_EF_mu4T_MSonly_barrel);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic", &trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic, &b_trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4T_cosmic", &trig_EF_trigmuonef_EF_mu4T_cosmic, &b_trig_EF_trigmuonef_EF_mu4T_cosmic);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_IDTrkNoCut", &trig_EF_trigmuonef_EF_mu4_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_mu4_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly", &trig_EF_trigmuonef_EF_mu4_MSonly, &b_trig_EF_trigmuonef_EF_mu4_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS", &trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS, &b_trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR", &trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR, &b_trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly_barrel", &trig_EF_trigmuonef_EF_mu4_MSonly_barrel, &b_trig_EF_trigmuonef_EF_mu4_MSonly_barrel);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly_cosmic", &trig_EF_trigmuonef_EF_mu4_MSonly_cosmic, &b_trig_EF_trigmuonef_EF_mu4_MSonly_cosmic);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_MSonly_j15_a4tchad_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_MSonly_j15_a4tchad_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_MSonly_j15_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_cosmic", &trig_EF_trigmuonef_EF_mu4_cosmic, &b_trig_EF_trigmuonef_EF_mu4_cosmic);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j10_a4hi_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j10_a4hi_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j10_a4hi_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j10_a4tchad_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j10_a4tchad_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j10_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j15_a4hi_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j15_a4hi_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j15_a4hi_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j15_a4tchad_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j15_a4tchad_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j15_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j20_a4hi_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j20_a4hi_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j20_a4hi_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j20_a4tchad_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j20_a4tchad_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j20_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j30_a4hi_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j30_a4hi_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j30_a4hi_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j30_a4tchad_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j30_a4tchad_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j30_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_j40_a4tchad_EFFS_matched", &trig_EF_trigmuonef_EF_mu4_j40_a4tchad_EFFS_matched, &b_trig_EF_trigmuonef_EF_mu4_j40_a4tchad_EFFS_matched);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_mu2_EFFS", &trig_EF_trigmuonef_EF_mu4_mu2_EFFS, &b_trig_EF_trigmuonef_EF_mu4_mu2_EFFS);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu4_mu2_EFFS_L1MU0", &trig_EF_trigmuonef_EF_mu4_mu2_EFFS_L1MU0, &b_trig_EF_trigmuonef_EF_mu4_mu2_EFFS_L1MU0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu6", &trig_EF_trigmuonef_EF_mu6, &b_trig_EF_trigmuonef_EF_mu6);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu6T", &trig_EF_trigmuonef_EF_mu6T, &b_trig_EF_trigmuonef_EF_mu6T);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut", &trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu6T_MSonly", &trig_EF_trigmuonef_EF_mu6T_MSonly, &b_trig_EF_trigmuonef_EF_mu6T_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu6_IDTrkNoCut", &trig_EF_trigmuonef_EF_mu6_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_mu6_IDTrkNoCut);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu6_MSonly", &trig_EF_trigmuonef_EF_mu6_MSonly, &b_trig_EF_trigmuonef_EF_mu6_MSonly);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu8", &trig_EF_trigmuonef_EF_mu8, &b_trig_EF_trigmuonef_EF_mu8);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EF_mu8_IDTrkNoCut", &trig_EF_trigmuonef_EF_mu8_IDTrkNoCut, &b_trig_EF_trigmuonef_EF_mu8_IDTrkNoCut);
   fChain->SetBranchAddress("RunNumber", &RunNumber, &b_RunNumber);
   fChain->SetBranchAddress("EventNumber", &EventNumber, &b_EventNumber);
   fChain->SetBranchAddress("timestamp", &timestamp, &b_timestamp);
   fChain->SetBranchAddress("timestamp_ns", &timestamp_ns, &b_timestamp_ns);
   fChain->SetBranchAddress("lbn", &lbn, &b_lbn);
   fChain->SetBranchAddress("bcid", &bcid, &b_bcid);
   fChain->SetBranchAddress("detmask0", &detmask0, &b_detmask0);
   fChain->SetBranchAddress("detmask1", &detmask1, &b_detmask1);
   fChain->SetBranchAddress("actualIntPerXing", &actualIntPerXing, &b_actualIntPerXing);
   fChain->SetBranchAddress("averageIntPerXing", &averageIntPerXing, &b_averageIntPerXing);
   fChain->SetBranchAddress("mc_channel_number", &mc_channel_number, &b_mc_channel_number);
   fChain->SetBranchAddress("mc_event_number", &mc_event_number, &b_mc_event_number);
   fChain->SetBranchAddress("mc_event_weight", &mc_event_weight, &b_mc_event_weight);
   fChain->SetBranchAddress("pixelFlags", &pixelFlags, &b_pixelFlags);
   fChain->SetBranchAddress("sctFlags", &sctFlags, &b_sctFlags);
   fChain->SetBranchAddress("trtFlags", &trtFlags, &b_trtFlags);
   fChain->SetBranchAddress("larFlags", &larFlags, &b_larFlags);
   fChain->SetBranchAddress("tileFlags", &tileFlags, &b_tileFlags);
   fChain->SetBranchAddress("muonFlags", &muonFlags, &b_muonFlags);
   fChain->SetBranchAddress("fwdFlags", &fwdFlags, &b_fwdFlags);
   fChain->SetBranchAddress("coreFlags", &coreFlags, &b_coreFlags);
   fChain->SetBranchAddress("pixelError", &pixelError, &b_pixelError);
   fChain->SetBranchAddress("sctError", &sctError, &b_sctError);
   fChain->SetBranchAddress("trtError", &trtError, &b_trtError);
   fChain->SetBranchAddress("larError", &larError, &b_larError);
   fChain->SetBranchAddress("tileError", &tileError, &b_tileError);
   fChain->SetBranchAddress("muonError", &muonError, &b_muonError);
   fChain->SetBranchAddress("fwdError", &fwdError, &b_fwdError);
   fChain->SetBranchAddress("coreError", &coreError, &b_coreError);
   fChain->SetBranchAddress("isSimulation", &isSimulation, &b_isSimulation);
   fChain->SetBranchAddress("isCalibration", &isCalibration, &b_isCalibration);
   fChain->SetBranchAddress("isTestBeam", &isTestBeam, &b_isTestBeam);
   fChain->SetBranchAddress("mb_n", &mb_n, &b_mb_n);
   fChain->SetBranchAddress("mb_E", &mb_E, &b_mb_E);
   fChain->SetBranchAddress("mb_eta", &mb_eta, &b_mb_eta);
   fChain->SetBranchAddress("mb_phi", &mb_phi, &b_mb_phi);
   fChain->SetBranchAddress("mb_time", &mb_time, &b_mb_time);
   fChain->SetBranchAddress("mb_quality", &mb_quality, &b_mb_quality);
   fChain->SetBranchAddress("mb_type", &mb_type, &b_mb_type);
   fChain->SetBranchAddress("mb_module", &mb_module, &b_mb_module);
   fChain->SetBranchAddress("mb_channel", &mb_channel, &b_mb_channel);
   fChain->SetBranchAddress("mbtime_timeDiff", &mbtime_timeDiff, &b_mbtime_timeDiff);
   fChain->SetBranchAddress("mbtime_timeA", &mbtime_timeA, &b_mbtime_timeA);
   fChain->SetBranchAddress("mbtime_timeC", &mbtime_timeC, &b_mbtime_timeC);
   fChain->SetBranchAddress("mbtime_countA", &mbtime_countA, &b_mbtime_countA);
   fChain->SetBranchAddress("mbtime_countC", &mbtime_countC, &b_mbtime_countC);
   fChain->SetBranchAddress("alfa_DCS_BLM", &alfa_DCS_BLM, &b_alfa_DCS_BLM);
   fChain->SetBranchAddress("alfa_DCS_HVCHANNEL", &alfa_DCS_HVCHANNEL, &b_alfa_DCS_HVCHANNEL);
   fChain->SetBranchAddress("alfa_DCS_LOCALMONITORING", &alfa_DCS_LOCALMONITORING, &b_alfa_DCS_LOCALMONITORING);
   fChain->SetBranchAddress("alfa_DCS_MOVEMENT", &alfa_DCS_MOVEMENT, &b_alfa_DCS_MOVEMENT);
   fChain->SetBranchAddress("alfa_DCS_RADMON", &alfa_DCS_RADMON, &b_alfa_DCS_RADMON);
   fChain->SetBranchAddress("alfa_DCS_TRIGGERRATES", &alfa_DCS_TRIGGERRATES, &b_alfa_DCS_TRIGGERRATES);
   fChain->SetBranchAddress("alfa_DCS_FECONFIGURATION", &alfa_DCS_FECONFIGURATION, &b_alfa_DCS_FECONFIGURATION);
   fChain->SetBranchAddress("alfa_DCS_TRIGGERSETTINGS", &alfa_DCS_TRIGGERSETTINGS, &b_alfa_DCS_TRIGGERSETTINGS);
   fChain->SetBranchAddress("alfa_Scaler", &alfa_Scaler, &b_alfa_Scaler);
   fChain->SetBranchAddress("alfa_BCId", &alfa_BCId, &b_alfa_BCId);
   fChain->SetBranchAddress("alfa_TimeStp", &alfa_TimeStp, &b_alfa_TimeStp);
   fChain->SetBranchAddress("alfa_TimeStp_ns", &alfa_TimeStp_ns, &b_alfa_TimeStp_ns);
   fChain->SetBranchAddress("alfa_TrigPat", &alfa_TrigPat, &b_alfa_TrigPat);
   fChain->SetBranchAddress("alfa_FiberHitsMD", &alfa_FiberHitsMD, &b_alfa_FiberHitsMD);
   fChain->SetBranchAddress("alfa_MultiMD", &alfa_MultiMD, &b_alfa_MultiMD);
   fChain->SetBranchAddress("alfa_FiberHitsODPos", &alfa_FiberHitsODPos, &b_alfa_FiberHitsODPos);
   fChain->SetBranchAddress("alfa_FiberHitsODNeg", &alfa_FiberHitsODNeg, &b_alfa_FiberHitsODNeg);
   fChain->SetBranchAddress("alfa_MultiODPos", &alfa_MultiODPos, &b_alfa_MultiODPos);
   fChain->SetBranchAddress("alfa_MultiODNeg", &alfa_MultiODNeg, &b_alfa_MultiODNeg);
   fChain->SetBranchAddress("alfa_x_Det", &alfa_x_Det, &b_alfa_x_Det);
   fChain->SetBranchAddress("alfa_y_Det", &alfa_y_Det, &b_alfa_y_Det);
   fChain->SetBranchAddress("alfa_Detector", &alfa_Detector, &b_alfa_Detector);
   fChain->SetBranchAddress("alfa_NumTrack", &alfa_NumTrack, &b_alfa_NumTrack);
   fChain->SetBranchAddress("alfa_OverU", &alfa_OverU, &b_alfa_OverU);
   fChain->SetBranchAddress("alfa_OverV", &alfa_OverV, &b_alfa_OverV);
   fChain->SetBranchAddress("alfa_OverY", &alfa_OverY, &b_alfa_OverY);
   fChain->SetBranchAddress("alfa_NU", &alfa_NU, &b_alfa_NU);
   fChain->SetBranchAddress("alfa_NV", &alfa_NV, &b_alfa_NV);
   fChain->SetBranchAddress("alfa_NY", &alfa_NY, &b_alfa_NY);
   fChain->SetBranchAddress("alfa_Fib_SelMD", &alfa_Fib_SelMD, &b_alfa_Fib_SelMD);
   fChain->SetBranchAddress("alfa_Fib_SelOD", &alfa_Fib_SelOD, &b_alfa_Fib_SelOD);
   fChain->SetBranchAddress("alfa_x_LHC", &alfa_x_LHC, &b_alfa_x_LHC);
   fChain->SetBranchAddress("alfa_y_LHC", &alfa_y_LHC, &b_alfa_y_LHC);
   fChain->SetBranchAddress("alfa_z_LHC", &alfa_z_LHC, &b_alfa_z_LHC);
   fChain->SetBranchAddress("alfa_x_Pot", &alfa_x_Pot, &b_alfa_x_Pot);
   fChain->SetBranchAddress("alfa_y_Pot", &alfa_y_Pot, &b_alfa_y_Pot);
   fChain->SetBranchAddress("alfa_x_Stat", &alfa_x_Stat, &b_alfa_x_Stat);
   fChain->SetBranchAddress("alfa_y_Stat", &alfa_y_Stat, &b_alfa_y_Stat);
   fChain->SetBranchAddress("alfa_x_Beam", &alfa_x_Beam, &b_alfa_x_Beam);
   fChain->SetBranchAddress("alfa_y_Beam", &alfa_y_Beam, &b_alfa_y_Beam);
   fChain->SetBranchAddress("cc_fcal_n", &cc_fcal_n, &b_cc_fcal_n);
   fChain->SetBranchAddress("cc_fcal_E", &cc_fcal_E, &b_cc_fcal_E);
   fChain->SetBranchAddress("cc_fcal_pt", &cc_fcal_pt, &b_cc_fcal_pt);
   fChain->SetBranchAddress("cc_fcal_eta", &cc_fcal_eta, &b_cc_fcal_eta);
   fChain->SetBranchAddress("cc_fcal_phi", &cc_fcal_phi, &b_cc_fcal_phi);
   fChain->SetBranchAddress("cc_fcal_QCells", &cc_fcal_QCells, &b_cc_fcal_QCells);
   fChain->SetBranchAddress("cc_fcal_GainCells", &cc_fcal_GainCells, &b_cc_fcal_GainCells);
   fChain->SetBranchAddress("cc_fcal_DetCells", &cc_fcal_DetCells, &b_cc_fcal_DetCells);
   fChain->SetBranchAddress("cc_fcal_TimeCells", &cc_fcal_TimeCells, &b_cc_fcal_TimeCells);
   fChain->SetBranchAddress("cc_fcal_xCells", &cc_fcal_xCells, &b_cc_fcal_xCells);
   fChain->SetBranchAddress("cc_fcal_yCells", &cc_fcal_yCells, &b_cc_fcal_yCells);
   fChain->SetBranchAddress("cc_fcal_zCells", &cc_fcal_zCells, &b_cc_fcal_zCells);
   fChain->SetBranchAddress("cc_fcal_BadCells", &cc_fcal_BadCells, &b_cc_fcal_BadCells);
   fChain->SetBranchAddress("cc_fcal_IdCells", &cc_fcal_IdCells, &b_cc_fcal_IdCells);
   fChain->SetBranchAddress("cc_fcal_Sigma", &cc_fcal_Sigma, &b_cc_fcal_Sigma);
   fChain->SetBranchAddress("ccc_Nh_Calo", &ccc_Nh_Calo, &b_ccc_Nh_Calo);
   fChain->SetBranchAddress("ccc_Eh_Calo", &ccc_Eh_Calo, &b_ccc_Eh_Calo);
   fChain->SetBranchAddress("ccc_Nh_EM", &ccc_Nh_EM, &b_ccc_Nh_EM);
   fChain->SetBranchAddress("ccc_Eh_EM", &ccc_Eh_EM, &b_ccc_Eh_EM);
   fChain->SetBranchAddress("ccc_Nh_HAD", &ccc_Nh_HAD, &b_ccc_Nh_HAD);
   fChain->SetBranchAddress("ccc_Eh_HAD", &ccc_Eh_HAD, &b_ccc_Eh_HAD);
   fChain->SetBranchAddress("ccc_Nh_PresB", &ccc_Nh_PresB, &b_ccc_Nh_PresB);
   fChain->SetBranchAddress("ccc_Eh_PresB", &ccc_Eh_PresB, &b_ccc_Eh_PresB);
   fChain->SetBranchAddress("ccc_Nh_EMB", &ccc_Nh_EMB, &b_ccc_Nh_EMB);
   fChain->SetBranchAddress("ccc_Eh_EMB", &ccc_Eh_EMB, &b_ccc_Eh_EMB);
   fChain->SetBranchAddress("ccc_Nh_EMEC", &ccc_Nh_EMEC, &b_ccc_Nh_EMEC);
   fChain->SetBranchAddress("ccc_Eh_EMEC", &ccc_Eh_EMEC, &b_ccc_Eh_EMEC);
   fChain->SetBranchAddress("ccc_Nh_Tile", &ccc_Nh_Tile, &b_ccc_Nh_Tile);
   fChain->SetBranchAddress("ccc_Eh_Tile", &ccc_Eh_Tile, &b_ccc_Eh_Tile);
   fChain->SetBranchAddress("ccc_Nh_TileGap", &ccc_Nh_TileGap, &b_ccc_Nh_TileGap);
   fChain->SetBranchAddress("ccc_Eh_TileGap", &ccc_Eh_TileGap, &b_ccc_Eh_TileGap);
   fChain->SetBranchAddress("ccc_Nh_HEC", &ccc_Nh_HEC, &b_ccc_Nh_HEC);
   fChain->SetBranchAddress("ccc_Eh_HEC", &ccc_Eh_HEC, &b_ccc_Eh_HEC);
   fChain->SetBranchAddress("ccc_Nh_FCal", &ccc_Nh_FCal, &b_ccc_Nh_FCal);
   fChain->SetBranchAddress("ccc_Eh_FCal", &ccc_Eh_FCal, &b_ccc_Eh_FCal);
   fChain->SetBranchAddress("ccc_Nh_PresE", &ccc_Nh_PresE, &b_ccc_Nh_PresE);
   fChain->SetBranchAddress("ccc_Eh_PresE", &ccc_Eh_PresE, &b_ccc_Eh_PresE);
   fChain->SetBranchAddress("ccc_Nh_Scint", &ccc_Nh_Scint, &b_ccc_Nh_Scint);
   fChain->SetBranchAddress("ccc_Eh_Scint", &ccc_Eh_Scint, &b_ccc_Eh_Scint);
   fChain->SetBranchAddress("cccEt_Et_Nh_Calo", &cccEt_Et_Nh_Calo, &b_cccEt_Et_Nh_Calo);
   fChain->SetBranchAddress("cccEt_Et_Eh_Calo", &cccEt_Et_Eh_Calo, &b_cccEt_Et_Eh_Calo);
   fChain->SetBranchAddress("cccEt_Et_Nh_EM", &cccEt_Et_Nh_EM, &b_cccEt_Et_Nh_EM);
   fChain->SetBranchAddress("cccEt_Et_Eh_EM", &cccEt_Et_Eh_EM, &b_cccEt_Et_Eh_EM);
   fChain->SetBranchAddress("cccEt_Et_Nh_HAD", &cccEt_Et_Nh_HAD, &b_cccEt_Et_Nh_HAD);
   fChain->SetBranchAddress("cccEt_Et_Eh_HAD", &cccEt_Et_Eh_HAD, &b_cccEt_Et_Eh_HAD);
   fChain->SetBranchAddress("cccEt_Et_Nh_PresB", &cccEt_Et_Nh_PresB, &b_cccEt_Et_Nh_PresB);
   fChain->SetBranchAddress("cccEt_Et_Eh_PresB", &cccEt_Et_Eh_PresB, &b_cccEt_Et_Eh_PresB);
   fChain->SetBranchAddress("cccEt_Et_Nh_EMB", &cccEt_Et_Nh_EMB, &b_cccEt_Et_Nh_EMB);
   fChain->SetBranchAddress("cccEt_Et_Eh_EMB", &cccEt_Et_Eh_EMB, &b_cccEt_Et_Eh_EMB);
   fChain->SetBranchAddress("cccEt_Et_Nh_EMEC", &cccEt_Et_Nh_EMEC, &b_cccEt_Et_Nh_EMEC);
   fChain->SetBranchAddress("cccEt_Et_Eh_EMEC", &cccEt_Et_Eh_EMEC, &b_cccEt_Et_Eh_EMEC);
   fChain->SetBranchAddress("cccEt_Et_Nh_Tile", &cccEt_Et_Nh_Tile, &b_cccEt_Et_Nh_Tile);
   fChain->SetBranchAddress("cccEt_Et_Eh_Tile", &cccEt_Et_Eh_Tile, &b_cccEt_Et_Eh_Tile);
   fChain->SetBranchAddress("cccEt_Et_Nh_TileGap", &cccEt_Et_Nh_TileGap, &b_cccEt_Et_Nh_TileGap);
   fChain->SetBranchAddress("cccEt_Et_Eh_TileGap", &cccEt_Et_Eh_TileGap, &b_cccEt_Et_Eh_TileGap);
   fChain->SetBranchAddress("cccEt_Et_Nh_HEC", &cccEt_Et_Nh_HEC, &b_cccEt_Et_Nh_HEC);
   fChain->SetBranchAddress("cccEt_Et_Eh_HEC", &cccEt_Et_Eh_HEC, &b_cccEt_Et_Eh_HEC);
   fChain->SetBranchAddress("cccEt_Et_Nh_FCal", &cccEt_Et_Nh_FCal, &b_cccEt_Et_Nh_FCal);
   fChain->SetBranchAddress("cccEt_Et_Eh_FCal", &cccEt_Et_Eh_FCal, &b_cccEt_Et_Eh_FCal);
   fChain->SetBranchAddress("cccEt_Et_Nh_PresE", &cccEt_Et_Nh_PresE, &b_cccEt_Et_Nh_PresE);
   fChain->SetBranchAddress("cccEt_Et_Eh_PresE", &cccEt_Et_Eh_PresE, &b_cccEt_Et_Eh_PresE);
   fChain->SetBranchAddress("cccEt_Et_Nh_Scint", &cccEt_Et_Nh_Scint, &b_cccEt_Et_Nh_Scint);
   fChain->SetBranchAddress("cccEt_Et_Eh_Scint", &cccEt_Et_Eh_Scint, &b_cccEt_Et_Eh_Scint);
   fChain->SetBranchAddress("cccEt_p_Nh_Calo", &cccEt_p_Nh_Calo, &b_cccEt_p_Nh_Calo);
   fChain->SetBranchAddress("cccEt_p_Eh_Calo", &cccEt_p_Eh_Calo, &b_cccEt_p_Eh_Calo);
   fChain->SetBranchAddress("cccEt_p_Nh_EM", &cccEt_p_Nh_EM, &b_cccEt_p_Nh_EM);
   fChain->SetBranchAddress("cccEt_p_Eh_EM", &cccEt_p_Eh_EM, &b_cccEt_p_Eh_EM);
   fChain->SetBranchAddress("cccEt_p_Nh_HAD", &cccEt_p_Nh_HAD, &b_cccEt_p_Nh_HAD);
   fChain->SetBranchAddress("cccEt_p_Eh_HAD", &cccEt_p_Eh_HAD, &b_cccEt_p_Eh_HAD);
   fChain->SetBranchAddress("cccEt_p_Nh_PresB", &cccEt_p_Nh_PresB, &b_cccEt_p_Nh_PresB);
   fChain->SetBranchAddress("cccEt_p_Eh_PresB", &cccEt_p_Eh_PresB, &b_cccEt_p_Eh_PresB);
   fChain->SetBranchAddress("cccEt_p_Nh_EMB", &cccEt_p_Nh_EMB, &b_cccEt_p_Nh_EMB);
   fChain->SetBranchAddress("cccEt_p_Eh_EMB", &cccEt_p_Eh_EMB, &b_cccEt_p_Eh_EMB);
   fChain->SetBranchAddress("cccEt_p_Nh_EMEC", &cccEt_p_Nh_EMEC, &b_cccEt_p_Nh_EMEC);
   fChain->SetBranchAddress("cccEt_p_Eh_EMEC", &cccEt_p_Eh_EMEC, &b_cccEt_p_Eh_EMEC);
   fChain->SetBranchAddress("cccEt_p_Nh_Tile", &cccEt_p_Nh_Tile, &b_cccEt_p_Nh_Tile);
   fChain->SetBranchAddress("cccEt_p_Eh_Tile", &cccEt_p_Eh_Tile, &b_cccEt_p_Eh_Tile);
   fChain->SetBranchAddress("cccEt_p_Nh_TileGap", &cccEt_p_Nh_TileGap, &b_cccEt_p_Nh_TileGap);
   fChain->SetBranchAddress("cccEt_p_Eh_TileGap", &cccEt_p_Eh_TileGap, &b_cccEt_p_Eh_TileGap);
   fChain->SetBranchAddress("cccEt_p_Nh_HEC", &cccEt_p_Nh_HEC, &b_cccEt_p_Nh_HEC);
   fChain->SetBranchAddress("cccEt_p_Eh_HEC", &cccEt_p_Eh_HEC, &b_cccEt_p_Eh_HEC);
   fChain->SetBranchAddress("cccEt_p_Nh_FCal", &cccEt_p_Nh_FCal, &b_cccEt_p_Nh_FCal);
   fChain->SetBranchAddress("cccEt_p_Eh_FCal", &cccEt_p_Eh_FCal, &b_cccEt_p_Eh_FCal);
   fChain->SetBranchAddress("cccEt_p_Nh_PresE", &cccEt_p_Nh_PresE, &b_cccEt_p_Nh_PresE);
   fChain->SetBranchAddress("cccEt_p_Eh_PresE", &cccEt_p_Eh_PresE, &b_cccEt_p_Eh_PresE);
   fChain->SetBranchAddress("cccEt_p_Nh_Scint", &cccEt_p_Nh_Scint, &b_cccEt_p_Nh_Scint);
   fChain->SetBranchAddress("cccEt_p_Eh_Scint", &cccEt_p_Eh_Scint, &b_cccEt_p_Eh_Scint);
   fChain->SetBranchAddress("cccEt_n_Nh_Calo", &cccEt_n_Nh_Calo, &b_cccEt_n_Nh_Calo);
   fChain->SetBranchAddress("cccEt_n_Eh_Calo", &cccEt_n_Eh_Calo, &b_cccEt_n_Eh_Calo);
   fChain->SetBranchAddress("cccEt_n_Nh_EM", &cccEt_n_Nh_EM, &b_cccEt_n_Nh_EM);
   fChain->SetBranchAddress("cccEt_n_Eh_EM", &cccEt_n_Eh_EM, &b_cccEt_n_Eh_EM);
   fChain->SetBranchAddress("cccEt_n_Nh_HAD", &cccEt_n_Nh_HAD, &b_cccEt_n_Nh_HAD);
   fChain->SetBranchAddress("cccEt_n_Eh_HAD", &cccEt_n_Eh_HAD, &b_cccEt_n_Eh_HAD);
   fChain->SetBranchAddress("cccEt_n_Nh_PresB", &cccEt_n_Nh_PresB, &b_cccEt_n_Nh_PresB);
   fChain->SetBranchAddress("cccEt_n_Eh_PresB", &cccEt_n_Eh_PresB, &b_cccEt_n_Eh_PresB);
   fChain->SetBranchAddress("cccEt_n_Nh_EMB", &cccEt_n_Nh_EMB, &b_cccEt_n_Nh_EMB);
   fChain->SetBranchAddress("cccEt_n_Eh_EMB", &cccEt_n_Eh_EMB, &b_cccEt_n_Eh_EMB);
   fChain->SetBranchAddress("cccEt_n_Nh_EMEC", &cccEt_n_Nh_EMEC, &b_cccEt_n_Nh_EMEC);
   fChain->SetBranchAddress("cccEt_n_Eh_EMEC", &cccEt_n_Eh_EMEC, &b_cccEt_n_Eh_EMEC);
   fChain->SetBranchAddress("cccEt_n_Nh_Tile", &cccEt_n_Nh_Tile, &b_cccEt_n_Nh_Tile);
   fChain->SetBranchAddress("cccEt_n_Eh_Tile", &cccEt_n_Eh_Tile, &b_cccEt_n_Eh_Tile);
   fChain->SetBranchAddress("cccEt_n_Nh_TileGap", &cccEt_n_Nh_TileGap, &b_cccEt_n_Nh_TileGap);
   fChain->SetBranchAddress("cccEt_n_Eh_TileGap", &cccEt_n_Eh_TileGap, &b_cccEt_n_Eh_TileGap);
   fChain->SetBranchAddress("cccEt_n_Nh_HEC", &cccEt_n_Nh_HEC, &b_cccEt_n_Nh_HEC);
   fChain->SetBranchAddress("cccEt_n_Eh_HEC", &cccEt_n_Eh_HEC, &b_cccEt_n_Eh_HEC);
   fChain->SetBranchAddress("cccEt_n_Nh_FCal", &cccEt_n_Nh_FCal, &b_cccEt_n_Nh_FCal);
   fChain->SetBranchAddress("cccEt_n_Eh_FCal", &cccEt_n_Eh_FCal, &b_cccEt_n_Eh_FCal);
   fChain->SetBranchAddress("cccEt_n_Nh_PresE", &cccEt_n_Nh_PresE, &b_cccEt_n_Nh_PresE);
   fChain->SetBranchAddress("cccEt_n_Eh_PresE", &cccEt_n_Eh_PresE, &b_cccEt_n_Eh_PresE);
   fChain->SetBranchAddress("cccEt_n_Nh_Scint", &cccEt_n_Nh_Scint, &b_cccEt_n_Nh_Scint);
   fChain->SetBranchAddress("cccEt_n_Eh_Scint", &cccEt_n_Eh_Scint, &b_cccEt_n_Eh_Scint);
   fChain->SetBranchAddress("lar_ncellA", &lar_ncellA, &b_lar_ncellA);
   fChain->SetBranchAddress("lar_ncellC", &lar_ncellC, &b_lar_ncellC);
   fChain->SetBranchAddress("lar_energyA", &lar_energyA, &b_lar_energyA);
   fChain->SetBranchAddress("lar_energyC", &lar_energyC, &b_lar_energyC);
   fChain->SetBranchAddress("lar_timeA", &lar_timeA, &b_lar_timeA);
   fChain->SetBranchAddress("lar_timeC", &lar_timeC, &b_lar_timeC);
   fChain->SetBranchAddress("lar_timeDiff", &lar_timeDiff, &b_lar_timeDiff);
   fChain->SetBranchAddress("TotalEt_n", &TotalEt_n, &b_TotalEt_n);
   fChain->SetBranchAddress("TotalEt_layer_eta", &TotalEt_layer_eta, &b_TotalEt_layer_eta);
   fChain->SetBranchAddress("TotalEt_layer_phi", &TotalEt_layer_phi, &b_TotalEt_layer_phi);
   fChain->SetBranchAddress("TotalEt_layer_area", &TotalEt_layer_area, &b_TotalEt_layer_area);
   fChain->SetBranchAddress("TotalEt_layer_sampling", &TotalEt_layer_sampling, &b_TotalEt_layer_sampling);
   fChain->SetBranchAddress("TotalEt_layer_sampling_calib", &TotalEt_layer_sampling_calib, &b_TotalEt_layer_sampling_calib);
   fChain->SetBranchAddress("trk_n", &trk_n, &b_trk_n);
   fChain->SetBranchAddress("trk_d0", &trk_d0, &b_trk_d0);
   fChain->SetBranchAddress("trk_z0", &trk_z0, &b_trk_z0);
   fChain->SetBranchAddress("trk_phi", &trk_phi, &b_trk_phi);
   fChain->SetBranchAddress("trk_theta", &trk_theta, &b_trk_theta);
   fChain->SetBranchAddress("trk_qoverp", &trk_qoverp, &b_trk_qoverp);
   fChain->SetBranchAddress("trk_pt", &trk_pt, &b_trk_pt);
   fChain->SetBranchAddress("trk_eta", &trk_eta, &b_trk_eta);
   fChain->SetBranchAddress("trk_err_d0", &trk_err_d0, &b_trk_err_d0);
   fChain->SetBranchAddress("trk_err_z0", &trk_err_z0, &b_trk_err_z0);
   fChain->SetBranchAddress("trk_err_phi", &trk_err_phi, &b_trk_err_phi);
   fChain->SetBranchAddress("trk_err_theta", &trk_err_theta, &b_trk_err_theta);
   fChain->SetBranchAddress("trk_err_qoverp", &trk_err_qoverp, &b_trk_err_qoverp);
   fChain->SetBranchAddress("trk_cov_d0_z0", &trk_cov_d0_z0, &b_trk_cov_d0_z0);
   fChain->SetBranchAddress("trk_cov_d0_phi", &trk_cov_d0_phi, &b_trk_cov_d0_phi);
   fChain->SetBranchAddress("trk_cov_d0_theta", &trk_cov_d0_theta, &b_trk_cov_d0_theta);
   fChain->SetBranchAddress("trk_cov_d0_qoverp", &trk_cov_d0_qoverp, &b_trk_cov_d0_qoverp);
   fChain->SetBranchAddress("trk_cov_z0_phi", &trk_cov_z0_phi, &b_trk_cov_z0_phi);
   fChain->SetBranchAddress("trk_cov_z0_theta", &trk_cov_z0_theta, &b_trk_cov_z0_theta);
   fChain->SetBranchAddress("trk_cov_z0_qoverp", &trk_cov_z0_qoverp, &b_trk_cov_z0_qoverp);
   fChain->SetBranchAddress("trk_cov_phi_theta", &trk_cov_phi_theta, &b_trk_cov_phi_theta);
   fChain->SetBranchAddress("trk_cov_phi_qoverp", &trk_cov_phi_qoverp, &b_trk_cov_phi_qoverp);
   fChain->SetBranchAddress("trk_cov_theta_qoverp", &trk_cov_theta_qoverp, &b_trk_cov_theta_qoverp);
   fChain->SetBranchAddress("trk_d0_wrtPV", &trk_d0_wrtPV, &b_trk_d0_wrtPV);
   fChain->SetBranchAddress("trk_z0_wrtPV", &trk_z0_wrtPV, &b_trk_z0_wrtPV);
   fChain->SetBranchAddress("trk_phi_wrtPV", &trk_phi_wrtPV, &b_trk_phi_wrtPV);
   fChain->SetBranchAddress("trk_err_d0_wrtPV", &trk_err_d0_wrtPV, &b_trk_err_d0_wrtPV);
   fChain->SetBranchAddress("trk_err_z0_wrtPV", &trk_err_z0_wrtPV, &b_trk_err_z0_wrtPV);
   fChain->SetBranchAddress("trk_err_phi_wrtPV", &trk_err_phi_wrtPV, &b_trk_err_phi_wrtPV);
   fChain->SetBranchAddress("trk_err_theta_wrtPV", &trk_err_theta_wrtPV, &b_trk_err_theta_wrtPV);
   fChain->SetBranchAddress("trk_err_qoverp_wrtPV", &trk_err_qoverp_wrtPV, &b_trk_err_qoverp_wrtPV);
   fChain->SetBranchAddress("trk_cov_d0_z0_wrtPV", &trk_cov_d0_z0_wrtPV, &b_trk_cov_d0_z0_wrtPV);
   fChain->SetBranchAddress("trk_cov_d0_phi_wrtPV", &trk_cov_d0_phi_wrtPV, &b_trk_cov_d0_phi_wrtPV);
   fChain->SetBranchAddress("trk_cov_d0_theta_wrtPV", &trk_cov_d0_theta_wrtPV, &b_trk_cov_d0_theta_wrtPV);
   fChain->SetBranchAddress("trk_cov_d0_qoverp_wrtPV", &trk_cov_d0_qoverp_wrtPV, &b_trk_cov_d0_qoverp_wrtPV);
   fChain->SetBranchAddress("trk_cov_z0_phi_wrtPV", &trk_cov_z0_phi_wrtPV, &b_trk_cov_z0_phi_wrtPV);
   fChain->SetBranchAddress("trk_cov_z0_theta_wrtPV", &trk_cov_z0_theta_wrtPV, &b_trk_cov_z0_theta_wrtPV);
   fChain->SetBranchAddress("trk_cov_z0_qoverp_wrtPV", &trk_cov_z0_qoverp_wrtPV, &b_trk_cov_z0_qoverp_wrtPV);
   fChain->SetBranchAddress("trk_cov_phi_theta_wrtPV", &trk_cov_phi_theta_wrtPV, &b_trk_cov_phi_theta_wrtPV);
   fChain->SetBranchAddress("trk_cov_phi_qoverp_wrtPV", &trk_cov_phi_qoverp_wrtPV, &b_trk_cov_phi_qoverp_wrtPV);
   fChain->SetBranchAddress("trk_cov_theta_qoverp_wrtPV", &trk_cov_theta_qoverp_wrtPV, &b_trk_cov_theta_qoverp_wrtPV);
   fChain->SetBranchAddress("trk_d0_wrtBS", &trk_d0_wrtBS, &b_trk_d0_wrtBS);
   fChain->SetBranchAddress("trk_z0_wrtBS", &trk_z0_wrtBS, &b_trk_z0_wrtBS);
   fChain->SetBranchAddress("trk_phi_wrtBS", &trk_phi_wrtBS, &b_trk_phi_wrtBS);
   fChain->SetBranchAddress("trk_err_d0_wrtBS", &trk_err_d0_wrtBS, &b_trk_err_d0_wrtBS);
   fChain->SetBranchAddress("trk_err_z0_wrtBS", &trk_err_z0_wrtBS, &b_trk_err_z0_wrtBS);
   fChain->SetBranchAddress("trk_err_phi_wrtBS", &trk_err_phi_wrtBS, &b_trk_err_phi_wrtBS);
   fChain->SetBranchAddress("trk_err_theta_wrtBS", &trk_err_theta_wrtBS, &b_trk_err_theta_wrtBS);
   fChain->SetBranchAddress("trk_err_qoverp_wrtBS", &trk_err_qoverp_wrtBS, &b_trk_err_qoverp_wrtBS);
   fChain->SetBranchAddress("trk_cov_d0_z0_wrtBS", &trk_cov_d0_z0_wrtBS, &b_trk_cov_d0_z0_wrtBS);
   fChain->SetBranchAddress("trk_cov_d0_phi_wrtBS", &trk_cov_d0_phi_wrtBS, &b_trk_cov_d0_phi_wrtBS);
   fChain->SetBranchAddress("trk_cov_d0_theta_wrtBS", &trk_cov_d0_theta_wrtBS, &b_trk_cov_d0_theta_wrtBS);
   fChain->SetBranchAddress("trk_cov_d0_qoverp_wrtBS", &trk_cov_d0_qoverp_wrtBS, &b_trk_cov_d0_qoverp_wrtBS);
   fChain->SetBranchAddress("trk_cov_z0_phi_wrtBS", &trk_cov_z0_phi_wrtBS, &b_trk_cov_z0_phi_wrtBS);
   fChain->SetBranchAddress("trk_cov_z0_theta_wrtBS", &trk_cov_z0_theta_wrtBS, &b_trk_cov_z0_theta_wrtBS);
   fChain->SetBranchAddress("trk_cov_z0_qoverp_wrtBS", &trk_cov_z0_qoverp_wrtBS, &b_trk_cov_z0_qoverp_wrtBS);
   fChain->SetBranchAddress("trk_cov_phi_theta_wrtBS", &trk_cov_phi_theta_wrtBS, &b_trk_cov_phi_theta_wrtBS);
   fChain->SetBranchAddress("trk_cov_phi_qoverp_wrtBS", &trk_cov_phi_qoverp_wrtBS, &b_trk_cov_phi_qoverp_wrtBS);
   fChain->SetBranchAddress("trk_cov_theta_qoverp_wrtBS", &trk_cov_theta_qoverp_wrtBS, &b_trk_cov_theta_qoverp_wrtBS);
   fChain->SetBranchAddress("trk_d0_wrtBL", &trk_d0_wrtBL, &b_trk_d0_wrtBL);
   fChain->SetBranchAddress("trk_z0_wrtBL", &trk_z0_wrtBL, &b_trk_z0_wrtBL);
   fChain->SetBranchAddress("trk_phi_wrtBL", &trk_phi_wrtBL, &b_trk_phi_wrtBL);
   fChain->SetBranchAddress("trk_d0_err_wrtBL", &trk_d0_err_wrtBL, &b_trk_d0_err_wrtBL);
   fChain->SetBranchAddress("trk_z0_err_wrtBL", &trk_z0_err_wrtBL, &b_trk_z0_err_wrtBL);
   fChain->SetBranchAddress("trk_phi_err_wrtBL", &trk_phi_err_wrtBL, &b_trk_phi_err_wrtBL);
   fChain->SetBranchAddress("trk_theta_err_wrtBL", &trk_theta_err_wrtBL, &b_trk_theta_err_wrtBL);
   fChain->SetBranchAddress("trk_qoverp_err_wrtBL", &trk_qoverp_err_wrtBL, &b_trk_qoverp_err_wrtBL);
   fChain->SetBranchAddress("trk_d0_z0_err_wrtBL", &trk_d0_z0_err_wrtBL, &b_trk_d0_z0_err_wrtBL);
   fChain->SetBranchAddress("trk_d0_phi_err_wrtBL", &trk_d0_phi_err_wrtBL, &b_trk_d0_phi_err_wrtBL);
   fChain->SetBranchAddress("trk_d0_theta_err_wrtBL", &trk_d0_theta_err_wrtBL, &b_trk_d0_theta_err_wrtBL);
   fChain->SetBranchAddress("trk_d0_qoverp_err_wrtBL", &trk_d0_qoverp_err_wrtBL, &b_trk_d0_qoverp_err_wrtBL);
   fChain->SetBranchAddress("trk_z0_phi_err_wrtBL", &trk_z0_phi_err_wrtBL, &b_trk_z0_phi_err_wrtBL);
   fChain->SetBranchAddress("trk_z0_theta_err_wrtBL", &trk_z0_theta_err_wrtBL, &b_trk_z0_theta_err_wrtBL);
   fChain->SetBranchAddress("trk_z0_qoverp_err_wrtBL", &trk_z0_qoverp_err_wrtBL, &b_trk_z0_qoverp_err_wrtBL);
   fChain->SetBranchAddress("trk_phi_theta_err_wrtBL", &trk_phi_theta_err_wrtBL, &b_trk_phi_theta_err_wrtBL);
   fChain->SetBranchAddress("trk_phi_qoverp_err_wrtBL", &trk_phi_qoverp_err_wrtBL, &b_trk_phi_qoverp_err_wrtBL);
   fChain->SetBranchAddress("trk_theta_qoverp_err_wrtBL", &trk_theta_qoverp_err_wrtBL, &b_trk_theta_qoverp_err_wrtBL);
   fChain->SetBranchAddress("trk_chi2", &trk_chi2, &b_trk_chi2);
   fChain->SetBranchAddress("trk_ndof", &trk_ndof, &b_trk_ndof);
   fChain->SetBranchAddress("trk_nBLHits", &trk_nBLHits, &b_trk_nBLHits);
   fChain->SetBranchAddress("trk_nPixHits", &trk_nPixHits, &b_trk_nPixHits);
   fChain->SetBranchAddress("trk_nSCTHits", &trk_nSCTHits, &b_trk_nSCTHits);
   fChain->SetBranchAddress("trk_nTRTHits", &trk_nTRTHits, &b_trk_nTRTHits);
   fChain->SetBranchAddress("trk_nTRTHighTHits", &trk_nTRTHighTHits, &b_trk_nTRTHighTHits);
   fChain->SetBranchAddress("trk_nTRTXenonHits", &trk_nTRTXenonHits, &b_trk_nTRTXenonHits);
   fChain->SetBranchAddress("trk_nPixHoles", &trk_nPixHoles, &b_trk_nPixHoles);
   fChain->SetBranchAddress("trk_nSCTHoles", &trk_nSCTHoles, &b_trk_nSCTHoles);
   fChain->SetBranchAddress("trk_nTRTHoles", &trk_nTRTHoles, &b_trk_nTRTHoles);
   fChain->SetBranchAddress("trk_nPixelDeadSensors", &trk_nPixelDeadSensors, &b_trk_nPixelDeadSensors);
   fChain->SetBranchAddress("trk_nSCTDeadSensors", &trk_nSCTDeadSensors, &b_trk_nSCTDeadSensors);
   fChain->SetBranchAddress("trk_nBLSharedHits", &trk_nBLSharedHits, &b_trk_nBLSharedHits);
   fChain->SetBranchAddress("trk_nPixSharedHits", &trk_nPixSharedHits, &b_trk_nPixSharedHits);
   fChain->SetBranchAddress("trk_nSCTSharedHits", &trk_nSCTSharedHits, &b_trk_nSCTSharedHits);
   fChain->SetBranchAddress("trk_nBLayerSplitHits", &trk_nBLayerSplitHits, &b_trk_nBLayerSplitHits);
   fChain->SetBranchAddress("trk_nPixSplitHits", &trk_nPixSplitHits, &b_trk_nPixSplitHits);
   fChain->SetBranchAddress("trk_expectBLayerHit", &trk_expectBLayerHit, &b_trk_expectBLayerHit);
   fChain->SetBranchAddress("trk_nMDTHits", &trk_nMDTHits, &b_trk_nMDTHits);
   fChain->SetBranchAddress("trk_nCSCEtaHits", &trk_nCSCEtaHits, &b_trk_nCSCEtaHits);
   fChain->SetBranchAddress("trk_nCSCPhiHits", &trk_nCSCPhiHits, &b_trk_nCSCPhiHits);
   fChain->SetBranchAddress("trk_nRPCEtaHits", &trk_nRPCEtaHits, &b_trk_nRPCEtaHits);
   fChain->SetBranchAddress("trk_nRPCPhiHits", &trk_nRPCPhiHits, &b_trk_nRPCPhiHits);
   fChain->SetBranchAddress("trk_nTGCEtaHits", &trk_nTGCEtaHits, &b_trk_nTGCEtaHits);
   fChain->SetBranchAddress("trk_nTGCPhiHits", &trk_nTGCPhiHits, &b_trk_nTGCPhiHits);
   fChain->SetBranchAddress("trk_nHits", &trk_nHits, &b_trk_nHits);
   fChain->SetBranchAddress("trk_nHoles", &trk_nHoles, &b_trk_nHoles);
   fChain->SetBranchAddress("trk_hitPattern", &trk_hitPattern, &b_trk_hitPattern);
   fChain->SetBranchAddress("trk_TRTHighTHitsRatio", &trk_TRTHighTHitsRatio, &b_trk_TRTHighTHitsRatio);
   fChain->SetBranchAddress("trk_TRTHighTOutliersRatio", &trk_TRTHighTOutliersRatio, &b_trk_TRTHighTOutliersRatio);
   fChain->SetBranchAddress("trk_pixeldEdx", &trk_pixeldEdx, &b_trk_pixeldEdx);
   fChain->SetBranchAddress("trk_nGoodHitsPixeldEdx", &trk_nGoodHitsPixeldEdx, &b_trk_nGoodHitsPixeldEdx);
   fChain->SetBranchAddress("trk_massPixeldEdx", &trk_massPixeldEdx, &b_trk_massPixeldEdx);
   fChain->SetBranchAddress("trk_likelihoodsPixeldEdx", &trk_likelihoodsPixeldEdx, &b_trk_likelihoodsPixeldEdx);
   fChain->SetBranchAddress("trk_fitter", &trk_fitter, &b_trk_fitter);
   fChain->SetBranchAddress("trk_patternReco1", &trk_patternReco1, &b_trk_patternReco1);
   fChain->SetBranchAddress("trk_patternReco2", &trk_patternReco2, &b_trk_patternReco2);
   fChain->SetBranchAddress("trk_trackProperties", &trk_trackProperties, &b_trk_trackProperties);
   fChain->SetBranchAddress("trk_particleHypothesis", &trk_particleHypothesis, &b_trk_particleHypothesis);
   fChain->SetBranchAddress("trk_blayerPrediction_x", &trk_blayerPrediction_x, &b_trk_blayerPrediction_x);
   fChain->SetBranchAddress("trk_blayerPrediction_y", &trk_blayerPrediction_y, &b_trk_blayerPrediction_y);
   fChain->SetBranchAddress("trk_blayerPrediction_z", &trk_blayerPrediction_z, &b_trk_blayerPrediction_z);
   fChain->SetBranchAddress("trk_blayerPrediction_locX", &trk_blayerPrediction_locX, &b_trk_blayerPrediction_locX);
   fChain->SetBranchAddress("trk_blayerPrediction_locY", &trk_blayerPrediction_locY, &b_trk_blayerPrediction_locY);
   fChain->SetBranchAddress("trk_blayerPrediction_err_locX", &trk_blayerPrediction_err_locX, &b_trk_blayerPrediction_err_locX);
   fChain->SetBranchAddress("trk_blayerPrediction_err_locY", &trk_blayerPrediction_err_locY, &b_trk_blayerPrediction_err_locY);
   fChain->SetBranchAddress("trk_blayerPrediction_etaDistToEdge", &trk_blayerPrediction_etaDistToEdge, &b_trk_blayerPrediction_etaDistToEdge);
   fChain->SetBranchAddress("trk_blayerPrediction_phiDistToEdge", &trk_blayerPrediction_phiDistToEdge, &b_trk_blayerPrediction_phiDistToEdge);
   fChain->SetBranchAddress("trk_blayerPrediction_detElementId", &trk_blayerPrediction_detElementId, &b_trk_blayerPrediction_detElementId);
   fChain->SetBranchAddress("trk_blayerPrediction_row", &trk_blayerPrediction_row, &b_trk_blayerPrediction_row);
   fChain->SetBranchAddress("trk_blayerPrediction_col", &trk_blayerPrediction_col, &b_trk_blayerPrediction_col);
   fChain->SetBranchAddress("trk_blayerPrediction_type", &trk_blayerPrediction_type, &b_trk_blayerPrediction_type);
   fChain->SetBranchAddress("trk_mc_probability", &trk_mc_probability, &b_trk_mc_probability);
   fChain->SetBranchAddress("trk_mc_barcode", &trk_mc_barcode, &b_trk_mc_barcode);
   fChain->SetBranchAddress("trk_mc_index", &trk_mc_index, &b_trk_mc_index);
   fChain->SetBranchAddress("ItrEMBkgrlayer_CaloBkgrEt", &ItrEMBkgrlayer_CaloBkgrEt, &b_ItrEMBkgrlayer_CaloBkgrEt);
   fChain->SetBranchAddress("ItrEMBkgrlayer_CaloBkgrRMS", &ItrEMBkgrlayer_CaloBkgrRMS, &b_ItrEMBkgrlayer_CaloBkgrRMS);
   fChain->SetBranchAddress("ItrEMBkgrlayer_CaloBkgrCounts", &ItrEMBkgrlayer_CaloBkgrCounts, &b_ItrEMBkgrlayer_CaloBkgrCounts);
   fChain->SetBranchAddress("ItrEMBkgrlayer_CaloBkgrEta", &ItrEMBkgrlayer_CaloBkgrEta, &b_ItrEMBkgrlayer_CaloBkgrEta);
   fChain->SetBranchAddress("ItrSeedJets_n", &ItrSeedJets_n, &b_ItrSeedJets_n);
   fChain->SetBranchAddress("ItrSeedJets_E", &ItrSeedJets_E, &b_ItrSeedJets_E);
   fChain->SetBranchAddress("ItrSeedJets_Et", &ItrSeedJets_Et, &b_ItrSeedJets_Et);
   fChain->SetBranchAddress("ItrSeedJets_pt", &ItrSeedJets_pt, &b_ItrSeedJets_pt);
   fChain->SetBranchAddress("ItrSeedJets_m", &ItrSeedJets_m, &b_ItrSeedJets_m);
   fChain->SetBranchAddress("ItrSeedJets_eta", &ItrSeedJets_eta, &b_ItrSeedJets_eta);
   fChain->SetBranchAddress("ItrSeedJets_phi", &ItrSeedJets_phi, &b_ItrSeedJets_phi);
   fChain->SetBranchAddress("antikt4Track_n", &antikt4Track_n, &b_antikt4Track_n);
   fChain->SetBranchAddress("antikt4Track_E", &antikt4Track_E, &b_antikt4Track_E);
   fChain->SetBranchAddress("antikt4Track_pt", &antikt4Track_pt, &b_antikt4Track_pt);
   fChain->SetBranchAddress("antikt4Track_m", &antikt4Track_m, &b_antikt4Track_m);
   fChain->SetBranchAddress("antikt4Track_eta", &antikt4Track_eta, &b_antikt4Track_eta);
   fChain->SetBranchAddress("antikt4Track_phi", &antikt4Track_phi, &b_antikt4Track_phi);
   fChain->SetBranchAddress("antikt4Track_const_n", &antikt4Track_const_n, &b_antikt4Track_const_n);
   fChain->SetBranchAddress("antikt4Track_const_pt", &antikt4Track_const_pt, &b_antikt4Track_const_pt);
   fChain->SetBranchAddress("antikt4Track_const_eta", &antikt4Track_const_eta, &b_antikt4Track_const_eta);
   fChain->SetBranchAddress("antikt4Track_const_phi", &antikt4Track_const_phi, &b_antikt4Track_const_phi);
   fChain->SetBranchAddress("antikt4Track_const_chi2", &antikt4Track_const_chi2, &b_antikt4Track_const_chi2);
   fChain->SetBranchAddress("antikt4Track_const_d0_wrtPV", &antikt4Track_const_d0_wrtPV, &b_antikt4Track_const_d0_wrtPV);
   fChain->SetBranchAddress("antikt4Track_const_z0_wrtPV", &antikt4Track_const_z0_wrtPV, &b_antikt4Track_const_z0_wrtPV);
   fChain->SetBranchAddress("antikt4Track_const_phi0_wrtPV", &antikt4Track_const_phi0_wrtPV, &b_antikt4Track_const_phi0_wrtPV);
   fChain->SetBranchAddress("antikt4Track_const_theta_wrtPV", &antikt4Track_const_theta_wrtPV, &b_antikt4Track_const_theta_wrtPV);
   fChain->SetBranchAddress("antikt4Track_const_qop", &antikt4Track_const_qop, &b_antikt4Track_const_qop);
   fChain->SetBranchAddress("antikt4Track_const_ndof", &antikt4Track_const_ndof, &b_antikt4Track_const_ndof);
   fChain->SetBranchAddress("antikt4Track_const_nBLayerHits", &antikt4Track_const_nBLayerHits, &b_antikt4Track_const_nBLayerHits);
   fChain->SetBranchAddress("antikt4Track_const_nPixelHits", &antikt4Track_const_nPixelHits, &b_antikt4Track_const_nPixelHits);
   fChain->SetBranchAddress("antikt4Track_const_nSCTHits", &antikt4Track_const_nSCTHits, &b_antikt4Track_const_nSCTHits);
   fChain->SetBranchAddress("antikt4Track_const_nTRTHits", &antikt4Track_const_nTRTHits, &b_antikt4Track_const_nTRTHits);
   fChain->SetBranchAddress("antikt2HIItrEM_n", &antikt2HIItrEM_n, &b_antikt2HIItrEM_n);
   fChain->SetBranchAddress("antikt2HIItrEM_E", &antikt2HIItrEM_E, &b_antikt2HIItrEM_E);
   fChain->SetBranchAddress("antikt2HIItrEM_Et", &antikt2HIItrEM_Et, &b_antikt2HIItrEM_Et);
   fChain->SetBranchAddress("antikt2HIItrEM_pt", &antikt2HIItrEM_pt, &b_antikt2HIItrEM_pt);
   fChain->SetBranchAddress("antikt2HIItrEM_m", &antikt2HIItrEM_m, &b_antikt2HIItrEM_m);
   fChain->SetBranchAddress("antikt2HIItrEM_eta", &antikt2HIItrEM_eta, &b_antikt2HIItrEM_eta);
   fChain->SetBranchAddress("antikt2HIItrEM_phi", &antikt2HIItrEM_phi, &b_antikt2HIItrEM_phi);
   fChain->SetBranchAddress("antikt2HIItrEM_SubtractedEt", &antikt2HIItrEM_SubtractedEt, &b_antikt2HIItrEM_SubtractedEt);
   fChain->SetBranchAddress("antikt2HIItrEM_NoFlow", &antikt2HIItrEM_NoFlow, &b_antikt2HIItrEM_NoFlow);
   fChain->SetBranchAddress("antikt2HIItrEM_UncalibEt", &antikt2HIItrEM_UncalibEt, &b_antikt2HIItrEM_UncalibEt);
   fChain->SetBranchAddress("antikt2HIItrEM_PassedFR", &antikt2HIItrEM_PassedFR, &b_antikt2HIItrEM_PassedFR);
   fChain->SetBranchAddress("antikt2HIItrEM_const_n", &antikt2HIItrEM_const_n, &b_antikt2HIItrEM_const_n);
   fChain->SetBranchAddress("antikt2HIItrEM_const_et", &antikt2HIItrEM_const_et, &b_antikt2HIItrEM_const_et);
   fChain->SetBranchAddress("antikt2HIItrEM_const_eta", &antikt2HIItrEM_const_eta, &b_antikt2HIItrEM_const_eta);
   fChain->SetBranchAddress("antikt2HIItrEM_const_phi", &antikt2HIItrEM_const_phi, &b_antikt2HIItrEM_const_phi);
   fChain->SetBranchAddress("antikt2HIItrEM_sampling_et", &antikt2HIItrEM_sampling_et, &b_antikt2HIItrEM_sampling_et);
   fChain->SetBranchAddress("antikt2HIItrEM_sampling_et_unsubtr", &antikt2HIItrEM_sampling_et_unsubtr, &b_antikt2HIItrEM_sampling_et_unsubtr);
   fChain->SetBranchAddress("antikt2HIItrEM_bad_cell_n", &antikt2HIItrEM_bad_cell_n, &b_antikt2HIItrEM_bad_cell_n);
   fChain->SetBranchAddress("antikt2HIItrEM_bad_cell_et", &antikt2HIItrEM_bad_cell_et, &b_antikt2HIItrEM_bad_cell_et);
   fChain->SetBranchAddress("antikt2HIItrEM_bad_cell_area", &antikt2HIItrEM_bad_cell_area, &b_antikt2HIItrEM_bad_cell_area);
   fChain->SetBranchAddress("antikt2HIItrEM_empty_cell_n", &antikt2HIItrEM_empty_cell_n, &b_antikt2HIItrEM_empty_cell_n);
   fChain->SetBranchAddress("antikt2HIItrEM_empty_cell_et", &antikt2HIItrEM_empty_cell_et, &b_antikt2HIItrEM_empty_cell_et);
   fChain->SetBranchAddress("antikt2HIItrEM_empty_cell_area", &antikt2HIItrEM_empty_cell_area, &b_antikt2HIItrEM_empty_cell_area);
   fChain->SetBranchAddress("antikt2HIItrEM_total_cell_n", &antikt2HIItrEM_total_cell_n, &b_antikt2HIItrEM_total_cell_n);
   fChain->SetBranchAddress("antikt2HIItrEM_total_cell_et", &antikt2HIItrEM_total_cell_et, &b_antikt2HIItrEM_total_cell_et);
   fChain->SetBranchAddress("antikt2HIItrEM_total_cell_area", &antikt2HIItrEM_total_cell_area, &b_antikt2HIItrEM_total_cell_area);
   fChain->SetBranchAddress("antikt2HIItrEM_n90", &antikt2HIItrEM_n90, &b_antikt2HIItrEM_n90);
   fChain->SetBranchAddress("antikt2HIItrEM_fracSamplingMax", &antikt2HIItrEM_fracSamplingMax, &b_antikt2HIItrEM_fracSamplingMax);
   fChain->SetBranchAddress("antikt2HIItrEM_SamplingMax", &antikt2HIItrEM_SamplingMax, &b_antikt2HIItrEM_SamplingMax);
   fChain->SetBranchAddress("antikt2HIItrEM_n90constituents", &antikt2HIItrEM_n90constituents, &b_antikt2HIItrEM_n90constituents);
   fChain->SetBranchAddress("antikt2HIItrEM_Timing", &antikt2HIItrEM_Timing, &b_antikt2HIItrEM_Timing);
   fChain->SetBranchAddress("antikt2HIItrEM_LArQuality", &antikt2HIItrEM_LArQuality, &b_antikt2HIItrEM_LArQuality);
   fChain->SetBranchAddress("antikt2HIItrEM_HECQuality", &antikt2HIItrEM_HECQuality, &b_antikt2HIItrEM_HECQuality);
   fChain->SetBranchAddress("antikt2HIItrEM_TileQuality", &antikt2HIItrEM_TileQuality, &b_antikt2HIItrEM_TileQuality);
   fChain->SetBranchAddress("antikt2HIItrEM_NegativeE", &antikt2HIItrEM_NegativeE, &b_antikt2HIItrEM_NegativeE);
   fChain->SetBranchAddress("antikt2HIItrEM_AverageLArQF", &antikt2HIItrEM_AverageLArQF, &b_antikt2HIItrEM_AverageLArQF);
   fChain->SetBranchAddress("antikt2HIItrEM_sumPtTrk", &antikt2HIItrEM_sumPtTrk, &b_antikt2HIItrEM_sumPtTrk);
   fChain->SetBranchAddress("antikt2HIItrEM_BCH_CORR_CELL", &antikt2HIItrEM_BCH_CORR_CELL, &b_antikt2HIItrEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("antikt2HIItrEM_BCH_CORR_DOTX", &antikt2HIItrEM_BCH_CORR_DOTX, &b_antikt2HIItrEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("antikt2HIItrEM_BCH_CORR_JET", &antikt2HIItrEM_BCH_CORR_JET, &b_antikt2HIItrEM_BCH_CORR_JET);
   fChain->SetBranchAddress("antikt2HIItrEM_BCH_CORR_JET_FORCELL", &antikt2HIItrEM_BCH_CORR_JET_FORCELL, &b_antikt2HIItrEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("antikt2HIItrEM_ENG_BAD_CELLS", &antikt2HIItrEM_ENG_BAD_CELLS, &b_antikt2HIItrEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("antikt2HIItrEM_N_BAD_CELLS", &antikt2HIItrEM_N_BAD_CELLS, &b_antikt2HIItrEM_N_BAD_CELLS);
   fChain->SetBranchAddress("antikt2HIItrEM_N_BAD_CELLS_CORR", &antikt2HIItrEM_N_BAD_CELLS_CORR, &b_antikt2HIItrEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("antikt2HIItrEM_BAD_CELLS_CORR_E", &antikt2HIItrEM_BAD_CELLS_CORR_E, &b_antikt2HIItrEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("antikt2HIItrEM_emfrac", &antikt2HIItrEM_emfrac, &b_antikt2HIItrEM_emfrac);
   fChain->SetBranchAddress("antikt2HIItrEM_hecf", &antikt2HIItrEM_hecf, &b_antikt2HIItrEM_hecf);
   fChain->SetBranchAddress("antikt2HIItrEM_tgap3f", &antikt2HIItrEM_tgap3f, &b_antikt2HIItrEM_tgap3f);
   fChain->SetBranchAddress("antikt2HIItrEM_isUgly", &antikt2HIItrEM_isUgly, &b_antikt2HIItrEM_isUgly);
   fChain->SetBranchAddress("antikt2HIItrEM_isBadLooseMinus", &antikt2HIItrEM_isBadLooseMinus, &b_antikt2HIItrEM_isBadLooseMinus);
   fChain->SetBranchAddress("antikt2HIItrEM_isBadLoose", &antikt2HIItrEM_isBadLoose, &b_antikt2HIItrEM_isBadLoose);
   fChain->SetBranchAddress("antikt2HIItrEM_isBadMedium", &antikt2HIItrEM_isBadMedium, &b_antikt2HIItrEM_isBadMedium);
   fChain->SetBranchAddress("antikt2HIItrEM_isBadTight", &antikt2HIItrEM_isBadTight, &b_antikt2HIItrEM_isBadTight);
   fChain->SetBranchAddress("antikt2HIItrEM_jvtx_x", &antikt2HIItrEM_jvtx_x, &b_antikt2HIItrEM_jvtx_x);
   fChain->SetBranchAddress("antikt2HIItrEM_jvtx_y", &antikt2HIItrEM_jvtx_y, &b_antikt2HIItrEM_jvtx_y);
   fChain->SetBranchAddress("antikt2HIItrEM_jvtx_z", &antikt2HIItrEM_jvtx_z, &b_antikt2HIItrEM_jvtx_z);
   fChain->SetBranchAddress("antikt2HIItrEM_jvtxf", &antikt2HIItrEM_jvtxf, &b_antikt2HIItrEM_jvtxf);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_Comb", &antikt2HIItrEM_flavor_weight_Comb, &b_antikt2HIItrEM_flavor_weight_Comb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_IP2D", &antikt2HIItrEM_flavor_weight_IP2D, &b_antikt2HIItrEM_flavor_weight_IP2D);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_IP3D", &antikt2HIItrEM_flavor_weight_IP3D, &b_antikt2HIItrEM_flavor_weight_IP3D);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_SV0", &antikt2HIItrEM_flavor_weight_SV0, &b_antikt2HIItrEM_flavor_weight_SV0);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_SV1", &antikt2HIItrEM_flavor_weight_SV1, &b_antikt2HIItrEM_flavor_weight_SV1);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_SV2", &antikt2HIItrEM_flavor_weight_SV2, &b_antikt2HIItrEM_flavor_weight_SV2);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_SoftMuonTagChi2", &antikt2HIItrEM_flavor_weight_SoftMuonTagChi2, &b_antikt2HIItrEM_flavor_weight_SoftMuonTagChi2);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_SecondSoftMuonTagChi2", &antikt2HIItrEM_flavor_weight_SecondSoftMuonTagChi2, &b_antikt2HIItrEM_flavor_weight_SecondSoftMuonTagChi2);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_JetFitterTagNN", &antikt2HIItrEM_flavor_weight_JetFitterTagNN, &b_antikt2HIItrEM_flavor_weight_JetFitterTagNN);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_JetFitterCOMBNN", &antikt2HIItrEM_flavor_weight_JetFitterCOMBNN, &b_antikt2HIItrEM_flavor_weight_JetFitterCOMBNN);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_MV1", &antikt2HIItrEM_flavor_weight_MV1, &b_antikt2HIItrEM_flavor_weight_MV1);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_MV2", &antikt2HIItrEM_flavor_weight_MV2, &b_antikt2HIItrEM_flavor_weight_MV2);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_weight_GbbNN", &antikt2HIItrEM_flavor_weight_GbbNN, &b_antikt2HIItrEM_flavor_weight_GbbNN);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_label", &antikt2HIItrEM_flavor_truth_label, &b_antikt2HIItrEM_flavor_truth_label);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_dRminToB", &antikt2HIItrEM_flavor_truth_dRminToB, &b_antikt2HIItrEM_flavor_truth_dRminToB);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_dRminToC", &antikt2HIItrEM_flavor_truth_dRminToC, &b_antikt2HIItrEM_flavor_truth_dRminToC);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_dRminToT", &antikt2HIItrEM_flavor_truth_dRminToT, &b_antikt2HIItrEM_flavor_truth_dRminToT);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_BHadronpdg", &antikt2HIItrEM_flavor_truth_BHadronpdg, &b_antikt2HIItrEM_flavor_truth_BHadronpdg);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_vx_x", &antikt2HIItrEM_flavor_truth_vx_x, &b_antikt2HIItrEM_flavor_truth_vx_x);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_vx_y", &antikt2HIItrEM_flavor_truth_vx_y, &b_antikt2HIItrEM_flavor_truth_vx_y);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_truth_vx_z", &antikt2HIItrEM_flavor_truth_vx_z, &b_antikt2HIItrEM_flavor_truth_vx_z);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_assoctrk_signOfIP", &antikt2HIItrEM_flavor_component_assoctrk_signOfIP, &b_antikt2HIItrEM_flavor_component_assoctrk_signOfIP);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_assoctrk_signOfZIP", &antikt2HIItrEM_flavor_component_assoctrk_signOfZIP, &b_antikt2HIItrEM_flavor_component_assoctrk_signOfZIP);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx", &antikt2HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx, &b_antikt2HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx", &antikt2HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx, &b_antikt2HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx", &antikt2HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx, &b_antikt2HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx", &antikt2HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx, &b_antikt2HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_gentruthlepton_origin", &antikt2HIItrEM_flavor_component_gentruthlepton_origin, &b_antikt2HIItrEM_flavor_component_gentruthlepton_origin);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_gentruthlepton_slbarcode", &antikt2HIItrEM_flavor_component_gentruthlepton_slbarcode, &b_antikt2HIItrEM_flavor_component_gentruthlepton_slbarcode);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip2d_pu", &antikt2HIItrEM_flavor_component_ip2d_pu, &b_antikt2HIItrEM_flavor_component_ip2d_pu);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip2d_pb", &antikt2HIItrEM_flavor_component_ip2d_pb, &b_antikt2HIItrEM_flavor_component_ip2d_pb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip2d_isValid", &antikt2HIItrEM_flavor_component_ip2d_isValid, &b_antikt2HIItrEM_flavor_component_ip2d_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip2d_ntrk", &antikt2HIItrEM_flavor_component_ip2d_ntrk, &b_antikt2HIItrEM_flavor_component_ip2d_ntrk);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip3d_pu", &antikt2HIItrEM_flavor_component_ip3d_pu, &b_antikt2HIItrEM_flavor_component_ip3d_pu);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip3d_pb", &antikt2HIItrEM_flavor_component_ip3d_pb, &b_antikt2HIItrEM_flavor_component_ip3d_pb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip3d_isValid", &antikt2HIItrEM_flavor_component_ip3d_isValid, &b_antikt2HIItrEM_flavor_component_ip3d_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ip3d_ntrk", &antikt2HIItrEM_flavor_component_ip3d_ntrk, &b_antikt2HIItrEM_flavor_component_ip3d_ntrk);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jetprob_ntrk", &antikt2HIItrEM_flavor_component_jetprob_ntrk, &b_antikt2HIItrEM_flavor_component_jetprob_ntrk);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv1_pu", &antikt2HIItrEM_flavor_component_sv1_pu, &b_antikt2HIItrEM_flavor_component_sv1_pu);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv1_pb", &antikt2HIItrEM_flavor_component_sv1_pb, &b_antikt2HIItrEM_flavor_component_sv1_pb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv1_isValid", &antikt2HIItrEM_flavor_component_sv1_isValid, &b_antikt2HIItrEM_flavor_component_sv1_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv2_pu", &antikt2HIItrEM_flavor_component_sv2_pu, &b_antikt2HIItrEM_flavor_component_sv2_pu);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv2_pb", &antikt2HIItrEM_flavor_component_sv2_pb, &b_antikt2HIItrEM_flavor_component_sv2_pb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv2_isValid", &antikt2HIItrEM_flavor_component_sv2_isValid, &b_antikt2HIItrEM_flavor_component_sv2_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_pu", &antikt2HIItrEM_flavor_component_jfit_pu, &b_antikt2HIItrEM_flavor_component_jfit_pu);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_pb", &antikt2HIItrEM_flavor_component_jfit_pb, &b_antikt2HIItrEM_flavor_component_jfit_pb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_pc", &antikt2HIItrEM_flavor_component_jfit_pc, &b_antikt2HIItrEM_flavor_component_jfit_pc);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_isValid", &antikt2HIItrEM_flavor_component_jfit_isValid, &b_antikt2HIItrEM_flavor_component_jfit_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfitcomb_pu", &antikt2HIItrEM_flavor_component_jfitcomb_pu, &b_antikt2HIItrEM_flavor_component_jfitcomb_pu);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfitcomb_pb", &antikt2HIItrEM_flavor_component_jfitcomb_pb, &b_antikt2HIItrEM_flavor_component_jfitcomb_pb);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfitcomb_pc", &antikt2HIItrEM_flavor_component_jfitcomb_pc, &b_antikt2HIItrEM_flavor_component_jfitcomb_pc);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfitcomb_isValid", &antikt2HIItrEM_flavor_component_jfitcomb_isValid, &b_antikt2HIItrEM_flavor_component_jfitcomb_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_gbbnn_nMatchingTracks", &antikt2HIItrEM_flavor_component_gbbnn_nMatchingTracks, &b_antikt2HIItrEM_flavor_component_gbbnn_nMatchingTracks);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_gbbnn_trkJetWidth", &antikt2HIItrEM_flavor_component_gbbnn_trkJetWidth, &b_antikt2HIItrEM_flavor_component_gbbnn_trkJetWidth);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR", &antikt2HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR, &b_antikt2HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_nvtx", &antikt2HIItrEM_flavor_component_jfit_nvtx, &b_antikt2HIItrEM_flavor_component_jfit_nvtx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_nvtx1t", &antikt2HIItrEM_flavor_component_jfit_nvtx1t, &b_antikt2HIItrEM_flavor_component_jfit_nvtx1t);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_ntrkAtVx", &antikt2HIItrEM_flavor_component_jfit_ntrkAtVx, &b_antikt2HIItrEM_flavor_component_jfit_ntrkAtVx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_efrc", &antikt2HIItrEM_flavor_component_jfit_efrc, &b_antikt2HIItrEM_flavor_component_jfit_efrc);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_mass", &antikt2HIItrEM_flavor_component_jfit_mass, &b_antikt2HIItrEM_flavor_component_jfit_mass);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_sig3d", &antikt2HIItrEM_flavor_component_jfit_sig3d, &b_antikt2HIItrEM_flavor_component_jfit_sig3d);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_deltaPhi", &antikt2HIItrEM_flavor_component_jfit_deltaPhi, &b_antikt2HIItrEM_flavor_component_jfit_deltaPhi);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_jfit_deltaEta", &antikt2HIItrEM_flavor_component_jfit_deltaEta, &b_antikt2HIItrEM_flavor_component_jfit_deltaEta);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_d0val", &antikt2HIItrEM_flavor_component_ipplus_trk_d0val, &b_antikt2HIItrEM_flavor_component_ipplus_trk_d0val);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_d0sig", &antikt2HIItrEM_flavor_component_ipplus_trk_d0sig, &b_antikt2HIItrEM_flavor_component_ipplus_trk_d0sig);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_z0val", &antikt2HIItrEM_flavor_component_ipplus_trk_z0val, &b_antikt2HIItrEM_flavor_component_ipplus_trk_z0val);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_z0sig", &antikt2HIItrEM_flavor_component_ipplus_trk_z0sig, &b_antikt2HIItrEM_flavor_component_ipplus_trk_z0sig);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_w2D", &antikt2HIItrEM_flavor_component_ipplus_trk_w2D, &b_antikt2HIItrEM_flavor_component_ipplus_trk_w2D);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_w3D", &antikt2HIItrEM_flavor_component_ipplus_trk_w3D, &b_antikt2HIItrEM_flavor_component_ipplus_trk_w3D);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_pJP", &antikt2HIItrEM_flavor_component_ipplus_trk_pJP, &b_antikt2HIItrEM_flavor_component_ipplus_trk_pJP);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_pJPneg", &antikt2HIItrEM_flavor_component_ipplus_trk_pJPneg, &b_antikt2HIItrEM_flavor_component_ipplus_trk_pJPneg);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_grade", &antikt2HIItrEM_flavor_component_ipplus_trk_grade, &b_antikt2HIItrEM_flavor_component_ipplus_trk_grade);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_ipplus_trk_isFromV0", &antikt2HIItrEM_flavor_component_ipplus_trk_isFromV0, &b_antikt2HIItrEM_flavor_component_ipplus_trk_isFromV0);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_isValid", &antikt2HIItrEM_flavor_component_svp_isValid, &b_antikt2HIItrEM_flavor_component_svp_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_ntrkv", &antikt2HIItrEM_flavor_component_svp_ntrkv, &b_antikt2HIItrEM_flavor_component_svp_ntrkv);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_ntrkj", &antikt2HIItrEM_flavor_component_svp_ntrkj, &b_antikt2HIItrEM_flavor_component_svp_ntrkj);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_n2t", &antikt2HIItrEM_flavor_component_svp_n2t, &b_antikt2HIItrEM_flavor_component_svp_n2t);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_mass", &antikt2HIItrEM_flavor_component_svp_mass, &b_antikt2HIItrEM_flavor_component_svp_mass);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_efrc", &antikt2HIItrEM_flavor_component_svp_efrc, &b_antikt2HIItrEM_flavor_component_svp_efrc);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_x", &antikt2HIItrEM_flavor_component_svp_x, &b_antikt2HIItrEM_flavor_component_svp_x);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_y", &antikt2HIItrEM_flavor_component_svp_y, &b_antikt2HIItrEM_flavor_component_svp_y);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_z", &antikt2HIItrEM_flavor_component_svp_z, &b_antikt2HIItrEM_flavor_component_svp_z);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_err_x", &antikt2HIItrEM_flavor_component_svp_err_x, &b_antikt2HIItrEM_flavor_component_svp_err_x);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_err_y", &antikt2HIItrEM_flavor_component_svp_err_y, &b_antikt2HIItrEM_flavor_component_svp_err_y);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_err_z", &antikt2HIItrEM_flavor_component_svp_err_z, &b_antikt2HIItrEM_flavor_component_svp_err_z);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_cov_xy", &antikt2HIItrEM_flavor_component_svp_cov_xy, &b_antikt2HIItrEM_flavor_component_svp_cov_xy);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_cov_xz", &antikt2HIItrEM_flavor_component_svp_cov_xz, &b_antikt2HIItrEM_flavor_component_svp_cov_xz);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_cov_yz", &antikt2HIItrEM_flavor_component_svp_cov_yz, &b_antikt2HIItrEM_flavor_component_svp_cov_yz);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_chi2", &antikt2HIItrEM_flavor_component_svp_chi2, &b_antikt2HIItrEM_flavor_component_svp_chi2);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_ndof", &antikt2HIItrEM_flavor_component_svp_ndof, &b_antikt2HIItrEM_flavor_component_svp_ndof);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_svp_ntrk", &antikt2HIItrEM_flavor_component_svp_ntrk, &b_antikt2HIItrEM_flavor_component_svp_ntrk);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_isValid", &antikt2HIItrEM_flavor_component_sv0p_isValid, &b_antikt2HIItrEM_flavor_component_sv0p_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_ntrkv", &antikt2HIItrEM_flavor_component_sv0p_ntrkv, &b_antikt2HIItrEM_flavor_component_sv0p_ntrkv);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_ntrkj", &antikt2HIItrEM_flavor_component_sv0p_ntrkj, &b_antikt2HIItrEM_flavor_component_sv0p_ntrkj);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_n2t", &antikt2HIItrEM_flavor_component_sv0p_n2t, &b_antikt2HIItrEM_flavor_component_sv0p_n2t);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_mass", &antikt2HIItrEM_flavor_component_sv0p_mass, &b_antikt2HIItrEM_flavor_component_sv0p_mass);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_efrc", &antikt2HIItrEM_flavor_component_sv0p_efrc, &b_antikt2HIItrEM_flavor_component_sv0p_efrc);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_x", &antikt2HIItrEM_flavor_component_sv0p_x, &b_antikt2HIItrEM_flavor_component_sv0p_x);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_y", &antikt2HIItrEM_flavor_component_sv0p_y, &b_antikt2HIItrEM_flavor_component_sv0p_y);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_z", &antikt2HIItrEM_flavor_component_sv0p_z, &b_antikt2HIItrEM_flavor_component_sv0p_z);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_err_x", &antikt2HIItrEM_flavor_component_sv0p_err_x, &b_antikt2HIItrEM_flavor_component_sv0p_err_x);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_err_y", &antikt2HIItrEM_flavor_component_sv0p_err_y, &b_antikt2HIItrEM_flavor_component_sv0p_err_y);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_err_z", &antikt2HIItrEM_flavor_component_sv0p_err_z, &b_antikt2HIItrEM_flavor_component_sv0p_err_z);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_cov_xy", &antikt2HIItrEM_flavor_component_sv0p_cov_xy, &b_antikt2HIItrEM_flavor_component_sv0p_cov_xy);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_cov_xz", &antikt2HIItrEM_flavor_component_sv0p_cov_xz, &b_antikt2HIItrEM_flavor_component_sv0p_cov_xz);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_cov_yz", &antikt2HIItrEM_flavor_component_sv0p_cov_yz, &b_antikt2HIItrEM_flavor_component_sv0p_cov_yz);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_chi2", &antikt2HIItrEM_flavor_component_sv0p_chi2, &b_antikt2HIItrEM_flavor_component_sv0p_chi2);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_ndof", &antikt2HIItrEM_flavor_component_sv0p_ndof, &b_antikt2HIItrEM_flavor_component_sv0p_ndof);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_sv0p_ntrk", &antikt2HIItrEM_flavor_component_sv0p_ntrk, &b_antikt2HIItrEM_flavor_component_sv0p_ntrk);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuoninfo_muon_w", &antikt2HIItrEM_flavor_component_softmuoninfo_muon_w, &b_antikt2HIItrEM_flavor_component_softmuoninfo_muon_w);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuoninfo_muon_pTRel", &antikt2HIItrEM_flavor_component_softmuoninfo_muon_pTRel, &b_antikt2HIItrEM_flavor_component_softmuoninfo_muon_pTRel);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuoninfo_muon_dRJet", &antikt2HIItrEM_flavor_component_softmuoninfo_muon_dRJet, &b_antikt2HIItrEM_flavor_component_softmuoninfo_muon_dRJet);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuon2info_muon2_w", &antikt2HIItrEM_flavor_component_softmuon2info_muon2_w, &b_antikt2HIItrEM_flavor_component_softmuon2info_muon2_w);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuon2info_muon2_pTRel", &antikt2HIItrEM_flavor_component_softmuon2info_muon2_pTRel, &b_antikt2HIItrEM_flavor_component_softmuon2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuon2info_muon2_dRJet", &antikt2HIItrEM_flavor_component_softmuon2info_muon2_dRJet, &b_antikt2HIItrEM_flavor_component_softmuon2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuonchi2info_muon_w", &antikt2HIItrEM_flavor_component_softmuonchi2info_muon_w, &b_antikt2HIItrEM_flavor_component_softmuonchi2info_muon_w);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuonchi2info_muon_pTRel", &antikt2HIItrEM_flavor_component_softmuonchi2info_muon_pTRel, &b_antikt2HIItrEM_flavor_component_softmuonchi2info_muon_pTRel);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuonchi2info_muon_dRJet", &antikt2HIItrEM_flavor_component_softmuonchi2info_muon_dRJet, &b_antikt2HIItrEM_flavor_component_softmuonchi2info_muon_dRJet);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_w", &antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_w, &b_antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_w);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel", &antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel, &b_antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet", &antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet, &b_antikt2HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_msvp_isValid", &antikt2HIItrEM_flavor_component_msvp_isValid, &b_antikt2HIItrEM_flavor_component_msvp_isValid);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_msvp_ntrkv", &antikt2HIItrEM_flavor_component_msvp_ntrkv, &b_antikt2HIItrEM_flavor_component_msvp_ntrkv);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_msvp_ntrkj", &antikt2HIItrEM_flavor_component_msvp_ntrkj, &b_antikt2HIItrEM_flavor_component_msvp_ntrkj);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_msvp_n2t", &antikt2HIItrEM_flavor_component_msvp_n2t, &b_antikt2HIItrEM_flavor_component_msvp_n2t);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_msvp_nVtx", &antikt2HIItrEM_flavor_component_msvp_nVtx, &b_antikt2HIItrEM_flavor_component_msvp_nVtx);
   fChain->SetBranchAddress("antikt2HIItrEM_flavor_component_msvp_normWeightedDist", &antikt2HIItrEM_flavor_component_msvp_normWeightedDist, &b_antikt2HIItrEM_flavor_component_msvp_normWeightedDist);
   fChain->SetBranchAddress("antikt3HIItrEM_n", &antikt3HIItrEM_n, &b_antikt3HIItrEM_n);
   fChain->SetBranchAddress("antikt3HIItrEM_E", &antikt3HIItrEM_E, &b_antikt3HIItrEM_E);
   fChain->SetBranchAddress("antikt3HIItrEM_Et", &antikt3HIItrEM_Et, &b_antikt3HIItrEM_Et);
   fChain->SetBranchAddress("antikt3HIItrEM_pt", &antikt3HIItrEM_pt, &b_antikt3HIItrEM_pt);
   fChain->SetBranchAddress("antikt3HIItrEM_m", &antikt3HIItrEM_m, &b_antikt3HIItrEM_m);
   fChain->SetBranchAddress("antikt3HIItrEM_eta", &antikt3HIItrEM_eta, &b_antikt3HIItrEM_eta);
   fChain->SetBranchAddress("antikt3HIItrEM_phi", &antikt3HIItrEM_phi, &b_antikt3HIItrEM_phi);
   fChain->SetBranchAddress("antikt3HIItrEM_SubtractedEt", &antikt3HIItrEM_SubtractedEt, &b_antikt3HIItrEM_SubtractedEt);
   fChain->SetBranchAddress("antikt3HIItrEM_NoFlow", &antikt3HIItrEM_NoFlow, &b_antikt3HIItrEM_NoFlow);
   fChain->SetBranchAddress("antikt3HIItrEM_UncalibEt", &antikt3HIItrEM_UncalibEt, &b_antikt3HIItrEM_UncalibEt);
   fChain->SetBranchAddress("antikt3HIItrEM_PassedFR", &antikt3HIItrEM_PassedFR, &b_antikt3HIItrEM_PassedFR);
   fChain->SetBranchAddress("antikt3HIItrEM_const_n", &antikt3HIItrEM_const_n, &b_antikt3HIItrEM_const_n);
   fChain->SetBranchAddress("antikt3HIItrEM_const_et", &antikt3HIItrEM_const_et, &b_antikt3HIItrEM_const_et);
   fChain->SetBranchAddress("antikt3HIItrEM_const_eta", &antikt3HIItrEM_const_eta, &b_antikt3HIItrEM_const_eta);
   fChain->SetBranchAddress("antikt3HIItrEM_const_phi", &antikt3HIItrEM_const_phi, &b_antikt3HIItrEM_const_phi);
   fChain->SetBranchAddress("antikt3HIItrEM_sampling_et", &antikt3HIItrEM_sampling_et, &b_antikt3HIItrEM_sampling_et);
   fChain->SetBranchAddress("antikt3HIItrEM_sampling_et_unsubtr", &antikt3HIItrEM_sampling_et_unsubtr, &b_antikt3HIItrEM_sampling_et_unsubtr);
   fChain->SetBranchAddress("antikt3HIItrEM_bad_cell_n", &antikt3HIItrEM_bad_cell_n, &b_antikt3HIItrEM_bad_cell_n);
   fChain->SetBranchAddress("antikt3HIItrEM_bad_cell_et", &antikt3HIItrEM_bad_cell_et, &b_antikt3HIItrEM_bad_cell_et);
   fChain->SetBranchAddress("antikt3HIItrEM_bad_cell_area", &antikt3HIItrEM_bad_cell_area, &b_antikt3HIItrEM_bad_cell_area);
   fChain->SetBranchAddress("antikt3HIItrEM_empty_cell_n", &antikt3HIItrEM_empty_cell_n, &b_antikt3HIItrEM_empty_cell_n);
   fChain->SetBranchAddress("antikt3HIItrEM_empty_cell_et", &antikt3HIItrEM_empty_cell_et, &b_antikt3HIItrEM_empty_cell_et);
   fChain->SetBranchAddress("antikt3HIItrEM_empty_cell_area", &antikt3HIItrEM_empty_cell_area, &b_antikt3HIItrEM_empty_cell_area);
   fChain->SetBranchAddress("antikt3HIItrEM_total_cell_n", &antikt3HIItrEM_total_cell_n, &b_antikt3HIItrEM_total_cell_n);
   fChain->SetBranchAddress("antikt3HIItrEM_total_cell_et", &antikt3HIItrEM_total_cell_et, &b_antikt3HIItrEM_total_cell_et);
   fChain->SetBranchAddress("antikt3HIItrEM_total_cell_area", &antikt3HIItrEM_total_cell_area, &b_antikt3HIItrEM_total_cell_area);
   fChain->SetBranchAddress("antikt3HIItrEM_n90", &antikt3HIItrEM_n90, &b_antikt3HIItrEM_n90);
   fChain->SetBranchAddress("antikt3HIItrEM_fracSamplingMax", &antikt3HIItrEM_fracSamplingMax, &b_antikt3HIItrEM_fracSamplingMax);
   fChain->SetBranchAddress("antikt3HIItrEM_SamplingMax", &antikt3HIItrEM_SamplingMax, &b_antikt3HIItrEM_SamplingMax);
   fChain->SetBranchAddress("antikt3HIItrEM_n90constituents", &antikt3HIItrEM_n90constituents, &b_antikt3HIItrEM_n90constituents);
   fChain->SetBranchAddress("antikt3HIItrEM_Timing", &antikt3HIItrEM_Timing, &b_antikt3HIItrEM_Timing);
   fChain->SetBranchAddress("antikt3HIItrEM_LArQuality", &antikt3HIItrEM_LArQuality, &b_antikt3HIItrEM_LArQuality);
   fChain->SetBranchAddress("antikt3HIItrEM_HECQuality", &antikt3HIItrEM_HECQuality, &b_antikt3HIItrEM_HECQuality);
   fChain->SetBranchAddress("antikt3HIItrEM_TileQuality", &antikt3HIItrEM_TileQuality, &b_antikt3HIItrEM_TileQuality);
   fChain->SetBranchAddress("antikt3HIItrEM_NegativeE", &antikt3HIItrEM_NegativeE, &b_antikt3HIItrEM_NegativeE);
   fChain->SetBranchAddress("antikt3HIItrEM_AverageLArQF", &antikt3HIItrEM_AverageLArQF, &b_antikt3HIItrEM_AverageLArQF);
   fChain->SetBranchAddress("antikt3HIItrEM_sumPtTrk", &antikt3HIItrEM_sumPtTrk, &b_antikt3HIItrEM_sumPtTrk);
   fChain->SetBranchAddress("antikt3HIItrEM_BCH_CORR_CELL", &antikt3HIItrEM_BCH_CORR_CELL, &b_antikt3HIItrEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("antikt3HIItrEM_BCH_CORR_DOTX", &antikt3HIItrEM_BCH_CORR_DOTX, &b_antikt3HIItrEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("antikt3HIItrEM_BCH_CORR_JET", &antikt3HIItrEM_BCH_CORR_JET, &b_antikt3HIItrEM_BCH_CORR_JET);
   fChain->SetBranchAddress("antikt3HIItrEM_BCH_CORR_JET_FORCELL", &antikt3HIItrEM_BCH_CORR_JET_FORCELL, &b_antikt3HIItrEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("antikt3HIItrEM_ENG_BAD_CELLS", &antikt3HIItrEM_ENG_BAD_CELLS, &b_antikt3HIItrEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("antikt3HIItrEM_N_BAD_CELLS", &antikt3HIItrEM_N_BAD_CELLS, &b_antikt3HIItrEM_N_BAD_CELLS);
   fChain->SetBranchAddress("antikt3HIItrEM_N_BAD_CELLS_CORR", &antikt3HIItrEM_N_BAD_CELLS_CORR, &b_antikt3HIItrEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("antikt3HIItrEM_BAD_CELLS_CORR_E", &antikt3HIItrEM_BAD_CELLS_CORR_E, &b_antikt3HIItrEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("antikt3HIItrEM_emfrac", &antikt3HIItrEM_emfrac, &b_antikt3HIItrEM_emfrac);
   fChain->SetBranchAddress("antikt3HIItrEM_hecf", &antikt3HIItrEM_hecf, &b_antikt3HIItrEM_hecf);
   fChain->SetBranchAddress("antikt3HIItrEM_tgap3f", &antikt3HIItrEM_tgap3f, &b_antikt3HIItrEM_tgap3f);
   fChain->SetBranchAddress("antikt3HIItrEM_isUgly", &antikt3HIItrEM_isUgly, &b_antikt3HIItrEM_isUgly);
   fChain->SetBranchAddress("antikt3HIItrEM_isBadLooseMinus", &antikt3HIItrEM_isBadLooseMinus, &b_antikt3HIItrEM_isBadLooseMinus);
   fChain->SetBranchAddress("antikt3HIItrEM_isBadLoose", &antikt3HIItrEM_isBadLoose, &b_antikt3HIItrEM_isBadLoose);
   fChain->SetBranchAddress("antikt3HIItrEM_isBadMedium", &antikt3HIItrEM_isBadMedium, &b_antikt3HIItrEM_isBadMedium);
   fChain->SetBranchAddress("antikt3HIItrEM_isBadTight", &antikt3HIItrEM_isBadTight, &b_antikt3HIItrEM_isBadTight);
   fChain->SetBranchAddress("antikt3HIItrEM_jvtx_x", &antikt3HIItrEM_jvtx_x, &b_antikt3HIItrEM_jvtx_x);
   fChain->SetBranchAddress("antikt3HIItrEM_jvtx_y", &antikt3HIItrEM_jvtx_y, &b_antikt3HIItrEM_jvtx_y);
   fChain->SetBranchAddress("antikt3HIItrEM_jvtx_z", &antikt3HIItrEM_jvtx_z, &b_antikt3HIItrEM_jvtx_z);
   fChain->SetBranchAddress("antikt3HIItrEM_jvtxf", &antikt3HIItrEM_jvtxf, &b_antikt3HIItrEM_jvtxf);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_Comb", &antikt3HIItrEM_flavor_weight_Comb, &b_antikt3HIItrEM_flavor_weight_Comb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_IP2D", &antikt3HIItrEM_flavor_weight_IP2D, &b_antikt3HIItrEM_flavor_weight_IP2D);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_IP3D", &antikt3HIItrEM_flavor_weight_IP3D, &b_antikt3HIItrEM_flavor_weight_IP3D);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_SV0", &antikt3HIItrEM_flavor_weight_SV0, &b_antikt3HIItrEM_flavor_weight_SV0);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_SV1", &antikt3HIItrEM_flavor_weight_SV1, &b_antikt3HIItrEM_flavor_weight_SV1);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_SV2", &antikt3HIItrEM_flavor_weight_SV2, &b_antikt3HIItrEM_flavor_weight_SV2);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_SoftMuonTagChi2", &antikt3HIItrEM_flavor_weight_SoftMuonTagChi2, &b_antikt3HIItrEM_flavor_weight_SoftMuonTagChi2);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_SecondSoftMuonTagChi2", &antikt3HIItrEM_flavor_weight_SecondSoftMuonTagChi2, &b_antikt3HIItrEM_flavor_weight_SecondSoftMuonTagChi2);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_JetFitterTagNN", &antikt3HIItrEM_flavor_weight_JetFitterTagNN, &b_antikt3HIItrEM_flavor_weight_JetFitterTagNN);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_JetFitterCOMBNN", &antikt3HIItrEM_flavor_weight_JetFitterCOMBNN, &b_antikt3HIItrEM_flavor_weight_JetFitterCOMBNN);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_MV1", &antikt3HIItrEM_flavor_weight_MV1, &b_antikt3HIItrEM_flavor_weight_MV1);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_MV2", &antikt3HIItrEM_flavor_weight_MV2, &b_antikt3HIItrEM_flavor_weight_MV2);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_weight_GbbNN", &antikt3HIItrEM_flavor_weight_GbbNN, &b_antikt3HIItrEM_flavor_weight_GbbNN);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_label", &antikt3HIItrEM_flavor_truth_label, &b_antikt3HIItrEM_flavor_truth_label);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_dRminToB", &antikt3HIItrEM_flavor_truth_dRminToB, &b_antikt3HIItrEM_flavor_truth_dRminToB);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_dRminToC", &antikt3HIItrEM_flavor_truth_dRminToC, &b_antikt3HIItrEM_flavor_truth_dRminToC);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_dRminToT", &antikt3HIItrEM_flavor_truth_dRminToT, &b_antikt3HIItrEM_flavor_truth_dRminToT);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_BHadronpdg", &antikt3HIItrEM_flavor_truth_BHadronpdg, &b_antikt3HIItrEM_flavor_truth_BHadronpdg);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_vx_x", &antikt3HIItrEM_flavor_truth_vx_x, &b_antikt3HIItrEM_flavor_truth_vx_x);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_vx_y", &antikt3HIItrEM_flavor_truth_vx_y, &b_antikt3HIItrEM_flavor_truth_vx_y);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_truth_vx_z", &antikt3HIItrEM_flavor_truth_vx_z, &b_antikt3HIItrEM_flavor_truth_vx_z);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_assoctrk_signOfIP", &antikt3HIItrEM_flavor_component_assoctrk_signOfIP, &b_antikt3HIItrEM_flavor_component_assoctrk_signOfIP);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_assoctrk_signOfZIP", &antikt3HIItrEM_flavor_component_assoctrk_signOfZIP, &b_antikt3HIItrEM_flavor_component_assoctrk_signOfZIP);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx", &antikt3HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx, &b_antikt3HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx", &antikt3HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx, &b_antikt3HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx", &antikt3HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx, &b_antikt3HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx", &antikt3HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx, &b_antikt3HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_gentruthlepton_origin", &antikt3HIItrEM_flavor_component_gentruthlepton_origin, &b_antikt3HIItrEM_flavor_component_gentruthlepton_origin);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_gentruthlepton_slbarcode", &antikt3HIItrEM_flavor_component_gentruthlepton_slbarcode, &b_antikt3HIItrEM_flavor_component_gentruthlepton_slbarcode);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip2d_pu", &antikt3HIItrEM_flavor_component_ip2d_pu, &b_antikt3HIItrEM_flavor_component_ip2d_pu);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip2d_pb", &antikt3HIItrEM_flavor_component_ip2d_pb, &b_antikt3HIItrEM_flavor_component_ip2d_pb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip2d_isValid", &antikt3HIItrEM_flavor_component_ip2d_isValid, &b_antikt3HIItrEM_flavor_component_ip2d_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip2d_ntrk", &antikt3HIItrEM_flavor_component_ip2d_ntrk, &b_antikt3HIItrEM_flavor_component_ip2d_ntrk);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip3d_pu", &antikt3HIItrEM_flavor_component_ip3d_pu, &b_antikt3HIItrEM_flavor_component_ip3d_pu);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip3d_pb", &antikt3HIItrEM_flavor_component_ip3d_pb, &b_antikt3HIItrEM_flavor_component_ip3d_pb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip3d_isValid", &antikt3HIItrEM_flavor_component_ip3d_isValid, &b_antikt3HIItrEM_flavor_component_ip3d_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ip3d_ntrk", &antikt3HIItrEM_flavor_component_ip3d_ntrk, &b_antikt3HIItrEM_flavor_component_ip3d_ntrk);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jetprob_ntrk", &antikt3HIItrEM_flavor_component_jetprob_ntrk, &b_antikt3HIItrEM_flavor_component_jetprob_ntrk);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv1_pu", &antikt3HIItrEM_flavor_component_sv1_pu, &b_antikt3HIItrEM_flavor_component_sv1_pu);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv1_pb", &antikt3HIItrEM_flavor_component_sv1_pb, &b_antikt3HIItrEM_flavor_component_sv1_pb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv1_isValid", &antikt3HIItrEM_flavor_component_sv1_isValid, &b_antikt3HIItrEM_flavor_component_sv1_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv2_pu", &antikt3HIItrEM_flavor_component_sv2_pu, &b_antikt3HIItrEM_flavor_component_sv2_pu);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv2_pb", &antikt3HIItrEM_flavor_component_sv2_pb, &b_antikt3HIItrEM_flavor_component_sv2_pb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv2_isValid", &antikt3HIItrEM_flavor_component_sv2_isValid, &b_antikt3HIItrEM_flavor_component_sv2_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_pu", &antikt3HIItrEM_flavor_component_jfit_pu, &b_antikt3HIItrEM_flavor_component_jfit_pu);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_pb", &antikt3HIItrEM_flavor_component_jfit_pb, &b_antikt3HIItrEM_flavor_component_jfit_pb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_pc", &antikt3HIItrEM_flavor_component_jfit_pc, &b_antikt3HIItrEM_flavor_component_jfit_pc);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_isValid", &antikt3HIItrEM_flavor_component_jfit_isValid, &b_antikt3HIItrEM_flavor_component_jfit_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfitcomb_pu", &antikt3HIItrEM_flavor_component_jfitcomb_pu, &b_antikt3HIItrEM_flavor_component_jfitcomb_pu);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfitcomb_pb", &antikt3HIItrEM_flavor_component_jfitcomb_pb, &b_antikt3HIItrEM_flavor_component_jfitcomb_pb);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfitcomb_pc", &antikt3HIItrEM_flavor_component_jfitcomb_pc, &b_antikt3HIItrEM_flavor_component_jfitcomb_pc);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfitcomb_isValid", &antikt3HIItrEM_flavor_component_jfitcomb_isValid, &b_antikt3HIItrEM_flavor_component_jfitcomb_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_gbbnn_nMatchingTracks", &antikt3HIItrEM_flavor_component_gbbnn_nMatchingTracks, &b_antikt3HIItrEM_flavor_component_gbbnn_nMatchingTracks);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_gbbnn_trkJetWidth", &antikt3HIItrEM_flavor_component_gbbnn_trkJetWidth, &b_antikt3HIItrEM_flavor_component_gbbnn_trkJetWidth);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR", &antikt3HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR, &b_antikt3HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_nvtx", &antikt3HIItrEM_flavor_component_jfit_nvtx, &b_antikt3HIItrEM_flavor_component_jfit_nvtx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_nvtx1t", &antikt3HIItrEM_flavor_component_jfit_nvtx1t, &b_antikt3HIItrEM_flavor_component_jfit_nvtx1t);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_ntrkAtVx", &antikt3HIItrEM_flavor_component_jfit_ntrkAtVx, &b_antikt3HIItrEM_flavor_component_jfit_ntrkAtVx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_efrc", &antikt3HIItrEM_flavor_component_jfit_efrc, &b_antikt3HIItrEM_flavor_component_jfit_efrc);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_mass", &antikt3HIItrEM_flavor_component_jfit_mass, &b_antikt3HIItrEM_flavor_component_jfit_mass);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_sig3d", &antikt3HIItrEM_flavor_component_jfit_sig3d, &b_antikt3HIItrEM_flavor_component_jfit_sig3d);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_deltaPhi", &antikt3HIItrEM_flavor_component_jfit_deltaPhi, &b_antikt3HIItrEM_flavor_component_jfit_deltaPhi);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_jfit_deltaEta", &antikt3HIItrEM_flavor_component_jfit_deltaEta, &b_antikt3HIItrEM_flavor_component_jfit_deltaEta);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_d0val", &antikt3HIItrEM_flavor_component_ipplus_trk_d0val, &b_antikt3HIItrEM_flavor_component_ipplus_trk_d0val);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_d0sig", &antikt3HIItrEM_flavor_component_ipplus_trk_d0sig, &b_antikt3HIItrEM_flavor_component_ipplus_trk_d0sig);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_z0val", &antikt3HIItrEM_flavor_component_ipplus_trk_z0val, &b_antikt3HIItrEM_flavor_component_ipplus_trk_z0val);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_z0sig", &antikt3HIItrEM_flavor_component_ipplus_trk_z0sig, &b_antikt3HIItrEM_flavor_component_ipplus_trk_z0sig);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_w2D", &antikt3HIItrEM_flavor_component_ipplus_trk_w2D, &b_antikt3HIItrEM_flavor_component_ipplus_trk_w2D);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_w3D", &antikt3HIItrEM_flavor_component_ipplus_trk_w3D, &b_antikt3HIItrEM_flavor_component_ipplus_trk_w3D);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_pJP", &antikt3HIItrEM_flavor_component_ipplus_trk_pJP, &b_antikt3HIItrEM_flavor_component_ipplus_trk_pJP);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_pJPneg", &antikt3HIItrEM_flavor_component_ipplus_trk_pJPneg, &b_antikt3HIItrEM_flavor_component_ipplus_trk_pJPneg);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_grade", &antikt3HIItrEM_flavor_component_ipplus_trk_grade, &b_antikt3HIItrEM_flavor_component_ipplus_trk_grade);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_ipplus_trk_isFromV0", &antikt3HIItrEM_flavor_component_ipplus_trk_isFromV0, &b_antikt3HIItrEM_flavor_component_ipplus_trk_isFromV0);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_isValid", &antikt3HIItrEM_flavor_component_svp_isValid, &b_antikt3HIItrEM_flavor_component_svp_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_ntrkv", &antikt3HIItrEM_flavor_component_svp_ntrkv, &b_antikt3HIItrEM_flavor_component_svp_ntrkv);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_ntrkj", &antikt3HIItrEM_flavor_component_svp_ntrkj, &b_antikt3HIItrEM_flavor_component_svp_ntrkj);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_n2t", &antikt3HIItrEM_flavor_component_svp_n2t, &b_antikt3HIItrEM_flavor_component_svp_n2t);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_mass", &antikt3HIItrEM_flavor_component_svp_mass, &b_antikt3HIItrEM_flavor_component_svp_mass);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_efrc", &antikt3HIItrEM_flavor_component_svp_efrc, &b_antikt3HIItrEM_flavor_component_svp_efrc);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_x", &antikt3HIItrEM_flavor_component_svp_x, &b_antikt3HIItrEM_flavor_component_svp_x);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_y", &antikt3HIItrEM_flavor_component_svp_y, &b_antikt3HIItrEM_flavor_component_svp_y);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_z", &antikt3HIItrEM_flavor_component_svp_z, &b_antikt3HIItrEM_flavor_component_svp_z);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_err_x", &antikt3HIItrEM_flavor_component_svp_err_x, &b_antikt3HIItrEM_flavor_component_svp_err_x);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_err_y", &antikt3HIItrEM_flavor_component_svp_err_y, &b_antikt3HIItrEM_flavor_component_svp_err_y);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_err_z", &antikt3HIItrEM_flavor_component_svp_err_z, &b_antikt3HIItrEM_flavor_component_svp_err_z);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_cov_xy", &antikt3HIItrEM_flavor_component_svp_cov_xy, &b_antikt3HIItrEM_flavor_component_svp_cov_xy);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_cov_xz", &antikt3HIItrEM_flavor_component_svp_cov_xz, &b_antikt3HIItrEM_flavor_component_svp_cov_xz);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_cov_yz", &antikt3HIItrEM_flavor_component_svp_cov_yz, &b_antikt3HIItrEM_flavor_component_svp_cov_yz);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_chi2", &antikt3HIItrEM_flavor_component_svp_chi2, &b_antikt3HIItrEM_flavor_component_svp_chi2);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_ndof", &antikt3HIItrEM_flavor_component_svp_ndof, &b_antikt3HIItrEM_flavor_component_svp_ndof);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_svp_ntrk", &antikt3HIItrEM_flavor_component_svp_ntrk, &b_antikt3HIItrEM_flavor_component_svp_ntrk);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_isValid", &antikt3HIItrEM_flavor_component_sv0p_isValid, &b_antikt3HIItrEM_flavor_component_sv0p_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_ntrkv", &antikt3HIItrEM_flavor_component_sv0p_ntrkv, &b_antikt3HIItrEM_flavor_component_sv0p_ntrkv);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_ntrkj", &antikt3HIItrEM_flavor_component_sv0p_ntrkj, &b_antikt3HIItrEM_flavor_component_sv0p_ntrkj);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_n2t", &antikt3HIItrEM_flavor_component_sv0p_n2t, &b_antikt3HIItrEM_flavor_component_sv0p_n2t);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_mass", &antikt3HIItrEM_flavor_component_sv0p_mass, &b_antikt3HIItrEM_flavor_component_sv0p_mass);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_efrc", &antikt3HIItrEM_flavor_component_sv0p_efrc, &b_antikt3HIItrEM_flavor_component_sv0p_efrc);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_x", &antikt3HIItrEM_flavor_component_sv0p_x, &b_antikt3HIItrEM_flavor_component_sv0p_x);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_y", &antikt3HIItrEM_flavor_component_sv0p_y, &b_antikt3HIItrEM_flavor_component_sv0p_y);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_z", &antikt3HIItrEM_flavor_component_sv0p_z, &b_antikt3HIItrEM_flavor_component_sv0p_z);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_err_x", &antikt3HIItrEM_flavor_component_sv0p_err_x, &b_antikt3HIItrEM_flavor_component_sv0p_err_x);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_err_y", &antikt3HIItrEM_flavor_component_sv0p_err_y, &b_antikt3HIItrEM_flavor_component_sv0p_err_y);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_err_z", &antikt3HIItrEM_flavor_component_sv0p_err_z, &b_antikt3HIItrEM_flavor_component_sv0p_err_z);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_cov_xy", &antikt3HIItrEM_flavor_component_sv0p_cov_xy, &b_antikt3HIItrEM_flavor_component_sv0p_cov_xy);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_cov_xz", &antikt3HIItrEM_flavor_component_sv0p_cov_xz, &b_antikt3HIItrEM_flavor_component_sv0p_cov_xz);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_cov_yz", &antikt3HIItrEM_flavor_component_sv0p_cov_yz, &b_antikt3HIItrEM_flavor_component_sv0p_cov_yz);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_chi2", &antikt3HIItrEM_flavor_component_sv0p_chi2, &b_antikt3HIItrEM_flavor_component_sv0p_chi2);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_ndof", &antikt3HIItrEM_flavor_component_sv0p_ndof, &b_antikt3HIItrEM_flavor_component_sv0p_ndof);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_sv0p_ntrk", &antikt3HIItrEM_flavor_component_sv0p_ntrk, &b_antikt3HIItrEM_flavor_component_sv0p_ntrk);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuoninfo_muon_w", &antikt3HIItrEM_flavor_component_softmuoninfo_muon_w, &b_antikt3HIItrEM_flavor_component_softmuoninfo_muon_w);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuoninfo_muon_pTRel", &antikt3HIItrEM_flavor_component_softmuoninfo_muon_pTRel, &b_antikt3HIItrEM_flavor_component_softmuoninfo_muon_pTRel);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuoninfo_muon_dRJet", &antikt3HIItrEM_flavor_component_softmuoninfo_muon_dRJet, &b_antikt3HIItrEM_flavor_component_softmuoninfo_muon_dRJet);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuon2info_muon2_w", &antikt3HIItrEM_flavor_component_softmuon2info_muon2_w, &b_antikt3HIItrEM_flavor_component_softmuon2info_muon2_w);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuon2info_muon2_pTRel", &antikt3HIItrEM_flavor_component_softmuon2info_muon2_pTRel, &b_antikt3HIItrEM_flavor_component_softmuon2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuon2info_muon2_dRJet", &antikt3HIItrEM_flavor_component_softmuon2info_muon2_dRJet, &b_antikt3HIItrEM_flavor_component_softmuon2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuonchi2info_muon_w", &antikt3HIItrEM_flavor_component_softmuonchi2info_muon_w, &b_antikt3HIItrEM_flavor_component_softmuonchi2info_muon_w);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuonchi2info_muon_pTRel", &antikt3HIItrEM_flavor_component_softmuonchi2info_muon_pTRel, &b_antikt3HIItrEM_flavor_component_softmuonchi2info_muon_pTRel);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuonchi2info_muon_dRJet", &antikt3HIItrEM_flavor_component_softmuonchi2info_muon_dRJet, &b_antikt3HIItrEM_flavor_component_softmuonchi2info_muon_dRJet);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_w", &antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_w, &b_antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_w);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel", &antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel, &b_antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet", &antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet, &b_antikt3HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_msvp_isValid", &antikt3HIItrEM_flavor_component_msvp_isValid, &b_antikt3HIItrEM_flavor_component_msvp_isValid);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_msvp_ntrkv", &antikt3HIItrEM_flavor_component_msvp_ntrkv, &b_antikt3HIItrEM_flavor_component_msvp_ntrkv);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_msvp_ntrkj", &antikt3HIItrEM_flavor_component_msvp_ntrkj, &b_antikt3HIItrEM_flavor_component_msvp_ntrkj);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_msvp_n2t", &antikt3HIItrEM_flavor_component_msvp_n2t, &b_antikt3HIItrEM_flavor_component_msvp_n2t);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_msvp_nVtx", &antikt3HIItrEM_flavor_component_msvp_nVtx, &b_antikt3HIItrEM_flavor_component_msvp_nVtx);
   fChain->SetBranchAddress("antikt3HIItrEM_flavor_component_msvp_normWeightedDist", &antikt3HIItrEM_flavor_component_msvp_normWeightedDist, &b_antikt3HIItrEM_flavor_component_msvp_normWeightedDist);
   fChain->SetBranchAddress("antikt4HIItrEM_n", &antikt4HIItrEM_n, &b_antikt4HIItrEM_n);
   fChain->SetBranchAddress("antikt4HIItrEM_E", &antikt4HIItrEM_E, &b_antikt4HIItrEM_E);
   fChain->SetBranchAddress("antikt4HIItrEM_Et", &antikt4HIItrEM_Et, &b_antikt4HIItrEM_Et);
   fChain->SetBranchAddress("antikt4HIItrEM_pt", &antikt4HIItrEM_pt, &b_antikt4HIItrEM_pt);
   fChain->SetBranchAddress("antikt4HIItrEM_m", &antikt4HIItrEM_m, &b_antikt4HIItrEM_m);
   fChain->SetBranchAddress("antikt4HIItrEM_eta", &antikt4HIItrEM_eta, &b_antikt4HIItrEM_eta);
   fChain->SetBranchAddress("antikt4HIItrEM_phi", &antikt4HIItrEM_phi, &b_antikt4HIItrEM_phi);
   fChain->SetBranchAddress("antikt4HIItrEM_SubtractedEt", &antikt4HIItrEM_SubtractedEt, &b_antikt4HIItrEM_SubtractedEt);
   fChain->SetBranchAddress("antikt4HIItrEM_NoFlow", &antikt4HIItrEM_NoFlow, &b_antikt4HIItrEM_NoFlow);
   fChain->SetBranchAddress("antikt4HIItrEM_UncalibEt", &antikt4HIItrEM_UncalibEt, &b_antikt4HIItrEM_UncalibEt);
   fChain->SetBranchAddress("antikt4HIItrEM_PassedFR", &antikt4HIItrEM_PassedFR, &b_antikt4HIItrEM_PassedFR);
   fChain->SetBranchAddress("antikt4HIItrEM_const_n", &antikt4HIItrEM_const_n, &b_antikt4HIItrEM_const_n);
   fChain->SetBranchAddress("antikt4HIItrEM_const_et", &antikt4HIItrEM_const_et, &b_antikt4HIItrEM_const_et);
   fChain->SetBranchAddress("antikt4HIItrEM_const_eta", &antikt4HIItrEM_const_eta, &b_antikt4HIItrEM_const_eta);
   fChain->SetBranchAddress("antikt4HIItrEM_const_phi", &antikt4HIItrEM_const_phi, &b_antikt4HIItrEM_const_phi);
   fChain->SetBranchAddress("antikt4HIItrEM_sampling_et", &antikt4HIItrEM_sampling_et, &b_antikt4HIItrEM_sampling_et);
   fChain->SetBranchAddress("antikt4HIItrEM_sampling_et_unsubtr", &antikt4HIItrEM_sampling_et_unsubtr, &b_antikt4HIItrEM_sampling_et_unsubtr);
   fChain->SetBranchAddress("antikt4HIItrEM_bad_cell_n", &antikt4HIItrEM_bad_cell_n, &b_antikt4HIItrEM_bad_cell_n);
   fChain->SetBranchAddress("antikt4HIItrEM_bad_cell_et", &antikt4HIItrEM_bad_cell_et, &b_antikt4HIItrEM_bad_cell_et);
   fChain->SetBranchAddress("antikt4HIItrEM_bad_cell_area", &antikt4HIItrEM_bad_cell_area, &b_antikt4HIItrEM_bad_cell_area);
   fChain->SetBranchAddress("antikt4HIItrEM_empty_cell_n", &antikt4HIItrEM_empty_cell_n, &b_antikt4HIItrEM_empty_cell_n);
   fChain->SetBranchAddress("antikt4HIItrEM_empty_cell_et", &antikt4HIItrEM_empty_cell_et, &b_antikt4HIItrEM_empty_cell_et);
   fChain->SetBranchAddress("antikt4HIItrEM_empty_cell_area", &antikt4HIItrEM_empty_cell_area, &b_antikt4HIItrEM_empty_cell_area);
   fChain->SetBranchAddress("antikt4HIItrEM_total_cell_n", &antikt4HIItrEM_total_cell_n, &b_antikt4HIItrEM_total_cell_n);
   fChain->SetBranchAddress("antikt4HIItrEM_total_cell_et", &antikt4HIItrEM_total_cell_et, &b_antikt4HIItrEM_total_cell_et);
   fChain->SetBranchAddress("antikt4HIItrEM_total_cell_area", &antikt4HIItrEM_total_cell_area, &b_antikt4HIItrEM_total_cell_area);
   fChain->SetBranchAddress("antikt4HIItrEM_n90", &antikt4HIItrEM_n90, &b_antikt4HIItrEM_n90);
   fChain->SetBranchAddress("antikt4HIItrEM_fracSamplingMax", &antikt4HIItrEM_fracSamplingMax, &b_antikt4HIItrEM_fracSamplingMax);
   fChain->SetBranchAddress("antikt4HIItrEM_SamplingMax", &antikt4HIItrEM_SamplingMax, &b_antikt4HIItrEM_SamplingMax);
   fChain->SetBranchAddress("antikt4HIItrEM_n90constituents", &antikt4HIItrEM_n90constituents, &b_antikt4HIItrEM_n90constituents);
   fChain->SetBranchAddress("antikt4HIItrEM_Timing", &antikt4HIItrEM_Timing, &b_antikt4HIItrEM_Timing);
   fChain->SetBranchAddress("antikt4HIItrEM_LArQuality", &antikt4HIItrEM_LArQuality, &b_antikt4HIItrEM_LArQuality);
   fChain->SetBranchAddress("antikt4HIItrEM_HECQuality", &antikt4HIItrEM_HECQuality, &b_antikt4HIItrEM_HECQuality);
   fChain->SetBranchAddress("antikt4HIItrEM_TileQuality", &antikt4HIItrEM_TileQuality, &b_antikt4HIItrEM_TileQuality);
   fChain->SetBranchAddress("antikt4HIItrEM_NegativeE", &antikt4HIItrEM_NegativeE, &b_antikt4HIItrEM_NegativeE);
   fChain->SetBranchAddress("antikt4HIItrEM_AverageLArQF", &antikt4HIItrEM_AverageLArQF, &b_antikt4HIItrEM_AverageLArQF);
   fChain->SetBranchAddress("antikt4HIItrEM_sumPtTrk", &antikt4HIItrEM_sumPtTrk, &b_antikt4HIItrEM_sumPtTrk);
   fChain->SetBranchAddress("antikt4HIItrEM_BCH_CORR_CELL", &antikt4HIItrEM_BCH_CORR_CELL, &b_antikt4HIItrEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("antikt4HIItrEM_BCH_CORR_DOTX", &antikt4HIItrEM_BCH_CORR_DOTX, &b_antikt4HIItrEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("antikt4HIItrEM_BCH_CORR_JET", &antikt4HIItrEM_BCH_CORR_JET, &b_antikt4HIItrEM_BCH_CORR_JET);
   fChain->SetBranchAddress("antikt4HIItrEM_BCH_CORR_JET_FORCELL", &antikt4HIItrEM_BCH_CORR_JET_FORCELL, &b_antikt4HIItrEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("antikt4HIItrEM_ENG_BAD_CELLS", &antikt4HIItrEM_ENG_BAD_CELLS, &b_antikt4HIItrEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("antikt4HIItrEM_N_BAD_CELLS", &antikt4HIItrEM_N_BAD_CELLS, &b_antikt4HIItrEM_N_BAD_CELLS);
   fChain->SetBranchAddress("antikt4HIItrEM_N_BAD_CELLS_CORR", &antikt4HIItrEM_N_BAD_CELLS_CORR, &b_antikt4HIItrEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("antikt4HIItrEM_BAD_CELLS_CORR_E", &antikt4HIItrEM_BAD_CELLS_CORR_E, &b_antikt4HIItrEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("antikt4HIItrEM_emfrac", &antikt4HIItrEM_emfrac, &b_antikt4HIItrEM_emfrac);
   fChain->SetBranchAddress("antikt4HIItrEM_hecf", &antikt4HIItrEM_hecf, &b_antikt4HIItrEM_hecf);
   fChain->SetBranchAddress("antikt4HIItrEM_tgap3f", &antikt4HIItrEM_tgap3f, &b_antikt4HIItrEM_tgap3f);
   fChain->SetBranchAddress("antikt4HIItrEM_isUgly", &antikt4HIItrEM_isUgly, &b_antikt4HIItrEM_isUgly);
   fChain->SetBranchAddress("antikt4HIItrEM_isBadLooseMinus", &antikt4HIItrEM_isBadLooseMinus, &b_antikt4HIItrEM_isBadLooseMinus);
   fChain->SetBranchAddress("antikt4HIItrEM_isBadLoose", &antikt4HIItrEM_isBadLoose, &b_antikt4HIItrEM_isBadLoose);
   fChain->SetBranchAddress("antikt4HIItrEM_isBadMedium", &antikt4HIItrEM_isBadMedium, &b_antikt4HIItrEM_isBadMedium);
   fChain->SetBranchAddress("antikt4HIItrEM_isBadTight", &antikt4HIItrEM_isBadTight, &b_antikt4HIItrEM_isBadTight);
   fChain->SetBranchAddress("antikt4HIItrEM_jvtx_x", &antikt4HIItrEM_jvtx_x, &b_antikt4HIItrEM_jvtx_x);
   fChain->SetBranchAddress("antikt4HIItrEM_jvtx_y", &antikt4HIItrEM_jvtx_y, &b_antikt4HIItrEM_jvtx_y);
   fChain->SetBranchAddress("antikt4HIItrEM_jvtx_z", &antikt4HIItrEM_jvtx_z, &b_antikt4HIItrEM_jvtx_z);
   fChain->SetBranchAddress("antikt4HIItrEM_jvtxf", &antikt4HIItrEM_jvtxf, &b_antikt4HIItrEM_jvtxf);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_Comb", &antikt4HIItrEM_flavor_weight_Comb, &b_antikt4HIItrEM_flavor_weight_Comb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_IP2D", &antikt4HIItrEM_flavor_weight_IP2D, &b_antikt4HIItrEM_flavor_weight_IP2D);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_IP3D", &antikt4HIItrEM_flavor_weight_IP3D, &b_antikt4HIItrEM_flavor_weight_IP3D);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_SV0", &antikt4HIItrEM_flavor_weight_SV0, &b_antikt4HIItrEM_flavor_weight_SV0);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_SV1", &antikt4HIItrEM_flavor_weight_SV1, &b_antikt4HIItrEM_flavor_weight_SV1);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_SV2", &antikt4HIItrEM_flavor_weight_SV2, &b_antikt4HIItrEM_flavor_weight_SV2);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_SoftMuonTagChi2", &antikt4HIItrEM_flavor_weight_SoftMuonTagChi2, &b_antikt4HIItrEM_flavor_weight_SoftMuonTagChi2);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_SecondSoftMuonTagChi2", &antikt4HIItrEM_flavor_weight_SecondSoftMuonTagChi2, &b_antikt4HIItrEM_flavor_weight_SecondSoftMuonTagChi2);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_JetFitterTagNN", &antikt4HIItrEM_flavor_weight_JetFitterTagNN, &b_antikt4HIItrEM_flavor_weight_JetFitterTagNN);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_JetFitterCOMBNN", &antikt4HIItrEM_flavor_weight_JetFitterCOMBNN, &b_antikt4HIItrEM_flavor_weight_JetFitterCOMBNN);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_MV1", &antikt4HIItrEM_flavor_weight_MV1, &b_antikt4HIItrEM_flavor_weight_MV1);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_MV2", &antikt4HIItrEM_flavor_weight_MV2, &b_antikt4HIItrEM_flavor_weight_MV2);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_weight_GbbNN", &antikt4HIItrEM_flavor_weight_GbbNN, &b_antikt4HIItrEM_flavor_weight_GbbNN);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_label", &antikt4HIItrEM_flavor_truth_label, &b_antikt4HIItrEM_flavor_truth_label);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_dRminToB", &antikt4HIItrEM_flavor_truth_dRminToB, &b_antikt4HIItrEM_flavor_truth_dRminToB);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_dRminToC", &antikt4HIItrEM_flavor_truth_dRminToC, &b_antikt4HIItrEM_flavor_truth_dRminToC);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_dRminToT", &antikt4HIItrEM_flavor_truth_dRminToT, &b_antikt4HIItrEM_flavor_truth_dRminToT);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_BHadronpdg", &antikt4HIItrEM_flavor_truth_BHadronpdg, &b_antikt4HIItrEM_flavor_truth_BHadronpdg);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_vx_x", &antikt4HIItrEM_flavor_truth_vx_x, &b_antikt4HIItrEM_flavor_truth_vx_x);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_vx_y", &antikt4HIItrEM_flavor_truth_vx_y, &b_antikt4HIItrEM_flavor_truth_vx_y);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_truth_vx_z", &antikt4HIItrEM_flavor_truth_vx_z, &b_antikt4HIItrEM_flavor_truth_vx_z);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_assoctrk_signOfIP", &antikt4HIItrEM_flavor_component_assoctrk_signOfIP, &b_antikt4HIItrEM_flavor_component_assoctrk_signOfIP);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_assoctrk_signOfZIP", &antikt4HIItrEM_flavor_component_assoctrk_signOfZIP, &b_antikt4HIItrEM_flavor_component_assoctrk_signOfZIP);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx", &antikt4HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx, &b_antikt4HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx", &antikt4HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx, &b_antikt4HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx", &antikt4HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx, &b_antikt4HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx", &antikt4HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx, &b_antikt4HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_gentruthlepton_origin", &antikt4HIItrEM_flavor_component_gentruthlepton_origin, &b_antikt4HIItrEM_flavor_component_gentruthlepton_origin);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_gentruthlepton_slbarcode", &antikt4HIItrEM_flavor_component_gentruthlepton_slbarcode, &b_antikt4HIItrEM_flavor_component_gentruthlepton_slbarcode);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip2d_pu", &antikt4HIItrEM_flavor_component_ip2d_pu, &b_antikt4HIItrEM_flavor_component_ip2d_pu);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip2d_pb", &antikt4HIItrEM_flavor_component_ip2d_pb, &b_antikt4HIItrEM_flavor_component_ip2d_pb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip2d_isValid", &antikt4HIItrEM_flavor_component_ip2d_isValid, &b_antikt4HIItrEM_flavor_component_ip2d_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip2d_ntrk", &antikt4HIItrEM_flavor_component_ip2d_ntrk, &b_antikt4HIItrEM_flavor_component_ip2d_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip3d_pu", &antikt4HIItrEM_flavor_component_ip3d_pu, &b_antikt4HIItrEM_flavor_component_ip3d_pu);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip3d_pb", &antikt4HIItrEM_flavor_component_ip3d_pb, &b_antikt4HIItrEM_flavor_component_ip3d_pb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip3d_isValid", &antikt4HIItrEM_flavor_component_ip3d_isValid, &b_antikt4HIItrEM_flavor_component_ip3d_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ip3d_ntrk", &antikt4HIItrEM_flavor_component_ip3d_ntrk, &b_antikt4HIItrEM_flavor_component_ip3d_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jetprob_ntrk", &antikt4HIItrEM_flavor_component_jetprob_ntrk, &b_antikt4HIItrEM_flavor_component_jetprob_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv1_pu", &antikt4HIItrEM_flavor_component_sv1_pu, &b_antikt4HIItrEM_flavor_component_sv1_pu);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv1_pb", &antikt4HIItrEM_flavor_component_sv1_pb, &b_antikt4HIItrEM_flavor_component_sv1_pb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv1_isValid", &antikt4HIItrEM_flavor_component_sv1_isValid, &b_antikt4HIItrEM_flavor_component_sv1_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv2_pu", &antikt4HIItrEM_flavor_component_sv2_pu, &b_antikt4HIItrEM_flavor_component_sv2_pu);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv2_pb", &antikt4HIItrEM_flavor_component_sv2_pb, &b_antikt4HIItrEM_flavor_component_sv2_pb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv2_isValid", &antikt4HIItrEM_flavor_component_sv2_isValid, &b_antikt4HIItrEM_flavor_component_sv2_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_pu", &antikt4HIItrEM_flavor_component_jfit_pu, &b_antikt4HIItrEM_flavor_component_jfit_pu);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_pb", &antikt4HIItrEM_flavor_component_jfit_pb, &b_antikt4HIItrEM_flavor_component_jfit_pb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_pc", &antikt4HIItrEM_flavor_component_jfit_pc, &b_antikt4HIItrEM_flavor_component_jfit_pc);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_isValid", &antikt4HIItrEM_flavor_component_jfit_isValid, &b_antikt4HIItrEM_flavor_component_jfit_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfitcomb_pu", &antikt4HIItrEM_flavor_component_jfitcomb_pu, &b_antikt4HIItrEM_flavor_component_jfitcomb_pu);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfitcomb_pb", &antikt4HIItrEM_flavor_component_jfitcomb_pb, &b_antikt4HIItrEM_flavor_component_jfitcomb_pb);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfitcomb_pc", &antikt4HIItrEM_flavor_component_jfitcomb_pc, &b_antikt4HIItrEM_flavor_component_jfitcomb_pc);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfitcomb_isValid", &antikt4HIItrEM_flavor_component_jfitcomb_isValid, &b_antikt4HIItrEM_flavor_component_jfitcomb_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_gbbnn_nMatchingTracks", &antikt4HIItrEM_flavor_component_gbbnn_nMatchingTracks, &b_antikt4HIItrEM_flavor_component_gbbnn_nMatchingTracks);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_gbbnn_trkJetWidth", &antikt4HIItrEM_flavor_component_gbbnn_trkJetWidth, &b_antikt4HIItrEM_flavor_component_gbbnn_trkJetWidth);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR", &antikt4HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR, &b_antikt4HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_nvtx", &antikt4HIItrEM_flavor_component_jfit_nvtx, &b_antikt4HIItrEM_flavor_component_jfit_nvtx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_nvtx1t", &antikt4HIItrEM_flavor_component_jfit_nvtx1t, &b_antikt4HIItrEM_flavor_component_jfit_nvtx1t);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_ntrkAtVx", &antikt4HIItrEM_flavor_component_jfit_ntrkAtVx, &b_antikt4HIItrEM_flavor_component_jfit_ntrkAtVx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_efrc", &antikt4HIItrEM_flavor_component_jfit_efrc, &b_antikt4HIItrEM_flavor_component_jfit_efrc);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_mass", &antikt4HIItrEM_flavor_component_jfit_mass, &b_antikt4HIItrEM_flavor_component_jfit_mass);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_sig3d", &antikt4HIItrEM_flavor_component_jfit_sig3d, &b_antikt4HIItrEM_flavor_component_jfit_sig3d);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_deltaPhi", &antikt4HIItrEM_flavor_component_jfit_deltaPhi, &b_antikt4HIItrEM_flavor_component_jfit_deltaPhi);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_jfit_deltaEta", &antikt4HIItrEM_flavor_component_jfit_deltaEta, &b_antikt4HIItrEM_flavor_component_jfit_deltaEta);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_d0val", &antikt4HIItrEM_flavor_component_ipplus_trk_d0val, &b_antikt4HIItrEM_flavor_component_ipplus_trk_d0val);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_d0sig", &antikt4HIItrEM_flavor_component_ipplus_trk_d0sig, &b_antikt4HIItrEM_flavor_component_ipplus_trk_d0sig);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_z0val", &antikt4HIItrEM_flavor_component_ipplus_trk_z0val, &b_antikt4HIItrEM_flavor_component_ipplus_trk_z0val);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_z0sig", &antikt4HIItrEM_flavor_component_ipplus_trk_z0sig, &b_antikt4HIItrEM_flavor_component_ipplus_trk_z0sig);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_w2D", &antikt4HIItrEM_flavor_component_ipplus_trk_w2D, &b_antikt4HIItrEM_flavor_component_ipplus_trk_w2D);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_w3D", &antikt4HIItrEM_flavor_component_ipplus_trk_w3D, &b_antikt4HIItrEM_flavor_component_ipplus_trk_w3D);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_pJP", &antikt4HIItrEM_flavor_component_ipplus_trk_pJP, &b_antikt4HIItrEM_flavor_component_ipplus_trk_pJP);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_pJPneg", &antikt4HIItrEM_flavor_component_ipplus_trk_pJPneg, &b_antikt4HIItrEM_flavor_component_ipplus_trk_pJPneg);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_grade", &antikt4HIItrEM_flavor_component_ipplus_trk_grade, &b_antikt4HIItrEM_flavor_component_ipplus_trk_grade);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_ipplus_trk_isFromV0", &antikt4HIItrEM_flavor_component_ipplus_trk_isFromV0, &b_antikt4HIItrEM_flavor_component_ipplus_trk_isFromV0);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_isValid", &antikt4HIItrEM_flavor_component_svp_isValid, &b_antikt4HIItrEM_flavor_component_svp_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_ntrkv", &antikt4HIItrEM_flavor_component_svp_ntrkv, &b_antikt4HIItrEM_flavor_component_svp_ntrkv);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_ntrkj", &antikt4HIItrEM_flavor_component_svp_ntrkj, &b_antikt4HIItrEM_flavor_component_svp_ntrkj);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_n2t", &antikt4HIItrEM_flavor_component_svp_n2t, &b_antikt4HIItrEM_flavor_component_svp_n2t);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_mass", &antikt4HIItrEM_flavor_component_svp_mass, &b_antikt4HIItrEM_flavor_component_svp_mass);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_efrc", &antikt4HIItrEM_flavor_component_svp_efrc, &b_antikt4HIItrEM_flavor_component_svp_efrc);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_x", &antikt4HIItrEM_flavor_component_svp_x, &b_antikt4HIItrEM_flavor_component_svp_x);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_y", &antikt4HIItrEM_flavor_component_svp_y, &b_antikt4HIItrEM_flavor_component_svp_y);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_z", &antikt4HIItrEM_flavor_component_svp_z, &b_antikt4HIItrEM_flavor_component_svp_z);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_err_x", &antikt4HIItrEM_flavor_component_svp_err_x, &b_antikt4HIItrEM_flavor_component_svp_err_x);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_err_y", &antikt4HIItrEM_flavor_component_svp_err_y, &b_antikt4HIItrEM_flavor_component_svp_err_y);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_err_z", &antikt4HIItrEM_flavor_component_svp_err_z, &b_antikt4HIItrEM_flavor_component_svp_err_z);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_cov_xy", &antikt4HIItrEM_flavor_component_svp_cov_xy, &b_antikt4HIItrEM_flavor_component_svp_cov_xy);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_cov_xz", &antikt4HIItrEM_flavor_component_svp_cov_xz, &b_antikt4HIItrEM_flavor_component_svp_cov_xz);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_cov_yz", &antikt4HIItrEM_flavor_component_svp_cov_yz, &b_antikt4HIItrEM_flavor_component_svp_cov_yz);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_chi2", &antikt4HIItrEM_flavor_component_svp_chi2, &b_antikt4HIItrEM_flavor_component_svp_chi2);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_ndof", &antikt4HIItrEM_flavor_component_svp_ndof, &b_antikt4HIItrEM_flavor_component_svp_ndof);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_svp_ntrk", &antikt4HIItrEM_flavor_component_svp_ntrk, &b_antikt4HIItrEM_flavor_component_svp_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_isValid", &antikt4HIItrEM_flavor_component_sv0p_isValid, &b_antikt4HIItrEM_flavor_component_sv0p_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_ntrkv", &antikt4HIItrEM_flavor_component_sv0p_ntrkv, &b_antikt4HIItrEM_flavor_component_sv0p_ntrkv);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_ntrkj", &antikt4HIItrEM_flavor_component_sv0p_ntrkj, &b_antikt4HIItrEM_flavor_component_sv0p_ntrkj);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_n2t", &antikt4HIItrEM_flavor_component_sv0p_n2t, &b_antikt4HIItrEM_flavor_component_sv0p_n2t);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_mass", &antikt4HIItrEM_flavor_component_sv0p_mass, &b_antikt4HIItrEM_flavor_component_sv0p_mass);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_efrc", &antikt4HIItrEM_flavor_component_sv0p_efrc, &b_antikt4HIItrEM_flavor_component_sv0p_efrc);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_x", &antikt4HIItrEM_flavor_component_sv0p_x, &b_antikt4HIItrEM_flavor_component_sv0p_x);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_y", &antikt4HIItrEM_flavor_component_sv0p_y, &b_antikt4HIItrEM_flavor_component_sv0p_y);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_z", &antikt4HIItrEM_flavor_component_sv0p_z, &b_antikt4HIItrEM_flavor_component_sv0p_z);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_err_x", &antikt4HIItrEM_flavor_component_sv0p_err_x, &b_antikt4HIItrEM_flavor_component_sv0p_err_x);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_err_y", &antikt4HIItrEM_flavor_component_sv0p_err_y, &b_antikt4HIItrEM_flavor_component_sv0p_err_y);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_err_z", &antikt4HIItrEM_flavor_component_sv0p_err_z, &b_antikt4HIItrEM_flavor_component_sv0p_err_z);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_cov_xy", &antikt4HIItrEM_flavor_component_sv0p_cov_xy, &b_antikt4HIItrEM_flavor_component_sv0p_cov_xy);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_cov_xz", &antikt4HIItrEM_flavor_component_sv0p_cov_xz, &b_antikt4HIItrEM_flavor_component_sv0p_cov_xz);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_cov_yz", &antikt4HIItrEM_flavor_component_sv0p_cov_yz, &b_antikt4HIItrEM_flavor_component_sv0p_cov_yz);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_chi2", &antikt4HIItrEM_flavor_component_sv0p_chi2, &b_antikt4HIItrEM_flavor_component_sv0p_chi2);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_ndof", &antikt4HIItrEM_flavor_component_sv0p_ndof, &b_antikt4HIItrEM_flavor_component_sv0p_ndof);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_sv0p_ntrk", &antikt4HIItrEM_flavor_component_sv0p_ntrk, &b_antikt4HIItrEM_flavor_component_sv0p_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuoninfo_muon_w", &antikt4HIItrEM_flavor_component_softmuoninfo_muon_w, &b_antikt4HIItrEM_flavor_component_softmuoninfo_muon_w);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuoninfo_muon_pTRel", &antikt4HIItrEM_flavor_component_softmuoninfo_muon_pTRel, &b_antikt4HIItrEM_flavor_component_softmuoninfo_muon_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuoninfo_muon_dRJet", &antikt4HIItrEM_flavor_component_softmuoninfo_muon_dRJet, &b_antikt4HIItrEM_flavor_component_softmuoninfo_muon_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuon2info_muon2_w", &antikt4HIItrEM_flavor_component_softmuon2info_muon2_w, &b_antikt4HIItrEM_flavor_component_softmuon2info_muon2_w);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuon2info_muon2_pTRel", &antikt4HIItrEM_flavor_component_softmuon2info_muon2_pTRel, &b_antikt4HIItrEM_flavor_component_softmuon2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuon2info_muon2_dRJet", &antikt4HIItrEM_flavor_component_softmuon2info_muon2_dRJet, &b_antikt4HIItrEM_flavor_component_softmuon2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuonchi2info_muon_w", &antikt4HIItrEM_flavor_component_softmuonchi2info_muon_w, &b_antikt4HIItrEM_flavor_component_softmuonchi2info_muon_w);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuonchi2info_muon_pTRel", &antikt4HIItrEM_flavor_component_softmuonchi2info_muon_pTRel, &b_antikt4HIItrEM_flavor_component_softmuonchi2info_muon_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuonchi2info_muon_dRJet", &antikt4HIItrEM_flavor_component_softmuonchi2info_muon_dRJet, &b_antikt4HIItrEM_flavor_component_softmuonchi2info_muon_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_w", &antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_w, &b_antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_w);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel", &antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel, &b_antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet", &antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet, &b_antikt4HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_msvp_isValid", &antikt4HIItrEM_flavor_component_msvp_isValid, &b_antikt4HIItrEM_flavor_component_msvp_isValid);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_msvp_ntrkv", &antikt4HIItrEM_flavor_component_msvp_ntrkv, &b_antikt4HIItrEM_flavor_component_msvp_ntrkv);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_msvp_ntrkj", &antikt4HIItrEM_flavor_component_msvp_ntrkj, &b_antikt4HIItrEM_flavor_component_msvp_ntrkj);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_msvp_n2t", &antikt4HIItrEM_flavor_component_msvp_n2t, &b_antikt4HIItrEM_flavor_component_msvp_n2t);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_msvp_nVtx", &antikt4HIItrEM_flavor_component_msvp_nVtx, &b_antikt4HIItrEM_flavor_component_msvp_nVtx);
   fChain->SetBranchAddress("antikt4HIItrEM_flavor_component_msvp_normWeightedDist", &antikt4HIItrEM_flavor_component_msvp_normWeightedDist, &b_antikt4HIItrEM_flavor_component_msvp_normWeightedDist);
   fChain->SetBranchAddress("antikt5HIItrEM_n", &antikt5HIItrEM_n, &b_antikt5HIItrEM_n);
   fChain->SetBranchAddress("antikt5HIItrEM_E", &antikt5HIItrEM_E, &b_antikt5HIItrEM_E);
   fChain->SetBranchAddress("antikt5HIItrEM_Et", &antikt5HIItrEM_Et, &b_antikt5HIItrEM_Et);
   fChain->SetBranchAddress("antikt5HIItrEM_pt", &antikt5HIItrEM_pt, &b_antikt5HIItrEM_pt);
   fChain->SetBranchAddress("antikt5HIItrEM_m", &antikt5HIItrEM_m, &b_antikt5HIItrEM_m);
   fChain->SetBranchAddress("antikt5HIItrEM_eta", &antikt5HIItrEM_eta, &b_antikt5HIItrEM_eta);
   fChain->SetBranchAddress("antikt5HIItrEM_phi", &antikt5HIItrEM_phi, &b_antikt5HIItrEM_phi);
   fChain->SetBranchAddress("antikt5HIItrEM_SubtractedEt", &antikt5HIItrEM_SubtractedEt, &b_antikt5HIItrEM_SubtractedEt);
   fChain->SetBranchAddress("antikt5HIItrEM_NoFlow", &antikt5HIItrEM_NoFlow, &b_antikt5HIItrEM_NoFlow);
   fChain->SetBranchAddress("antikt5HIItrEM_UncalibEt", &antikt5HIItrEM_UncalibEt, &b_antikt5HIItrEM_UncalibEt);
   fChain->SetBranchAddress("antikt5HIItrEM_PassedFR", &antikt5HIItrEM_PassedFR, &b_antikt5HIItrEM_PassedFR);
   fChain->SetBranchAddress("antikt5HIItrEM_const_n", &antikt5HIItrEM_const_n, &b_antikt5HIItrEM_const_n);
   fChain->SetBranchAddress("antikt5HIItrEM_const_et", &antikt5HIItrEM_const_et, &b_antikt5HIItrEM_const_et);
   fChain->SetBranchAddress("antikt5HIItrEM_const_eta", &antikt5HIItrEM_const_eta, &b_antikt5HIItrEM_const_eta);
   fChain->SetBranchAddress("antikt5HIItrEM_const_phi", &antikt5HIItrEM_const_phi, &b_antikt5HIItrEM_const_phi);
   fChain->SetBranchAddress("antikt5HIItrEM_sampling_et", &antikt5HIItrEM_sampling_et, &b_antikt5HIItrEM_sampling_et);
   fChain->SetBranchAddress("antikt5HIItrEM_sampling_et_unsubtr", &antikt5HIItrEM_sampling_et_unsubtr, &b_antikt5HIItrEM_sampling_et_unsubtr);
   fChain->SetBranchAddress("antikt5HIItrEM_bad_cell_n", &antikt5HIItrEM_bad_cell_n, &b_antikt5HIItrEM_bad_cell_n);
   fChain->SetBranchAddress("antikt5HIItrEM_bad_cell_et", &antikt5HIItrEM_bad_cell_et, &b_antikt5HIItrEM_bad_cell_et);
   fChain->SetBranchAddress("antikt5HIItrEM_bad_cell_area", &antikt5HIItrEM_bad_cell_area, &b_antikt5HIItrEM_bad_cell_area);
   fChain->SetBranchAddress("antikt5HIItrEM_empty_cell_n", &antikt5HIItrEM_empty_cell_n, &b_antikt5HIItrEM_empty_cell_n);
   fChain->SetBranchAddress("antikt5HIItrEM_empty_cell_et", &antikt5HIItrEM_empty_cell_et, &b_antikt5HIItrEM_empty_cell_et);
   fChain->SetBranchAddress("antikt5HIItrEM_empty_cell_area", &antikt5HIItrEM_empty_cell_area, &b_antikt5HIItrEM_empty_cell_area);
   fChain->SetBranchAddress("antikt5HIItrEM_total_cell_n", &antikt5HIItrEM_total_cell_n, &b_antikt5HIItrEM_total_cell_n);
   fChain->SetBranchAddress("antikt5HIItrEM_total_cell_et", &antikt5HIItrEM_total_cell_et, &b_antikt5HIItrEM_total_cell_et);
   fChain->SetBranchAddress("antikt5HIItrEM_total_cell_area", &antikt5HIItrEM_total_cell_area, &b_antikt5HIItrEM_total_cell_area);
   fChain->SetBranchAddress("antikt5HIItrEM_n90", &antikt5HIItrEM_n90, &b_antikt5HIItrEM_n90);
   fChain->SetBranchAddress("antikt5HIItrEM_fracSamplingMax", &antikt5HIItrEM_fracSamplingMax, &b_antikt5HIItrEM_fracSamplingMax);
   fChain->SetBranchAddress("antikt5HIItrEM_SamplingMax", &antikt5HIItrEM_SamplingMax, &b_antikt5HIItrEM_SamplingMax);
   fChain->SetBranchAddress("antikt5HIItrEM_n90constituents", &antikt5HIItrEM_n90constituents, &b_antikt5HIItrEM_n90constituents);
   fChain->SetBranchAddress("antikt5HIItrEM_Timing", &antikt5HIItrEM_Timing, &b_antikt5HIItrEM_Timing);
   fChain->SetBranchAddress("antikt5HIItrEM_LArQuality", &antikt5HIItrEM_LArQuality, &b_antikt5HIItrEM_LArQuality);
   fChain->SetBranchAddress("antikt5HIItrEM_HECQuality", &antikt5HIItrEM_HECQuality, &b_antikt5HIItrEM_HECQuality);
   fChain->SetBranchAddress("antikt5HIItrEM_TileQuality", &antikt5HIItrEM_TileQuality, &b_antikt5HIItrEM_TileQuality);
   fChain->SetBranchAddress("antikt5HIItrEM_NegativeE", &antikt5HIItrEM_NegativeE, &b_antikt5HIItrEM_NegativeE);
   fChain->SetBranchAddress("antikt5HIItrEM_AverageLArQF", &antikt5HIItrEM_AverageLArQF, &b_antikt5HIItrEM_AverageLArQF);
   fChain->SetBranchAddress("antikt5HIItrEM_sumPtTrk", &antikt5HIItrEM_sumPtTrk, &b_antikt5HIItrEM_sumPtTrk);
   fChain->SetBranchAddress("antikt5HIItrEM_BCH_CORR_CELL", &antikt5HIItrEM_BCH_CORR_CELL, &b_antikt5HIItrEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("antikt5HIItrEM_BCH_CORR_DOTX", &antikt5HIItrEM_BCH_CORR_DOTX, &b_antikt5HIItrEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("antikt5HIItrEM_BCH_CORR_JET", &antikt5HIItrEM_BCH_CORR_JET, &b_antikt5HIItrEM_BCH_CORR_JET);
   fChain->SetBranchAddress("antikt5HIItrEM_BCH_CORR_JET_FORCELL", &antikt5HIItrEM_BCH_CORR_JET_FORCELL, &b_antikt5HIItrEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("antikt5HIItrEM_ENG_BAD_CELLS", &antikt5HIItrEM_ENG_BAD_CELLS, &b_antikt5HIItrEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("antikt5HIItrEM_N_BAD_CELLS", &antikt5HIItrEM_N_BAD_CELLS, &b_antikt5HIItrEM_N_BAD_CELLS);
   fChain->SetBranchAddress("antikt5HIItrEM_N_BAD_CELLS_CORR", &antikt5HIItrEM_N_BAD_CELLS_CORR, &b_antikt5HIItrEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("antikt5HIItrEM_BAD_CELLS_CORR_E", &antikt5HIItrEM_BAD_CELLS_CORR_E, &b_antikt5HIItrEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("antikt5HIItrEM_emfrac", &antikt5HIItrEM_emfrac, &b_antikt5HIItrEM_emfrac);
   fChain->SetBranchAddress("antikt5HIItrEM_hecf", &antikt5HIItrEM_hecf, &b_antikt5HIItrEM_hecf);
   fChain->SetBranchAddress("antikt5HIItrEM_tgap3f", &antikt5HIItrEM_tgap3f, &b_antikt5HIItrEM_tgap3f);
   fChain->SetBranchAddress("antikt5HIItrEM_isUgly", &antikt5HIItrEM_isUgly, &b_antikt5HIItrEM_isUgly);
   fChain->SetBranchAddress("antikt5HIItrEM_isBadLooseMinus", &antikt5HIItrEM_isBadLooseMinus, &b_antikt5HIItrEM_isBadLooseMinus);
   fChain->SetBranchAddress("antikt5HIItrEM_isBadLoose", &antikt5HIItrEM_isBadLoose, &b_antikt5HIItrEM_isBadLoose);
   fChain->SetBranchAddress("antikt5HIItrEM_isBadMedium", &antikt5HIItrEM_isBadMedium, &b_antikt5HIItrEM_isBadMedium);
   fChain->SetBranchAddress("antikt5HIItrEM_isBadTight", &antikt5HIItrEM_isBadTight, &b_antikt5HIItrEM_isBadTight);
   fChain->SetBranchAddress("antikt5HIItrEM_jvtx_x", &antikt5HIItrEM_jvtx_x, &b_antikt5HIItrEM_jvtx_x);
   fChain->SetBranchAddress("antikt5HIItrEM_jvtx_y", &antikt5HIItrEM_jvtx_y, &b_antikt5HIItrEM_jvtx_y);
   fChain->SetBranchAddress("antikt5HIItrEM_jvtx_z", &antikt5HIItrEM_jvtx_z, &b_antikt5HIItrEM_jvtx_z);
   fChain->SetBranchAddress("antikt5HIItrEM_jvtxf", &antikt5HIItrEM_jvtxf, &b_antikt5HIItrEM_jvtxf);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_Comb", &antikt5HIItrEM_flavor_weight_Comb, &b_antikt5HIItrEM_flavor_weight_Comb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_IP2D", &antikt5HIItrEM_flavor_weight_IP2D, &b_antikt5HIItrEM_flavor_weight_IP2D);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_IP3D", &antikt5HIItrEM_flavor_weight_IP3D, &b_antikt5HIItrEM_flavor_weight_IP3D);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_SV0", &antikt5HIItrEM_flavor_weight_SV0, &b_antikt5HIItrEM_flavor_weight_SV0);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_SV1", &antikt5HIItrEM_flavor_weight_SV1, &b_antikt5HIItrEM_flavor_weight_SV1);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_SV2", &antikt5HIItrEM_flavor_weight_SV2, &b_antikt5HIItrEM_flavor_weight_SV2);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_SoftMuonTagChi2", &antikt5HIItrEM_flavor_weight_SoftMuonTagChi2, &b_antikt5HIItrEM_flavor_weight_SoftMuonTagChi2);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_SecondSoftMuonTagChi2", &antikt5HIItrEM_flavor_weight_SecondSoftMuonTagChi2, &b_antikt5HIItrEM_flavor_weight_SecondSoftMuonTagChi2);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_JetFitterTagNN", &antikt5HIItrEM_flavor_weight_JetFitterTagNN, &b_antikt5HIItrEM_flavor_weight_JetFitterTagNN);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_JetFitterCOMBNN", &antikt5HIItrEM_flavor_weight_JetFitterCOMBNN, &b_antikt5HIItrEM_flavor_weight_JetFitterCOMBNN);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_MV1", &antikt5HIItrEM_flavor_weight_MV1, &b_antikt5HIItrEM_flavor_weight_MV1);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_MV2", &antikt5HIItrEM_flavor_weight_MV2, &b_antikt5HIItrEM_flavor_weight_MV2);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_weight_GbbNN", &antikt5HIItrEM_flavor_weight_GbbNN, &b_antikt5HIItrEM_flavor_weight_GbbNN);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_label", &antikt5HIItrEM_flavor_truth_label, &b_antikt5HIItrEM_flavor_truth_label);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_dRminToB", &antikt5HIItrEM_flavor_truth_dRminToB, &b_antikt5HIItrEM_flavor_truth_dRminToB);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_dRminToC", &antikt5HIItrEM_flavor_truth_dRminToC, &b_antikt5HIItrEM_flavor_truth_dRminToC);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_dRminToT", &antikt5HIItrEM_flavor_truth_dRminToT, &b_antikt5HIItrEM_flavor_truth_dRminToT);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_BHadronpdg", &antikt5HIItrEM_flavor_truth_BHadronpdg, &b_antikt5HIItrEM_flavor_truth_BHadronpdg);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_vx_x", &antikt5HIItrEM_flavor_truth_vx_x, &b_antikt5HIItrEM_flavor_truth_vx_x);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_vx_y", &antikt5HIItrEM_flavor_truth_vx_y, &b_antikt5HIItrEM_flavor_truth_vx_y);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_truth_vx_z", &antikt5HIItrEM_flavor_truth_vx_z, &b_antikt5HIItrEM_flavor_truth_vx_z);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_assoctrk_signOfIP", &antikt5HIItrEM_flavor_component_assoctrk_signOfIP, &b_antikt5HIItrEM_flavor_component_assoctrk_signOfIP);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_assoctrk_signOfZIP", &antikt5HIItrEM_flavor_component_assoctrk_signOfZIP, &b_antikt5HIItrEM_flavor_component_assoctrk_signOfZIP);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx", &antikt5HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx, &b_antikt5HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx", &antikt5HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx, &b_antikt5HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx", &antikt5HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx, &b_antikt5HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx", &antikt5HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx, &b_antikt5HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_gentruthlepton_origin", &antikt5HIItrEM_flavor_component_gentruthlepton_origin, &b_antikt5HIItrEM_flavor_component_gentruthlepton_origin);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_gentruthlepton_slbarcode", &antikt5HIItrEM_flavor_component_gentruthlepton_slbarcode, &b_antikt5HIItrEM_flavor_component_gentruthlepton_slbarcode);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip2d_pu", &antikt5HIItrEM_flavor_component_ip2d_pu, &b_antikt5HIItrEM_flavor_component_ip2d_pu);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip2d_pb", &antikt5HIItrEM_flavor_component_ip2d_pb, &b_antikt5HIItrEM_flavor_component_ip2d_pb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip2d_isValid", &antikt5HIItrEM_flavor_component_ip2d_isValid, &b_antikt5HIItrEM_flavor_component_ip2d_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip2d_ntrk", &antikt5HIItrEM_flavor_component_ip2d_ntrk, &b_antikt5HIItrEM_flavor_component_ip2d_ntrk);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip3d_pu", &antikt5HIItrEM_flavor_component_ip3d_pu, &b_antikt5HIItrEM_flavor_component_ip3d_pu);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip3d_pb", &antikt5HIItrEM_flavor_component_ip3d_pb, &b_antikt5HIItrEM_flavor_component_ip3d_pb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip3d_isValid", &antikt5HIItrEM_flavor_component_ip3d_isValid, &b_antikt5HIItrEM_flavor_component_ip3d_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ip3d_ntrk", &antikt5HIItrEM_flavor_component_ip3d_ntrk, &b_antikt5HIItrEM_flavor_component_ip3d_ntrk);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jetprob_ntrk", &antikt5HIItrEM_flavor_component_jetprob_ntrk, &b_antikt5HIItrEM_flavor_component_jetprob_ntrk);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv1_pu", &antikt5HIItrEM_flavor_component_sv1_pu, &b_antikt5HIItrEM_flavor_component_sv1_pu);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv1_pb", &antikt5HIItrEM_flavor_component_sv1_pb, &b_antikt5HIItrEM_flavor_component_sv1_pb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv1_isValid", &antikt5HIItrEM_flavor_component_sv1_isValid, &b_antikt5HIItrEM_flavor_component_sv1_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv2_pu", &antikt5HIItrEM_flavor_component_sv2_pu, &b_antikt5HIItrEM_flavor_component_sv2_pu);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv2_pb", &antikt5HIItrEM_flavor_component_sv2_pb, &b_antikt5HIItrEM_flavor_component_sv2_pb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv2_isValid", &antikt5HIItrEM_flavor_component_sv2_isValid, &b_antikt5HIItrEM_flavor_component_sv2_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_pu", &antikt5HIItrEM_flavor_component_jfit_pu, &b_antikt5HIItrEM_flavor_component_jfit_pu);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_pb", &antikt5HIItrEM_flavor_component_jfit_pb, &b_antikt5HIItrEM_flavor_component_jfit_pb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_pc", &antikt5HIItrEM_flavor_component_jfit_pc, &b_antikt5HIItrEM_flavor_component_jfit_pc);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_isValid", &antikt5HIItrEM_flavor_component_jfit_isValid, &b_antikt5HIItrEM_flavor_component_jfit_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfitcomb_pu", &antikt5HIItrEM_flavor_component_jfitcomb_pu, &b_antikt5HIItrEM_flavor_component_jfitcomb_pu);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfitcomb_pb", &antikt5HIItrEM_flavor_component_jfitcomb_pb, &b_antikt5HIItrEM_flavor_component_jfitcomb_pb);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfitcomb_pc", &antikt5HIItrEM_flavor_component_jfitcomb_pc, &b_antikt5HIItrEM_flavor_component_jfitcomb_pc);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfitcomb_isValid", &antikt5HIItrEM_flavor_component_jfitcomb_isValid, &b_antikt5HIItrEM_flavor_component_jfitcomb_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_gbbnn_nMatchingTracks", &antikt5HIItrEM_flavor_component_gbbnn_nMatchingTracks, &b_antikt5HIItrEM_flavor_component_gbbnn_nMatchingTracks);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_gbbnn_trkJetWidth", &antikt5HIItrEM_flavor_component_gbbnn_trkJetWidth, &b_antikt5HIItrEM_flavor_component_gbbnn_trkJetWidth);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR", &antikt5HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR, &b_antikt5HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_nvtx", &antikt5HIItrEM_flavor_component_jfit_nvtx, &b_antikt5HIItrEM_flavor_component_jfit_nvtx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_nvtx1t", &antikt5HIItrEM_flavor_component_jfit_nvtx1t, &b_antikt5HIItrEM_flavor_component_jfit_nvtx1t);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_ntrkAtVx", &antikt5HIItrEM_flavor_component_jfit_ntrkAtVx, &b_antikt5HIItrEM_flavor_component_jfit_ntrkAtVx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_efrc", &antikt5HIItrEM_flavor_component_jfit_efrc, &b_antikt5HIItrEM_flavor_component_jfit_efrc);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_mass", &antikt5HIItrEM_flavor_component_jfit_mass, &b_antikt5HIItrEM_flavor_component_jfit_mass);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_sig3d", &antikt5HIItrEM_flavor_component_jfit_sig3d, &b_antikt5HIItrEM_flavor_component_jfit_sig3d);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_deltaPhi", &antikt5HIItrEM_flavor_component_jfit_deltaPhi, &b_antikt5HIItrEM_flavor_component_jfit_deltaPhi);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_jfit_deltaEta", &antikt5HIItrEM_flavor_component_jfit_deltaEta, &b_antikt5HIItrEM_flavor_component_jfit_deltaEta);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_d0val", &antikt5HIItrEM_flavor_component_ipplus_trk_d0val, &b_antikt5HIItrEM_flavor_component_ipplus_trk_d0val);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_d0sig", &antikt5HIItrEM_flavor_component_ipplus_trk_d0sig, &b_antikt5HIItrEM_flavor_component_ipplus_trk_d0sig);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_z0val", &antikt5HIItrEM_flavor_component_ipplus_trk_z0val, &b_antikt5HIItrEM_flavor_component_ipplus_trk_z0val);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_z0sig", &antikt5HIItrEM_flavor_component_ipplus_trk_z0sig, &b_antikt5HIItrEM_flavor_component_ipplus_trk_z0sig);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_w2D", &antikt5HIItrEM_flavor_component_ipplus_trk_w2D, &b_antikt5HIItrEM_flavor_component_ipplus_trk_w2D);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_w3D", &antikt5HIItrEM_flavor_component_ipplus_trk_w3D, &b_antikt5HIItrEM_flavor_component_ipplus_trk_w3D);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_pJP", &antikt5HIItrEM_flavor_component_ipplus_trk_pJP, &b_antikt5HIItrEM_flavor_component_ipplus_trk_pJP);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_pJPneg", &antikt5HIItrEM_flavor_component_ipplus_trk_pJPneg, &b_antikt5HIItrEM_flavor_component_ipplus_trk_pJPneg);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_grade", &antikt5HIItrEM_flavor_component_ipplus_trk_grade, &b_antikt5HIItrEM_flavor_component_ipplus_trk_grade);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_ipplus_trk_isFromV0", &antikt5HIItrEM_flavor_component_ipplus_trk_isFromV0, &b_antikt5HIItrEM_flavor_component_ipplus_trk_isFromV0);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_isValid", &antikt5HIItrEM_flavor_component_svp_isValid, &b_antikt5HIItrEM_flavor_component_svp_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_ntrkv", &antikt5HIItrEM_flavor_component_svp_ntrkv, &b_antikt5HIItrEM_flavor_component_svp_ntrkv);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_ntrkj", &antikt5HIItrEM_flavor_component_svp_ntrkj, &b_antikt5HIItrEM_flavor_component_svp_ntrkj);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_n2t", &antikt5HIItrEM_flavor_component_svp_n2t, &b_antikt5HIItrEM_flavor_component_svp_n2t);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_mass", &antikt5HIItrEM_flavor_component_svp_mass, &b_antikt5HIItrEM_flavor_component_svp_mass);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_efrc", &antikt5HIItrEM_flavor_component_svp_efrc, &b_antikt5HIItrEM_flavor_component_svp_efrc);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_x", &antikt5HIItrEM_flavor_component_svp_x, &b_antikt5HIItrEM_flavor_component_svp_x);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_y", &antikt5HIItrEM_flavor_component_svp_y, &b_antikt5HIItrEM_flavor_component_svp_y);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_z", &antikt5HIItrEM_flavor_component_svp_z, &b_antikt5HIItrEM_flavor_component_svp_z);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_err_x", &antikt5HIItrEM_flavor_component_svp_err_x, &b_antikt5HIItrEM_flavor_component_svp_err_x);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_err_y", &antikt5HIItrEM_flavor_component_svp_err_y, &b_antikt5HIItrEM_flavor_component_svp_err_y);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_err_z", &antikt5HIItrEM_flavor_component_svp_err_z, &b_antikt5HIItrEM_flavor_component_svp_err_z);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_cov_xy", &antikt5HIItrEM_flavor_component_svp_cov_xy, &b_antikt5HIItrEM_flavor_component_svp_cov_xy);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_cov_xz", &antikt5HIItrEM_flavor_component_svp_cov_xz, &b_antikt5HIItrEM_flavor_component_svp_cov_xz);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_cov_yz", &antikt5HIItrEM_flavor_component_svp_cov_yz, &b_antikt5HIItrEM_flavor_component_svp_cov_yz);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_chi2", &antikt5HIItrEM_flavor_component_svp_chi2, &b_antikt5HIItrEM_flavor_component_svp_chi2);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_ndof", &antikt5HIItrEM_flavor_component_svp_ndof, &b_antikt5HIItrEM_flavor_component_svp_ndof);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_svp_ntrk", &antikt5HIItrEM_flavor_component_svp_ntrk, &b_antikt5HIItrEM_flavor_component_svp_ntrk);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_isValid", &antikt5HIItrEM_flavor_component_sv0p_isValid, &b_antikt5HIItrEM_flavor_component_sv0p_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_ntrkv", &antikt5HIItrEM_flavor_component_sv0p_ntrkv, &b_antikt5HIItrEM_flavor_component_sv0p_ntrkv);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_ntrkj", &antikt5HIItrEM_flavor_component_sv0p_ntrkj, &b_antikt5HIItrEM_flavor_component_sv0p_ntrkj);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_n2t", &antikt5HIItrEM_flavor_component_sv0p_n2t, &b_antikt5HIItrEM_flavor_component_sv0p_n2t);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_mass", &antikt5HIItrEM_flavor_component_sv0p_mass, &b_antikt5HIItrEM_flavor_component_sv0p_mass);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_efrc", &antikt5HIItrEM_flavor_component_sv0p_efrc, &b_antikt5HIItrEM_flavor_component_sv0p_efrc);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_x", &antikt5HIItrEM_flavor_component_sv0p_x, &b_antikt5HIItrEM_flavor_component_sv0p_x);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_y", &antikt5HIItrEM_flavor_component_sv0p_y, &b_antikt5HIItrEM_flavor_component_sv0p_y);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_z", &antikt5HIItrEM_flavor_component_sv0p_z, &b_antikt5HIItrEM_flavor_component_sv0p_z);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_err_x", &antikt5HIItrEM_flavor_component_sv0p_err_x, &b_antikt5HIItrEM_flavor_component_sv0p_err_x);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_err_y", &antikt5HIItrEM_flavor_component_sv0p_err_y, &b_antikt5HIItrEM_flavor_component_sv0p_err_y);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_err_z", &antikt5HIItrEM_flavor_component_sv0p_err_z, &b_antikt5HIItrEM_flavor_component_sv0p_err_z);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_cov_xy", &antikt5HIItrEM_flavor_component_sv0p_cov_xy, &b_antikt5HIItrEM_flavor_component_sv0p_cov_xy);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_cov_xz", &antikt5HIItrEM_flavor_component_sv0p_cov_xz, &b_antikt5HIItrEM_flavor_component_sv0p_cov_xz);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_cov_yz", &antikt5HIItrEM_flavor_component_sv0p_cov_yz, &b_antikt5HIItrEM_flavor_component_sv0p_cov_yz);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_chi2", &antikt5HIItrEM_flavor_component_sv0p_chi2, &b_antikt5HIItrEM_flavor_component_sv0p_chi2);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_ndof", &antikt5HIItrEM_flavor_component_sv0p_ndof, &b_antikt5HIItrEM_flavor_component_sv0p_ndof);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_sv0p_ntrk", &antikt5HIItrEM_flavor_component_sv0p_ntrk, &b_antikt5HIItrEM_flavor_component_sv0p_ntrk);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuoninfo_muon_w", &antikt5HIItrEM_flavor_component_softmuoninfo_muon_w, &b_antikt5HIItrEM_flavor_component_softmuoninfo_muon_w);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuoninfo_muon_pTRel", &antikt5HIItrEM_flavor_component_softmuoninfo_muon_pTRel, &b_antikt5HIItrEM_flavor_component_softmuoninfo_muon_pTRel);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuoninfo_muon_dRJet", &antikt5HIItrEM_flavor_component_softmuoninfo_muon_dRJet, &b_antikt5HIItrEM_flavor_component_softmuoninfo_muon_dRJet);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuon2info_muon2_w", &antikt5HIItrEM_flavor_component_softmuon2info_muon2_w, &b_antikt5HIItrEM_flavor_component_softmuon2info_muon2_w);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuon2info_muon2_pTRel", &antikt5HIItrEM_flavor_component_softmuon2info_muon2_pTRel, &b_antikt5HIItrEM_flavor_component_softmuon2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuon2info_muon2_dRJet", &antikt5HIItrEM_flavor_component_softmuon2info_muon2_dRJet, &b_antikt5HIItrEM_flavor_component_softmuon2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuonchi2info_muon_w", &antikt5HIItrEM_flavor_component_softmuonchi2info_muon_w, &b_antikt5HIItrEM_flavor_component_softmuonchi2info_muon_w);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuonchi2info_muon_pTRel", &antikt5HIItrEM_flavor_component_softmuonchi2info_muon_pTRel, &b_antikt5HIItrEM_flavor_component_softmuonchi2info_muon_pTRel);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuonchi2info_muon_dRJet", &antikt5HIItrEM_flavor_component_softmuonchi2info_muon_dRJet, &b_antikt5HIItrEM_flavor_component_softmuonchi2info_muon_dRJet);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_w", &antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_w, &b_antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_w);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel", &antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel, &b_antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet", &antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet, &b_antikt5HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_msvp_isValid", &antikt5HIItrEM_flavor_component_msvp_isValid, &b_antikt5HIItrEM_flavor_component_msvp_isValid);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_msvp_ntrkv", &antikt5HIItrEM_flavor_component_msvp_ntrkv, &b_antikt5HIItrEM_flavor_component_msvp_ntrkv);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_msvp_ntrkj", &antikt5HIItrEM_flavor_component_msvp_ntrkj, &b_antikt5HIItrEM_flavor_component_msvp_ntrkj);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_msvp_n2t", &antikt5HIItrEM_flavor_component_msvp_n2t, &b_antikt5HIItrEM_flavor_component_msvp_n2t);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_msvp_nVtx", &antikt5HIItrEM_flavor_component_msvp_nVtx, &b_antikt5HIItrEM_flavor_component_msvp_nVtx);
   fChain->SetBranchAddress("antikt5HIItrEM_flavor_component_msvp_normWeightedDist", &antikt5HIItrEM_flavor_component_msvp_normWeightedDist, &b_antikt5HIItrEM_flavor_component_msvp_normWeightedDist);
   fChain->SetBranchAddress("antikt6HIItrEM_n", &antikt6HIItrEM_n, &b_antikt6HIItrEM_n);
   fChain->SetBranchAddress("antikt6HIItrEM_E", &antikt6HIItrEM_E, &b_antikt6HIItrEM_E);
   fChain->SetBranchAddress("antikt6HIItrEM_Et", &antikt6HIItrEM_Et, &b_antikt6HIItrEM_Et);
   fChain->SetBranchAddress("antikt6HIItrEM_pt", &antikt6HIItrEM_pt, &b_antikt6HIItrEM_pt);
   fChain->SetBranchAddress("antikt6HIItrEM_m", &antikt6HIItrEM_m, &b_antikt6HIItrEM_m);
   fChain->SetBranchAddress("antikt6HIItrEM_eta", &antikt6HIItrEM_eta, &b_antikt6HIItrEM_eta);
   fChain->SetBranchAddress("antikt6HIItrEM_phi", &antikt6HIItrEM_phi, &b_antikt6HIItrEM_phi);
   fChain->SetBranchAddress("antikt6HIItrEM_SubtractedEt", &antikt6HIItrEM_SubtractedEt, &b_antikt6HIItrEM_SubtractedEt);
   fChain->SetBranchAddress("antikt6HIItrEM_NoFlow", &antikt6HIItrEM_NoFlow, &b_antikt6HIItrEM_NoFlow);
   fChain->SetBranchAddress("antikt6HIItrEM_UncalibEt", &antikt6HIItrEM_UncalibEt, &b_antikt6HIItrEM_UncalibEt);
   fChain->SetBranchAddress("antikt6HIItrEM_PassedFR", &antikt6HIItrEM_PassedFR, &b_antikt6HIItrEM_PassedFR);
   fChain->SetBranchAddress("antikt6HIItrEM_const_n", &antikt6HIItrEM_const_n, &b_antikt6HIItrEM_const_n);
   fChain->SetBranchAddress("antikt6HIItrEM_const_et", &antikt6HIItrEM_const_et, &b_antikt6HIItrEM_const_et);
   fChain->SetBranchAddress("antikt6HIItrEM_const_eta", &antikt6HIItrEM_const_eta, &b_antikt6HIItrEM_const_eta);
   fChain->SetBranchAddress("antikt6HIItrEM_const_phi", &antikt6HIItrEM_const_phi, &b_antikt6HIItrEM_const_phi);
   fChain->SetBranchAddress("antikt6HIItrEM_sampling_et", &antikt6HIItrEM_sampling_et, &b_antikt6HIItrEM_sampling_et);
   fChain->SetBranchAddress("antikt6HIItrEM_sampling_et_unsubtr", &antikt6HIItrEM_sampling_et_unsubtr, &b_antikt6HIItrEM_sampling_et_unsubtr);
   fChain->SetBranchAddress("antikt6HIItrEM_bad_cell_n", &antikt6HIItrEM_bad_cell_n, &b_antikt6HIItrEM_bad_cell_n);
   fChain->SetBranchAddress("antikt6HIItrEM_bad_cell_et", &antikt6HIItrEM_bad_cell_et, &b_antikt6HIItrEM_bad_cell_et);
   fChain->SetBranchAddress("antikt6HIItrEM_bad_cell_area", &antikt6HIItrEM_bad_cell_area, &b_antikt6HIItrEM_bad_cell_area);
   fChain->SetBranchAddress("antikt6HIItrEM_empty_cell_n", &antikt6HIItrEM_empty_cell_n, &b_antikt6HIItrEM_empty_cell_n);
   fChain->SetBranchAddress("antikt6HIItrEM_empty_cell_et", &antikt6HIItrEM_empty_cell_et, &b_antikt6HIItrEM_empty_cell_et);
   fChain->SetBranchAddress("antikt6HIItrEM_empty_cell_area", &antikt6HIItrEM_empty_cell_area, &b_antikt6HIItrEM_empty_cell_area);
   fChain->SetBranchAddress("antikt6HIItrEM_total_cell_n", &antikt6HIItrEM_total_cell_n, &b_antikt6HIItrEM_total_cell_n);
   fChain->SetBranchAddress("antikt6HIItrEM_total_cell_et", &antikt6HIItrEM_total_cell_et, &b_antikt6HIItrEM_total_cell_et);
   fChain->SetBranchAddress("antikt6HIItrEM_total_cell_area", &antikt6HIItrEM_total_cell_area, &b_antikt6HIItrEM_total_cell_area);
   fChain->SetBranchAddress("antikt6HIItrEM_n90", &antikt6HIItrEM_n90, &b_antikt6HIItrEM_n90);
   fChain->SetBranchAddress("antikt6HIItrEM_fracSamplingMax", &antikt6HIItrEM_fracSamplingMax, &b_antikt6HIItrEM_fracSamplingMax);
   fChain->SetBranchAddress("antikt6HIItrEM_SamplingMax", &antikt6HIItrEM_SamplingMax, &b_antikt6HIItrEM_SamplingMax);
   fChain->SetBranchAddress("antikt6HIItrEM_n90constituents", &antikt6HIItrEM_n90constituents, &b_antikt6HIItrEM_n90constituents);
   fChain->SetBranchAddress("antikt6HIItrEM_Timing", &antikt6HIItrEM_Timing, &b_antikt6HIItrEM_Timing);
   fChain->SetBranchAddress("antikt6HIItrEM_LArQuality", &antikt6HIItrEM_LArQuality, &b_antikt6HIItrEM_LArQuality);
   fChain->SetBranchAddress("antikt6HIItrEM_HECQuality", &antikt6HIItrEM_HECQuality, &b_antikt6HIItrEM_HECQuality);
   fChain->SetBranchAddress("antikt6HIItrEM_TileQuality", &antikt6HIItrEM_TileQuality, &b_antikt6HIItrEM_TileQuality);
   fChain->SetBranchAddress("antikt6HIItrEM_NegativeE", &antikt6HIItrEM_NegativeE, &b_antikt6HIItrEM_NegativeE);
   fChain->SetBranchAddress("antikt6HIItrEM_AverageLArQF", &antikt6HIItrEM_AverageLArQF, &b_antikt6HIItrEM_AverageLArQF);
   fChain->SetBranchAddress("antikt6HIItrEM_sumPtTrk", &antikt6HIItrEM_sumPtTrk, &b_antikt6HIItrEM_sumPtTrk);
   fChain->SetBranchAddress("antikt6HIItrEM_BCH_CORR_CELL", &antikt6HIItrEM_BCH_CORR_CELL, &b_antikt6HIItrEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("antikt6HIItrEM_BCH_CORR_DOTX", &antikt6HIItrEM_BCH_CORR_DOTX, &b_antikt6HIItrEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("antikt6HIItrEM_BCH_CORR_JET", &antikt6HIItrEM_BCH_CORR_JET, &b_antikt6HIItrEM_BCH_CORR_JET);
   fChain->SetBranchAddress("antikt6HIItrEM_BCH_CORR_JET_FORCELL", &antikt6HIItrEM_BCH_CORR_JET_FORCELL, &b_antikt6HIItrEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("antikt6HIItrEM_ENG_BAD_CELLS", &antikt6HIItrEM_ENG_BAD_CELLS, &b_antikt6HIItrEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("antikt6HIItrEM_N_BAD_CELLS", &antikt6HIItrEM_N_BAD_CELLS, &b_antikt6HIItrEM_N_BAD_CELLS);
   fChain->SetBranchAddress("antikt6HIItrEM_N_BAD_CELLS_CORR", &antikt6HIItrEM_N_BAD_CELLS_CORR, &b_antikt6HIItrEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("antikt6HIItrEM_BAD_CELLS_CORR_E", &antikt6HIItrEM_BAD_CELLS_CORR_E, &b_antikt6HIItrEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("antikt6HIItrEM_emfrac", &antikt6HIItrEM_emfrac, &b_antikt6HIItrEM_emfrac);
   fChain->SetBranchAddress("antikt6HIItrEM_hecf", &antikt6HIItrEM_hecf, &b_antikt6HIItrEM_hecf);
   fChain->SetBranchAddress("antikt6HIItrEM_tgap3f", &antikt6HIItrEM_tgap3f, &b_antikt6HIItrEM_tgap3f);
   fChain->SetBranchAddress("antikt6HIItrEM_isUgly", &antikt6HIItrEM_isUgly, &b_antikt6HIItrEM_isUgly);
   fChain->SetBranchAddress("antikt6HIItrEM_isBadLooseMinus", &antikt6HIItrEM_isBadLooseMinus, &b_antikt6HIItrEM_isBadLooseMinus);
   fChain->SetBranchAddress("antikt6HIItrEM_isBadLoose", &antikt6HIItrEM_isBadLoose, &b_antikt6HIItrEM_isBadLoose);
   fChain->SetBranchAddress("antikt6HIItrEM_isBadMedium", &antikt6HIItrEM_isBadMedium, &b_antikt6HIItrEM_isBadMedium);
   fChain->SetBranchAddress("antikt6HIItrEM_isBadTight", &antikt6HIItrEM_isBadTight, &b_antikt6HIItrEM_isBadTight);
   fChain->SetBranchAddress("antikt6HIItrEM_jvtx_x", &antikt6HIItrEM_jvtx_x, &b_antikt6HIItrEM_jvtx_x);
   fChain->SetBranchAddress("antikt6HIItrEM_jvtx_y", &antikt6HIItrEM_jvtx_y, &b_antikt6HIItrEM_jvtx_y);
   fChain->SetBranchAddress("antikt6HIItrEM_jvtx_z", &antikt6HIItrEM_jvtx_z, &b_antikt6HIItrEM_jvtx_z);
   fChain->SetBranchAddress("antikt6HIItrEM_jvtxf", &antikt6HIItrEM_jvtxf, &b_antikt6HIItrEM_jvtxf);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_Comb", &antikt6HIItrEM_flavor_weight_Comb, &b_antikt6HIItrEM_flavor_weight_Comb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_IP2D", &antikt6HIItrEM_flavor_weight_IP2D, &b_antikt6HIItrEM_flavor_weight_IP2D);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_IP3D", &antikt6HIItrEM_flavor_weight_IP3D, &b_antikt6HIItrEM_flavor_weight_IP3D);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_SV0", &antikt6HIItrEM_flavor_weight_SV0, &b_antikt6HIItrEM_flavor_weight_SV0);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_SV1", &antikt6HIItrEM_flavor_weight_SV1, &b_antikt6HIItrEM_flavor_weight_SV1);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_SV2", &antikt6HIItrEM_flavor_weight_SV2, &b_antikt6HIItrEM_flavor_weight_SV2);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_SoftMuonTagChi2", &antikt6HIItrEM_flavor_weight_SoftMuonTagChi2, &b_antikt6HIItrEM_flavor_weight_SoftMuonTagChi2);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_SecondSoftMuonTagChi2", &antikt6HIItrEM_flavor_weight_SecondSoftMuonTagChi2, &b_antikt6HIItrEM_flavor_weight_SecondSoftMuonTagChi2);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_JetFitterTagNN", &antikt6HIItrEM_flavor_weight_JetFitterTagNN, &b_antikt6HIItrEM_flavor_weight_JetFitterTagNN);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_JetFitterCOMBNN", &antikt6HIItrEM_flavor_weight_JetFitterCOMBNN, &b_antikt6HIItrEM_flavor_weight_JetFitterCOMBNN);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_MV1", &antikt6HIItrEM_flavor_weight_MV1, &b_antikt6HIItrEM_flavor_weight_MV1);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_MV2", &antikt6HIItrEM_flavor_weight_MV2, &b_antikt6HIItrEM_flavor_weight_MV2);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_weight_GbbNN", &antikt6HIItrEM_flavor_weight_GbbNN, &b_antikt6HIItrEM_flavor_weight_GbbNN);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_label", &antikt6HIItrEM_flavor_truth_label, &b_antikt6HIItrEM_flavor_truth_label);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_dRminToB", &antikt6HIItrEM_flavor_truth_dRminToB, &b_antikt6HIItrEM_flavor_truth_dRminToB);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_dRminToC", &antikt6HIItrEM_flavor_truth_dRminToC, &b_antikt6HIItrEM_flavor_truth_dRminToC);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_dRminToT", &antikt6HIItrEM_flavor_truth_dRminToT, &b_antikt6HIItrEM_flavor_truth_dRminToT);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_BHadronpdg", &antikt6HIItrEM_flavor_truth_BHadronpdg, &b_antikt6HIItrEM_flavor_truth_BHadronpdg);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_vx_x", &antikt6HIItrEM_flavor_truth_vx_x, &b_antikt6HIItrEM_flavor_truth_vx_x);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_vx_y", &antikt6HIItrEM_flavor_truth_vx_y, &b_antikt6HIItrEM_flavor_truth_vx_y);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_truth_vx_z", &antikt6HIItrEM_flavor_truth_vx_z, &b_antikt6HIItrEM_flavor_truth_vx_z);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_assoctrk_signOfIP", &antikt6HIItrEM_flavor_component_assoctrk_signOfIP, &b_antikt6HIItrEM_flavor_component_assoctrk_signOfIP);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_assoctrk_signOfZIP", &antikt6HIItrEM_flavor_component_assoctrk_signOfZIP, &b_antikt6HIItrEM_flavor_component_assoctrk_signOfZIP);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx", &antikt6HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx, &b_antikt6HIItrEM_flavor_component_assoctrk_ud0wrtPriVtx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx", &antikt6HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx, &b_antikt6HIItrEM_flavor_component_assoctrk_ud0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx", &antikt6HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx, &b_antikt6HIItrEM_flavor_component_assoctrk_uz0wrtPriVtx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx", &antikt6HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx, &b_antikt6HIItrEM_flavor_component_assoctrk_uz0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_gentruthlepton_origin", &antikt6HIItrEM_flavor_component_gentruthlepton_origin, &b_antikt6HIItrEM_flavor_component_gentruthlepton_origin);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_gentruthlepton_slbarcode", &antikt6HIItrEM_flavor_component_gentruthlepton_slbarcode, &b_antikt6HIItrEM_flavor_component_gentruthlepton_slbarcode);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip2d_pu", &antikt6HIItrEM_flavor_component_ip2d_pu, &b_antikt6HIItrEM_flavor_component_ip2d_pu);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip2d_pb", &antikt6HIItrEM_flavor_component_ip2d_pb, &b_antikt6HIItrEM_flavor_component_ip2d_pb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip2d_isValid", &antikt6HIItrEM_flavor_component_ip2d_isValid, &b_antikt6HIItrEM_flavor_component_ip2d_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip2d_ntrk", &antikt6HIItrEM_flavor_component_ip2d_ntrk, &b_antikt6HIItrEM_flavor_component_ip2d_ntrk);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip3d_pu", &antikt6HIItrEM_flavor_component_ip3d_pu, &b_antikt6HIItrEM_flavor_component_ip3d_pu);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip3d_pb", &antikt6HIItrEM_flavor_component_ip3d_pb, &b_antikt6HIItrEM_flavor_component_ip3d_pb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip3d_isValid", &antikt6HIItrEM_flavor_component_ip3d_isValid, &b_antikt6HIItrEM_flavor_component_ip3d_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ip3d_ntrk", &antikt6HIItrEM_flavor_component_ip3d_ntrk, &b_antikt6HIItrEM_flavor_component_ip3d_ntrk);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jetprob_ntrk", &antikt6HIItrEM_flavor_component_jetprob_ntrk, &b_antikt6HIItrEM_flavor_component_jetprob_ntrk);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv1_pu", &antikt6HIItrEM_flavor_component_sv1_pu, &b_antikt6HIItrEM_flavor_component_sv1_pu);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv1_pb", &antikt6HIItrEM_flavor_component_sv1_pb, &b_antikt6HIItrEM_flavor_component_sv1_pb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv1_isValid", &antikt6HIItrEM_flavor_component_sv1_isValid, &b_antikt6HIItrEM_flavor_component_sv1_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv2_pu", &antikt6HIItrEM_flavor_component_sv2_pu, &b_antikt6HIItrEM_flavor_component_sv2_pu);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv2_pb", &antikt6HIItrEM_flavor_component_sv2_pb, &b_antikt6HIItrEM_flavor_component_sv2_pb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv2_isValid", &antikt6HIItrEM_flavor_component_sv2_isValid, &b_antikt6HIItrEM_flavor_component_sv2_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_pu", &antikt6HIItrEM_flavor_component_jfit_pu, &b_antikt6HIItrEM_flavor_component_jfit_pu);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_pb", &antikt6HIItrEM_flavor_component_jfit_pb, &b_antikt6HIItrEM_flavor_component_jfit_pb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_pc", &antikt6HIItrEM_flavor_component_jfit_pc, &b_antikt6HIItrEM_flavor_component_jfit_pc);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_isValid", &antikt6HIItrEM_flavor_component_jfit_isValid, &b_antikt6HIItrEM_flavor_component_jfit_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfitcomb_pu", &antikt6HIItrEM_flavor_component_jfitcomb_pu, &b_antikt6HIItrEM_flavor_component_jfitcomb_pu);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfitcomb_pb", &antikt6HIItrEM_flavor_component_jfitcomb_pb, &b_antikt6HIItrEM_flavor_component_jfitcomb_pb);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfitcomb_pc", &antikt6HIItrEM_flavor_component_jfitcomb_pc, &b_antikt6HIItrEM_flavor_component_jfitcomb_pc);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfitcomb_isValid", &antikt6HIItrEM_flavor_component_jfitcomb_isValid, &b_antikt6HIItrEM_flavor_component_jfitcomb_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_gbbnn_nMatchingTracks", &antikt6HIItrEM_flavor_component_gbbnn_nMatchingTracks, &b_antikt6HIItrEM_flavor_component_gbbnn_nMatchingTracks);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_gbbnn_trkJetWidth", &antikt6HIItrEM_flavor_component_gbbnn_trkJetWidth, &b_antikt6HIItrEM_flavor_component_gbbnn_trkJetWidth);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR", &antikt6HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR, &b_antikt6HIItrEM_flavor_component_gbbnn_trkJetMaxDeltaR);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_nvtx", &antikt6HIItrEM_flavor_component_jfit_nvtx, &b_antikt6HIItrEM_flavor_component_jfit_nvtx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_nvtx1t", &antikt6HIItrEM_flavor_component_jfit_nvtx1t, &b_antikt6HIItrEM_flavor_component_jfit_nvtx1t);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_ntrkAtVx", &antikt6HIItrEM_flavor_component_jfit_ntrkAtVx, &b_antikt6HIItrEM_flavor_component_jfit_ntrkAtVx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_efrc", &antikt6HIItrEM_flavor_component_jfit_efrc, &b_antikt6HIItrEM_flavor_component_jfit_efrc);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_mass", &antikt6HIItrEM_flavor_component_jfit_mass, &b_antikt6HIItrEM_flavor_component_jfit_mass);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_sig3d", &antikt6HIItrEM_flavor_component_jfit_sig3d, &b_antikt6HIItrEM_flavor_component_jfit_sig3d);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_deltaPhi", &antikt6HIItrEM_flavor_component_jfit_deltaPhi, &b_antikt6HIItrEM_flavor_component_jfit_deltaPhi);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_jfit_deltaEta", &antikt6HIItrEM_flavor_component_jfit_deltaEta, &b_antikt6HIItrEM_flavor_component_jfit_deltaEta);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_d0val", &antikt6HIItrEM_flavor_component_ipplus_trk_d0val, &b_antikt6HIItrEM_flavor_component_ipplus_trk_d0val);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_d0sig", &antikt6HIItrEM_flavor_component_ipplus_trk_d0sig, &b_antikt6HIItrEM_flavor_component_ipplus_trk_d0sig);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_z0val", &antikt6HIItrEM_flavor_component_ipplus_trk_z0val, &b_antikt6HIItrEM_flavor_component_ipplus_trk_z0val);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_z0sig", &antikt6HIItrEM_flavor_component_ipplus_trk_z0sig, &b_antikt6HIItrEM_flavor_component_ipplus_trk_z0sig);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_w2D", &antikt6HIItrEM_flavor_component_ipplus_trk_w2D, &b_antikt6HIItrEM_flavor_component_ipplus_trk_w2D);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_w3D", &antikt6HIItrEM_flavor_component_ipplus_trk_w3D, &b_antikt6HIItrEM_flavor_component_ipplus_trk_w3D);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_pJP", &antikt6HIItrEM_flavor_component_ipplus_trk_pJP, &b_antikt6HIItrEM_flavor_component_ipplus_trk_pJP);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_pJPneg", &antikt6HIItrEM_flavor_component_ipplus_trk_pJPneg, &b_antikt6HIItrEM_flavor_component_ipplus_trk_pJPneg);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_grade", &antikt6HIItrEM_flavor_component_ipplus_trk_grade, &b_antikt6HIItrEM_flavor_component_ipplus_trk_grade);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_ipplus_trk_isFromV0", &antikt6HIItrEM_flavor_component_ipplus_trk_isFromV0, &b_antikt6HIItrEM_flavor_component_ipplus_trk_isFromV0);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_isValid", &antikt6HIItrEM_flavor_component_svp_isValid, &b_antikt6HIItrEM_flavor_component_svp_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_ntrkv", &antikt6HIItrEM_flavor_component_svp_ntrkv, &b_antikt6HIItrEM_flavor_component_svp_ntrkv);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_ntrkj", &antikt6HIItrEM_flavor_component_svp_ntrkj, &b_antikt6HIItrEM_flavor_component_svp_ntrkj);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_n2t", &antikt6HIItrEM_flavor_component_svp_n2t, &b_antikt6HIItrEM_flavor_component_svp_n2t);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_mass", &antikt6HIItrEM_flavor_component_svp_mass, &b_antikt6HIItrEM_flavor_component_svp_mass);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_efrc", &antikt6HIItrEM_flavor_component_svp_efrc, &b_antikt6HIItrEM_flavor_component_svp_efrc);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_x", &antikt6HIItrEM_flavor_component_svp_x, &b_antikt6HIItrEM_flavor_component_svp_x);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_y", &antikt6HIItrEM_flavor_component_svp_y, &b_antikt6HIItrEM_flavor_component_svp_y);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_z", &antikt6HIItrEM_flavor_component_svp_z, &b_antikt6HIItrEM_flavor_component_svp_z);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_err_x", &antikt6HIItrEM_flavor_component_svp_err_x, &b_antikt6HIItrEM_flavor_component_svp_err_x);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_err_y", &antikt6HIItrEM_flavor_component_svp_err_y, &b_antikt6HIItrEM_flavor_component_svp_err_y);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_err_z", &antikt6HIItrEM_flavor_component_svp_err_z, &b_antikt6HIItrEM_flavor_component_svp_err_z);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_cov_xy", &antikt6HIItrEM_flavor_component_svp_cov_xy, &b_antikt6HIItrEM_flavor_component_svp_cov_xy);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_cov_xz", &antikt6HIItrEM_flavor_component_svp_cov_xz, &b_antikt6HIItrEM_flavor_component_svp_cov_xz);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_cov_yz", &antikt6HIItrEM_flavor_component_svp_cov_yz, &b_antikt6HIItrEM_flavor_component_svp_cov_yz);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_chi2", &antikt6HIItrEM_flavor_component_svp_chi2, &b_antikt6HIItrEM_flavor_component_svp_chi2);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_ndof", &antikt6HIItrEM_flavor_component_svp_ndof, &b_antikt6HIItrEM_flavor_component_svp_ndof);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_svp_ntrk", &antikt6HIItrEM_flavor_component_svp_ntrk, &b_antikt6HIItrEM_flavor_component_svp_ntrk);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_isValid", &antikt6HIItrEM_flavor_component_sv0p_isValid, &b_antikt6HIItrEM_flavor_component_sv0p_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_ntrkv", &antikt6HIItrEM_flavor_component_sv0p_ntrkv, &b_antikt6HIItrEM_flavor_component_sv0p_ntrkv);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_ntrkj", &antikt6HIItrEM_flavor_component_sv0p_ntrkj, &b_antikt6HIItrEM_flavor_component_sv0p_ntrkj);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_n2t", &antikt6HIItrEM_flavor_component_sv0p_n2t, &b_antikt6HIItrEM_flavor_component_sv0p_n2t);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_mass", &antikt6HIItrEM_flavor_component_sv0p_mass, &b_antikt6HIItrEM_flavor_component_sv0p_mass);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_efrc", &antikt6HIItrEM_flavor_component_sv0p_efrc, &b_antikt6HIItrEM_flavor_component_sv0p_efrc);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_x", &antikt6HIItrEM_flavor_component_sv0p_x, &b_antikt6HIItrEM_flavor_component_sv0p_x);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_y", &antikt6HIItrEM_flavor_component_sv0p_y, &b_antikt6HIItrEM_flavor_component_sv0p_y);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_z", &antikt6HIItrEM_flavor_component_sv0p_z, &b_antikt6HIItrEM_flavor_component_sv0p_z);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_err_x", &antikt6HIItrEM_flavor_component_sv0p_err_x, &b_antikt6HIItrEM_flavor_component_sv0p_err_x);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_err_y", &antikt6HIItrEM_flavor_component_sv0p_err_y, &b_antikt6HIItrEM_flavor_component_sv0p_err_y);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_err_z", &antikt6HIItrEM_flavor_component_sv0p_err_z, &b_antikt6HIItrEM_flavor_component_sv0p_err_z);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_cov_xy", &antikt6HIItrEM_flavor_component_sv0p_cov_xy, &b_antikt6HIItrEM_flavor_component_sv0p_cov_xy);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_cov_xz", &antikt6HIItrEM_flavor_component_sv0p_cov_xz, &b_antikt6HIItrEM_flavor_component_sv0p_cov_xz);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_cov_yz", &antikt6HIItrEM_flavor_component_sv0p_cov_yz, &b_antikt6HIItrEM_flavor_component_sv0p_cov_yz);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_chi2", &antikt6HIItrEM_flavor_component_sv0p_chi2, &b_antikt6HIItrEM_flavor_component_sv0p_chi2);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_ndof", &antikt6HIItrEM_flavor_component_sv0p_ndof, &b_antikt6HIItrEM_flavor_component_sv0p_ndof);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_sv0p_ntrk", &antikt6HIItrEM_flavor_component_sv0p_ntrk, &b_antikt6HIItrEM_flavor_component_sv0p_ntrk);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuoninfo_muon_w", &antikt6HIItrEM_flavor_component_softmuoninfo_muon_w, &b_antikt6HIItrEM_flavor_component_softmuoninfo_muon_w);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuoninfo_muon_pTRel", &antikt6HIItrEM_flavor_component_softmuoninfo_muon_pTRel, &b_antikt6HIItrEM_flavor_component_softmuoninfo_muon_pTRel);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuoninfo_muon_dRJet", &antikt6HIItrEM_flavor_component_softmuoninfo_muon_dRJet, &b_antikt6HIItrEM_flavor_component_softmuoninfo_muon_dRJet);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuon2info_muon2_w", &antikt6HIItrEM_flavor_component_softmuon2info_muon2_w, &b_antikt6HIItrEM_flavor_component_softmuon2info_muon2_w);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuon2info_muon2_pTRel", &antikt6HIItrEM_flavor_component_softmuon2info_muon2_pTRel, &b_antikt6HIItrEM_flavor_component_softmuon2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuon2info_muon2_dRJet", &antikt6HIItrEM_flavor_component_softmuon2info_muon2_dRJet, &b_antikt6HIItrEM_flavor_component_softmuon2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuonchi2info_muon_w", &antikt6HIItrEM_flavor_component_softmuonchi2info_muon_w, &b_antikt6HIItrEM_flavor_component_softmuonchi2info_muon_w);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuonchi2info_muon_pTRel", &antikt6HIItrEM_flavor_component_softmuonchi2info_muon_pTRel, &b_antikt6HIItrEM_flavor_component_softmuonchi2info_muon_pTRel);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuonchi2info_muon_dRJet", &antikt6HIItrEM_flavor_component_softmuonchi2info_muon_dRJet, &b_antikt6HIItrEM_flavor_component_softmuonchi2info_muon_dRJet);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_w", &antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_w, &b_antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_w);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel", &antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel, &b_antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet", &antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet, &b_antikt6HIItrEM_flavor_component_softmuon2chi2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_msvp_isValid", &antikt6HIItrEM_flavor_component_msvp_isValid, &b_antikt6HIItrEM_flavor_component_msvp_isValid);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_msvp_ntrkv", &antikt6HIItrEM_flavor_component_msvp_ntrkv, &b_antikt6HIItrEM_flavor_component_msvp_ntrkv);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_msvp_ntrkj", &antikt6HIItrEM_flavor_component_msvp_ntrkj, &b_antikt6HIItrEM_flavor_component_msvp_ntrkj);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_msvp_n2t", &antikt6HIItrEM_flavor_component_msvp_n2t, &b_antikt6HIItrEM_flavor_component_msvp_n2t);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_msvp_nVtx", &antikt6HIItrEM_flavor_component_msvp_nVtx, &b_antikt6HIItrEM_flavor_component_msvp_nVtx);
   fChain->SetBranchAddress("antikt6HIItrEM_flavor_component_msvp_normWeightedDist", &antikt6HIItrEM_flavor_component_msvp_normWeightedDist, &b_antikt6HIItrEM_flavor_component_msvp_normWeightedDist);
   fChain->SetBranchAddress("ItrEMFlowBkgrlayer_CaloBkgrEt", &ItrEMFlowBkgrlayer_CaloBkgrEt, &b_ItrEMFlowBkgrlayer_CaloBkgrEt);
   fChain->SetBranchAddress("ItrEMFlowBkgrlayer_CaloBkgrRMS", &ItrEMFlowBkgrlayer_CaloBkgrRMS, &b_ItrEMFlowBkgrlayer_CaloBkgrRMS);
   fChain->SetBranchAddress("ItrEMFlowBkgrlayer_CaloBkgrCounts", &ItrEMFlowBkgrlayer_CaloBkgrCounts, &b_ItrEMFlowBkgrlayer_CaloBkgrCounts);
   fChain->SetBranchAddress("ItrEMFlowBkgrlayer_CaloBkgrEta", &ItrEMFlowBkgrlayer_CaloBkgrEta, &b_ItrEMFlowBkgrlayer_CaloBkgrEta);
   fChain->SetBranchAddress("JetFlow_PsiFCAL0_w", &JetFlow_PsiFCAL0_w, &b_JetFlow_PsiFCAL0_w);
   fChain->SetBranchAddress("JetFlow_PsiPFCAL0_w", &JetFlow_PsiPFCAL0_w, &b_JetFlow_PsiPFCAL0_w);
   fChain->SetBranchAddress("JetFlow_PsiNFCAL0_w", &JetFlow_PsiNFCAL0_w, &b_JetFlow_PsiNFCAL0_w);
   fChain->SetBranchAddress("JetFlow_EtInLayer", &JetFlow_EtInLayer, &b_JetFlow_EtInLayer);
   fChain->SetBranchAddress("JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("JetFlow_AvgV2fromCalo", &JetFlow_AvgV2fromCalo, &b_JetFlow_AvgV2fromCalo);
   fChain->SetBranchAddress("JetFlow_PsiHICaloUtilLayers", &JetFlow_PsiHICaloUtilLayers, &b_JetFlow_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("JetFlow_PsiEtHICaloUtilLayers", &JetFlow_PsiEtHICaloUtilLayers, &b_JetFlow_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("JetFlow_PsiPtrack", &JetFlow_PsiPtrack, &b_JetFlow_PsiPtrack);
   fChain->SetBranchAddress("JetFlow_PsiNtrack", &JetFlow_PsiNtrack, &b_JetFlow_PsiNtrack);
   fChain->SetBranchAddress("JetFlow_v2FCAL0sil", &JetFlow_v2FCAL0sil, &b_JetFlow_v2FCAL0sil);
   fChain->SetBranchAddress("JetFlow_v2track", &JetFlow_v2track, &b_JetFlow_v2track);
   fChain->SetBranchAddress("JetFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &JetFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_JetFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_n", &antikt4HIItrEMFlow_n, &b_antikt4HIItrEMFlow_n);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_E", &antikt4HIItrEMFlow_E, &b_antikt4HIItrEMFlow_E);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_Et", &antikt4HIItrEMFlow_Et, &b_antikt4HIItrEMFlow_Et);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_pt", &antikt4HIItrEMFlow_pt, &b_antikt4HIItrEMFlow_pt);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_m", &antikt4HIItrEMFlow_m, &b_antikt4HIItrEMFlow_m);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_eta", &antikt4HIItrEMFlow_eta, &b_antikt4HIItrEMFlow_eta);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_phi", &antikt4HIItrEMFlow_phi, &b_antikt4HIItrEMFlow_phi);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_SubtractedEt", &antikt4HIItrEMFlow_SubtractedEt, &b_antikt4HIItrEMFlow_SubtractedEt);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_NoFlow", &antikt4HIItrEMFlow_NoFlow, &b_antikt4HIItrEMFlow_NoFlow);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_UncalibEt", &antikt4HIItrEMFlow_UncalibEt, &b_antikt4HIItrEMFlow_UncalibEt);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_PassedFR", &antikt4HIItrEMFlow_PassedFR, &b_antikt4HIItrEMFlow_PassedFR);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_const_n", &antikt4HIItrEMFlow_const_n, &b_antikt4HIItrEMFlow_const_n);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_const_et", &antikt4HIItrEMFlow_const_et, &b_antikt4HIItrEMFlow_const_et);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_const_eta", &antikt4HIItrEMFlow_const_eta, &b_antikt4HIItrEMFlow_const_eta);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_const_phi", &antikt4HIItrEMFlow_const_phi, &b_antikt4HIItrEMFlow_const_phi);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_sampling_et", &antikt4HIItrEMFlow_sampling_et, &b_antikt4HIItrEMFlow_sampling_et);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_sampling_et_unsubtr", &antikt4HIItrEMFlow_sampling_et_unsubtr, &b_antikt4HIItrEMFlow_sampling_et_unsubtr);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_bad_cell_n", &antikt4HIItrEMFlow_bad_cell_n, &b_antikt4HIItrEMFlow_bad_cell_n);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_bad_cell_et", &antikt4HIItrEMFlow_bad_cell_et, &b_antikt4HIItrEMFlow_bad_cell_et);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_bad_cell_area", &antikt4HIItrEMFlow_bad_cell_area, &b_antikt4HIItrEMFlow_bad_cell_area);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_empty_cell_n", &antikt4HIItrEMFlow_empty_cell_n, &b_antikt4HIItrEMFlow_empty_cell_n);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_empty_cell_et", &antikt4HIItrEMFlow_empty_cell_et, &b_antikt4HIItrEMFlow_empty_cell_et);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_empty_cell_area", &antikt4HIItrEMFlow_empty_cell_area, &b_antikt4HIItrEMFlow_empty_cell_area);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_total_cell_n", &antikt4HIItrEMFlow_total_cell_n, &b_antikt4HIItrEMFlow_total_cell_n);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_total_cell_et", &antikt4HIItrEMFlow_total_cell_et, &b_antikt4HIItrEMFlow_total_cell_et);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_total_cell_area", &antikt4HIItrEMFlow_total_cell_area, &b_antikt4HIItrEMFlow_total_cell_area);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_n90", &antikt4HIItrEMFlow_n90, &b_antikt4HIItrEMFlow_n90);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_fracSamplingMax", &antikt4HIItrEMFlow_fracSamplingMax, &b_antikt4HIItrEMFlow_fracSamplingMax);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_SamplingMax", &antikt4HIItrEMFlow_SamplingMax, &b_antikt4HIItrEMFlow_SamplingMax);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_n90constituents", &antikt4HIItrEMFlow_n90constituents, &b_antikt4HIItrEMFlow_n90constituents);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_Timing", &antikt4HIItrEMFlow_Timing, &b_antikt4HIItrEMFlow_Timing);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_LArQuality", &antikt4HIItrEMFlow_LArQuality, &b_antikt4HIItrEMFlow_LArQuality);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_HECQuality", &antikt4HIItrEMFlow_HECQuality, &b_antikt4HIItrEMFlow_HECQuality);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_TileQuality", &antikt4HIItrEMFlow_TileQuality, &b_antikt4HIItrEMFlow_TileQuality);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_NegativeE", &antikt4HIItrEMFlow_NegativeE, &b_antikt4HIItrEMFlow_NegativeE);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_AverageLArQF", &antikt4HIItrEMFlow_AverageLArQF, &b_antikt4HIItrEMFlow_AverageLArQF);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_sumPtTrk", &antikt4HIItrEMFlow_sumPtTrk, &b_antikt4HIItrEMFlow_sumPtTrk);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_BCH_CORR_CELL", &antikt4HIItrEMFlow_BCH_CORR_CELL, &b_antikt4HIItrEMFlow_BCH_CORR_CELL);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_BCH_CORR_DOTX", &antikt4HIItrEMFlow_BCH_CORR_DOTX, &b_antikt4HIItrEMFlow_BCH_CORR_DOTX);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_BCH_CORR_JET", &antikt4HIItrEMFlow_BCH_CORR_JET, &b_antikt4HIItrEMFlow_BCH_CORR_JET);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_BCH_CORR_JET_FORCELL", &antikt4HIItrEMFlow_BCH_CORR_JET_FORCELL, &b_antikt4HIItrEMFlow_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_ENG_BAD_CELLS", &antikt4HIItrEMFlow_ENG_BAD_CELLS, &b_antikt4HIItrEMFlow_ENG_BAD_CELLS);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_N_BAD_CELLS", &antikt4HIItrEMFlow_N_BAD_CELLS, &b_antikt4HIItrEMFlow_N_BAD_CELLS);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_N_BAD_CELLS_CORR", &antikt4HIItrEMFlow_N_BAD_CELLS_CORR, &b_antikt4HIItrEMFlow_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_BAD_CELLS_CORR_E", &antikt4HIItrEMFlow_BAD_CELLS_CORR_E, &b_antikt4HIItrEMFlow_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_emfrac", &antikt4HIItrEMFlow_emfrac, &b_antikt4HIItrEMFlow_emfrac);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_hecf", &antikt4HIItrEMFlow_hecf, &b_antikt4HIItrEMFlow_hecf);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_tgap3f", &antikt4HIItrEMFlow_tgap3f, &b_antikt4HIItrEMFlow_tgap3f);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_isUgly", &antikt4HIItrEMFlow_isUgly, &b_antikt4HIItrEMFlow_isUgly);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_isBadLooseMinus", &antikt4HIItrEMFlow_isBadLooseMinus, &b_antikt4HIItrEMFlow_isBadLooseMinus);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_isBadLoose", &antikt4HIItrEMFlow_isBadLoose, &b_antikt4HIItrEMFlow_isBadLoose);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_isBadMedium", &antikt4HIItrEMFlow_isBadMedium, &b_antikt4HIItrEMFlow_isBadMedium);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_isBadTight", &antikt4HIItrEMFlow_isBadTight, &b_antikt4HIItrEMFlow_isBadTight);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_jvtx_x", &antikt4HIItrEMFlow_jvtx_x, &b_antikt4HIItrEMFlow_jvtx_x);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_jvtx_y", &antikt4HIItrEMFlow_jvtx_y, &b_antikt4HIItrEMFlow_jvtx_y);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_jvtx_z", &antikt4HIItrEMFlow_jvtx_z, &b_antikt4HIItrEMFlow_jvtx_z);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_jvtxf", &antikt4HIItrEMFlow_jvtxf, &b_antikt4HIItrEMFlow_jvtxf);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_Comb", &antikt4HIItrEMFlow_flavor_weight_Comb, &b_antikt4HIItrEMFlow_flavor_weight_Comb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_IP2D", &antikt4HIItrEMFlow_flavor_weight_IP2D, &b_antikt4HIItrEMFlow_flavor_weight_IP2D);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_IP3D", &antikt4HIItrEMFlow_flavor_weight_IP3D, &b_antikt4HIItrEMFlow_flavor_weight_IP3D);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_SV0", &antikt4HIItrEMFlow_flavor_weight_SV0, &b_antikt4HIItrEMFlow_flavor_weight_SV0);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_SV1", &antikt4HIItrEMFlow_flavor_weight_SV1, &b_antikt4HIItrEMFlow_flavor_weight_SV1);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_SV2", &antikt4HIItrEMFlow_flavor_weight_SV2, &b_antikt4HIItrEMFlow_flavor_weight_SV2);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_SoftMuonTagChi2", &antikt4HIItrEMFlow_flavor_weight_SoftMuonTagChi2, &b_antikt4HIItrEMFlow_flavor_weight_SoftMuonTagChi2);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_SecondSoftMuonTagChi2", &antikt4HIItrEMFlow_flavor_weight_SecondSoftMuonTagChi2, &b_antikt4HIItrEMFlow_flavor_weight_SecondSoftMuonTagChi2);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_JetFitterTagNN", &antikt4HIItrEMFlow_flavor_weight_JetFitterTagNN, &b_antikt4HIItrEMFlow_flavor_weight_JetFitterTagNN);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_JetFitterCOMBNN", &antikt4HIItrEMFlow_flavor_weight_JetFitterCOMBNN, &b_antikt4HIItrEMFlow_flavor_weight_JetFitterCOMBNN);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_MV1", &antikt4HIItrEMFlow_flavor_weight_MV1, &b_antikt4HIItrEMFlow_flavor_weight_MV1);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_MV2", &antikt4HIItrEMFlow_flavor_weight_MV2, &b_antikt4HIItrEMFlow_flavor_weight_MV2);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_weight_GbbNN", &antikt4HIItrEMFlow_flavor_weight_GbbNN, &b_antikt4HIItrEMFlow_flavor_weight_GbbNN);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_label", &antikt4HIItrEMFlow_flavor_truth_label, &b_antikt4HIItrEMFlow_flavor_truth_label);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_dRminToB", &antikt4HIItrEMFlow_flavor_truth_dRminToB, &b_antikt4HIItrEMFlow_flavor_truth_dRminToB);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_dRminToC", &antikt4HIItrEMFlow_flavor_truth_dRminToC, &b_antikt4HIItrEMFlow_flavor_truth_dRminToC);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_dRminToT", &antikt4HIItrEMFlow_flavor_truth_dRminToT, &b_antikt4HIItrEMFlow_flavor_truth_dRminToT);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_BHadronpdg", &antikt4HIItrEMFlow_flavor_truth_BHadronpdg, &b_antikt4HIItrEMFlow_flavor_truth_BHadronpdg);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_vx_x", &antikt4HIItrEMFlow_flavor_truth_vx_x, &b_antikt4HIItrEMFlow_flavor_truth_vx_x);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_vx_y", &antikt4HIItrEMFlow_flavor_truth_vx_y, &b_antikt4HIItrEMFlow_flavor_truth_vx_y);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_truth_vx_z", &antikt4HIItrEMFlow_flavor_truth_vx_z, &b_antikt4HIItrEMFlow_flavor_truth_vx_z);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_assoctrk_signOfIP", &antikt4HIItrEMFlow_flavor_component_assoctrk_signOfIP, &b_antikt4HIItrEMFlow_flavor_component_assoctrk_signOfIP);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_assoctrk_signOfZIP", &antikt4HIItrEMFlow_flavor_component_assoctrk_signOfZIP, &b_antikt4HIItrEMFlow_flavor_component_assoctrk_signOfZIP);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_assoctrk_ud0wrtPriVtx", &antikt4HIItrEMFlow_flavor_component_assoctrk_ud0wrtPriVtx, &b_antikt4HIItrEMFlow_flavor_component_assoctrk_ud0wrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_assoctrk_ud0ErrwrtPriVtx", &antikt4HIItrEMFlow_flavor_component_assoctrk_ud0ErrwrtPriVtx, &b_antikt4HIItrEMFlow_flavor_component_assoctrk_ud0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_assoctrk_uz0wrtPriVtx", &antikt4HIItrEMFlow_flavor_component_assoctrk_uz0wrtPriVtx, &b_antikt4HIItrEMFlow_flavor_component_assoctrk_uz0wrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_assoctrk_uz0ErrwrtPriVtx", &antikt4HIItrEMFlow_flavor_component_assoctrk_uz0ErrwrtPriVtx, &b_antikt4HIItrEMFlow_flavor_component_assoctrk_uz0ErrwrtPriVtx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_gentruthlepton_origin", &antikt4HIItrEMFlow_flavor_component_gentruthlepton_origin, &b_antikt4HIItrEMFlow_flavor_component_gentruthlepton_origin);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_gentruthlepton_slbarcode", &antikt4HIItrEMFlow_flavor_component_gentruthlepton_slbarcode, &b_antikt4HIItrEMFlow_flavor_component_gentruthlepton_slbarcode);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip2d_pu", &antikt4HIItrEMFlow_flavor_component_ip2d_pu, &b_antikt4HIItrEMFlow_flavor_component_ip2d_pu);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip2d_pb", &antikt4HIItrEMFlow_flavor_component_ip2d_pb, &b_antikt4HIItrEMFlow_flavor_component_ip2d_pb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip2d_isValid", &antikt4HIItrEMFlow_flavor_component_ip2d_isValid, &b_antikt4HIItrEMFlow_flavor_component_ip2d_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip2d_ntrk", &antikt4HIItrEMFlow_flavor_component_ip2d_ntrk, &b_antikt4HIItrEMFlow_flavor_component_ip2d_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip3d_pu", &antikt4HIItrEMFlow_flavor_component_ip3d_pu, &b_antikt4HIItrEMFlow_flavor_component_ip3d_pu);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip3d_pb", &antikt4HIItrEMFlow_flavor_component_ip3d_pb, &b_antikt4HIItrEMFlow_flavor_component_ip3d_pb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip3d_isValid", &antikt4HIItrEMFlow_flavor_component_ip3d_isValid, &b_antikt4HIItrEMFlow_flavor_component_ip3d_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ip3d_ntrk", &antikt4HIItrEMFlow_flavor_component_ip3d_ntrk, &b_antikt4HIItrEMFlow_flavor_component_ip3d_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jetprob_ntrk", &antikt4HIItrEMFlow_flavor_component_jetprob_ntrk, &b_antikt4HIItrEMFlow_flavor_component_jetprob_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv1_pu", &antikt4HIItrEMFlow_flavor_component_sv1_pu, &b_antikt4HIItrEMFlow_flavor_component_sv1_pu);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv1_pb", &antikt4HIItrEMFlow_flavor_component_sv1_pb, &b_antikt4HIItrEMFlow_flavor_component_sv1_pb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv1_isValid", &antikt4HIItrEMFlow_flavor_component_sv1_isValid, &b_antikt4HIItrEMFlow_flavor_component_sv1_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv2_pu", &antikt4HIItrEMFlow_flavor_component_sv2_pu, &b_antikt4HIItrEMFlow_flavor_component_sv2_pu);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv2_pb", &antikt4HIItrEMFlow_flavor_component_sv2_pb, &b_antikt4HIItrEMFlow_flavor_component_sv2_pb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv2_isValid", &antikt4HIItrEMFlow_flavor_component_sv2_isValid, &b_antikt4HIItrEMFlow_flavor_component_sv2_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_pu", &antikt4HIItrEMFlow_flavor_component_jfit_pu, &b_antikt4HIItrEMFlow_flavor_component_jfit_pu);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_pb", &antikt4HIItrEMFlow_flavor_component_jfit_pb, &b_antikt4HIItrEMFlow_flavor_component_jfit_pb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_pc", &antikt4HIItrEMFlow_flavor_component_jfit_pc, &b_antikt4HIItrEMFlow_flavor_component_jfit_pc);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_isValid", &antikt4HIItrEMFlow_flavor_component_jfit_isValid, &b_antikt4HIItrEMFlow_flavor_component_jfit_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfitcomb_pu", &antikt4HIItrEMFlow_flavor_component_jfitcomb_pu, &b_antikt4HIItrEMFlow_flavor_component_jfitcomb_pu);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfitcomb_pb", &antikt4HIItrEMFlow_flavor_component_jfitcomb_pb, &b_antikt4HIItrEMFlow_flavor_component_jfitcomb_pb);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfitcomb_pc", &antikt4HIItrEMFlow_flavor_component_jfitcomb_pc, &b_antikt4HIItrEMFlow_flavor_component_jfitcomb_pc);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfitcomb_isValid", &antikt4HIItrEMFlow_flavor_component_jfitcomb_isValid, &b_antikt4HIItrEMFlow_flavor_component_jfitcomb_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_gbbnn_nMatchingTracks", &antikt4HIItrEMFlow_flavor_component_gbbnn_nMatchingTracks, &b_antikt4HIItrEMFlow_flavor_component_gbbnn_nMatchingTracks);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetWidth", &antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetWidth, &b_antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetWidth);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetMaxDeltaR", &antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetMaxDeltaR, &b_antikt4HIItrEMFlow_flavor_component_gbbnn_trkJetMaxDeltaR);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_nvtx", &antikt4HIItrEMFlow_flavor_component_jfit_nvtx, &b_antikt4HIItrEMFlow_flavor_component_jfit_nvtx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_nvtx1t", &antikt4HIItrEMFlow_flavor_component_jfit_nvtx1t, &b_antikt4HIItrEMFlow_flavor_component_jfit_nvtx1t);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_ntrkAtVx", &antikt4HIItrEMFlow_flavor_component_jfit_ntrkAtVx, &b_antikt4HIItrEMFlow_flavor_component_jfit_ntrkAtVx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_efrc", &antikt4HIItrEMFlow_flavor_component_jfit_efrc, &b_antikt4HIItrEMFlow_flavor_component_jfit_efrc);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_mass", &antikt4HIItrEMFlow_flavor_component_jfit_mass, &b_antikt4HIItrEMFlow_flavor_component_jfit_mass);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_sig3d", &antikt4HIItrEMFlow_flavor_component_jfit_sig3d, &b_antikt4HIItrEMFlow_flavor_component_jfit_sig3d);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_deltaPhi", &antikt4HIItrEMFlow_flavor_component_jfit_deltaPhi, &b_antikt4HIItrEMFlow_flavor_component_jfit_deltaPhi);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_jfit_deltaEta", &antikt4HIItrEMFlow_flavor_component_jfit_deltaEta, &b_antikt4HIItrEMFlow_flavor_component_jfit_deltaEta);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0val", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0val, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0val);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0sig", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0sig, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_d0sig);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0val", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0val, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0val);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0sig", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0sig, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_z0sig);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_w2D", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_w2D, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_w2D);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_w3D", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_w3D, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_w3D);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJP", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJP, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJP);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJPneg", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJPneg, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_pJPneg);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_grade", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_grade, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_grade);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_ipplus_trk_isFromV0", &antikt4HIItrEMFlow_flavor_component_ipplus_trk_isFromV0, &b_antikt4HIItrEMFlow_flavor_component_ipplus_trk_isFromV0);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_isValid", &antikt4HIItrEMFlow_flavor_component_svp_isValid, &b_antikt4HIItrEMFlow_flavor_component_svp_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_ntrkv", &antikt4HIItrEMFlow_flavor_component_svp_ntrkv, &b_antikt4HIItrEMFlow_flavor_component_svp_ntrkv);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_ntrkj", &antikt4HIItrEMFlow_flavor_component_svp_ntrkj, &b_antikt4HIItrEMFlow_flavor_component_svp_ntrkj);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_n2t", &antikt4HIItrEMFlow_flavor_component_svp_n2t, &b_antikt4HIItrEMFlow_flavor_component_svp_n2t);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_mass", &antikt4HIItrEMFlow_flavor_component_svp_mass, &b_antikt4HIItrEMFlow_flavor_component_svp_mass);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_efrc", &antikt4HIItrEMFlow_flavor_component_svp_efrc, &b_antikt4HIItrEMFlow_flavor_component_svp_efrc);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_x", &antikt4HIItrEMFlow_flavor_component_svp_x, &b_antikt4HIItrEMFlow_flavor_component_svp_x);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_y", &antikt4HIItrEMFlow_flavor_component_svp_y, &b_antikt4HIItrEMFlow_flavor_component_svp_y);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_z", &antikt4HIItrEMFlow_flavor_component_svp_z, &b_antikt4HIItrEMFlow_flavor_component_svp_z);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_err_x", &antikt4HIItrEMFlow_flavor_component_svp_err_x, &b_antikt4HIItrEMFlow_flavor_component_svp_err_x);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_err_y", &antikt4HIItrEMFlow_flavor_component_svp_err_y, &b_antikt4HIItrEMFlow_flavor_component_svp_err_y);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_err_z", &antikt4HIItrEMFlow_flavor_component_svp_err_z, &b_antikt4HIItrEMFlow_flavor_component_svp_err_z);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_cov_xy", &antikt4HIItrEMFlow_flavor_component_svp_cov_xy, &b_antikt4HIItrEMFlow_flavor_component_svp_cov_xy);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_cov_xz", &antikt4HIItrEMFlow_flavor_component_svp_cov_xz, &b_antikt4HIItrEMFlow_flavor_component_svp_cov_xz);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_cov_yz", &antikt4HIItrEMFlow_flavor_component_svp_cov_yz, &b_antikt4HIItrEMFlow_flavor_component_svp_cov_yz);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_chi2", &antikt4HIItrEMFlow_flavor_component_svp_chi2, &b_antikt4HIItrEMFlow_flavor_component_svp_chi2);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_ndof", &antikt4HIItrEMFlow_flavor_component_svp_ndof, &b_antikt4HIItrEMFlow_flavor_component_svp_ndof);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_svp_ntrk", &antikt4HIItrEMFlow_flavor_component_svp_ntrk, &b_antikt4HIItrEMFlow_flavor_component_svp_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_isValid", &antikt4HIItrEMFlow_flavor_component_sv0p_isValid, &b_antikt4HIItrEMFlow_flavor_component_sv0p_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_ntrkv", &antikt4HIItrEMFlow_flavor_component_sv0p_ntrkv, &b_antikt4HIItrEMFlow_flavor_component_sv0p_ntrkv);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_ntrkj", &antikt4HIItrEMFlow_flavor_component_sv0p_ntrkj, &b_antikt4HIItrEMFlow_flavor_component_sv0p_ntrkj);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_n2t", &antikt4HIItrEMFlow_flavor_component_sv0p_n2t, &b_antikt4HIItrEMFlow_flavor_component_sv0p_n2t);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_mass", &antikt4HIItrEMFlow_flavor_component_sv0p_mass, &b_antikt4HIItrEMFlow_flavor_component_sv0p_mass);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_efrc", &antikt4HIItrEMFlow_flavor_component_sv0p_efrc, &b_antikt4HIItrEMFlow_flavor_component_sv0p_efrc);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_x", &antikt4HIItrEMFlow_flavor_component_sv0p_x, &b_antikt4HIItrEMFlow_flavor_component_sv0p_x);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_y", &antikt4HIItrEMFlow_flavor_component_sv0p_y, &b_antikt4HIItrEMFlow_flavor_component_sv0p_y);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_z", &antikt4HIItrEMFlow_flavor_component_sv0p_z, &b_antikt4HIItrEMFlow_flavor_component_sv0p_z);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_err_x", &antikt4HIItrEMFlow_flavor_component_sv0p_err_x, &b_antikt4HIItrEMFlow_flavor_component_sv0p_err_x);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_err_y", &antikt4HIItrEMFlow_flavor_component_sv0p_err_y, &b_antikt4HIItrEMFlow_flavor_component_sv0p_err_y);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_err_z", &antikt4HIItrEMFlow_flavor_component_sv0p_err_z, &b_antikt4HIItrEMFlow_flavor_component_sv0p_err_z);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_cov_xy", &antikt4HIItrEMFlow_flavor_component_sv0p_cov_xy, &b_antikt4HIItrEMFlow_flavor_component_sv0p_cov_xy);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_cov_xz", &antikt4HIItrEMFlow_flavor_component_sv0p_cov_xz, &b_antikt4HIItrEMFlow_flavor_component_sv0p_cov_xz);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_cov_yz", &antikt4HIItrEMFlow_flavor_component_sv0p_cov_yz, &b_antikt4HIItrEMFlow_flavor_component_sv0p_cov_yz);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_chi2", &antikt4HIItrEMFlow_flavor_component_sv0p_chi2, &b_antikt4HIItrEMFlow_flavor_component_sv0p_chi2);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_ndof", &antikt4HIItrEMFlow_flavor_component_sv0p_ndof, &b_antikt4HIItrEMFlow_flavor_component_sv0p_ndof);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_sv0p_ntrk", &antikt4HIItrEMFlow_flavor_component_sv0p_ntrk, &b_antikt4HIItrEMFlow_flavor_component_sv0p_ntrk);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_w", &antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_w, &b_antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_w);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_pTRel", &antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_pTRel, &b_antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_dRJet", &antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_dRJet, &b_antikt4HIItrEMFlow_flavor_component_softmuoninfo_muon_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_w", &antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_w, &b_antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_w);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_pTRel", &antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_pTRel, &b_antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_dRJet", &antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_dRJet, &b_antikt4HIItrEMFlow_flavor_component_softmuon2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_w", &antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_w, &b_antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_w);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_pTRel", &antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_pTRel, &b_antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_dRJet", &antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_dRJet, &b_antikt4HIItrEMFlow_flavor_component_softmuonchi2info_muon_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_w", &antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_w, &b_antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_w);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_pTRel", &antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_pTRel, &b_antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_pTRel);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_dRJet", &antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_dRJet, &b_antikt4HIItrEMFlow_flavor_component_softmuon2chi2info_muon2_dRJet);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_msvp_isValid", &antikt4HIItrEMFlow_flavor_component_msvp_isValid, &b_antikt4HIItrEMFlow_flavor_component_msvp_isValid);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_msvp_ntrkv", &antikt4HIItrEMFlow_flavor_component_msvp_ntrkv, &b_antikt4HIItrEMFlow_flavor_component_msvp_ntrkv);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_msvp_ntrkj", &antikt4HIItrEMFlow_flavor_component_msvp_ntrkj, &b_antikt4HIItrEMFlow_flavor_component_msvp_ntrkj);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_msvp_n2t", &antikt4HIItrEMFlow_flavor_component_msvp_n2t, &b_antikt4HIItrEMFlow_flavor_component_msvp_n2t);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_msvp_nVtx", &antikt4HIItrEMFlow_flavor_component_msvp_nVtx, &b_antikt4HIItrEMFlow_flavor_component_msvp_nVtx);
   fChain->SetBranchAddress("antikt4HIItrEMFlow_flavor_component_msvp_normWeightedDist", &antikt4HIItrEMFlow_flavor_component_msvp_normWeightedDist, &b_antikt4HIItrEMFlow_flavor_component_msvp_normWeightedDist);
   fChain->SetBranchAddress("antikt2Truth_n", &antikt2Truth_n, &b_antikt2Truth_n);
   fChain->SetBranchAddress("antikt2Truth_E", &antikt2Truth_E, &b_antikt2Truth_E);
   fChain->SetBranchAddress("antikt2Truth_Et", &antikt2Truth_Et, &b_antikt2Truth_Et);
   fChain->SetBranchAddress("antikt2Truth_pt", &antikt2Truth_pt, &b_antikt2Truth_pt);
   fChain->SetBranchAddress("antikt2Truth_m", &antikt2Truth_m, &b_antikt2Truth_m);
   fChain->SetBranchAddress("antikt2Truth_eta", &antikt2Truth_eta, &b_antikt2Truth_eta);
   fChain->SetBranchAddress("antikt2Truth_phi", &antikt2Truth_phi, &b_antikt2Truth_phi);
   fChain->SetBranchAddress("antikt3Truth_n", &antikt3Truth_n, &b_antikt3Truth_n);
   fChain->SetBranchAddress("antikt3Truth_E", &antikt3Truth_E, &b_antikt3Truth_E);
   fChain->SetBranchAddress("antikt3Truth_Et", &antikt3Truth_Et, &b_antikt3Truth_Et);
   fChain->SetBranchAddress("antikt3Truth_pt", &antikt3Truth_pt, &b_antikt3Truth_pt);
   fChain->SetBranchAddress("antikt3Truth_m", &antikt3Truth_m, &b_antikt3Truth_m);
   fChain->SetBranchAddress("antikt3Truth_eta", &antikt3Truth_eta, &b_antikt3Truth_eta);
   fChain->SetBranchAddress("antikt3Truth_phi", &antikt3Truth_phi, &b_antikt3Truth_phi);
   fChain->SetBranchAddress("antikt4Truth_n", &antikt4Truth_n, &b_antikt4Truth_n);
   fChain->SetBranchAddress("antikt4Truth_E", &antikt4Truth_E, &b_antikt4Truth_E);
   fChain->SetBranchAddress("antikt4Truth_Et", &antikt4Truth_Et, &b_antikt4Truth_Et);
   fChain->SetBranchAddress("antikt4Truth_pt", &antikt4Truth_pt, &b_antikt4Truth_pt);
   fChain->SetBranchAddress("antikt4Truth_m", &antikt4Truth_m, &b_antikt4Truth_m);
   fChain->SetBranchAddress("antikt4Truth_eta", &antikt4Truth_eta, &b_antikt4Truth_eta);
   fChain->SetBranchAddress("antikt4Truth_phi", &antikt4Truth_phi, &b_antikt4Truth_phi);
   fChain->SetBranchAddress("antikt5Truth_n", &antikt5Truth_n, &b_antikt5Truth_n);
   fChain->SetBranchAddress("antikt5Truth_E", &antikt5Truth_E, &b_antikt5Truth_E);
   fChain->SetBranchAddress("antikt5Truth_Et", &antikt5Truth_Et, &b_antikt5Truth_Et);
   fChain->SetBranchAddress("antikt5Truth_pt", &antikt5Truth_pt, &b_antikt5Truth_pt);
   fChain->SetBranchAddress("antikt5Truth_m", &antikt5Truth_m, &b_antikt5Truth_m);
   fChain->SetBranchAddress("antikt5Truth_eta", &antikt5Truth_eta, &b_antikt5Truth_eta);
   fChain->SetBranchAddress("antikt5Truth_phi", &antikt5Truth_phi, &b_antikt5Truth_phi);
   fChain->SetBranchAddress("antikt6Truth_n", &antikt6Truth_n, &b_antikt6Truth_n);
   fChain->SetBranchAddress("antikt6Truth_E", &antikt6Truth_E, &b_antikt6Truth_E);
   fChain->SetBranchAddress("antikt6Truth_Et", &antikt6Truth_Et, &b_antikt6Truth_Et);
   fChain->SetBranchAddress("antikt6Truth_pt", &antikt6Truth_pt, &b_antikt6Truth_pt);
   fChain->SetBranchAddress("antikt6Truth_m", &antikt6Truth_m, &b_antikt6Truth_m);
   fChain->SetBranchAddress("antikt6Truth_eta", &antikt6Truth_eta, &b_antikt6Truth_eta);
   fChain->SetBranchAddress("antikt6Truth_phi", &antikt6Truth_phi, &b_antikt6Truth_phi);
   fChain->SetBranchAddress("antikt4TruthHijing_n", &antikt4TruthHijing_n, &b_antikt4TruthHijing_n);
   fChain->SetBranchAddress("antikt4TruthHijing_E", &antikt4TruthHijing_E, &b_antikt4TruthHijing_E);
   fChain->SetBranchAddress("antikt4TruthHijing_Et", &antikt4TruthHijing_Et, &b_antikt4TruthHijing_Et);
   fChain->SetBranchAddress("antikt4TruthHijing_pt", &antikt4TruthHijing_pt, &b_antikt4TruthHijing_pt);
   fChain->SetBranchAddress("antikt4TruthHijing_m", &antikt4TruthHijing_m, &b_antikt4TruthHijing_m);
   fChain->SetBranchAddress("antikt4TruthHijing_eta", &antikt4TruthHijing_eta, &b_antikt4TruthHijing_eta);
   fChain->SetBranchAddress("antikt4TruthHijing_phi", &antikt4TruthHijing_phi, &b_antikt4TruthHijing_phi);
   fChain->SetBranchAddress("AntiKt4TopoEM_n", &AntiKt4TopoEM_n, &b_AntiKt4TopoEM_n);
   fChain->SetBranchAddress("AntiKt4TopoEM_E", &AntiKt4TopoEM_E, &b_AntiKt4TopoEM_E);
   fChain->SetBranchAddress("AntiKt4TopoEM_pt", &AntiKt4TopoEM_pt, &b_AntiKt4TopoEM_pt);
   fChain->SetBranchAddress("AntiKt4TopoEM_m", &AntiKt4TopoEM_m, &b_AntiKt4TopoEM_m);
   fChain->SetBranchAddress("AntiKt4TopoEM_eta", &AntiKt4TopoEM_eta, &b_AntiKt4TopoEM_eta);
   fChain->SetBranchAddress("AntiKt4TopoEM_phi", &AntiKt4TopoEM_phi, &b_AntiKt4TopoEM_phi);
   fChain->SetBranchAddress("AntiKt4TopoEM_EtaOrigin", &AntiKt4TopoEM_EtaOrigin, &b_AntiKt4TopoEM_EtaOrigin);
   fChain->SetBranchAddress("AntiKt4TopoEM_PhiOrigin", &AntiKt4TopoEM_PhiOrigin, &b_AntiKt4TopoEM_PhiOrigin);
   fChain->SetBranchAddress("AntiKt4TopoEM_MOrigin", &AntiKt4TopoEM_MOrigin, &b_AntiKt4TopoEM_MOrigin);
   fChain->SetBranchAddress("AntiKt4TopoEM_WIDTH", &AntiKt4TopoEM_WIDTH, &b_AntiKt4TopoEM_WIDTH);
   fChain->SetBranchAddress("AntiKt4TopoEM_n90", &AntiKt4TopoEM_n90, &b_AntiKt4TopoEM_n90);
   fChain->SetBranchAddress("AntiKt4TopoEM_Timing", &AntiKt4TopoEM_Timing, &b_AntiKt4TopoEM_Timing);
   fChain->SetBranchAddress("AntiKt4TopoEM_LArQuality", &AntiKt4TopoEM_LArQuality, &b_AntiKt4TopoEM_LArQuality);
   fChain->SetBranchAddress("AntiKt4TopoEM_nTrk", &AntiKt4TopoEM_nTrk, &b_AntiKt4TopoEM_nTrk);
   fChain->SetBranchAddress("AntiKt4TopoEM_sumPtTrk", &AntiKt4TopoEM_sumPtTrk, &b_AntiKt4TopoEM_sumPtTrk);
   fChain->SetBranchAddress("AntiKt4TopoEM_OriginIndex", &AntiKt4TopoEM_OriginIndex, &b_AntiKt4TopoEM_OriginIndex);
   fChain->SetBranchAddress("AntiKt4TopoEM_HECQuality", &AntiKt4TopoEM_HECQuality, &b_AntiKt4TopoEM_HECQuality);
   fChain->SetBranchAddress("AntiKt4TopoEM_NegativeE", &AntiKt4TopoEM_NegativeE, &b_AntiKt4TopoEM_NegativeE);
   fChain->SetBranchAddress("AntiKt4TopoEM_AverageLArQF", &AntiKt4TopoEM_AverageLArQF, &b_AntiKt4TopoEM_AverageLArQF);
   fChain->SetBranchAddress("AntiKt4TopoEM_BCH_CORR_CELL", &AntiKt4TopoEM_BCH_CORR_CELL, &b_AntiKt4TopoEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("AntiKt4TopoEM_BCH_CORR_DOTX", &AntiKt4TopoEM_BCH_CORR_DOTX, &b_AntiKt4TopoEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("AntiKt4TopoEM_BCH_CORR_JET", &AntiKt4TopoEM_BCH_CORR_JET, &b_AntiKt4TopoEM_BCH_CORR_JET);
   fChain->SetBranchAddress("AntiKt4TopoEM_BCH_CORR_JET_FORCELL", &AntiKt4TopoEM_BCH_CORR_JET_FORCELL, &b_AntiKt4TopoEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("AntiKt4TopoEM_ENG_BAD_CELLS", &AntiKt4TopoEM_ENG_BAD_CELLS, &b_AntiKt4TopoEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt4TopoEM_N_BAD_CELLS", &AntiKt4TopoEM_N_BAD_CELLS, &b_AntiKt4TopoEM_N_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt4TopoEM_N_BAD_CELLS_CORR", &AntiKt4TopoEM_N_BAD_CELLS_CORR, &b_AntiKt4TopoEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("AntiKt4TopoEM_BAD_CELLS_CORR_E", &AntiKt4TopoEM_BAD_CELLS_CORR_E, &b_AntiKt4TopoEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("AntiKt4TopoEM_NumTowers", &AntiKt4TopoEM_NumTowers, &b_AntiKt4TopoEM_NumTowers);
   fChain->SetBranchAddress("AntiKt4TopoEM_ootFracCells5", &AntiKt4TopoEM_ootFracCells5, &b_AntiKt4TopoEM_ootFracCells5);
   fChain->SetBranchAddress("AntiKt4TopoEM_ootFracCells10", &AntiKt4TopoEM_ootFracCells10, &b_AntiKt4TopoEM_ootFracCells10);
   fChain->SetBranchAddress("AntiKt4TopoEM_ootFracClusters5", &AntiKt4TopoEM_ootFracClusters5, &b_AntiKt4TopoEM_ootFracClusters5);
   fChain->SetBranchAddress("AntiKt4TopoEM_ootFracClusters10", &AntiKt4TopoEM_ootFracClusters10, &b_AntiKt4TopoEM_ootFracClusters10);
   fChain->SetBranchAddress("AntiKt4TopoEM_SamplingMax", &AntiKt4TopoEM_SamplingMax, &b_AntiKt4TopoEM_SamplingMax);
   fChain->SetBranchAddress("AntiKt4TopoEM_fracSamplingMax", &AntiKt4TopoEM_fracSamplingMax, &b_AntiKt4TopoEM_fracSamplingMax);
   fChain->SetBranchAddress("AntiKt4TopoEM_hecf", &AntiKt4TopoEM_hecf, &b_AntiKt4TopoEM_hecf);
   fChain->SetBranchAddress("AntiKt4TopoEM_tgap3f", &AntiKt4TopoEM_tgap3f, &b_AntiKt4TopoEM_tgap3f);
   fChain->SetBranchAddress("AntiKt4TopoEM_isUgly", &AntiKt4TopoEM_isUgly, &b_AntiKt4TopoEM_isUgly);
   fChain->SetBranchAddress("AntiKt4TopoEM_isBadLooseMinus", &AntiKt4TopoEM_isBadLooseMinus, &b_AntiKt4TopoEM_isBadLooseMinus);
   fChain->SetBranchAddress("AntiKt4TopoEM_isBadLoose", &AntiKt4TopoEM_isBadLoose, &b_AntiKt4TopoEM_isBadLoose);
   fChain->SetBranchAddress("AntiKt4TopoEM_isBadMedium", &AntiKt4TopoEM_isBadMedium, &b_AntiKt4TopoEM_isBadMedium);
   fChain->SetBranchAddress("AntiKt4TopoEM_isBadTight", &AntiKt4TopoEM_isBadTight, &b_AntiKt4TopoEM_isBadTight);
   fChain->SetBranchAddress("AntiKt4TopoEM_emfrac", &AntiKt4TopoEM_emfrac, &b_AntiKt4TopoEM_emfrac);
   fChain->SetBranchAddress("AntiKt4TopoEM_Offset", &AntiKt4TopoEM_Offset, &b_AntiKt4TopoEM_Offset);
   fChain->SetBranchAddress("AntiKt4TopoEM_EMJES", &AntiKt4TopoEM_EMJES, &b_AntiKt4TopoEM_EMJES);
   fChain->SetBranchAddress("AntiKt4TopoEM_EMJES_EtaCorr", &AntiKt4TopoEM_EMJES_EtaCorr, &b_AntiKt4TopoEM_EMJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt4TopoEM_EMJESnooffset", &AntiKt4TopoEM_EMJESnooffset, &b_AntiKt4TopoEM_EMJESnooffset);
   fChain->SetBranchAddress("AntiKt4TopoEM_LCJES", &AntiKt4TopoEM_LCJES, &b_AntiKt4TopoEM_LCJES);
   fChain->SetBranchAddress("AntiKt4TopoEM_LCJES_EtaCorr", &AntiKt4TopoEM_LCJES_EtaCorr, &b_AntiKt4TopoEM_LCJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt4TopoEM_emscale_E", &AntiKt4TopoEM_emscale_E, &b_AntiKt4TopoEM_emscale_E);
   fChain->SetBranchAddress("AntiKt4TopoEM_emscale_pt", &AntiKt4TopoEM_emscale_pt, &b_AntiKt4TopoEM_emscale_pt);
   fChain->SetBranchAddress("AntiKt4TopoEM_emscale_m", &AntiKt4TopoEM_emscale_m, &b_AntiKt4TopoEM_emscale_m);
   fChain->SetBranchAddress("AntiKt4TopoEM_emscale_eta", &AntiKt4TopoEM_emscale_eta, &b_AntiKt4TopoEM_emscale_eta);
   fChain->SetBranchAddress("AntiKt4TopoEM_emscale_phi", &AntiKt4TopoEM_emscale_phi, &b_AntiKt4TopoEM_emscale_phi);
   fChain->SetBranchAddress("AntiKt4TopoEM_jvtx_x", &AntiKt4TopoEM_jvtx_x, &b_AntiKt4TopoEM_jvtx_x);
   fChain->SetBranchAddress("AntiKt4TopoEM_jvtx_y", &AntiKt4TopoEM_jvtx_y, &b_AntiKt4TopoEM_jvtx_y);
   fChain->SetBranchAddress("AntiKt4TopoEM_jvtx_z", &AntiKt4TopoEM_jvtx_z, &b_AntiKt4TopoEM_jvtx_z);
   fChain->SetBranchAddress("AntiKt4TopoEM_jvtxf", &AntiKt4TopoEM_jvtxf, &b_AntiKt4TopoEM_jvtxf);
   fChain->SetBranchAddress("AntiKt4TopoEM_GSCFactorF", &AntiKt4TopoEM_GSCFactorF, &b_AntiKt4TopoEM_GSCFactorF);
   fChain->SetBranchAddress("AntiKt4TopoEM_WidthFraction", &AntiKt4TopoEM_WidthFraction, &b_AntiKt4TopoEM_WidthFraction);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_PreSamplerB", &AntiKt4TopoEM_e_PreSamplerB, &b_AntiKt4TopoEM_e_PreSamplerB);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_EMB1", &AntiKt4TopoEM_e_EMB1, &b_AntiKt4TopoEM_e_EMB1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_EMB2", &AntiKt4TopoEM_e_EMB2, &b_AntiKt4TopoEM_e_EMB2);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_EMB3", &AntiKt4TopoEM_e_EMB3, &b_AntiKt4TopoEM_e_EMB3);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_PreSamplerE", &AntiKt4TopoEM_e_PreSamplerE, &b_AntiKt4TopoEM_e_PreSamplerE);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_EME1", &AntiKt4TopoEM_e_EME1, &b_AntiKt4TopoEM_e_EME1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_EME2", &AntiKt4TopoEM_e_EME2, &b_AntiKt4TopoEM_e_EME2);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_EME3", &AntiKt4TopoEM_e_EME3, &b_AntiKt4TopoEM_e_EME3);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_HEC0", &AntiKt4TopoEM_e_HEC0, &b_AntiKt4TopoEM_e_HEC0);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_HEC1", &AntiKt4TopoEM_e_HEC1, &b_AntiKt4TopoEM_e_HEC1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_HEC2", &AntiKt4TopoEM_e_HEC2, &b_AntiKt4TopoEM_e_HEC2);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_HEC3", &AntiKt4TopoEM_e_HEC3, &b_AntiKt4TopoEM_e_HEC3);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileBar0", &AntiKt4TopoEM_e_TileBar0, &b_AntiKt4TopoEM_e_TileBar0);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileBar1", &AntiKt4TopoEM_e_TileBar1, &b_AntiKt4TopoEM_e_TileBar1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileBar2", &AntiKt4TopoEM_e_TileBar2, &b_AntiKt4TopoEM_e_TileBar2);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileGap1", &AntiKt4TopoEM_e_TileGap1, &b_AntiKt4TopoEM_e_TileGap1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileGap2", &AntiKt4TopoEM_e_TileGap2, &b_AntiKt4TopoEM_e_TileGap2);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileGap3", &AntiKt4TopoEM_e_TileGap3, &b_AntiKt4TopoEM_e_TileGap3);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileExt0", &AntiKt4TopoEM_e_TileExt0, &b_AntiKt4TopoEM_e_TileExt0);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileExt1", &AntiKt4TopoEM_e_TileExt1, &b_AntiKt4TopoEM_e_TileExt1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_TileExt2", &AntiKt4TopoEM_e_TileExt2, &b_AntiKt4TopoEM_e_TileExt2);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_FCAL0", &AntiKt4TopoEM_e_FCAL0, &b_AntiKt4TopoEM_e_FCAL0);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_FCAL1", &AntiKt4TopoEM_e_FCAL1, &b_AntiKt4TopoEM_e_FCAL1);
   fChain->SetBranchAddress("AntiKt4TopoEM_e_FCAL2", &AntiKt4TopoEM_e_FCAL2, &b_AntiKt4TopoEM_e_FCAL2);
   fChain->SetBranchAddress("AntiKt4TopoEM_shapeBins", &AntiKt4TopoEM_shapeBins, &b_AntiKt4TopoEM_shapeBins);
   fChain->SetBranchAddress("AntiKt4TopoEM_Nconst", &AntiKt4TopoEM_Nconst, &b_AntiKt4TopoEM_Nconst);
   fChain->SetBranchAddress("AntiKt4TopoEM_ptconst_default", &AntiKt4TopoEM_ptconst_default, &b_AntiKt4TopoEM_ptconst_default);
   fChain->SetBranchAddress("AntiKt4TopoEM_econst_default", &AntiKt4TopoEM_econst_default, &b_AntiKt4TopoEM_econst_default);
   fChain->SetBranchAddress("AntiKt4TopoEM_etaconst_default", &AntiKt4TopoEM_etaconst_default, &b_AntiKt4TopoEM_etaconst_default);
   fChain->SetBranchAddress("AntiKt4TopoEM_phiconst_default", &AntiKt4TopoEM_phiconst_default, &b_AntiKt4TopoEM_phiconst_default);
   fChain->SetBranchAddress("AntiKt4TopoEM_weightconst_default", &AntiKt4TopoEM_weightconst_default, &b_AntiKt4TopoEM_weightconst_default);
   fChain->SetBranchAddress("AntiKt4TopoEM_constscale_E", &AntiKt4TopoEM_constscale_E, &b_AntiKt4TopoEM_constscale_E);
   fChain->SetBranchAddress("AntiKt4TopoEM_constscale_pt", &AntiKt4TopoEM_constscale_pt, &b_AntiKt4TopoEM_constscale_pt);
   fChain->SetBranchAddress("AntiKt4TopoEM_constscale_m", &AntiKt4TopoEM_constscale_m, &b_AntiKt4TopoEM_constscale_m);
   fChain->SetBranchAddress("AntiKt4TopoEM_constscale_eta", &AntiKt4TopoEM_constscale_eta, &b_AntiKt4TopoEM_constscale_eta);
   fChain->SetBranchAddress("AntiKt4TopoEM_constscale_phi", &AntiKt4TopoEM_constscale_phi, &b_AntiKt4TopoEM_constscale_phi);
   fChain->SetBranchAddress("AntiKt4TopoEM_el_dr", &AntiKt4TopoEM_el_dr, &b_AntiKt4TopoEM_el_dr);
   fChain->SetBranchAddress("AntiKt4TopoEM_el_matched", &AntiKt4TopoEM_el_matched, &b_AntiKt4TopoEM_el_matched);
   fChain->SetBranchAddress("AntiKt4TopoEM_mu_dr", &AntiKt4TopoEM_mu_dr, &b_AntiKt4TopoEM_mu_dr);
   fChain->SetBranchAddress("AntiKt4TopoEM_mu_matched", &AntiKt4TopoEM_mu_matched, &b_AntiKt4TopoEM_mu_matched);
   fChain->SetBranchAddress("AntiKt4TopoEM_L1_dr", &AntiKt4TopoEM_L1_dr, &b_AntiKt4TopoEM_L1_dr);
   fChain->SetBranchAddress("AntiKt4TopoEM_L1_matched", &AntiKt4TopoEM_L1_matched, &b_AntiKt4TopoEM_L1_matched);
   fChain->SetBranchAddress("AntiKt4TopoEM_L2_dr", &AntiKt4TopoEM_L2_dr, &b_AntiKt4TopoEM_L2_dr);
   fChain->SetBranchAddress("AntiKt4TopoEM_L2_matched", &AntiKt4TopoEM_L2_matched, &b_AntiKt4TopoEM_L2_matched);
   fChain->SetBranchAddress("AntiKt4TopoEM_EF_dr", &AntiKt4TopoEM_EF_dr, &b_AntiKt4TopoEM_EF_dr);
   fChain->SetBranchAddress("AntiKt4TopoEM_EF_matched", &AntiKt4TopoEM_EF_matched, &b_AntiKt4TopoEM_EF_matched);
   fChain->SetBranchAddress("AntiKt4LCTopo_n", &AntiKt4LCTopo_n, &b_AntiKt4LCTopo_n);
   fChain->SetBranchAddress("AntiKt4LCTopo_E", &AntiKt4LCTopo_E, &b_AntiKt4LCTopo_E);
   fChain->SetBranchAddress("AntiKt4LCTopo_pt", &AntiKt4LCTopo_pt, &b_AntiKt4LCTopo_pt);
   fChain->SetBranchAddress("AntiKt4LCTopo_m", &AntiKt4LCTopo_m, &b_AntiKt4LCTopo_m);
   fChain->SetBranchAddress("AntiKt4LCTopo_eta", &AntiKt4LCTopo_eta, &b_AntiKt4LCTopo_eta);
   fChain->SetBranchAddress("AntiKt4LCTopo_phi", &AntiKt4LCTopo_phi, &b_AntiKt4LCTopo_phi);
   fChain->SetBranchAddress("AntiKt4LCTopo_EtaOrigin", &AntiKt4LCTopo_EtaOrigin, &b_AntiKt4LCTopo_EtaOrigin);
   fChain->SetBranchAddress("AntiKt4LCTopo_PhiOrigin", &AntiKt4LCTopo_PhiOrigin, &b_AntiKt4LCTopo_PhiOrigin);
   fChain->SetBranchAddress("AntiKt4LCTopo_MOrigin", &AntiKt4LCTopo_MOrigin, &b_AntiKt4LCTopo_MOrigin);
   fChain->SetBranchAddress("AntiKt4LCTopo_WIDTH", &AntiKt4LCTopo_WIDTH, &b_AntiKt4LCTopo_WIDTH);
   fChain->SetBranchAddress("AntiKt4LCTopo_n90", &AntiKt4LCTopo_n90, &b_AntiKt4LCTopo_n90);
   fChain->SetBranchAddress("AntiKt4LCTopo_Timing", &AntiKt4LCTopo_Timing, &b_AntiKt4LCTopo_Timing);
   fChain->SetBranchAddress("AntiKt4LCTopo_LArQuality", &AntiKt4LCTopo_LArQuality, &b_AntiKt4LCTopo_LArQuality);
   fChain->SetBranchAddress("AntiKt4LCTopo_nTrk", &AntiKt4LCTopo_nTrk, &b_AntiKt4LCTopo_nTrk);
   fChain->SetBranchAddress("AntiKt4LCTopo_sumPtTrk", &AntiKt4LCTopo_sumPtTrk, &b_AntiKt4LCTopo_sumPtTrk);
   fChain->SetBranchAddress("AntiKt4LCTopo_OriginIndex", &AntiKt4LCTopo_OriginIndex, &b_AntiKt4LCTopo_OriginIndex);
   fChain->SetBranchAddress("AntiKt4LCTopo_HECQuality", &AntiKt4LCTopo_HECQuality, &b_AntiKt4LCTopo_HECQuality);
   fChain->SetBranchAddress("AntiKt4LCTopo_NegativeE", &AntiKt4LCTopo_NegativeE, &b_AntiKt4LCTopo_NegativeE);
   fChain->SetBranchAddress("AntiKt4LCTopo_AverageLArQF", &AntiKt4LCTopo_AverageLArQF, &b_AntiKt4LCTopo_AverageLArQF);
   fChain->SetBranchAddress("AntiKt4LCTopo_BCH_CORR_CELL", &AntiKt4LCTopo_BCH_CORR_CELL, &b_AntiKt4LCTopo_BCH_CORR_CELL);
   fChain->SetBranchAddress("AntiKt4LCTopo_BCH_CORR_DOTX", &AntiKt4LCTopo_BCH_CORR_DOTX, &b_AntiKt4LCTopo_BCH_CORR_DOTX);
   fChain->SetBranchAddress("AntiKt4LCTopo_BCH_CORR_JET", &AntiKt4LCTopo_BCH_CORR_JET, &b_AntiKt4LCTopo_BCH_CORR_JET);
   fChain->SetBranchAddress("AntiKt4LCTopo_BCH_CORR_JET_FORCELL", &AntiKt4LCTopo_BCH_CORR_JET_FORCELL, &b_AntiKt4LCTopo_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("AntiKt4LCTopo_ENG_BAD_CELLS", &AntiKt4LCTopo_ENG_BAD_CELLS, &b_AntiKt4LCTopo_ENG_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt4LCTopo_N_BAD_CELLS", &AntiKt4LCTopo_N_BAD_CELLS, &b_AntiKt4LCTopo_N_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt4LCTopo_N_BAD_CELLS_CORR", &AntiKt4LCTopo_N_BAD_CELLS_CORR, &b_AntiKt4LCTopo_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("AntiKt4LCTopo_BAD_CELLS_CORR_E", &AntiKt4LCTopo_BAD_CELLS_CORR_E, &b_AntiKt4LCTopo_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("AntiKt4LCTopo_NumTowers", &AntiKt4LCTopo_NumTowers, &b_AntiKt4LCTopo_NumTowers);
   fChain->SetBranchAddress("AntiKt4LCTopo_ootFracCells5", &AntiKt4LCTopo_ootFracCells5, &b_AntiKt4LCTopo_ootFracCells5);
   fChain->SetBranchAddress("AntiKt4LCTopo_ootFracCells10", &AntiKt4LCTopo_ootFracCells10, &b_AntiKt4LCTopo_ootFracCells10);
   fChain->SetBranchAddress("AntiKt4LCTopo_ootFracClusters5", &AntiKt4LCTopo_ootFracClusters5, &b_AntiKt4LCTopo_ootFracClusters5);
   fChain->SetBranchAddress("AntiKt4LCTopo_ootFracClusters10", &AntiKt4LCTopo_ootFracClusters10, &b_AntiKt4LCTopo_ootFracClusters10);
   fChain->SetBranchAddress("AntiKt4LCTopo_SamplingMax", &AntiKt4LCTopo_SamplingMax, &b_AntiKt4LCTopo_SamplingMax);
   fChain->SetBranchAddress("AntiKt4LCTopo_fracSamplingMax", &AntiKt4LCTopo_fracSamplingMax, &b_AntiKt4LCTopo_fracSamplingMax);
   fChain->SetBranchAddress("AntiKt4LCTopo_hecf", &AntiKt4LCTopo_hecf, &b_AntiKt4LCTopo_hecf);
   fChain->SetBranchAddress("AntiKt4LCTopo_tgap3f", &AntiKt4LCTopo_tgap3f, &b_AntiKt4LCTopo_tgap3f);
   fChain->SetBranchAddress("AntiKt4LCTopo_isUgly", &AntiKt4LCTopo_isUgly, &b_AntiKt4LCTopo_isUgly);
   fChain->SetBranchAddress("AntiKt4LCTopo_isBadLooseMinus", &AntiKt4LCTopo_isBadLooseMinus, &b_AntiKt4LCTopo_isBadLooseMinus);
   fChain->SetBranchAddress("AntiKt4LCTopo_isBadLoose", &AntiKt4LCTopo_isBadLoose, &b_AntiKt4LCTopo_isBadLoose);
   fChain->SetBranchAddress("AntiKt4LCTopo_isBadMedium", &AntiKt4LCTopo_isBadMedium, &b_AntiKt4LCTopo_isBadMedium);
   fChain->SetBranchAddress("AntiKt4LCTopo_isBadTight", &AntiKt4LCTopo_isBadTight, &b_AntiKt4LCTopo_isBadTight);
   fChain->SetBranchAddress("AntiKt4LCTopo_emfrac", &AntiKt4LCTopo_emfrac, &b_AntiKt4LCTopo_emfrac);
   fChain->SetBranchAddress("AntiKt4LCTopo_Offset", &AntiKt4LCTopo_Offset, &b_AntiKt4LCTopo_Offset);
   fChain->SetBranchAddress("AntiKt4LCTopo_EMJES", &AntiKt4LCTopo_EMJES, &b_AntiKt4LCTopo_EMJES);
   fChain->SetBranchAddress("AntiKt4LCTopo_EMJES_EtaCorr", &AntiKt4LCTopo_EMJES_EtaCorr, &b_AntiKt4LCTopo_EMJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt4LCTopo_EMJESnooffset", &AntiKt4LCTopo_EMJESnooffset, &b_AntiKt4LCTopo_EMJESnooffset);
   fChain->SetBranchAddress("AntiKt4LCTopo_LCJES", &AntiKt4LCTopo_LCJES, &b_AntiKt4LCTopo_LCJES);
   fChain->SetBranchAddress("AntiKt4LCTopo_LCJES_EtaCorr", &AntiKt4LCTopo_LCJES_EtaCorr, &b_AntiKt4LCTopo_LCJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt4LCTopo_emscale_E", &AntiKt4LCTopo_emscale_E, &b_AntiKt4LCTopo_emscale_E);
   fChain->SetBranchAddress("AntiKt4LCTopo_emscale_pt", &AntiKt4LCTopo_emscale_pt, &b_AntiKt4LCTopo_emscale_pt);
   fChain->SetBranchAddress("AntiKt4LCTopo_emscale_m", &AntiKt4LCTopo_emscale_m, &b_AntiKt4LCTopo_emscale_m);
   fChain->SetBranchAddress("AntiKt4LCTopo_emscale_eta", &AntiKt4LCTopo_emscale_eta, &b_AntiKt4LCTopo_emscale_eta);
   fChain->SetBranchAddress("AntiKt4LCTopo_emscale_phi", &AntiKt4LCTopo_emscale_phi, &b_AntiKt4LCTopo_emscale_phi);
   fChain->SetBranchAddress("AntiKt4LCTopo_jvtx_x", &AntiKt4LCTopo_jvtx_x, &b_AntiKt4LCTopo_jvtx_x);
   fChain->SetBranchAddress("AntiKt4LCTopo_jvtx_y", &AntiKt4LCTopo_jvtx_y, &b_AntiKt4LCTopo_jvtx_y);
   fChain->SetBranchAddress("AntiKt4LCTopo_jvtx_z", &AntiKt4LCTopo_jvtx_z, &b_AntiKt4LCTopo_jvtx_z);
   fChain->SetBranchAddress("AntiKt4LCTopo_jvtxf", &AntiKt4LCTopo_jvtxf, &b_AntiKt4LCTopo_jvtxf);
   fChain->SetBranchAddress("AntiKt4LCTopo_GSCFactorF", &AntiKt4LCTopo_GSCFactorF, &b_AntiKt4LCTopo_GSCFactorF);
   fChain->SetBranchAddress("AntiKt4LCTopo_WidthFraction", &AntiKt4LCTopo_WidthFraction, &b_AntiKt4LCTopo_WidthFraction);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_PreSamplerB", &AntiKt4LCTopo_e_PreSamplerB, &b_AntiKt4LCTopo_e_PreSamplerB);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_EMB1", &AntiKt4LCTopo_e_EMB1, &b_AntiKt4LCTopo_e_EMB1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_EMB2", &AntiKt4LCTopo_e_EMB2, &b_AntiKt4LCTopo_e_EMB2);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_EMB3", &AntiKt4LCTopo_e_EMB3, &b_AntiKt4LCTopo_e_EMB3);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_PreSamplerE", &AntiKt4LCTopo_e_PreSamplerE, &b_AntiKt4LCTopo_e_PreSamplerE);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_EME1", &AntiKt4LCTopo_e_EME1, &b_AntiKt4LCTopo_e_EME1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_EME2", &AntiKt4LCTopo_e_EME2, &b_AntiKt4LCTopo_e_EME2);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_EME3", &AntiKt4LCTopo_e_EME3, &b_AntiKt4LCTopo_e_EME3);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_HEC0", &AntiKt4LCTopo_e_HEC0, &b_AntiKt4LCTopo_e_HEC0);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_HEC1", &AntiKt4LCTopo_e_HEC1, &b_AntiKt4LCTopo_e_HEC1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_HEC2", &AntiKt4LCTopo_e_HEC2, &b_AntiKt4LCTopo_e_HEC2);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_HEC3", &AntiKt4LCTopo_e_HEC3, &b_AntiKt4LCTopo_e_HEC3);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileBar0", &AntiKt4LCTopo_e_TileBar0, &b_AntiKt4LCTopo_e_TileBar0);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileBar1", &AntiKt4LCTopo_e_TileBar1, &b_AntiKt4LCTopo_e_TileBar1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileBar2", &AntiKt4LCTopo_e_TileBar2, &b_AntiKt4LCTopo_e_TileBar2);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileGap1", &AntiKt4LCTopo_e_TileGap1, &b_AntiKt4LCTopo_e_TileGap1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileGap2", &AntiKt4LCTopo_e_TileGap2, &b_AntiKt4LCTopo_e_TileGap2);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileGap3", &AntiKt4LCTopo_e_TileGap3, &b_AntiKt4LCTopo_e_TileGap3);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileExt0", &AntiKt4LCTopo_e_TileExt0, &b_AntiKt4LCTopo_e_TileExt0);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileExt1", &AntiKt4LCTopo_e_TileExt1, &b_AntiKt4LCTopo_e_TileExt1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_TileExt2", &AntiKt4LCTopo_e_TileExt2, &b_AntiKt4LCTopo_e_TileExt2);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_FCAL0", &AntiKt4LCTopo_e_FCAL0, &b_AntiKt4LCTopo_e_FCAL0);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_FCAL1", &AntiKt4LCTopo_e_FCAL1, &b_AntiKt4LCTopo_e_FCAL1);
   fChain->SetBranchAddress("AntiKt4LCTopo_e_FCAL2", &AntiKt4LCTopo_e_FCAL2, &b_AntiKt4LCTopo_e_FCAL2);
   fChain->SetBranchAddress("AntiKt4LCTopo_shapeBins", &AntiKt4LCTopo_shapeBins, &b_AntiKt4LCTopo_shapeBins);
   fChain->SetBranchAddress("AntiKt4LCTopo_Nconst", &AntiKt4LCTopo_Nconst, &b_AntiKt4LCTopo_Nconst);
   fChain->SetBranchAddress("AntiKt4LCTopo_ptconst_default", &AntiKt4LCTopo_ptconst_default, &b_AntiKt4LCTopo_ptconst_default);
   fChain->SetBranchAddress("AntiKt4LCTopo_econst_default", &AntiKt4LCTopo_econst_default, &b_AntiKt4LCTopo_econst_default);
   fChain->SetBranchAddress("AntiKt4LCTopo_etaconst_default", &AntiKt4LCTopo_etaconst_default, &b_AntiKt4LCTopo_etaconst_default);
   fChain->SetBranchAddress("AntiKt4LCTopo_phiconst_default", &AntiKt4LCTopo_phiconst_default, &b_AntiKt4LCTopo_phiconst_default);
   fChain->SetBranchAddress("AntiKt4LCTopo_weightconst_default", &AntiKt4LCTopo_weightconst_default, &b_AntiKt4LCTopo_weightconst_default);
   fChain->SetBranchAddress("AntiKt4LCTopo_constscale_E", &AntiKt4LCTopo_constscale_E, &b_AntiKt4LCTopo_constscale_E);
   fChain->SetBranchAddress("AntiKt4LCTopo_constscale_pt", &AntiKt4LCTopo_constscale_pt, &b_AntiKt4LCTopo_constscale_pt);
   fChain->SetBranchAddress("AntiKt4LCTopo_constscale_m", &AntiKt4LCTopo_constscale_m, &b_AntiKt4LCTopo_constscale_m);
   fChain->SetBranchAddress("AntiKt4LCTopo_constscale_eta", &AntiKt4LCTopo_constscale_eta, &b_AntiKt4LCTopo_constscale_eta);
   fChain->SetBranchAddress("AntiKt4LCTopo_constscale_phi", &AntiKt4LCTopo_constscale_phi, &b_AntiKt4LCTopo_constscale_phi);
   fChain->SetBranchAddress("AntiKt4LCTopo_el_dr", &AntiKt4LCTopo_el_dr, &b_AntiKt4LCTopo_el_dr);
   fChain->SetBranchAddress("AntiKt4LCTopo_el_matched", &AntiKt4LCTopo_el_matched, &b_AntiKt4LCTopo_el_matched);
   fChain->SetBranchAddress("AntiKt4LCTopo_mu_dr", &AntiKt4LCTopo_mu_dr, &b_AntiKt4LCTopo_mu_dr);
   fChain->SetBranchAddress("AntiKt4LCTopo_mu_matched", &AntiKt4LCTopo_mu_matched, &b_AntiKt4LCTopo_mu_matched);
   fChain->SetBranchAddress("AntiKt4LCTopo_L1_dr", &AntiKt4LCTopo_L1_dr, &b_AntiKt4LCTopo_L1_dr);
   fChain->SetBranchAddress("AntiKt4LCTopo_L1_matched", &AntiKt4LCTopo_L1_matched, &b_AntiKt4LCTopo_L1_matched);
   fChain->SetBranchAddress("AntiKt4LCTopo_L2_dr", &AntiKt4LCTopo_L2_dr, &b_AntiKt4LCTopo_L2_dr);
   fChain->SetBranchAddress("AntiKt4LCTopo_L2_matched", &AntiKt4LCTopo_L2_matched, &b_AntiKt4LCTopo_L2_matched);
   fChain->SetBranchAddress("AntiKt4LCTopo_EF_dr", &AntiKt4LCTopo_EF_dr, &b_AntiKt4LCTopo_EF_dr);
   fChain->SetBranchAddress("AntiKt4LCTopo_EF_matched", &AntiKt4LCTopo_EF_matched, &b_AntiKt4LCTopo_EF_matched);
   fChain->SetBranchAddress("AntiKt6Tower_n", &AntiKt6Tower_n, &b_AntiKt6Tower_n);
   fChain->SetBranchAddress("AntiKt6Tower_E", &AntiKt6Tower_E, &b_AntiKt6Tower_E);
   fChain->SetBranchAddress("AntiKt6Tower_pt", &AntiKt6Tower_pt, &b_AntiKt6Tower_pt);
   fChain->SetBranchAddress("AntiKt6Tower_m", &AntiKt6Tower_m, &b_AntiKt6Tower_m);
   fChain->SetBranchAddress("AntiKt6Tower_eta", &AntiKt6Tower_eta, &b_AntiKt6Tower_eta);
   fChain->SetBranchAddress("AntiKt6Tower_phi", &AntiKt6Tower_phi, &b_AntiKt6Tower_phi);
   fChain->SetBranchAddress("AntiKt6Tower_EtaOrigin", &AntiKt6Tower_EtaOrigin, &b_AntiKt6Tower_EtaOrigin);
   fChain->SetBranchAddress("AntiKt6Tower_PhiOrigin", &AntiKt6Tower_PhiOrigin, &b_AntiKt6Tower_PhiOrigin);
   fChain->SetBranchAddress("AntiKt6Tower_MOrigin", &AntiKt6Tower_MOrigin, &b_AntiKt6Tower_MOrigin);
   fChain->SetBranchAddress("AntiKt6Tower_WIDTH", &AntiKt6Tower_WIDTH, &b_AntiKt6Tower_WIDTH);
   fChain->SetBranchAddress("AntiKt6Tower_n90", &AntiKt6Tower_n90, &b_AntiKt6Tower_n90);
   fChain->SetBranchAddress("AntiKt6Tower_Timing", &AntiKt6Tower_Timing, &b_AntiKt6Tower_Timing);
   fChain->SetBranchAddress("AntiKt6Tower_LArQuality", &AntiKt6Tower_LArQuality, &b_AntiKt6Tower_LArQuality);
   fChain->SetBranchAddress("AntiKt6Tower_nTrk", &AntiKt6Tower_nTrk, &b_AntiKt6Tower_nTrk);
   fChain->SetBranchAddress("AntiKt6Tower_sumPtTrk", &AntiKt6Tower_sumPtTrk, &b_AntiKt6Tower_sumPtTrk);
   fChain->SetBranchAddress("AntiKt6Tower_OriginIndex", &AntiKt6Tower_OriginIndex, &b_AntiKt6Tower_OriginIndex);
   fChain->SetBranchAddress("AntiKt6Tower_HECQuality", &AntiKt6Tower_HECQuality, &b_AntiKt6Tower_HECQuality);
   fChain->SetBranchAddress("AntiKt6Tower_NegativeE", &AntiKt6Tower_NegativeE, &b_AntiKt6Tower_NegativeE);
   fChain->SetBranchAddress("AntiKt6Tower_AverageLArQF", &AntiKt6Tower_AverageLArQF, &b_AntiKt6Tower_AverageLArQF);
   fChain->SetBranchAddress("AntiKt6Tower_BCH_CORR_CELL", &AntiKt6Tower_BCH_CORR_CELL, &b_AntiKt6Tower_BCH_CORR_CELL);
   fChain->SetBranchAddress("AntiKt6Tower_BCH_CORR_DOTX", &AntiKt6Tower_BCH_CORR_DOTX, &b_AntiKt6Tower_BCH_CORR_DOTX);
   fChain->SetBranchAddress("AntiKt6Tower_BCH_CORR_JET", &AntiKt6Tower_BCH_CORR_JET, &b_AntiKt6Tower_BCH_CORR_JET);
   fChain->SetBranchAddress("AntiKt6Tower_BCH_CORR_JET_FORCELL", &AntiKt6Tower_BCH_CORR_JET_FORCELL, &b_AntiKt6Tower_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("AntiKt6Tower_ENG_BAD_CELLS", &AntiKt6Tower_ENG_BAD_CELLS, &b_AntiKt6Tower_ENG_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt6Tower_N_BAD_CELLS", &AntiKt6Tower_N_BAD_CELLS, &b_AntiKt6Tower_N_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt6Tower_N_BAD_CELLS_CORR", &AntiKt6Tower_N_BAD_CELLS_CORR, &b_AntiKt6Tower_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("AntiKt6Tower_BAD_CELLS_CORR_E", &AntiKt6Tower_BAD_CELLS_CORR_E, &b_AntiKt6Tower_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("AntiKt6Tower_NumTowers", &AntiKt6Tower_NumTowers, &b_AntiKt6Tower_NumTowers);
   fChain->SetBranchAddress("AntiKt6Tower_ootFracCells5", &AntiKt6Tower_ootFracCells5, &b_AntiKt6Tower_ootFracCells5);
   fChain->SetBranchAddress("AntiKt6Tower_ootFracCells10", &AntiKt6Tower_ootFracCells10, &b_AntiKt6Tower_ootFracCells10);
   fChain->SetBranchAddress("AntiKt6Tower_ootFracClusters5", &AntiKt6Tower_ootFracClusters5, &b_AntiKt6Tower_ootFracClusters5);
   fChain->SetBranchAddress("AntiKt6Tower_ootFracClusters10", &AntiKt6Tower_ootFracClusters10, &b_AntiKt6Tower_ootFracClusters10);
   fChain->SetBranchAddress("AntiKt6Tower_SamplingMax", &AntiKt6Tower_SamplingMax, &b_AntiKt6Tower_SamplingMax);
   fChain->SetBranchAddress("AntiKt6Tower_fracSamplingMax", &AntiKt6Tower_fracSamplingMax, &b_AntiKt6Tower_fracSamplingMax);
   fChain->SetBranchAddress("AntiKt6Tower_hecf", &AntiKt6Tower_hecf, &b_AntiKt6Tower_hecf);
   fChain->SetBranchAddress("AntiKt6Tower_tgap3f", &AntiKt6Tower_tgap3f, &b_AntiKt6Tower_tgap3f);
   fChain->SetBranchAddress("AntiKt6Tower_isUgly", &AntiKt6Tower_isUgly, &b_AntiKt6Tower_isUgly);
   fChain->SetBranchAddress("AntiKt6Tower_isBadLooseMinus", &AntiKt6Tower_isBadLooseMinus, &b_AntiKt6Tower_isBadLooseMinus);
   fChain->SetBranchAddress("AntiKt6Tower_isBadLoose", &AntiKt6Tower_isBadLoose, &b_AntiKt6Tower_isBadLoose);
   fChain->SetBranchAddress("AntiKt6Tower_isBadMedium", &AntiKt6Tower_isBadMedium, &b_AntiKt6Tower_isBadMedium);
   fChain->SetBranchAddress("AntiKt6Tower_isBadTight", &AntiKt6Tower_isBadTight, &b_AntiKt6Tower_isBadTight);
   fChain->SetBranchAddress("AntiKt6Tower_emfrac", &AntiKt6Tower_emfrac, &b_AntiKt6Tower_emfrac);
   fChain->SetBranchAddress("AntiKt6Tower_Offset", &AntiKt6Tower_Offset, &b_AntiKt6Tower_Offset);
   fChain->SetBranchAddress("AntiKt6Tower_EMJES", &AntiKt6Tower_EMJES, &b_AntiKt6Tower_EMJES);
   fChain->SetBranchAddress("AntiKt6Tower_EMJES_EtaCorr", &AntiKt6Tower_EMJES_EtaCorr, &b_AntiKt6Tower_EMJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt6Tower_EMJESnooffset", &AntiKt6Tower_EMJESnooffset, &b_AntiKt6Tower_EMJESnooffset);
   fChain->SetBranchAddress("AntiKt6Tower_LCJES", &AntiKt6Tower_LCJES, &b_AntiKt6Tower_LCJES);
   fChain->SetBranchAddress("AntiKt6Tower_LCJES_EtaCorr", &AntiKt6Tower_LCJES_EtaCorr, &b_AntiKt6Tower_LCJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt6Tower_emscale_E", &AntiKt6Tower_emscale_E, &b_AntiKt6Tower_emscale_E);
   fChain->SetBranchAddress("AntiKt6Tower_emscale_pt", &AntiKt6Tower_emscale_pt, &b_AntiKt6Tower_emscale_pt);
   fChain->SetBranchAddress("AntiKt6Tower_emscale_m", &AntiKt6Tower_emscale_m, &b_AntiKt6Tower_emscale_m);
   fChain->SetBranchAddress("AntiKt6Tower_emscale_eta", &AntiKt6Tower_emscale_eta, &b_AntiKt6Tower_emscale_eta);
   fChain->SetBranchAddress("AntiKt6Tower_emscale_phi", &AntiKt6Tower_emscale_phi, &b_AntiKt6Tower_emscale_phi);
   fChain->SetBranchAddress("AntiKt6Tower_jvtx_x", &AntiKt6Tower_jvtx_x, &b_AntiKt6Tower_jvtx_x);
   fChain->SetBranchAddress("AntiKt6Tower_jvtx_y", &AntiKt6Tower_jvtx_y, &b_AntiKt6Tower_jvtx_y);
   fChain->SetBranchAddress("AntiKt6Tower_jvtx_z", &AntiKt6Tower_jvtx_z, &b_AntiKt6Tower_jvtx_z);
   fChain->SetBranchAddress("AntiKt6Tower_jvtxf", &AntiKt6Tower_jvtxf, &b_AntiKt6Tower_jvtxf);
   fChain->SetBranchAddress("AntiKt6Tower_GSCFactorF", &AntiKt6Tower_GSCFactorF, &b_AntiKt6Tower_GSCFactorF);
   fChain->SetBranchAddress("AntiKt6Tower_WidthFraction", &AntiKt6Tower_WidthFraction, &b_AntiKt6Tower_WidthFraction);
   fChain->SetBranchAddress("AntiKt6Tower_e_PreSamplerB", &AntiKt6Tower_e_PreSamplerB, &b_AntiKt6Tower_e_PreSamplerB);
   fChain->SetBranchAddress("AntiKt6Tower_e_EMB1", &AntiKt6Tower_e_EMB1, &b_AntiKt6Tower_e_EMB1);
   fChain->SetBranchAddress("AntiKt6Tower_e_EMB2", &AntiKt6Tower_e_EMB2, &b_AntiKt6Tower_e_EMB2);
   fChain->SetBranchAddress("AntiKt6Tower_e_EMB3", &AntiKt6Tower_e_EMB3, &b_AntiKt6Tower_e_EMB3);
   fChain->SetBranchAddress("AntiKt6Tower_e_PreSamplerE", &AntiKt6Tower_e_PreSamplerE, &b_AntiKt6Tower_e_PreSamplerE);
   fChain->SetBranchAddress("AntiKt6Tower_e_EME1", &AntiKt6Tower_e_EME1, &b_AntiKt6Tower_e_EME1);
   fChain->SetBranchAddress("AntiKt6Tower_e_EME2", &AntiKt6Tower_e_EME2, &b_AntiKt6Tower_e_EME2);
   fChain->SetBranchAddress("AntiKt6Tower_e_EME3", &AntiKt6Tower_e_EME3, &b_AntiKt6Tower_e_EME3);
   fChain->SetBranchAddress("AntiKt6Tower_e_HEC0", &AntiKt6Tower_e_HEC0, &b_AntiKt6Tower_e_HEC0);
   fChain->SetBranchAddress("AntiKt6Tower_e_HEC1", &AntiKt6Tower_e_HEC1, &b_AntiKt6Tower_e_HEC1);
   fChain->SetBranchAddress("AntiKt6Tower_e_HEC2", &AntiKt6Tower_e_HEC2, &b_AntiKt6Tower_e_HEC2);
   fChain->SetBranchAddress("AntiKt6Tower_e_HEC3", &AntiKt6Tower_e_HEC3, &b_AntiKt6Tower_e_HEC3);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileBar0", &AntiKt6Tower_e_TileBar0, &b_AntiKt6Tower_e_TileBar0);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileBar1", &AntiKt6Tower_e_TileBar1, &b_AntiKt6Tower_e_TileBar1);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileBar2", &AntiKt6Tower_e_TileBar2, &b_AntiKt6Tower_e_TileBar2);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileGap1", &AntiKt6Tower_e_TileGap1, &b_AntiKt6Tower_e_TileGap1);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileGap2", &AntiKt6Tower_e_TileGap2, &b_AntiKt6Tower_e_TileGap2);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileGap3", &AntiKt6Tower_e_TileGap3, &b_AntiKt6Tower_e_TileGap3);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileExt0", &AntiKt6Tower_e_TileExt0, &b_AntiKt6Tower_e_TileExt0);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileExt1", &AntiKt6Tower_e_TileExt1, &b_AntiKt6Tower_e_TileExt1);
   fChain->SetBranchAddress("AntiKt6Tower_e_TileExt2", &AntiKt6Tower_e_TileExt2, &b_AntiKt6Tower_e_TileExt2);
   fChain->SetBranchAddress("AntiKt6Tower_e_FCAL0", &AntiKt6Tower_e_FCAL0, &b_AntiKt6Tower_e_FCAL0);
   fChain->SetBranchAddress("AntiKt6Tower_e_FCAL1", &AntiKt6Tower_e_FCAL1, &b_AntiKt6Tower_e_FCAL1);
   fChain->SetBranchAddress("AntiKt6Tower_e_FCAL2", &AntiKt6Tower_e_FCAL2, &b_AntiKt6Tower_e_FCAL2);
   fChain->SetBranchAddress("AntiKt6Tower_shapeBins", &AntiKt6Tower_shapeBins, &b_AntiKt6Tower_shapeBins);
   fChain->SetBranchAddress("AntiKt6Tower_Nconst", &AntiKt6Tower_Nconst, &b_AntiKt6Tower_Nconst);
   fChain->SetBranchAddress("AntiKt6Tower_ptconst_default", &AntiKt6Tower_ptconst_default, &b_AntiKt6Tower_ptconst_default);
   fChain->SetBranchAddress("AntiKt6Tower_econst_default", &AntiKt6Tower_econst_default, &b_AntiKt6Tower_econst_default);
   fChain->SetBranchAddress("AntiKt6Tower_etaconst_default", &AntiKt6Tower_etaconst_default, &b_AntiKt6Tower_etaconst_default);
   fChain->SetBranchAddress("AntiKt6Tower_phiconst_default", &AntiKt6Tower_phiconst_default, &b_AntiKt6Tower_phiconst_default);
   fChain->SetBranchAddress("AntiKt6Tower_weightconst_default", &AntiKt6Tower_weightconst_default, &b_AntiKt6Tower_weightconst_default);
   fChain->SetBranchAddress("AntiKt6Tower_constscale_E", &AntiKt6Tower_constscale_E, &b_AntiKt6Tower_constscale_E);
   fChain->SetBranchAddress("AntiKt6Tower_constscale_pt", &AntiKt6Tower_constscale_pt, &b_AntiKt6Tower_constscale_pt);
   fChain->SetBranchAddress("AntiKt6Tower_constscale_m", &AntiKt6Tower_constscale_m, &b_AntiKt6Tower_constscale_m);
   fChain->SetBranchAddress("AntiKt6Tower_constscale_eta", &AntiKt6Tower_constscale_eta, &b_AntiKt6Tower_constscale_eta);
   fChain->SetBranchAddress("AntiKt6Tower_constscale_phi", &AntiKt6Tower_constscale_phi, &b_AntiKt6Tower_constscale_phi);
   fChain->SetBranchAddress("AntiKt6Tower_el_dr", &AntiKt6Tower_el_dr, &b_AntiKt6Tower_el_dr);
   fChain->SetBranchAddress("AntiKt6Tower_el_matched", &AntiKt6Tower_el_matched, &b_AntiKt6Tower_el_matched);
   fChain->SetBranchAddress("AntiKt6Tower_mu_dr", &AntiKt6Tower_mu_dr, &b_AntiKt6Tower_mu_dr);
   fChain->SetBranchAddress("AntiKt6Tower_mu_matched", &AntiKt6Tower_mu_matched, &b_AntiKt6Tower_mu_matched);
   fChain->SetBranchAddress("AntiKt6Tower_L1_dr", &AntiKt6Tower_L1_dr, &b_AntiKt6Tower_L1_dr);
   fChain->SetBranchAddress("AntiKt6Tower_L1_matched", &AntiKt6Tower_L1_matched, &b_AntiKt6Tower_L1_matched);
   fChain->SetBranchAddress("AntiKt6Tower_L2_dr", &AntiKt6Tower_L2_dr, &b_AntiKt6Tower_L2_dr);
   fChain->SetBranchAddress("AntiKt6Tower_L2_matched", &AntiKt6Tower_L2_matched, &b_AntiKt6Tower_L2_matched);
   fChain->SetBranchAddress("AntiKt6Tower_EF_dr", &AntiKt6Tower_EF_dr, &b_AntiKt6Tower_EF_dr);
   fChain->SetBranchAddress("AntiKt6Tower_EF_matched", &AntiKt6Tower_EF_matched, &b_AntiKt6Tower_EF_matched);
   fChain->SetBranchAddress("AntiKt6LCTopo_n", &AntiKt6LCTopo_n, &b_AntiKt6LCTopo_n);
   fChain->SetBranchAddress("AntiKt6LCTopo_E", &AntiKt6LCTopo_E, &b_AntiKt6LCTopo_E);
   fChain->SetBranchAddress("AntiKt6LCTopo_pt", &AntiKt6LCTopo_pt, &b_AntiKt6LCTopo_pt);
   fChain->SetBranchAddress("AntiKt6LCTopo_m", &AntiKt6LCTopo_m, &b_AntiKt6LCTopo_m);
   fChain->SetBranchAddress("AntiKt6LCTopo_eta", &AntiKt6LCTopo_eta, &b_AntiKt6LCTopo_eta);
   fChain->SetBranchAddress("AntiKt6LCTopo_phi", &AntiKt6LCTopo_phi, &b_AntiKt6LCTopo_phi);
   fChain->SetBranchAddress("AntiKt6LCTopo_EtaOrigin", &AntiKt6LCTopo_EtaOrigin, &b_AntiKt6LCTopo_EtaOrigin);
   fChain->SetBranchAddress("AntiKt6LCTopo_PhiOrigin", &AntiKt6LCTopo_PhiOrigin, &b_AntiKt6LCTopo_PhiOrigin);
   fChain->SetBranchAddress("AntiKt6LCTopo_MOrigin", &AntiKt6LCTopo_MOrigin, &b_AntiKt6LCTopo_MOrigin);
   fChain->SetBranchAddress("AntiKt6LCTopo_WIDTH", &AntiKt6LCTopo_WIDTH, &b_AntiKt6LCTopo_WIDTH);
   fChain->SetBranchAddress("AntiKt6LCTopo_n90", &AntiKt6LCTopo_n90, &b_AntiKt6LCTopo_n90);
   fChain->SetBranchAddress("AntiKt6LCTopo_Timing", &AntiKt6LCTopo_Timing, &b_AntiKt6LCTopo_Timing);
   fChain->SetBranchAddress("AntiKt6LCTopo_LArQuality", &AntiKt6LCTopo_LArQuality, &b_AntiKt6LCTopo_LArQuality);
   fChain->SetBranchAddress("AntiKt6LCTopo_nTrk", &AntiKt6LCTopo_nTrk, &b_AntiKt6LCTopo_nTrk);
   fChain->SetBranchAddress("AntiKt6LCTopo_sumPtTrk", &AntiKt6LCTopo_sumPtTrk, &b_AntiKt6LCTopo_sumPtTrk);
   fChain->SetBranchAddress("AntiKt6LCTopo_OriginIndex", &AntiKt6LCTopo_OriginIndex, &b_AntiKt6LCTopo_OriginIndex);
   fChain->SetBranchAddress("AntiKt6LCTopo_HECQuality", &AntiKt6LCTopo_HECQuality, &b_AntiKt6LCTopo_HECQuality);
   fChain->SetBranchAddress("AntiKt6LCTopo_NegativeE", &AntiKt6LCTopo_NegativeE, &b_AntiKt6LCTopo_NegativeE);
   fChain->SetBranchAddress("AntiKt6LCTopo_AverageLArQF", &AntiKt6LCTopo_AverageLArQF, &b_AntiKt6LCTopo_AverageLArQF);
   fChain->SetBranchAddress("AntiKt6LCTopo_BCH_CORR_CELL", &AntiKt6LCTopo_BCH_CORR_CELL, &b_AntiKt6LCTopo_BCH_CORR_CELL);
   fChain->SetBranchAddress("AntiKt6LCTopo_BCH_CORR_DOTX", &AntiKt6LCTopo_BCH_CORR_DOTX, &b_AntiKt6LCTopo_BCH_CORR_DOTX);
   fChain->SetBranchAddress("AntiKt6LCTopo_BCH_CORR_JET", &AntiKt6LCTopo_BCH_CORR_JET, &b_AntiKt6LCTopo_BCH_CORR_JET);
   fChain->SetBranchAddress("AntiKt6LCTopo_BCH_CORR_JET_FORCELL", &AntiKt6LCTopo_BCH_CORR_JET_FORCELL, &b_AntiKt6LCTopo_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("AntiKt6LCTopo_ENG_BAD_CELLS", &AntiKt6LCTopo_ENG_BAD_CELLS, &b_AntiKt6LCTopo_ENG_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt6LCTopo_N_BAD_CELLS", &AntiKt6LCTopo_N_BAD_CELLS, &b_AntiKt6LCTopo_N_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt6LCTopo_N_BAD_CELLS_CORR", &AntiKt6LCTopo_N_BAD_CELLS_CORR, &b_AntiKt6LCTopo_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("AntiKt6LCTopo_BAD_CELLS_CORR_E", &AntiKt6LCTopo_BAD_CELLS_CORR_E, &b_AntiKt6LCTopo_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("AntiKt6LCTopo_NumTowers", &AntiKt6LCTopo_NumTowers, &b_AntiKt6LCTopo_NumTowers);
   fChain->SetBranchAddress("AntiKt6LCTopo_ootFracCells5", &AntiKt6LCTopo_ootFracCells5, &b_AntiKt6LCTopo_ootFracCells5);
   fChain->SetBranchAddress("AntiKt6LCTopo_ootFracCells10", &AntiKt6LCTopo_ootFracCells10, &b_AntiKt6LCTopo_ootFracCells10);
   fChain->SetBranchAddress("AntiKt6LCTopo_ootFracClusters5", &AntiKt6LCTopo_ootFracClusters5, &b_AntiKt6LCTopo_ootFracClusters5);
   fChain->SetBranchAddress("AntiKt6LCTopo_ootFracClusters10", &AntiKt6LCTopo_ootFracClusters10, &b_AntiKt6LCTopo_ootFracClusters10);
   fChain->SetBranchAddress("AntiKt6LCTopo_SamplingMax", &AntiKt6LCTopo_SamplingMax, &b_AntiKt6LCTopo_SamplingMax);
   fChain->SetBranchAddress("AntiKt6LCTopo_fracSamplingMax", &AntiKt6LCTopo_fracSamplingMax, &b_AntiKt6LCTopo_fracSamplingMax);
   fChain->SetBranchAddress("AntiKt6LCTopo_hecf", &AntiKt6LCTopo_hecf, &b_AntiKt6LCTopo_hecf);
   fChain->SetBranchAddress("AntiKt6LCTopo_tgap3f", &AntiKt6LCTopo_tgap3f, &b_AntiKt6LCTopo_tgap3f);
   fChain->SetBranchAddress("AntiKt6LCTopo_isUgly", &AntiKt6LCTopo_isUgly, &b_AntiKt6LCTopo_isUgly);
   fChain->SetBranchAddress("AntiKt6LCTopo_isBadLooseMinus", &AntiKt6LCTopo_isBadLooseMinus, &b_AntiKt6LCTopo_isBadLooseMinus);
   fChain->SetBranchAddress("AntiKt6LCTopo_isBadLoose", &AntiKt6LCTopo_isBadLoose, &b_AntiKt6LCTopo_isBadLoose);
   fChain->SetBranchAddress("AntiKt6LCTopo_isBadMedium", &AntiKt6LCTopo_isBadMedium, &b_AntiKt6LCTopo_isBadMedium);
   fChain->SetBranchAddress("AntiKt6LCTopo_isBadTight", &AntiKt6LCTopo_isBadTight, &b_AntiKt6LCTopo_isBadTight);
   fChain->SetBranchAddress("AntiKt6LCTopo_emfrac", &AntiKt6LCTopo_emfrac, &b_AntiKt6LCTopo_emfrac);
   fChain->SetBranchAddress("AntiKt6LCTopo_Offset", &AntiKt6LCTopo_Offset, &b_AntiKt6LCTopo_Offset);
   fChain->SetBranchAddress("AntiKt6LCTopo_EMJES", &AntiKt6LCTopo_EMJES, &b_AntiKt6LCTopo_EMJES);
   fChain->SetBranchAddress("AntiKt6LCTopo_EMJES_EtaCorr", &AntiKt6LCTopo_EMJES_EtaCorr, &b_AntiKt6LCTopo_EMJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt6LCTopo_EMJESnooffset", &AntiKt6LCTopo_EMJESnooffset, &b_AntiKt6LCTopo_EMJESnooffset);
   fChain->SetBranchAddress("AntiKt6LCTopo_LCJES", &AntiKt6LCTopo_LCJES, &b_AntiKt6LCTopo_LCJES);
   fChain->SetBranchAddress("AntiKt6LCTopo_LCJES_EtaCorr", &AntiKt6LCTopo_LCJES_EtaCorr, &b_AntiKt6LCTopo_LCJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt6LCTopo_emscale_E", &AntiKt6LCTopo_emscale_E, &b_AntiKt6LCTopo_emscale_E);
   fChain->SetBranchAddress("AntiKt6LCTopo_emscale_pt", &AntiKt6LCTopo_emscale_pt, &b_AntiKt6LCTopo_emscale_pt);
   fChain->SetBranchAddress("AntiKt6LCTopo_emscale_m", &AntiKt6LCTopo_emscale_m, &b_AntiKt6LCTopo_emscale_m);
   fChain->SetBranchAddress("AntiKt6LCTopo_emscale_eta", &AntiKt6LCTopo_emscale_eta, &b_AntiKt6LCTopo_emscale_eta);
   fChain->SetBranchAddress("AntiKt6LCTopo_emscale_phi", &AntiKt6LCTopo_emscale_phi, &b_AntiKt6LCTopo_emscale_phi);
   fChain->SetBranchAddress("AntiKt6LCTopo_jvtx_x", &AntiKt6LCTopo_jvtx_x, &b_AntiKt6LCTopo_jvtx_x);
   fChain->SetBranchAddress("AntiKt6LCTopo_jvtx_y", &AntiKt6LCTopo_jvtx_y, &b_AntiKt6LCTopo_jvtx_y);
   fChain->SetBranchAddress("AntiKt6LCTopo_jvtx_z", &AntiKt6LCTopo_jvtx_z, &b_AntiKt6LCTopo_jvtx_z);
   fChain->SetBranchAddress("AntiKt6LCTopo_jvtxf", &AntiKt6LCTopo_jvtxf, &b_AntiKt6LCTopo_jvtxf);
   fChain->SetBranchAddress("AntiKt6LCTopo_GSCFactorF", &AntiKt6LCTopo_GSCFactorF, &b_AntiKt6LCTopo_GSCFactorF);
   fChain->SetBranchAddress("AntiKt6LCTopo_WidthFraction", &AntiKt6LCTopo_WidthFraction, &b_AntiKt6LCTopo_WidthFraction);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_PreSamplerB", &AntiKt6LCTopo_e_PreSamplerB, &b_AntiKt6LCTopo_e_PreSamplerB);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_EMB1", &AntiKt6LCTopo_e_EMB1, &b_AntiKt6LCTopo_e_EMB1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_EMB2", &AntiKt6LCTopo_e_EMB2, &b_AntiKt6LCTopo_e_EMB2);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_EMB3", &AntiKt6LCTopo_e_EMB3, &b_AntiKt6LCTopo_e_EMB3);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_PreSamplerE", &AntiKt6LCTopo_e_PreSamplerE, &b_AntiKt6LCTopo_e_PreSamplerE);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_EME1", &AntiKt6LCTopo_e_EME1, &b_AntiKt6LCTopo_e_EME1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_EME2", &AntiKt6LCTopo_e_EME2, &b_AntiKt6LCTopo_e_EME2);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_EME3", &AntiKt6LCTopo_e_EME3, &b_AntiKt6LCTopo_e_EME3);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_HEC0", &AntiKt6LCTopo_e_HEC0, &b_AntiKt6LCTopo_e_HEC0);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_HEC1", &AntiKt6LCTopo_e_HEC1, &b_AntiKt6LCTopo_e_HEC1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_HEC2", &AntiKt6LCTopo_e_HEC2, &b_AntiKt6LCTopo_e_HEC2);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_HEC3", &AntiKt6LCTopo_e_HEC3, &b_AntiKt6LCTopo_e_HEC3);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileBar0", &AntiKt6LCTopo_e_TileBar0, &b_AntiKt6LCTopo_e_TileBar0);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileBar1", &AntiKt6LCTopo_e_TileBar1, &b_AntiKt6LCTopo_e_TileBar1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileBar2", &AntiKt6LCTopo_e_TileBar2, &b_AntiKt6LCTopo_e_TileBar2);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileGap1", &AntiKt6LCTopo_e_TileGap1, &b_AntiKt6LCTopo_e_TileGap1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileGap2", &AntiKt6LCTopo_e_TileGap2, &b_AntiKt6LCTopo_e_TileGap2);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileGap3", &AntiKt6LCTopo_e_TileGap3, &b_AntiKt6LCTopo_e_TileGap3);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileExt0", &AntiKt6LCTopo_e_TileExt0, &b_AntiKt6LCTopo_e_TileExt0);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileExt1", &AntiKt6LCTopo_e_TileExt1, &b_AntiKt6LCTopo_e_TileExt1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_TileExt2", &AntiKt6LCTopo_e_TileExt2, &b_AntiKt6LCTopo_e_TileExt2);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_FCAL0", &AntiKt6LCTopo_e_FCAL0, &b_AntiKt6LCTopo_e_FCAL0);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_FCAL1", &AntiKt6LCTopo_e_FCAL1, &b_AntiKt6LCTopo_e_FCAL1);
   fChain->SetBranchAddress("AntiKt6LCTopo_e_FCAL2", &AntiKt6LCTopo_e_FCAL2, &b_AntiKt6LCTopo_e_FCAL2);
   fChain->SetBranchAddress("AntiKt6LCTopo_shapeBins", &AntiKt6LCTopo_shapeBins, &b_AntiKt6LCTopo_shapeBins);
   fChain->SetBranchAddress("AntiKt6LCTopo_Nconst", &AntiKt6LCTopo_Nconst, &b_AntiKt6LCTopo_Nconst);
   fChain->SetBranchAddress("AntiKt6LCTopo_ptconst_default", &AntiKt6LCTopo_ptconst_default, &b_AntiKt6LCTopo_ptconst_default);
   fChain->SetBranchAddress("AntiKt6LCTopo_econst_default", &AntiKt6LCTopo_econst_default, &b_AntiKt6LCTopo_econst_default);
   fChain->SetBranchAddress("AntiKt6LCTopo_etaconst_default", &AntiKt6LCTopo_etaconst_default, &b_AntiKt6LCTopo_etaconst_default);
   fChain->SetBranchAddress("AntiKt6LCTopo_phiconst_default", &AntiKt6LCTopo_phiconst_default, &b_AntiKt6LCTopo_phiconst_default);
   fChain->SetBranchAddress("AntiKt6LCTopo_weightconst_default", &AntiKt6LCTopo_weightconst_default, &b_AntiKt6LCTopo_weightconst_default);
   fChain->SetBranchAddress("AntiKt6LCTopo_constscale_E", &AntiKt6LCTopo_constscale_E, &b_AntiKt6LCTopo_constscale_E);
   fChain->SetBranchAddress("AntiKt6LCTopo_constscale_pt", &AntiKt6LCTopo_constscale_pt, &b_AntiKt6LCTopo_constscale_pt);
   fChain->SetBranchAddress("AntiKt6LCTopo_constscale_m", &AntiKt6LCTopo_constscale_m, &b_AntiKt6LCTopo_constscale_m);
   fChain->SetBranchAddress("AntiKt6LCTopo_constscale_eta", &AntiKt6LCTopo_constscale_eta, &b_AntiKt6LCTopo_constscale_eta);
   fChain->SetBranchAddress("AntiKt6LCTopo_constscale_phi", &AntiKt6LCTopo_constscale_phi, &b_AntiKt6LCTopo_constscale_phi);
   fChain->SetBranchAddress("AntiKt6LCTopo_el_dr", &AntiKt6LCTopo_el_dr, &b_AntiKt6LCTopo_el_dr);
   fChain->SetBranchAddress("AntiKt6LCTopo_el_matched", &AntiKt6LCTopo_el_matched, &b_AntiKt6LCTopo_el_matched);
   fChain->SetBranchAddress("AntiKt6LCTopo_mu_dr", &AntiKt6LCTopo_mu_dr, &b_AntiKt6LCTopo_mu_dr);
   fChain->SetBranchAddress("AntiKt6LCTopo_mu_matched", &AntiKt6LCTopo_mu_matched, &b_AntiKt6LCTopo_mu_matched);
   fChain->SetBranchAddress("AntiKt6LCTopo_L1_dr", &AntiKt6LCTopo_L1_dr, &b_AntiKt6LCTopo_L1_dr);
   fChain->SetBranchAddress("AntiKt6LCTopo_L1_matched", &AntiKt6LCTopo_L1_matched, &b_AntiKt6LCTopo_L1_matched);
   fChain->SetBranchAddress("AntiKt6LCTopo_L2_dr", &AntiKt6LCTopo_L2_dr, &b_AntiKt6LCTopo_L2_dr);
   fChain->SetBranchAddress("AntiKt6LCTopo_L2_matched", &AntiKt6LCTopo_L2_matched, &b_AntiKt6LCTopo_L2_matched);
   fChain->SetBranchAddress("AntiKt6LCTopo_EF_dr", &AntiKt6LCTopo_EF_dr, &b_AntiKt6LCTopo_EF_dr);
   fChain->SetBranchAddress("AntiKt6LCTopo_EF_matched", &AntiKt6LCTopo_EF_matched, &b_AntiKt6LCTopo_EF_matched);
   fChain->SetBranchAddress("AntiKt6TopoEM_n", &AntiKt6TopoEM_n, &b_AntiKt6TopoEM_n);
   fChain->SetBranchAddress("AntiKt6TopoEM_E", &AntiKt6TopoEM_E, &b_AntiKt6TopoEM_E);
   fChain->SetBranchAddress("AntiKt6TopoEM_pt", &AntiKt6TopoEM_pt, &b_AntiKt6TopoEM_pt);
   fChain->SetBranchAddress("AntiKt6TopoEM_m", &AntiKt6TopoEM_m, &b_AntiKt6TopoEM_m);
   fChain->SetBranchAddress("AntiKt6TopoEM_eta", &AntiKt6TopoEM_eta, &b_AntiKt6TopoEM_eta);
   fChain->SetBranchAddress("AntiKt6TopoEM_phi", &AntiKt6TopoEM_phi, &b_AntiKt6TopoEM_phi);
   fChain->SetBranchAddress("AntiKt6TopoEM_EtaOrigin", &AntiKt6TopoEM_EtaOrigin, &b_AntiKt6TopoEM_EtaOrigin);
   fChain->SetBranchAddress("AntiKt6TopoEM_PhiOrigin", &AntiKt6TopoEM_PhiOrigin, &b_AntiKt6TopoEM_PhiOrigin);
   fChain->SetBranchAddress("AntiKt6TopoEM_MOrigin", &AntiKt6TopoEM_MOrigin, &b_AntiKt6TopoEM_MOrigin);
   fChain->SetBranchAddress("AntiKt6TopoEM_WIDTH", &AntiKt6TopoEM_WIDTH, &b_AntiKt6TopoEM_WIDTH);
   fChain->SetBranchAddress("AntiKt6TopoEM_n90", &AntiKt6TopoEM_n90, &b_AntiKt6TopoEM_n90);
   fChain->SetBranchAddress("AntiKt6TopoEM_Timing", &AntiKt6TopoEM_Timing, &b_AntiKt6TopoEM_Timing);
   fChain->SetBranchAddress("AntiKt6TopoEM_LArQuality", &AntiKt6TopoEM_LArQuality, &b_AntiKt6TopoEM_LArQuality);
   fChain->SetBranchAddress("AntiKt6TopoEM_nTrk", &AntiKt6TopoEM_nTrk, &b_AntiKt6TopoEM_nTrk);
   fChain->SetBranchAddress("AntiKt6TopoEM_sumPtTrk", &AntiKt6TopoEM_sumPtTrk, &b_AntiKt6TopoEM_sumPtTrk);
   fChain->SetBranchAddress("AntiKt6TopoEM_OriginIndex", &AntiKt6TopoEM_OriginIndex, &b_AntiKt6TopoEM_OriginIndex);
   fChain->SetBranchAddress("AntiKt6TopoEM_HECQuality", &AntiKt6TopoEM_HECQuality, &b_AntiKt6TopoEM_HECQuality);
   fChain->SetBranchAddress("AntiKt6TopoEM_NegativeE", &AntiKt6TopoEM_NegativeE, &b_AntiKt6TopoEM_NegativeE);
   fChain->SetBranchAddress("AntiKt6TopoEM_AverageLArQF", &AntiKt6TopoEM_AverageLArQF, &b_AntiKt6TopoEM_AverageLArQF);
   fChain->SetBranchAddress("AntiKt6TopoEM_BCH_CORR_CELL", &AntiKt6TopoEM_BCH_CORR_CELL, &b_AntiKt6TopoEM_BCH_CORR_CELL);
   fChain->SetBranchAddress("AntiKt6TopoEM_BCH_CORR_DOTX", &AntiKt6TopoEM_BCH_CORR_DOTX, &b_AntiKt6TopoEM_BCH_CORR_DOTX);
   fChain->SetBranchAddress("AntiKt6TopoEM_BCH_CORR_JET", &AntiKt6TopoEM_BCH_CORR_JET, &b_AntiKt6TopoEM_BCH_CORR_JET);
   fChain->SetBranchAddress("AntiKt6TopoEM_BCH_CORR_JET_FORCELL", &AntiKt6TopoEM_BCH_CORR_JET_FORCELL, &b_AntiKt6TopoEM_BCH_CORR_JET_FORCELL);
   fChain->SetBranchAddress("AntiKt6TopoEM_ENG_BAD_CELLS", &AntiKt6TopoEM_ENG_BAD_CELLS, &b_AntiKt6TopoEM_ENG_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt6TopoEM_N_BAD_CELLS", &AntiKt6TopoEM_N_BAD_CELLS, &b_AntiKt6TopoEM_N_BAD_CELLS);
   fChain->SetBranchAddress("AntiKt6TopoEM_N_BAD_CELLS_CORR", &AntiKt6TopoEM_N_BAD_CELLS_CORR, &b_AntiKt6TopoEM_N_BAD_CELLS_CORR);
   fChain->SetBranchAddress("AntiKt6TopoEM_BAD_CELLS_CORR_E", &AntiKt6TopoEM_BAD_CELLS_CORR_E, &b_AntiKt6TopoEM_BAD_CELLS_CORR_E);
   fChain->SetBranchAddress("AntiKt6TopoEM_NumTowers", &AntiKt6TopoEM_NumTowers, &b_AntiKt6TopoEM_NumTowers);
   fChain->SetBranchAddress("AntiKt6TopoEM_ootFracCells5", &AntiKt6TopoEM_ootFracCells5, &b_AntiKt6TopoEM_ootFracCells5);
   fChain->SetBranchAddress("AntiKt6TopoEM_ootFracCells10", &AntiKt6TopoEM_ootFracCells10, &b_AntiKt6TopoEM_ootFracCells10);
   fChain->SetBranchAddress("AntiKt6TopoEM_ootFracClusters5", &AntiKt6TopoEM_ootFracClusters5, &b_AntiKt6TopoEM_ootFracClusters5);
   fChain->SetBranchAddress("AntiKt6TopoEM_ootFracClusters10", &AntiKt6TopoEM_ootFracClusters10, &b_AntiKt6TopoEM_ootFracClusters10);
   fChain->SetBranchAddress("AntiKt6TopoEM_SamplingMax", &AntiKt6TopoEM_SamplingMax, &b_AntiKt6TopoEM_SamplingMax);
   fChain->SetBranchAddress("AntiKt6TopoEM_fracSamplingMax", &AntiKt6TopoEM_fracSamplingMax, &b_AntiKt6TopoEM_fracSamplingMax);
   fChain->SetBranchAddress("AntiKt6TopoEM_hecf", &AntiKt6TopoEM_hecf, &b_AntiKt6TopoEM_hecf);
   fChain->SetBranchAddress("AntiKt6TopoEM_tgap3f", &AntiKt6TopoEM_tgap3f, &b_AntiKt6TopoEM_tgap3f);
   fChain->SetBranchAddress("AntiKt6TopoEM_isUgly", &AntiKt6TopoEM_isUgly, &b_AntiKt6TopoEM_isUgly);
   fChain->SetBranchAddress("AntiKt6TopoEM_isBadLooseMinus", &AntiKt6TopoEM_isBadLooseMinus, &b_AntiKt6TopoEM_isBadLooseMinus);
   fChain->SetBranchAddress("AntiKt6TopoEM_isBadLoose", &AntiKt6TopoEM_isBadLoose, &b_AntiKt6TopoEM_isBadLoose);
   fChain->SetBranchAddress("AntiKt6TopoEM_isBadMedium", &AntiKt6TopoEM_isBadMedium, &b_AntiKt6TopoEM_isBadMedium);
   fChain->SetBranchAddress("AntiKt6TopoEM_isBadTight", &AntiKt6TopoEM_isBadTight, &b_AntiKt6TopoEM_isBadTight);
   fChain->SetBranchAddress("AntiKt6TopoEM_emfrac", &AntiKt6TopoEM_emfrac, &b_AntiKt6TopoEM_emfrac);
   fChain->SetBranchAddress("AntiKt6TopoEM_Offset", &AntiKt6TopoEM_Offset, &b_AntiKt6TopoEM_Offset);
   fChain->SetBranchAddress("AntiKt6TopoEM_EMJES", &AntiKt6TopoEM_EMJES, &b_AntiKt6TopoEM_EMJES);
   fChain->SetBranchAddress("AntiKt6TopoEM_EMJES_EtaCorr", &AntiKt6TopoEM_EMJES_EtaCorr, &b_AntiKt6TopoEM_EMJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt6TopoEM_EMJESnooffset", &AntiKt6TopoEM_EMJESnooffset, &b_AntiKt6TopoEM_EMJESnooffset);
   fChain->SetBranchAddress("AntiKt6TopoEM_LCJES", &AntiKt6TopoEM_LCJES, &b_AntiKt6TopoEM_LCJES);
   fChain->SetBranchAddress("AntiKt6TopoEM_LCJES_EtaCorr", &AntiKt6TopoEM_LCJES_EtaCorr, &b_AntiKt6TopoEM_LCJES_EtaCorr);
   fChain->SetBranchAddress("AntiKt6TopoEM_emscale_E", &AntiKt6TopoEM_emscale_E, &b_AntiKt6TopoEM_emscale_E);
   fChain->SetBranchAddress("AntiKt6TopoEM_emscale_pt", &AntiKt6TopoEM_emscale_pt, &b_AntiKt6TopoEM_emscale_pt);
   fChain->SetBranchAddress("AntiKt6TopoEM_emscale_m", &AntiKt6TopoEM_emscale_m, &b_AntiKt6TopoEM_emscale_m);
   fChain->SetBranchAddress("AntiKt6TopoEM_emscale_eta", &AntiKt6TopoEM_emscale_eta, &b_AntiKt6TopoEM_emscale_eta);
   fChain->SetBranchAddress("AntiKt6TopoEM_emscale_phi", &AntiKt6TopoEM_emscale_phi, &b_AntiKt6TopoEM_emscale_phi);
   fChain->SetBranchAddress("AntiKt6TopoEM_jvtx_x", &AntiKt6TopoEM_jvtx_x, &b_AntiKt6TopoEM_jvtx_x);
   fChain->SetBranchAddress("AntiKt6TopoEM_jvtx_y", &AntiKt6TopoEM_jvtx_y, &b_AntiKt6TopoEM_jvtx_y);
   fChain->SetBranchAddress("AntiKt6TopoEM_jvtx_z", &AntiKt6TopoEM_jvtx_z, &b_AntiKt6TopoEM_jvtx_z);
   fChain->SetBranchAddress("AntiKt6TopoEM_jvtxf", &AntiKt6TopoEM_jvtxf, &b_AntiKt6TopoEM_jvtxf);
   fChain->SetBranchAddress("AntiKt6TopoEM_GSCFactorF", &AntiKt6TopoEM_GSCFactorF, &b_AntiKt6TopoEM_GSCFactorF);
   fChain->SetBranchAddress("AntiKt6TopoEM_WidthFraction", &AntiKt6TopoEM_WidthFraction, &b_AntiKt6TopoEM_WidthFraction);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_PreSamplerB", &AntiKt6TopoEM_e_PreSamplerB, &b_AntiKt6TopoEM_e_PreSamplerB);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_EMB1", &AntiKt6TopoEM_e_EMB1, &b_AntiKt6TopoEM_e_EMB1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_EMB2", &AntiKt6TopoEM_e_EMB2, &b_AntiKt6TopoEM_e_EMB2);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_EMB3", &AntiKt6TopoEM_e_EMB3, &b_AntiKt6TopoEM_e_EMB3);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_PreSamplerE", &AntiKt6TopoEM_e_PreSamplerE, &b_AntiKt6TopoEM_e_PreSamplerE);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_EME1", &AntiKt6TopoEM_e_EME1, &b_AntiKt6TopoEM_e_EME1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_EME2", &AntiKt6TopoEM_e_EME2, &b_AntiKt6TopoEM_e_EME2);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_EME3", &AntiKt6TopoEM_e_EME3, &b_AntiKt6TopoEM_e_EME3);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_HEC0", &AntiKt6TopoEM_e_HEC0, &b_AntiKt6TopoEM_e_HEC0);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_HEC1", &AntiKt6TopoEM_e_HEC1, &b_AntiKt6TopoEM_e_HEC1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_HEC2", &AntiKt6TopoEM_e_HEC2, &b_AntiKt6TopoEM_e_HEC2);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_HEC3", &AntiKt6TopoEM_e_HEC3, &b_AntiKt6TopoEM_e_HEC3);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileBar0", &AntiKt6TopoEM_e_TileBar0, &b_AntiKt6TopoEM_e_TileBar0);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileBar1", &AntiKt6TopoEM_e_TileBar1, &b_AntiKt6TopoEM_e_TileBar1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileBar2", &AntiKt6TopoEM_e_TileBar2, &b_AntiKt6TopoEM_e_TileBar2);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileGap1", &AntiKt6TopoEM_e_TileGap1, &b_AntiKt6TopoEM_e_TileGap1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileGap2", &AntiKt6TopoEM_e_TileGap2, &b_AntiKt6TopoEM_e_TileGap2);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileGap3", &AntiKt6TopoEM_e_TileGap3, &b_AntiKt6TopoEM_e_TileGap3);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileExt0", &AntiKt6TopoEM_e_TileExt0, &b_AntiKt6TopoEM_e_TileExt0);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileExt1", &AntiKt6TopoEM_e_TileExt1, &b_AntiKt6TopoEM_e_TileExt1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_TileExt2", &AntiKt6TopoEM_e_TileExt2, &b_AntiKt6TopoEM_e_TileExt2);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_FCAL0", &AntiKt6TopoEM_e_FCAL0, &b_AntiKt6TopoEM_e_FCAL0);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_FCAL1", &AntiKt6TopoEM_e_FCAL1, &b_AntiKt6TopoEM_e_FCAL1);
   fChain->SetBranchAddress("AntiKt6TopoEM_e_FCAL2", &AntiKt6TopoEM_e_FCAL2, &b_AntiKt6TopoEM_e_FCAL2);
   fChain->SetBranchAddress("AntiKt6TopoEM_shapeBins", &AntiKt6TopoEM_shapeBins, &b_AntiKt6TopoEM_shapeBins);
   fChain->SetBranchAddress("AntiKt6TopoEM_Nconst", &AntiKt6TopoEM_Nconst, &b_AntiKt6TopoEM_Nconst);
   fChain->SetBranchAddress("AntiKt6TopoEM_ptconst_default", &AntiKt6TopoEM_ptconst_default, &b_AntiKt6TopoEM_ptconst_default);
   fChain->SetBranchAddress("AntiKt6TopoEM_econst_default", &AntiKt6TopoEM_econst_default, &b_AntiKt6TopoEM_econst_default);
   fChain->SetBranchAddress("AntiKt6TopoEM_etaconst_default", &AntiKt6TopoEM_etaconst_default, &b_AntiKt6TopoEM_etaconst_default);
   fChain->SetBranchAddress("AntiKt6TopoEM_phiconst_default", &AntiKt6TopoEM_phiconst_default, &b_AntiKt6TopoEM_phiconst_default);
   fChain->SetBranchAddress("AntiKt6TopoEM_weightconst_default", &AntiKt6TopoEM_weightconst_default, &b_AntiKt6TopoEM_weightconst_default);
   fChain->SetBranchAddress("AntiKt6TopoEM_constscale_E", &AntiKt6TopoEM_constscale_E, &b_AntiKt6TopoEM_constscale_E);
   fChain->SetBranchAddress("AntiKt6TopoEM_constscale_pt", &AntiKt6TopoEM_constscale_pt, &b_AntiKt6TopoEM_constscale_pt);
   fChain->SetBranchAddress("AntiKt6TopoEM_constscale_m", &AntiKt6TopoEM_constscale_m, &b_AntiKt6TopoEM_constscale_m);
   fChain->SetBranchAddress("AntiKt6TopoEM_constscale_eta", &AntiKt6TopoEM_constscale_eta, &b_AntiKt6TopoEM_constscale_eta);
   fChain->SetBranchAddress("AntiKt6TopoEM_constscale_phi", &AntiKt6TopoEM_constscale_phi, &b_AntiKt6TopoEM_constscale_phi);
   fChain->SetBranchAddress("AntiKt6TopoEM_el_dr", &AntiKt6TopoEM_el_dr, &b_AntiKt6TopoEM_el_dr);
   fChain->SetBranchAddress("AntiKt6TopoEM_el_matched", &AntiKt6TopoEM_el_matched, &b_AntiKt6TopoEM_el_matched);
   fChain->SetBranchAddress("AntiKt6TopoEM_mu_dr", &AntiKt6TopoEM_mu_dr, &b_AntiKt6TopoEM_mu_dr);
   fChain->SetBranchAddress("AntiKt6TopoEM_mu_matched", &AntiKt6TopoEM_mu_matched, &b_AntiKt6TopoEM_mu_matched);
   fChain->SetBranchAddress("AntiKt6TopoEM_L1_dr", &AntiKt6TopoEM_L1_dr, &b_AntiKt6TopoEM_L1_dr);
   fChain->SetBranchAddress("AntiKt6TopoEM_L1_matched", &AntiKt6TopoEM_L1_matched, &b_AntiKt6TopoEM_L1_matched);
   fChain->SetBranchAddress("AntiKt6TopoEM_L2_dr", &AntiKt6TopoEM_L2_dr, &b_AntiKt6TopoEM_L2_dr);
   fChain->SetBranchAddress("AntiKt6TopoEM_L2_matched", &AntiKt6TopoEM_L2_matched, &b_AntiKt6TopoEM_L2_matched);
   fChain->SetBranchAddress("AntiKt6TopoEM_EF_dr", &AntiKt6TopoEM_EF_dr, &b_AntiKt6TopoEM_EF_dr);
   fChain->SetBranchAddress("AntiKt6TopoEM_EF_matched", &AntiKt6TopoEM_EF_matched, &b_AntiKt6TopoEM_EF_matched);
   fChain->SetBranchAddress("HIFlow_v1_PsiFCAL0_w", &HIFlow_v1_PsiFCAL0_w, &b_HIFlow_v1_PsiFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v1_PsiPFCAL0_w", &HIFlow_v1_PsiPFCAL0_w, &b_HIFlow_v1_PsiPFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v1_PsiNFCAL0_w", &HIFlow_v1_PsiNFCAL0_w, &b_HIFlow_v1_PsiNFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v1_EtInLayer", &HIFlow_v1_EtInLayer, &b_HIFlow_v1_EtInLayer);
   fChain->SetBranchAddress("HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v1_AvgV2fromCalo", &HIFlow_v1_AvgV2fromCalo, &b_HIFlow_v1_AvgV2fromCalo);
   fChain->SetBranchAddress("HIFlow_v1_PsiHICaloUtilLayers", &HIFlow_v1_PsiHICaloUtilLayers, &b_HIFlow_v1_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v1_PsiEtHICaloUtilLayers", &HIFlow_v1_PsiEtHICaloUtilLayers, &b_HIFlow_v1_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v1_PsiPtrack", &HIFlow_v1_PsiPtrack, &b_HIFlow_v1_PsiPtrack);
   fChain->SetBranchAddress("HIFlow_v1_PsiNtrack", &HIFlow_v1_PsiNtrack, &b_HIFlow_v1_PsiNtrack);
   fChain->SetBranchAddress("HIFlow_v1_v2FCAL0sil", &HIFlow_v1_v2FCAL0sil, &b_HIFlow_v1_v2FCAL0sil);
   fChain->SetBranchAddress("HIFlow_v1_v2track", &HIFlow_v1_v2track, &b_HIFlow_v1_v2track);
   fChain->SetBranchAddress("HIFlow_v1_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v1_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v1_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v2_PsiFCAL0_w", &HIFlow_v2_PsiFCAL0_w, &b_HIFlow_v2_PsiFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v2_PsiPFCAL0_w", &HIFlow_v2_PsiPFCAL0_w, &b_HIFlow_v2_PsiPFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v2_PsiNFCAL0_w", &HIFlow_v2_PsiNFCAL0_w, &b_HIFlow_v2_PsiNFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v2_EtInLayer", &HIFlow_v2_EtInLayer, &b_HIFlow_v2_EtInLayer);
   fChain->SetBranchAddress("HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v2_AvgV2fromCalo", &HIFlow_v2_AvgV2fromCalo, &b_HIFlow_v2_AvgV2fromCalo);
   fChain->SetBranchAddress("HIFlow_v2_PsiHICaloUtilLayers", &HIFlow_v2_PsiHICaloUtilLayers, &b_HIFlow_v2_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v2_PsiEtHICaloUtilLayers", &HIFlow_v2_PsiEtHICaloUtilLayers, &b_HIFlow_v2_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v2_PsiPtrack", &HIFlow_v2_PsiPtrack, &b_HIFlow_v2_PsiPtrack);
   fChain->SetBranchAddress("HIFlow_v2_PsiNtrack", &HIFlow_v2_PsiNtrack, &b_HIFlow_v2_PsiNtrack);
   fChain->SetBranchAddress("HIFlow_v2_v2FCAL0sil", &HIFlow_v2_v2FCAL0sil, &b_HIFlow_v2_v2FCAL0sil);
   fChain->SetBranchAddress("HIFlow_v2_v2track", &HIFlow_v2_v2track, &b_HIFlow_v2_v2track);
   fChain->SetBranchAddress("HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v3_PsiFCAL0_w", &HIFlow_v3_PsiFCAL0_w, &b_HIFlow_v3_PsiFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v3_PsiPFCAL0_w", &HIFlow_v3_PsiPFCAL0_w, &b_HIFlow_v3_PsiPFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v3_PsiNFCAL0_w", &HIFlow_v3_PsiNFCAL0_w, &b_HIFlow_v3_PsiNFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v3_EtInLayer", &HIFlow_v3_EtInLayer, &b_HIFlow_v3_EtInLayer);
   fChain->SetBranchAddress("HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v3_AvgV2fromCalo", &HIFlow_v3_AvgV2fromCalo, &b_HIFlow_v3_AvgV2fromCalo);
   fChain->SetBranchAddress("HIFlow_v3_PsiHICaloUtilLayers", &HIFlow_v3_PsiHICaloUtilLayers, &b_HIFlow_v3_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v3_PsiEtHICaloUtilLayers", &HIFlow_v3_PsiEtHICaloUtilLayers, &b_HIFlow_v3_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v3_PsiPtrack", &HIFlow_v3_PsiPtrack, &b_HIFlow_v3_PsiPtrack);
   fChain->SetBranchAddress("HIFlow_v3_PsiNtrack", &HIFlow_v3_PsiNtrack, &b_HIFlow_v3_PsiNtrack);
   fChain->SetBranchAddress("HIFlow_v3_v2FCAL0sil", &HIFlow_v3_v2FCAL0sil, &b_HIFlow_v3_v2FCAL0sil);
   fChain->SetBranchAddress("HIFlow_v3_v2track", &HIFlow_v3_v2track, &b_HIFlow_v3_v2track);
   fChain->SetBranchAddress("HIFlow_v3_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v3_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v3_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v4_PsiFCAL0_w", &HIFlow_v4_PsiFCAL0_w, &b_HIFlow_v4_PsiFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v4_PsiPFCAL0_w", &HIFlow_v4_PsiPFCAL0_w, &b_HIFlow_v4_PsiPFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v4_PsiNFCAL0_w", &HIFlow_v4_PsiNFCAL0_w, &b_HIFlow_v4_PsiNFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v4_EtInLayer", &HIFlow_v4_EtInLayer, &b_HIFlow_v4_EtInLayer);
   fChain->SetBranchAddress("HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v4_AvgV2fromCalo", &HIFlow_v4_AvgV2fromCalo, &b_HIFlow_v4_AvgV2fromCalo);
   fChain->SetBranchAddress("HIFlow_v4_PsiHICaloUtilLayers", &HIFlow_v4_PsiHICaloUtilLayers, &b_HIFlow_v4_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v4_PsiEtHICaloUtilLayers", &HIFlow_v4_PsiEtHICaloUtilLayers, &b_HIFlow_v4_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v4_PsiPtrack", &HIFlow_v4_PsiPtrack, &b_HIFlow_v4_PsiPtrack);
   fChain->SetBranchAddress("HIFlow_v4_PsiNtrack", &HIFlow_v4_PsiNtrack, &b_HIFlow_v4_PsiNtrack);
   fChain->SetBranchAddress("HIFlow_v4_v2FCAL0sil", &HIFlow_v4_v2FCAL0sil, &b_HIFlow_v4_v2FCAL0sil);
   fChain->SetBranchAddress("HIFlow_v4_v2track", &HIFlow_v4_v2track, &b_HIFlow_v4_v2track);
   fChain->SetBranchAddress("HIFlow_v4_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v4_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v4_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v5_PsiFCAL0_w", &HIFlow_v5_PsiFCAL0_w, &b_HIFlow_v5_PsiFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v5_PsiPFCAL0_w", &HIFlow_v5_PsiPFCAL0_w, &b_HIFlow_v5_PsiPFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v5_PsiNFCAL0_w", &HIFlow_v5_PsiNFCAL0_w, &b_HIFlow_v5_PsiNFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v5_EtInLayer", &HIFlow_v5_EtInLayer, &b_HIFlow_v5_EtInLayer);
   fChain->SetBranchAddress("HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v5_AvgV2fromCalo", &HIFlow_v5_AvgV2fromCalo, &b_HIFlow_v5_AvgV2fromCalo);
   fChain->SetBranchAddress("HIFlow_v5_PsiHICaloUtilLayers", &HIFlow_v5_PsiHICaloUtilLayers, &b_HIFlow_v5_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v5_PsiEtHICaloUtilLayers", &HIFlow_v5_PsiEtHICaloUtilLayers, &b_HIFlow_v5_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v5_PsiPtrack", &HIFlow_v5_PsiPtrack, &b_HIFlow_v5_PsiPtrack);
   fChain->SetBranchAddress("HIFlow_v5_PsiNtrack", &HIFlow_v5_PsiNtrack, &b_HIFlow_v5_PsiNtrack);
   fChain->SetBranchAddress("HIFlow_v5_v2FCAL0sil", &HIFlow_v5_v2FCAL0sil, &b_HIFlow_v5_v2FCAL0sil);
   fChain->SetBranchAddress("HIFlow_v5_v2track", &HIFlow_v5_v2track, &b_HIFlow_v5_v2track);
   fChain->SetBranchAddress("HIFlow_v5_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v5_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v5_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v6_PsiFCAL0_w", &HIFlow_v6_PsiFCAL0_w, &b_HIFlow_v6_PsiFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v6_PsiPFCAL0_w", &HIFlow_v6_PsiPFCAL0_w, &b_HIFlow_v6_PsiPFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v6_PsiNFCAL0_w", &HIFlow_v6_PsiNFCAL0_w, &b_HIFlow_v6_PsiNFCAL0_w);
   fChain->SetBranchAddress("HIFlow_v6_EtInLayer", &HIFlow_v6_EtInLayer, &b_HIFlow_v6_EtInLayer);
   fChain->SetBranchAddress("HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("HIFlow_v6_AvgV2fromCalo", &HIFlow_v6_AvgV2fromCalo, &b_HIFlow_v6_AvgV2fromCalo);
   fChain->SetBranchAddress("HIFlow_v6_PsiHICaloUtilLayers", &HIFlow_v6_PsiHICaloUtilLayers, &b_HIFlow_v6_PsiHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v6_PsiEtHICaloUtilLayers", &HIFlow_v6_PsiEtHICaloUtilLayers, &b_HIFlow_v6_PsiEtHICaloUtilLayers);
   fChain->SetBranchAddress("HIFlow_v6_PsiPtrack", &HIFlow_v6_PsiPtrack, &b_HIFlow_v6_PsiPtrack);
   fChain->SetBranchAddress("HIFlow_v6_PsiNtrack", &HIFlow_v6_PsiNtrack, &b_HIFlow_v6_PsiNtrack);
   fChain->SetBranchAddress("HIFlow_v6_v2FCAL0sil", &HIFlow_v6_v2FCAL0sil, &b_HIFlow_v6_v2FCAL0sil);
   fChain->SetBranchAddress("HIFlow_v6_v2track", &HIFlow_v6_v2track, &b_HIFlow_v6_v2track);
   fChain->SetBranchAddress("HIFlow_v6_Meanv2_Psi_From_FCAL0CaloCel_IDLayers", &HIFlow_v6_Meanv2_Psi_From_FCAL0CaloCel_IDLayers, &b_HIFlow_v6_Meanv2_Psi_From_FCAL0CaloCel_IDLayers);
   fChain->SetBranchAddress("MET_RefFinal_etx", &MET_RefFinal_etx, &b_MET_RefFinal_etx);
   fChain->SetBranchAddress("MET_RefFinal_ety", &MET_RefFinal_ety, &b_MET_RefFinal_ety);
   fChain->SetBranchAddress("MET_RefFinal_phi", &MET_RefFinal_phi, &b_MET_RefFinal_phi);
   fChain->SetBranchAddress("MET_RefFinal_et", &MET_RefFinal_et, &b_MET_RefFinal_et);
   fChain->SetBranchAddress("MET_RefFinal_sumet", &MET_RefFinal_sumet, &b_MET_RefFinal_sumet);
   fChain->SetBranchAddress("MET_RefFinal_etx_CentralReg", &MET_RefFinal_etx_CentralReg, &b_MET_RefFinal_etx_CentralReg);
   fChain->SetBranchAddress("MET_RefFinal_ety_CentralReg", &MET_RefFinal_ety_CentralReg, &b_MET_RefFinal_ety_CentralReg);
   fChain->SetBranchAddress("MET_RefFinal_sumet_CentralReg", &MET_RefFinal_sumet_CentralReg, &b_MET_RefFinal_sumet_CentralReg);
   fChain->SetBranchAddress("MET_RefFinal_phi_CentralReg", &MET_RefFinal_phi_CentralReg, &b_MET_RefFinal_phi_CentralReg);
   fChain->SetBranchAddress("MET_RefFinal_etx_EndcapRegion", &MET_RefFinal_etx_EndcapRegion, &b_MET_RefFinal_etx_EndcapRegion);
   fChain->SetBranchAddress("MET_RefFinal_ety_EndcapRegion", &MET_RefFinal_ety_EndcapRegion, &b_MET_RefFinal_ety_EndcapRegion);
   fChain->SetBranchAddress("MET_RefFinal_sumet_EndcapRegion", &MET_RefFinal_sumet_EndcapRegion, &b_MET_RefFinal_sumet_EndcapRegion);
   fChain->SetBranchAddress("MET_RefFinal_phi_EndcapRegion", &MET_RefFinal_phi_EndcapRegion, &b_MET_RefFinal_phi_EndcapRegion);
   fChain->SetBranchAddress("MET_RefFinal_etx_ForwardReg", &MET_RefFinal_etx_ForwardReg, &b_MET_RefFinal_etx_ForwardReg);
   fChain->SetBranchAddress("MET_RefFinal_ety_ForwardReg", &MET_RefFinal_ety_ForwardReg, &b_MET_RefFinal_ety_ForwardReg);
   fChain->SetBranchAddress("MET_RefFinal_sumet_ForwardReg", &MET_RefFinal_sumet_ForwardReg, &b_MET_RefFinal_sumet_ForwardReg);
   fChain->SetBranchAddress("MET_RefFinal_phi_ForwardReg", &MET_RefFinal_phi_ForwardReg, &b_MET_RefFinal_phi_ForwardReg);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_Calo", &cccEt2_Et2_Nh_Calo, &b_cccEt2_Et2_Nh_Calo);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_Calo", &cccEt2_Et2_Eh_Calo, &b_cccEt2_Et2_Eh_Calo);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_EM", &cccEt2_Et2_Nh_EM, &b_cccEt2_Et2_Nh_EM);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_EM", &cccEt2_Et2_Eh_EM, &b_cccEt2_Et2_Eh_EM);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_HAD", &cccEt2_Et2_Nh_HAD, &b_cccEt2_Et2_Nh_HAD);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_HAD", &cccEt2_Et2_Eh_HAD, &b_cccEt2_Et2_Eh_HAD);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_PresB", &cccEt2_Et2_Nh_PresB, &b_cccEt2_Et2_Nh_PresB);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_PresB", &cccEt2_Et2_Eh_PresB, &b_cccEt2_Et2_Eh_PresB);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_EMB", &cccEt2_Et2_Nh_EMB, &b_cccEt2_Et2_Nh_EMB);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_EMB", &cccEt2_Et2_Eh_EMB, &b_cccEt2_Et2_Eh_EMB);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_EMEC", &cccEt2_Et2_Nh_EMEC, &b_cccEt2_Et2_Nh_EMEC);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_EMEC", &cccEt2_Et2_Eh_EMEC, &b_cccEt2_Et2_Eh_EMEC);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_Tile", &cccEt2_Et2_Nh_Tile, &b_cccEt2_Et2_Nh_Tile);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_Tile", &cccEt2_Et2_Eh_Tile, &b_cccEt2_Et2_Eh_Tile);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_TileGap", &cccEt2_Et2_Nh_TileGap, &b_cccEt2_Et2_Nh_TileGap);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_TileGap", &cccEt2_Et2_Eh_TileGap, &b_cccEt2_Et2_Eh_TileGap);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_HEC", &cccEt2_Et2_Nh_HEC, &b_cccEt2_Et2_Nh_HEC);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_HEC", &cccEt2_Et2_Eh_HEC, &b_cccEt2_Et2_Eh_HEC);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_FCal", &cccEt2_Et2_Nh_FCal, &b_cccEt2_Et2_Nh_FCal);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_FCal", &cccEt2_Et2_Eh_FCal, &b_cccEt2_Et2_Eh_FCal);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_PresE", &cccEt2_Et2_Nh_PresE, &b_cccEt2_Et2_Nh_PresE);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_PresE", &cccEt2_Et2_Eh_PresE, &b_cccEt2_Et2_Eh_PresE);
   fChain->SetBranchAddress("cccEt2_Et2_Nh_Scint", &cccEt2_Et2_Nh_Scint, &b_cccEt2_Et2_Nh_Scint);
   fChain->SetBranchAddress("cccEt2_Et2_Eh_Scint", &cccEt2_Et2_Eh_Scint, &b_cccEt2_Et2_Eh_Scint);
   fChain->SetBranchAddress("cccEt2_p2_Nh_Calo", &cccEt2_p2_Nh_Calo, &b_cccEt2_p2_Nh_Calo);
   fChain->SetBranchAddress("cccEt2_p2_Eh_Calo", &cccEt2_p2_Eh_Calo, &b_cccEt2_p2_Eh_Calo);
   fChain->SetBranchAddress("cccEt2_p2_Nh_EM", &cccEt2_p2_Nh_EM, &b_cccEt2_p2_Nh_EM);
   fChain->SetBranchAddress("cccEt2_p2_Eh_EM", &cccEt2_p2_Eh_EM, &b_cccEt2_p2_Eh_EM);
   fChain->SetBranchAddress("cccEt2_p2_Nh_HAD", &cccEt2_p2_Nh_HAD, &b_cccEt2_p2_Nh_HAD);
   fChain->SetBranchAddress("cccEt2_p2_Eh_HAD", &cccEt2_p2_Eh_HAD, &b_cccEt2_p2_Eh_HAD);
   fChain->SetBranchAddress("cccEt2_p2_Nh_PresB", &cccEt2_p2_Nh_PresB, &b_cccEt2_p2_Nh_PresB);
   fChain->SetBranchAddress("cccEt2_p2_Eh_PresB", &cccEt2_p2_Eh_PresB, &b_cccEt2_p2_Eh_PresB);
   fChain->SetBranchAddress("cccEt2_p2_Nh_EMB", &cccEt2_p2_Nh_EMB, &b_cccEt2_p2_Nh_EMB);
   fChain->SetBranchAddress("cccEt2_p2_Eh_EMB", &cccEt2_p2_Eh_EMB, &b_cccEt2_p2_Eh_EMB);
   fChain->SetBranchAddress("cccEt2_p2_Nh_EMEC", &cccEt2_p2_Nh_EMEC, &b_cccEt2_p2_Nh_EMEC);
   fChain->SetBranchAddress("cccEt2_p2_Eh_EMEC", &cccEt2_p2_Eh_EMEC, &b_cccEt2_p2_Eh_EMEC);
   fChain->SetBranchAddress("cccEt2_p2_Nh_Tile", &cccEt2_p2_Nh_Tile, &b_cccEt2_p2_Nh_Tile);
   fChain->SetBranchAddress("cccEt2_p2_Eh_Tile", &cccEt2_p2_Eh_Tile, &b_cccEt2_p2_Eh_Tile);
   fChain->SetBranchAddress("cccEt2_p2_Nh_TileGap", &cccEt2_p2_Nh_TileGap, &b_cccEt2_p2_Nh_TileGap);
   fChain->SetBranchAddress("cccEt2_p2_Eh_TileGap", &cccEt2_p2_Eh_TileGap, &b_cccEt2_p2_Eh_TileGap);
   fChain->SetBranchAddress("cccEt2_p2_Nh_HEC", &cccEt2_p2_Nh_HEC, &b_cccEt2_p2_Nh_HEC);
   fChain->SetBranchAddress("cccEt2_p2_Eh_HEC", &cccEt2_p2_Eh_HEC, &b_cccEt2_p2_Eh_HEC);
   fChain->SetBranchAddress("cccEt2_p2_Nh_FCal", &cccEt2_p2_Nh_FCal, &b_cccEt2_p2_Nh_FCal);
   fChain->SetBranchAddress("cccEt2_p2_Eh_FCal", &cccEt2_p2_Eh_FCal, &b_cccEt2_p2_Eh_FCal);
   fChain->SetBranchAddress("cccEt2_p2_Nh_PresE", &cccEt2_p2_Nh_PresE, &b_cccEt2_p2_Nh_PresE);
   fChain->SetBranchAddress("cccEt2_p2_Eh_PresE", &cccEt2_p2_Eh_PresE, &b_cccEt2_p2_Eh_PresE);
   fChain->SetBranchAddress("cccEt2_p2_Nh_Scint", &cccEt2_p2_Nh_Scint, &b_cccEt2_p2_Nh_Scint);
   fChain->SetBranchAddress("cccEt2_p2_Eh_Scint", &cccEt2_p2_Eh_Scint, &b_cccEt2_p2_Eh_Scint);
   fChain->SetBranchAddress("cccEt2_n2_Nh_Calo", &cccEt2_n2_Nh_Calo, &b_cccEt2_n2_Nh_Calo);
   fChain->SetBranchAddress("cccEt2_n2_Eh_Calo", &cccEt2_n2_Eh_Calo, &b_cccEt2_n2_Eh_Calo);
   fChain->SetBranchAddress("cccEt2_n2_Nh_EM", &cccEt2_n2_Nh_EM, &b_cccEt2_n2_Nh_EM);
   fChain->SetBranchAddress("cccEt2_n2_Eh_EM", &cccEt2_n2_Eh_EM, &b_cccEt2_n2_Eh_EM);
   fChain->SetBranchAddress("cccEt2_n2_Nh_HAD", &cccEt2_n2_Nh_HAD, &b_cccEt2_n2_Nh_HAD);
   fChain->SetBranchAddress("cccEt2_n2_Eh_HAD", &cccEt2_n2_Eh_HAD, &b_cccEt2_n2_Eh_HAD);
   fChain->SetBranchAddress("cccEt2_n2_Nh_PresB", &cccEt2_n2_Nh_PresB, &b_cccEt2_n2_Nh_PresB);
   fChain->SetBranchAddress("cccEt2_n2_Eh_PresB", &cccEt2_n2_Eh_PresB, &b_cccEt2_n2_Eh_PresB);
   fChain->SetBranchAddress("cccEt2_n2_Nh_EMB", &cccEt2_n2_Nh_EMB, &b_cccEt2_n2_Nh_EMB);
   fChain->SetBranchAddress("cccEt2_n2_Eh_EMB", &cccEt2_n2_Eh_EMB, &b_cccEt2_n2_Eh_EMB);
   fChain->SetBranchAddress("cccEt2_n2_Nh_EMEC", &cccEt2_n2_Nh_EMEC, &b_cccEt2_n2_Nh_EMEC);
   fChain->SetBranchAddress("cccEt2_n2_Eh_EMEC", &cccEt2_n2_Eh_EMEC, &b_cccEt2_n2_Eh_EMEC);
   fChain->SetBranchAddress("cccEt2_n2_Nh_Tile", &cccEt2_n2_Nh_Tile, &b_cccEt2_n2_Nh_Tile);
   fChain->SetBranchAddress("cccEt2_n2_Eh_Tile", &cccEt2_n2_Eh_Tile, &b_cccEt2_n2_Eh_Tile);
   fChain->SetBranchAddress("cccEt2_n2_Nh_TileGap", &cccEt2_n2_Nh_TileGap, &b_cccEt2_n2_Nh_TileGap);
   fChain->SetBranchAddress("cccEt2_n2_Eh_TileGap", &cccEt2_n2_Eh_TileGap, &b_cccEt2_n2_Eh_TileGap);
   fChain->SetBranchAddress("cccEt2_n2_Nh_HEC", &cccEt2_n2_Nh_HEC, &b_cccEt2_n2_Nh_HEC);
   fChain->SetBranchAddress("cccEt2_n2_Eh_HEC", &cccEt2_n2_Eh_HEC, &b_cccEt2_n2_Eh_HEC);
   fChain->SetBranchAddress("cccEt2_n2_Nh_FCal", &cccEt2_n2_Nh_FCal, &b_cccEt2_n2_Nh_FCal);
   fChain->SetBranchAddress("cccEt2_n2_Eh_FCal", &cccEt2_n2_Eh_FCal, &b_cccEt2_n2_Eh_FCal);
   fChain->SetBranchAddress("cccEt2_n2_Nh_PresE", &cccEt2_n2_Nh_PresE, &b_cccEt2_n2_Nh_PresE);
   fChain->SetBranchAddress("cccEt2_n2_Eh_PresE", &cccEt2_n2_Eh_PresE, &b_cccEt2_n2_Eh_PresE);
   fChain->SetBranchAddress("cccEt2_n2_Nh_Scint", &cccEt2_n2_Nh_Scint, &b_cccEt2_n2_Nh_Scint);
   fChain->SetBranchAddress("cccEt2_n2_Eh_Scint", &cccEt2_n2_Eh_Scint, &b_cccEt2_n2_Eh_Scint);
   fChain->SetBranchAddress("cl_hadTopo_n", &cl_hadTopo_n, &b_cl_hadTopo_n);
   fChain->SetBranchAddress("cl_hadTopo_E", &cl_hadTopo_E, &b_cl_hadTopo_E);
   fChain->SetBranchAddress("cl_hadTopo_pt", &cl_hadTopo_pt, &b_cl_hadTopo_pt);
   fChain->SetBranchAddress("cl_hadTopo_eta", &cl_hadTopo_eta, &b_cl_hadTopo_eta);
   fChain->SetBranchAddress("cl_hadTopo_phi", &cl_hadTopo_phi, &b_cl_hadTopo_phi);
   fChain->SetBranchAddress("cl_hadTopo_E_em", &cl_hadTopo_E_em, &b_cl_hadTopo_E_em);
   fChain->SetBranchAddress("cl_hadTopo_E_had", &cl_hadTopo_E_had, &b_cl_hadTopo_E_had);
   fChain->SetBranchAddress("cl_hadTopo_significance", &cl_hadTopo_significance, &b_cl_hadTopo_significance);
   fChain->SetBranchAddress("cl_hadTopo_cellSignificance", &cl_hadTopo_cellSignificance, &b_cl_hadTopo_cellSignificance);
   fChain->SetBranchAddress("cl_hadTopo_cellSigSampling", &cl_hadTopo_cellSigSampling, &b_cl_hadTopo_cellSigSampling);
   fChain->SetBranchAddress("cl_hadTopo_firstEdens", &cl_hadTopo_firstEdens, &b_cl_hadTopo_firstEdens);
   fChain->SetBranchAddress("cl_hadTopo_cellmaxfrac", &cl_hadTopo_cellmaxfrac, &b_cl_hadTopo_cellmaxfrac);
   fChain->SetBranchAddress("cl_hadTopo_longitudinal", &cl_hadTopo_longitudinal, &b_cl_hadTopo_longitudinal);
   fChain->SetBranchAddress("cl_hadTopo_secondlambda", &cl_hadTopo_secondlambda, &b_cl_hadTopo_secondlambda);
   fChain->SetBranchAddress("cl_hadTopo_lateral", &cl_hadTopo_lateral, &b_cl_hadTopo_lateral);
   fChain->SetBranchAddress("cl_hadTopo_secondR", &cl_hadTopo_secondR, &b_cl_hadTopo_secondR);
   fChain->SetBranchAddress("cl_hadTopo_centerlambda", &cl_hadTopo_centerlambda, &b_cl_hadTopo_centerlambda);
   fChain->SetBranchAddress("cl_hadTopo_deltaTheta", &cl_hadTopo_deltaTheta, &b_cl_hadTopo_deltaTheta);
   fChain->SetBranchAddress("cl_hadTopo_deltaPhi", &cl_hadTopo_deltaPhi, &b_cl_hadTopo_deltaPhi);
   fChain->SetBranchAddress("cl_hadTopo_centermag", &cl_hadTopo_centermag, &b_cl_hadTopo_centermag);
   fChain->SetBranchAddress("cl_hadTopo_time", &cl_hadTopo_time, &b_cl_hadTopo_time);
   fChain->SetBranchAddress("cl_hadTopo_E_PreSamplerB", &cl_hadTopo_E_PreSamplerB, &b_cl_hadTopo_E_PreSamplerB);
   fChain->SetBranchAddress("cl_hadTopo_E_EMB1", &cl_hadTopo_E_EMB1, &b_cl_hadTopo_E_EMB1);
   fChain->SetBranchAddress("cl_hadTopo_E_EMB2", &cl_hadTopo_E_EMB2, &b_cl_hadTopo_E_EMB2);
   fChain->SetBranchAddress("cl_hadTopo_E_EMB3", &cl_hadTopo_E_EMB3, &b_cl_hadTopo_E_EMB3);
   fChain->SetBranchAddress("cl_hadTopo_E_PreSamplerE", &cl_hadTopo_E_PreSamplerE, &b_cl_hadTopo_E_PreSamplerE);
   fChain->SetBranchAddress("cl_hadTopo_E_EME1", &cl_hadTopo_E_EME1, &b_cl_hadTopo_E_EME1);
   fChain->SetBranchAddress("cl_hadTopo_E_EME2", &cl_hadTopo_E_EME2, &b_cl_hadTopo_E_EME2);
   fChain->SetBranchAddress("cl_hadTopo_E_EME3", &cl_hadTopo_E_EME3, &b_cl_hadTopo_E_EME3);
   fChain->SetBranchAddress("cl_hadTopo_E_HEC0", &cl_hadTopo_E_HEC0, &b_cl_hadTopo_E_HEC0);
   fChain->SetBranchAddress("cl_hadTopo_E_HEC1", &cl_hadTopo_E_HEC1, &b_cl_hadTopo_E_HEC1);
   fChain->SetBranchAddress("cl_hadTopo_E_HEC2", &cl_hadTopo_E_HEC2, &b_cl_hadTopo_E_HEC2);
   fChain->SetBranchAddress("cl_hadTopo_E_HEC3", &cl_hadTopo_E_HEC3, &b_cl_hadTopo_E_HEC3);
   fChain->SetBranchAddress("cl_hadTopo_E_TileBar0", &cl_hadTopo_E_TileBar0, &b_cl_hadTopo_E_TileBar0);
   fChain->SetBranchAddress("cl_hadTopo_E_TileBar1", &cl_hadTopo_E_TileBar1, &b_cl_hadTopo_E_TileBar1);
   fChain->SetBranchAddress("cl_hadTopo_E_TileBar2", &cl_hadTopo_E_TileBar2, &b_cl_hadTopo_E_TileBar2);
   fChain->SetBranchAddress("cl_hadTopo_E_TileGap1", &cl_hadTopo_E_TileGap1, &b_cl_hadTopo_E_TileGap1);
   fChain->SetBranchAddress("cl_hadTopo_E_TileGap2", &cl_hadTopo_E_TileGap2, &b_cl_hadTopo_E_TileGap2);
   fChain->SetBranchAddress("cl_hadTopo_E_TileGap3", &cl_hadTopo_E_TileGap3, &b_cl_hadTopo_E_TileGap3);
   fChain->SetBranchAddress("cl_hadTopo_E_TileExt0", &cl_hadTopo_E_TileExt0, &b_cl_hadTopo_E_TileExt0);
   fChain->SetBranchAddress("cl_hadTopo_E_TileExt1", &cl_hadTopo_E_TileExt1, &b_cl_hadTopo_E_TileExt1);
   fChain->SetBranchAddress("cl_hadTopo_E_TileExt2", &cl_hadTopo_E_TileExt2, &b_cl_hadTopo_E_TileExt2);
   fChain->SetBranchAddress("cl_hadTopo_E_FCAL0", &cl_hadTopo_E_FCAL0, &b_cl_hadTopo_E_FCAL0);
   fChain->SetBranchAddress("cl_hadTopo_E_FCAL1", &cl_hadTopo_E_FCAL1, &b_cl_hadTopo_E_FCAL1);
   fChain->SetBranchAddress("cl_hadTopo_E_FCAL2", &cl_hadTopo_E_FCAL2, &b_cl_hadTopo_E_FCAL2);
   fChain->SetBranchAddress("HIEtaGap_beam1", &HIEtaGap_beam1, &b_HIEtaGap_beam1);
   fChain->SetBranchAddress("HIEtaGap_beam2", &HIEtaGap_beam2, &b_HIEtaGap_beam2);
   fChain->SetBranchAddress("HIEtaGap_lowerEta", &HIEtaGap_lowerEta, &b_HIEtaGap_lowerEta);
   fChain->SetBranchAddress("HIEtaGap_upperEta", &HIEtaGap_upperEta, &b_HIEtaGap_upperEta);
   fChain->SetBranchAddress("HIEtaGap_lowerEdgeType", &HIEtaGap_lowerEdgeType, &b_HIEtaGap_lowerEdgeType);
   fChain->SetBranchAddress("HIEtaGap_upperEdgeType", &HIEtaGap_upperEdgeType, &b_HIEtaGap_upperEdgeType);
   fChain->SetBranchAddress("HIEtaGap_lowerEtaNegEdge", &HIEtaGap_lowerEtaNegEdge, &b_HIEtaGap_lowerEtaNegEdge);
   fChain->SetBranchAddress("HIEtaGap_upperEtaNegEdge", &HIEtaGap_upperEtaNegEdge, &b_HIEtaGap_upperEtaNegEdge);
   fChain->SetBranchAddress("HIEtaGap_lowerEtaPosEdge", &HIEtaGap_lowerEtaPosEdge, &b_HIEtaGap_lowerEtaPosEdge);
   fChain->SetBranchAddress("HIEtaGap_upperEtaPosEdge", &HIEtaGap_upperEtaPosEdge, &b_HIEtaGap_upperEtaPosEdge);
   fChain->SetBranchAddress("HIEtaGap_maxGapSize", &HIEtaGap_maxGapSize, &b_HIEtaGap_maxGapSize);
   fChain->SetBranchAddress("emcl_n", &emcl_n, &b_emcl_n);
   fChain->SetBranchAddress("emcl_E", &emcl_E, &b_emcl_E);
   fChain->SetBranchAddress("emcl_pt", &emcl_pt, &b_emcl_pt);
   fChain->SetBranchAddress("emcl_m", &emcl_m, &b_emcl_m);
   fChain->SetBranchAddress("emcl_eta", &emcl_eta, &b_emcl_eta);
   fChain->SetBranchAddress("emcl_phi", &emcl_phi, &b_emcl_phi);
   fChain->SetBranchAddress("emcl_E_em", &emcl_E_em, &b_emcl_E_em);
   fChain->SetBranchAddress("emcl_E_had", &emcl_E_had, &b_emcl_E_had);
   fChain->SetBranchAddress("mu_staco_n", &mu_staco_n, &b_mu_staco_n);
   fChain->SetBranchAddress("mu_staco_E", &mu_staco_E, &b_mu_staco_E);
   fChain->SetBranchAddress("mu_staco_pt", &mu_staco_pt, &b_mu_staco_pt);
   fChain->SetBranchAddress("mu_staco_m", &mu_staco_m, &b_mu_staco_m);
   fChain->SetBranchAddress("mu_staco_eta", &mu_staco_eta, &b_mu_staco_eta);
   fChain->SetBranchAddress("mu_staco_phi", &mu_staco_phi, &b_mu_staco_phi);
   fChain->SetBranchAddress("mu_staco_px", &mu_staco_px, &b_mu_staco_px);
   fChain->SetBranchAddress("mu_staco_py", &mu_staco_py, &b_mu_staco_py);
   fChain->SetBranchAddress("mu_staco_pz", &mu_staco_pz, &b_mu_staco_pz);
   fChain->SetBranchAddress("mu_staco_charge", &mu_staco_charge, &b_mu_staco_charge);
   fChain->SetBranchAddress("mu_staco_allauthor", &mu_staco_allauthor, &b_mu_staco_allauthor);
   fChain->SetBranchAddress("mu_staco_author", &mu_staco_author, &b_mu_staco_author);
   fChain->SetBranchAddress("mu_staco_beta", &mu_staco_beta, &b_mu_staco_beta);
   fChain->SetBranchAddress("mu_staco_isMuonLikelihood", &mu_staco_isMuonLikelihood, &b_mu_staco_isMuonLikelihood);
   fChain->SetBranchAddress("mu_staco_matchchi2", &mu_staco_matchchi2, &b_mu_staco_matchchi2);
   fChain->SetBranchAddress("mu_staco_matchndof", &mu_staco_matchndof, &b_mu_staco_matchndof);
   fChain->SetBranchAddress("mu_staco_etcone20", &mu_staco_etcone20, &b_mu_staco_etcone20);
   fChain->SetBranchAddress("mu_staco_etcone30", &mu_staco_etcone30, &b_mu_staco_etcone30);
   fChain->SetBranchAddress("mu_staco_etcone40", &mu_staco_etcone40, &b_mu_staco_etcone40);
   fChain->SetBranchAddress("mu_staco_nucone20", &mu_staco_nucone20, &b_mu_staco_nucone20);
   fChain->SetBranchAddress("mu_staco_nucone30", &mu_staco_nucone30, &b_mu_staco_nucone30);
   fChain->SetBranchAddress("mu_staco_nucone40", &mu_staco_nucone40, &b_mu_staco_nucone40);
   fChain->SetBranchAddress("mu_staco_ptcone20", &mu_staco_ptcone20, &b_mu_staco_ptcone20);
   fChain->SetBranchAddress("mu_staco_ptcone30", &mu_staco_ptcone30, &b_mu_staco_ptcone30);
   fChain->SetBranchAddress("mu_staco_ptcone40", &mu_staco_ptcone40, &b_mu_staco_ptcone40);
   fChain->SetBranchAddress("mu_staco_etconeNoEm10", &mu_staco_etconeNoEm10, &b_mu_staco_etconeNoEm10);
   fChain->SetBranchAddress("mu_staco_etconeNoEm20", &mu_staco_etconeNoEm20, &b_mu_staco_etconeNoEm20);
   fChain->SetBranchAddress("mu_staco_etconeNoEm30", &mu_staco_etconeNoEm30, &b_mu_staco_etconeNoEm30);
   fChain->SetBranchAddress("mu_staco_etconeNoEm40", &mu_staco_etconeNoEm40, &b_mu_staco_etconeNoEm40);
   fChain->SetBranchAddress("mu_staco_scatteringCurvatureSignificance", &mu_staco_scatteringCurvatureSignificance, &b_mu_staco_scatteringCurvatureSignificance);
   fChain->SetBranchAddress("mu_staco_scatteringNeighbourSignificance", &mu_staco_scatteringNeighbourSignificance, &b_mu_staco_scatteringNeighbourSignificance);
   fChain->SetBranchAddress("mu_staco_momentumBalanceSignificance", &mu_staco_momentumBalanceSignificance, &b_mu_staco_momentumBalanceSignificance);
   fChain->SetBranchAddress("mu_staco_energyLossPar", &mu_staco_energyLossPar, &b_mu_staco_energyLossPar);
   fChain->SetBranchAddress("mu_staco_energyLossErr", &mu_staco_energyLossErr, &b_mu_staco_energyLossErr);
   fChain->SetBranchAddress("mu_staco_etCore", &mu_staco_etCore, &b_mu_staco_etCore);
   fChain->SetBranchAddress("mu_staco_energyLossType", &mu_staco_energyLossType, &b_mu_staco_energyLossType);
   fChain->SetBranchAddress("mu_staco_caloMuonIdTag", &mu_staco_caloMuonIdTag, &b_mu_staco_caloMuonIdTag);
   fChain->SetBranchAddress("mu_staco_caloLRLikelihood", &mu_staco_caloLRLikelihood, &b_mu_staco_caloLRLikelihood);
   fChain->SetBranchAddress("mu_staco_bestMatch", &mu_staco_bestMatch, &b_mu_staco_bestMatch);
   fChain->SetBranchAddress("mu_staco_isStandAloneMuon", &mu_staco_isStandAloneMuon, &b_mu_staco_isStandAloneMuon);
   fChain->SetBranchAddress("mu_staco_isCombinedMuon", &mu_staco_isCombinedMuon, &b_mu_staco_isCombinedMuon);
   fChain->SetBranchAddress("mu_staco_isLowPtReconstructedMuon", &mu_staco_isLowPtReconstructedMuon, &b_mu_staco_isLowPtReconstructedMuon);
   fChain->SetBranchAddress("mu_staco_isSegmentTaggedMuon", &mu_staco_isSegmentTaggedMuon, &b_mu_staco_isSegmentTaggedMuon);
   fChain->SetBranchAddress("mu_staco_isCaloMuonId", &mu_staco_isCaloMuonId, &b_mu_staco_isCaloMuonId);
   fChain->SetBranchAddress("mu_staco_alsoFoundByLowPt", &mu_staco_alsoFoundByLowPt, &b_mu_staco_alsoFoundByLowPt);
   fChain->SetBranchAddress("mu_staco_alsoFoundByCaloMuonId", &mu_staco_alsoFoundByCaloMuonId, &b_mu_staco_alsoFoundByCaloMuonId);
   fChain->SetBranchAddress("mu_staco_isSiliconAssociatedForwardMuon", &mu_staco_isSiliconAssociatedForwardMuon, &b_mu_staco_isSiliconAssociatedForwardMuon);
   fChain->SetBranchAddress("mu_staco_loose", &mu_staco_loose, &b_mu_staco_loose);
   fChain->SetBranchAddress("mu_staco_medium", &mu_staco_medium, &b_mu_staco_medium);
   fChain->SetBranchAddress("mu_staco_tight", &mu_staco_tight, &b_mu_staco_tight);
   fChain->SetBranchAddress("mu_staco_d0_exPV", &mu_staco_d0_exPV, &b_mu_staco_d0_exPV);
   fChain->SetBranchAddress("mu_staco_z0_exPV", &mu_staco_z0_exPV, &b_mu_staco_z0_exPV);
   fChain->SetBranchAddress("mu_staco_phi_exPV", &mu_staco_phi_exPV, &b_mu_staco_phi_exPV);
   fChain->SetBranchAddress("mu_staco_theta_exPV", &mu_staco_theta_exPV, &b_mu_staco_theta_exPV);
   fChain->SetBranchAddress("mu_staco_qoverp_exPV", &mu_staco_qoverp_exPV, &b_mu_staco_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_cb_d0_exPV", &mu_staco_cb_d0_exPV, &b_mu_staco_cb_d0_exPV);
   fChain->SetBranchAddress("mu_staco_cb_z0_exPV", &mu_staco_cb_z0_exPV, &b_mu_staco_cb_z0_exPV);
   fChain->SetBranchAddress("mu_staco_cb_phi_exPV", &mu_staco_cb_phi_exPV, &b_mu_staco_cb_phi_exPV);
   fChain->SetBranchAddress("mu_staco_cb_theta_exPV", &mu_staco_cb_theta_exPV, &b_mu_staco_cb_theta_exPV);
   fChain->SetBranchAddress("mu_staco_cb_qoverp_exPV", &mu_staco_cb_qoverp_exPV, &b_mu_staco_cb_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_id_d0_exPV", &mu_staco_id_d0_exPV, &b_mu_staco_id_d0_exPV);
   fChain->SetBranchAddress("mu_staco_id_z0_exPV", &mu_staco_id_z0_exPV, &b_mu_staco_id_z0_exPV);
   fChain->SetBranchAddress("mu_staco_id_phi_exPV", &mu_staco_id_phi_exPV, &b_mu_staco_id_phi_exPV);
   fChain->SetBranchAddress("mu_staco_id_theta_exPV", &mu_staco_id_theta_exPV, &b_mu_staco_id_theta_exPV);
   fChain->SetBranchAddress("mu_staco_id_qoverp_exPV", &mu_staco_id_qoverp_exPV, &b_mu_staco_id_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_me_d0_exPV", &mu_staco_me_d0_exPV, &b_mu_staco_me_d0_exPV);
   fChain->SetBranchAddress("mu_staco_me_z0_exPV", &mu_staco_me_z0_exPV, &b_mu_staco_me_z0_exPV);
   fChain->SetBranchAddress("mu_staco_me_phi_exPV", &mu_staco_me_phi_exPV, &b_mu_staco_me_phi_exPV);
   fChain->SetBranchAddress("mu_staco_me_theta_exPV", &mu_staco_me_theta_exPV, &b_mu_staco_me_theta_exPV);
   fChain->SetBranchAddress("mu_staco_me_qoverp_exPV", &mu_staco_me_qoverp_exPV, &b_mu_staco_me_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_ie_d0_exPV", &mu_staco_ie_d0_exPV, &b_mu_staco_ie_d0_exPV);
   fChain->SetBranchAddress("mu_staco_ie_z0_exPV", &mu_staco_ie_z0_exPV, &b_mu_staco_ie_z0_exPV);
   fChain->SetBranchAddress("mu_staco_ie_phi_exPV", &mu_staco_ie_phi_exPV, &b_mu_staco_ie_phi_exPV);
   fChain->SetBranchAddress("mu_staco_ie_theta_exPV", &mu_staco_ie_theta_exPV, &b_mu_staco_ie_theta_exPV);
   fChain->SetBranchAddress("mu_staco_ie_qoverp_exPV", &mu_staco_ie_qoverp_exPV, &b_mu_staco_ie_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_SpaceTime_detID", &mu_staco_SpaceTime_detID, &b_mu_staco_SpaceTime_detID);
   fChain->SetBranchAddress("mu_staco_SpaceTime_t", &mu_staco_SpaceTime_t, &b_mu_staco_SpaceTime_t);
   fChain->SetBranchAddress("mu_staco_SpaceTime_tError", &mu_staco_SpaceTime_tError, &b_mu_staco_SpaceTime_tError);
   fChain->SetBranchAddress("mu_staco_SpaceTime_weight", &mu_staco_SpaceTime_weight, &b_mu_staco_SpaceTime_weight);
   fChain->SetBranchAddress("mu_staco_SpaceTime_x", &mu_staco_SpaceTime_x, &b_mu_staco_SpaceTime_x);
   fChain->SetBranchAddress("mu_staco_SpaceTime_y", &mu_staco_SpaceTime_y, &b_mu_staco_SpaceTime_y);
   fChain->SetBranchAddress("mu_staco_SpaceTime_z", &mu_staco_SpaceTime_z, &b_mu_staco_SpaceTime_z);
   fChain->SetBranchAddress("mu_staco_cov_d0_exPV", &mu_staco_cov_d0_exPV, &b_mu_staco_cov_d0_exPV);
   fChain->SetBranchAddress("mu_staco_cov_z0_exPV", &mu_staco_cov_z0_exPV, &b_mu_staco_cov_z0_exPV);
   fChain->SetBranchAddress("mu_staco_cov_phi_exPV", &mu_staco_cov_phi_exPV, &b_mu_staco_cov_phi_exPV);
   fChain->SetBranchAddress("mu_staco_cov_theta_exPV", &mu_staco_cov_theta_exPV, &b_mu_staco_cov_theta_exPV);
   fChain->SetBranchAddress("mu_staco_cov_qoverp_exPV", &mu_staco_cov_qoverp_exPV, &b_mu_staco_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_cov_d0_z0_exPV", &mu_staco_cov_d0_z0_exPV, &b_mu_staco_cov_d0_z0_exPV);
   fChain->SetBranchAddress("mu_staco_cov_d0_phi_exPV", &mu_staco_cov_d0_phi_exPV, &b_mu_staco_cov_d0_phi_exPV);
   fChain->SetBranchAddress("mu_staco_cov_d0_theta_exPV", &mu_staco_cov_d0_theta_exPV, &b_mu_staco_cov_d0_theta_exPV);
   fChain->SetBranchAddress("mu_staco_cov_d0_qoverp_exPV", &mu_staco_cov_d0_qoverp_exPV, &b_mu_staco_cov_d0_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_cov_z0_phi_exPV", &mu_staco_cov_z0_phi_exPV, &b_mu_staco_cov_z0_phi_exPV);
   fChain->SetBranchAddress("mu_staco_cov_z0_theta_exPV", &mu_staco_cov_z0_theta_exPV, &b_mu_staco_cov_z0_theta_exPV);
   fChain->SetBranchAddress("mu_staco_cov_z0_qoverp_exPV", &mu_staco_cov_z0_qoverp_exPV, &b_mu_staco_cov_z0_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_cov_phi_theta_exPV", &mu_staco_cov_phi_theta_exPV, &b_mu_staco_cov_phi_theta_exPV);
   fChain->SetBranchAddress("mu_staco_cov_phi_qoverp_exPV", &mu_staco_cov_phi_qoverp_exPV, &b_mu_staco_cov_phi_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_cov_theta_qoverp_exPV", &mu_staco_cov_theta_qoverp_exPV, &b_mu_staco_cov_theta_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_id_cov_d0_exPV", &mu_staco_id_cov_d0_exPV, &b_mu_staco_id_cov_d0_exPV);
   fChain->SetBranchAddress("mu_staco_id_cov_z0_exPV", &mu_staco_id_cov_z0_exPV, &b_mu_staco_id_cov_z0_exPV);
   fChain->SetBranchAddress("mu_staco_id_cov_phi_exPV", &mu_staco_id_cov_phi_exPV, &b_mu_staco_id_cov_phi_exPV);
   fChain->SetBranchAddress("mu_staco_id_cov_theta_exPV", &mu_staco_id_cov_theta_exPV, &b_mu_staco_id_cov_theta_exPV);
   fChain->SetBranchAddress("mu_staco_id_cov_qoverp_exPV", &mu_staco_id_cov_qoverp_exPV, &b_mu_staco_id_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_me_cov_d0_exPV", &mu_staco_me_cov_d0_exPV, &b_mu_staco_me_cov_d0_exPV);
   fChain->SetBranchAddress("mu_staco_me_cov_z0_exPV", &mu_staco_me_cov_z0_exPV, &b_mu_staco_me_cov_z0_exPV);
   fChain->SetBranchAddress("mu_staco_me_cov_phi_exPV", &mu_staco_me_cov_phi_exPV, &b_mu_staco_me_cov_phi_exPV);
   fChain->SetBranchAddress("mu_staco_me_cov_theta_exPV", &mu_staco_me_cov_theta_exPV, &b_mu_staco_me_cov_theta_exPV);
   fChain->SetBranchAddress("mu_staco_me_cov_qoverp_exPV", &mu_staco_me_cov_qoverp_exPV, &b_mu_staco_me_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_staco_ms_d0", &mu_staco_ms_d0, &b_mu_staco_ms_d0);
   fChain->SetBranchAddress("mu_staco_ms_z0", &mu_staco_ms_z0, &b_mu_staco_ms_z0);
   fChain->SetBranchAddress("mu_staco_ms_phi", &mu_staco_ms_phi, &b_mu_staco_ms_phi);
   fChain->SetBranchAddress("mu_staco_ms_theta", &mu_staco_ms_theta, &b_mu_staco_ms_theta);
   fChain->SetBranchAddress("mu_staco_ms_qoverp", &mu_staco_ms_qoverp, &b_mu_staco_ms_qoverp);
   fChain->SetBranchAddress("mu_staco_id_d0", &mu_staco_id_d0, &b_mu_staco_id_d0);
   fChain->SetBranchAddress("mu_staco_id_z0", &mu_staco_id_z0, &b_mu_staco_id_z0);
   fChain->SetBranchAddress("mu_staco_id_phi", &mu_staco_id_phi, &b_mu_staco_id_phi);
   fChain->SetBranchAddress("mu_staco_id_theta", &mu_staco_id_theta, &b_mu_staco_id_theta);
   fChain->SetBranchAddress("mu_staco_id_qoverp", &mu_staco_id_qoverp, &b_mu_staco_id_qoverp);
   fChain->SetBranchAddress("mu_staco_me_d0", &mu_staco_me_d0, &b_mu_staco_me_d0);
   fChain->SetBranchAddress("mu_staco_me_z0", &mu_staco_me_z0, &b_mu_staco_me_z0);
   fChain->SetBranchAddress("mu_staco_me_phi", &mu_staco_me_phi, &b_mu_staco_me_phi);
   fChain->SetBranchAddress("mu_staco_me_theta", &mu_staco_me_theta, &b_mu_staco_me_theta);
   fChain->SetBranchAddress("mu_staco_me_qoverp", &mu_staco_me_qoverp, &b_mu_staco_me_qoverp);
   fChain->SetBranchAddress("mu_staco_ie_d0", &mu_staco_ie_d0, &b_mu_staco_ie_d0);
   fChain->SetBranchAddress("mu_staco_ie_z0", &mu_staco_ie_z0, &b_mu_staco_ie_z0);
   fChain->SetBranchAddress("mu_staco_ie_phi", &mu_staco_ie_phi, &b_mu_staco_ie_phi);
   fChain->SetBranchAddress("mu_staco_ie_theta", &mu_staco_ie_theta, &b_mu_staco_ie_theta);
   fChain->SetBranchAddress("mu_staco_ie_qoverp", &mu_staco_ie_qoverp, &b_mu_staco_ie_qoverp);
   fChain->SetBranchAddress("mu_staco_nOutliersOnTrack", &mu_staco_nOutliersOnTrack, &b_mu_staco_nOutliersOnTrack);
   fChain->SetBranchAddress("mu_staco_nBLHits", &mu_staco_nBLHits, &b_mu_staco_nBLHits);
   fChain->SetBranchAddress("mu_staco_nPixHits", &mu_staco_nPixHits, &b_mu_staco_nPixHits);
   fChain->SetBranchAddress("mu_staco_nSCTHits", &mu_staco_nSCTHits, &b_mu_staco_nSCTHits);
   fChain->SetBranchAddress("mu_staco_nTRTHits", &mu_staco_nTRTHits, &b_mu_staco_nTRTHits);
   fChain->SetBranchAddress("mu_staco_nTRTHighTHits", &mu_staco_nTRTHighTHits, &b_mu_staco_nTRTHighTHits);
   fChain->SetBranchAddress("mu_staco_nBLSharedHits", &mu_staco_nBLSharedHits, &b_mu_staco_nBLSharedHits);
   fChain->SetBranchAddress("mu_staco_nPixSharedHits", &mu_staco_nPixSharedHits, &b_mu_staco_nPixSharedHits);
   fChain->SetBranchAddress("mu_staco_nPixHoles", &mu_staco_nPixHoles, &b_mu_staco_nPixHoles);
   fChain->SetBranchAddress("mu_staco_nSCTSharedHits", &mu_staco_nSCTSharedHits, &b_mu_staco_nSCTSharedHits);
   fChain->SetBranchAddress("mu_staco_nSCTHoles", &mu_staco_nSCTHoles, &b_mu_staco_nSCTHoles);
   fChain->SetBranchAddress("mu_staco_nTRTOutliers", &mu_staco_nTRTOutliers, &b_mu_staco_nTRTOutliers);
   fChain->SetBranchAddress("mu_staco_nTRTHighTOutliers", &mu_staco_nTRTHighTOutliers, &b_mu_staco_nTRTHighTOutliers);
   fChain->SetBranchAddress("mu_staco_nGangedPixels", &mu_staco_nGangedPixels, &b_mu_staco_nGangedPixels);
   fChain->SetBranchAddress("mu_staco_nPixelDeadSensors", &mu_staco_nPixelDeadSensors, &b_mu_staco_nPixelDeadSensors);
   fChain->SetBranchAddress("mu_staco_nSCTDeadSensors", &mu_staco_nSCTDeadSensors, &b_mu_staco_nSCTDeadSensors);
   fChain->SetBranchAddress("mu_staco_nTRTDeadStraws", &mu_staco_nTRTDeadStraws, &b_mu_staco_nTRTDeadStraws);
   fChain->SetBranchAddress("mu_staco_expectBLayerHit", &mu_staco_expectBLayerHit, &b_mu_staco_expectBLayerHit);
   fChain->SetBranchAddress("mu_staco_nMDTHits", &mu_staco_nMDTHits, &b_mu_staco_nMDTHits);
   fChain->SetBranchAddress("mu_staco_nMDTHoles", &mu_staco_nMDTHoles, &b_mu_staco_nMDTHoles);
   fChain->SetBranchAddress("mu_staco_nCSCEtaHits", &mu_staco_nCSCEtaHits, &b_mu_staco_nCSCEtaHits);
   fChain->SetBranchAddress("mu_staco_nCSCEtaHoles", &mu_staco_nCSCEtaHoles, &b_mu_staco_nCSCEtaHoles);
   fChain->SetBranchAddress("mu_staco_nCSCUnspoiledEtaHits", &mu_staco_nCSCUnspoiledEtaHits, &b_mu_staco_nCSCUnspoiledEtaHits);
   fChain->SetBranchAddress("mu_staco_nCSCPhiHits", &mu_staco_nCSCPhiHits, &b_mu_staco_nCSCPhiHits);
   fChain->SetBranchAddress("mu_staco_nCSCPhiHoles", &mu_staco_nCSCPhiHoles, &b_mu_staco_nCSCPhiHoles);
   fChain->SetBranchAddress("mu_staco_nRPCEtaHits", &mu_staco_nRPCEtaHits, &b_mu_staco_nRPCEtaHits);
   fChain->SetBranchAddress("mu_staco_nRPCEtaHoles", &mu_staco_nRPCEtaHoles, &b_mu_staco_nRPCEtaHoles);
   fChain->SetBranchAddress("mu_staco_nRPCPhiHits", &mu_staco_nRPCPhiHits, &b_mu_staco_nRPCPhiHits);
   fChain->SetBranchAddress("mu_staco_nRPCPhiHoles", &mu_staco_nRPCPhiHoles, &b_mu_staco_nRPCPhiHoles);
   fChain->SetBranchAddress("mu_staco_nTGCEtaHits", &mu_staco_nTGCEtaHits, &b_mu_staco_nTGCEtaHits);
   fChain->SetBranchAddress("mu_staco_nTGCEtaHoles", &mu_staco_nTGCEtaHoles, &b_mu_staco_nTGCEtaHoles);
   fChain->SetBranchAddress("mu_staco_nTGCPhiHits", &mu_staco_nTGCPhiHits, &b_mu_staco_nTGCPhiHits);
   fChain->SetBranchAddress("mu_staco_nTGCPhiHoles", &mu_staco_nTGCPhiHoles, &b_mu_staco_nTGCPhiHoles);
   fChain->SetBranchAddress("mu_staco_nprecisionLayers", &mu_staco_nprecisionLayers, &b_mu_staco_nprecisionLayers);
   fChain->SetBranchAddress("mu_staco_nprecisionHoleLayers", &mu_staco_nprecisionHoleLayers, &b_mu_staco_nprecisionHoleLayers);
   fChain->SetBranchAddress("mu_staco_nphiLayers", &mu_staco_nphiLayers, &b_mu_staco_nphiLayers);
   fChain->SetBranchAddress("mu_staco_ntrigEtaLayers", &mu_staco_ntrigEtaLayers, &b_mu_staco_ntrigEtaLayers);
   fChain->SetBranchAddress("mu_staco_nphiHoleLayers", &mu_staco_nphiHoleLayers, &b_mu_staco_nphiHoleLayers);
   fChain->SetBranchAddress("mu_staco_ntrigEtaHoleLayers", &mu_staco_ntrigEtaHoleLayers, &b_mu_staco_ntrigEtaHoleLayers);
   fChain->SetBranchAddress("mu_staco_nMDTBIHits", &mu_staco_nMDTBIHits, &b_mu_staco_nMDTBIHits);
   fChain->SetBranchAddress("mu_staco_nMDTBMHits", &mu_staco_nMDTBMHits, &b_mu_staco_nMDTBMHits);
   fChain->SetBranchAddress("mu_staco_nMDTBOHits", &mu_staco_nMDTBOHits, &b_mu_staco_nMDTBOHits);
   fChain->SetBranchAddress("mu_staco_nMDTBEEHits", &mu_staco_nMDTBEEHits, &b_mu_staco_nMDTBEEHits);
   fChain->SetBranchAddress("mu_staco_nMDTBIS78Hits", &mu_staco_nMDTBIS78Hits, &b_mu_staco_nMDTBIS78Hits);
   fChain->SetBranchAddress("mu_staco_nMDTEIHits", &mu_staco_nMDTEIHits, &b_mu_staco_nMDTEIHits);
   fChain->SetBranchAddress("mu_staco_nMDTEMHits", &mu_staco_nMDTEMHits, &b_mu_staco_nMDTEMHits);
   fChain->SetBranchAddress("mu_staco_nMDTEOHits", &mu_staco_nMDTEOHits, &b_mu_staco_nMDTEOHits);
   fChain->SetBranchAddress("mu_staco_nMDTEEHits", &mu_staco_nMDTEEHits, &b_mu_staco_nMDTEEHits);
   fChain->SetBranchAddress("mu_staco_nRPCLayer1EtaHits", &mu_staco_nRPCLayer1EtaHits, &b_mu_staco_nRPCLayer1EtaHits);
   fChain->SetBranchAddress("mu_staco_nRPCLayer2EtaHits", &mu_staco_nRPCLayer2EtaHits, &b_mu_staco_nRPCLayer2EtaHits);
   fChain->SetBranchAddress("mu_staco_nRPCLayer3EtaHits", &mu_staco_nRPCLayer3EtaHits, &b_mu_staco_nRPCLayer3EtaHits);
   fChain->SetBranchAddress("mu_staco_nRPCLayer1PhiHits", &mu_staco_nRPCLayer1PhiHits, &b_mu_staco_nRPCLayer1PhiHits);
   fChain->SetBranchAddress("mu_staco_nRPCLayer2PhiHits", &mu_staco_nRPCLayer2PhiHits, &b_mu_staco_nRPCLayer2PhiHits);
   fChain->SetBranchAddress("mu_staco_nRPCLayer3PhiHits", &mu_staco_nRPCLayer3PhiHits, &b_mu_staco_nRPCLayer3PhiHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer1EtaHits", &mu_staco_nTGCLayer1EtaHits, &b_mu_staco_nTGCLayer1EtaHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer2EtaHits", &mu_staco_nTGCLayer2EtaHits, &b_mu_staco_nTGCLayer2EtaHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer3EtaHits", &mu_staco_nTGCLayer3EtaHits, &b_mu_staco_nTGCLayer3EtaHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer4EtaHits", &mu_staco_nTGCLayer4EtaHits, &b_mu_staco_nTGCLayer4EtaHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer1PhiHits", &mu_staco_nTGCLayer1PhiHits, &b_mu_staco_nTGCLayer1PhiHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer2PhiHits", &mu_staco_nTGCLayer2PhiHits, &b_mu_staco_nTGCLayer2PhiHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer3PhiHits", &mu_staco_nTGCLayer3PhiHits, &b_mu_staco_nTGCLayer3PhiHits);
   fChain->SetBranchAddress("mu_staco_nTGCLayer4PhiHits", &mu_staco_nTGCLayer4PhiHits, &b_mu_staco_nTGCLayer4PhiHits);
   fChain->SetBranchAddress("mu_staco_barrelSectors", &mu_staco_barrelSectors, &b_mu_staco_barrelSectors);
   fChain->SetBranchAddress("mu_staco_endcapSectors", &mu_staco_endcapSectors, &b_mu_staco_endcapSectors);
   fChain->SetBranchAddress("mu_staco_trackd0", &mu_staco_trackd0, &b_mu_staco_trackd0);
   fChain->SetBranchAddress("mu_staco_trackz0", &mu_staco_trackz0, &b_mu_staco_trackz0);
   fChain->SetBranchAddress("mu_staco_trackphi", &mu_staco_trackphi, &b_mu_staco_trackphi);
   fChain->SetBranchAddress("mu_staco_tracktheta", &mu_staco_tracktheta, &b_mu_staco_tracktheta);
   fChain->SetBranchAddress("mu_staco_trackqoverp", &mu_staco_trackqoverp, &b_mu_staco_trackqoverp);
   fChain->SetBranchAddress("mu_staco_trackcov_d0", &mu_staco_trackcov_d0, &b_mu_staco_trackcov_d0);
   fChain->SetBranchAddress("mu_staco_trackcov_z0", &mu_staco_trackcov_z0, &b_mu_staco_trackcov_z0);
   fChain->SetBranchAddress("mu_staco_trackcov_phi", &mu_staco_trackcov_phi, &b_mu_staco_trackcov_phi);
   fChain->SetBranchAddress("mu_staco_trackcov_theta", &mu_staco_trackcov_theta, &b_mu_staco_trackcov_theta);
   fChain->SetBranchAddress("mu_staco_trackcov_qoverp", &mu_staco_trackcov_qoverp, &b_mu_staco_trackcov_qoverp);
   fChain->SetBranchAddress("mu_staco_trackcov_d0_z0", &mu_staco_trackcov_d0_z0, &b_mu_staco_trackcov_d0_z0);
   fChain->SetBranchAddress("mu_staco_trackcov_d0_phi", &mu_staco_trackcov_d0_phi, &b_mu_staco_trackcov_d0_phi);
   fChain->SetBranchAddress("mu_staco_trackcov_d0_theta", &mu_staco_trackcov_d0_theta, &b_mu_staco_trackcov_d0_theta);
   fChain->SetBranchAddress("mu_staco_trackcov_d0_qoverp", &mu_staco_trackcov_d0_qoverp, &b_mu_staco_trackcov_d0_qoverp);
   fChain->SetBranchAddress("mu_staco_trackcov_z0_phi", &mu_staco_trackcov_z0_phi, &b_mu_staco_trackcov_z0_phi);
   fChain->SetBranchAddress("mu_staco_trackcov_z0_theta", &mu_staco_trackcov_z0_theta, &b_mu_staco_trackcov_z0_theta);
   fChain->SetBranchAddress("mu_staco_trackcov_z0_qoverp", &mu_staco_trackcov_z0_qoverp, &b_mu_staco_trackcov_z0_qoverp);
   fChain->SetBranchAddress("mu_staco_trackcov_phi_theta", &mu_staco_trackcov_phi_theta, &b_mu_staco_trackcov_phi_theta);
   fChain->SetBranchAddress("mu_staco_trackcov_phi_qoverp", &mu_staco_trackcov_phi_qoverp, &b_mu_staco_trackcov_phi_qoverp);
   fChain->SetBranchAddress("mu_staco_trackcov_theta_qoverp", &mu_staco_trackcov_theta_qoverp, &b_mu_staco_trackcov_theta_qoverp);
   fChain->SetBranchAddress("mu_staco_trackfitchi2", &mu_staco_trackfitchi2, &b_mu_staco_trackfitchi2);
   fChain->SetBranchAddress("mu_staco_trackfitndof", &mu_staco_trackfitndof, &b_mu_staco_trackfitndof);
   fChain->SetBranchAddress("mu_staco_hastrack", &mu_staco_hastrack, &b_mu_staco_hastrack);
   fChain->SetBranchAddress("mu_staco_trackd0beam", &mu_staco_trackd0beam, &b_mu_staco_trackd0beam);
   fChain->SetBranchAddress("mu_staco_trackz0beam", &mu_staco_trackz0beam, &b_mu_staco_trackz0beam);
   fChain->SetBranchAddress("mu_staco_tracksigd0beam", &mu_staco_tracksigd0beam, &b_mu_staco_tracksigd0beam);
   fChain->SetBranchAddress("mu_staco_tracksigz0beam", &mu_staco_tracksigz0beam, &b_mu_staco_tracksigz0beam);
   fChain->SetBranchAddress("mu_staco_trackd0pv", &mu_staco_trackd0pv, &b_mu_staco_trackd0pv);
   fChain->SetBranchAddress("mu_staco_trackz0pv", &mu_staco_trackz0pv, &b_mu_staco_trackz0pv);
   fChain->SetBranchAddress("mu_staco_tracksigd0pv", &mu_staco_tracksigd0pv, &b_mu_staco_tracksigd0pv);
   fChain->SetBranchAddress("mu_staco_tracksigz0pv", &mu_staco_tracksigz0pv, &b_mu_staco_tracksigz0pv);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_d0_biasedpvunbiased", &mu_staco_trackIPEstimate_d0_biasedpvunbiased, &b_mu_staco_trackIPEstimate_d0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_z0_biasedpvunbiased", &mu_staco_trackIPEstimate_z0_biasedpvunbiased, &b_mu_staco_trackIPEstimate_z0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_sigd0_biasedpvunbiased", &mu_staco_trackIPEstimate_sigd0_biasedpvunbiased, &b_mu_staco_trackIPEstimate_sigd0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_sigz0_biasedpvunbiased", &mu_staco_trackIPEstimate_sigz0_biasedpvunbiased, &b_mu_staco_trackIPEstimate_sigz0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_d0_unbiasedpvunbiased", &mu_staco_trackIPEstimate_d0_unbiasedpvunbiased, &b_mu_staco_trackIPEstimate_d0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_z0_unbiasedpvunbiased", &mu_staco_trackIPEstimate_z0_unbiasedpvunbiased, &b_mu_staco_trackIPEstimate_z0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased", &mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased, &b_mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased", &mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased, &b_mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_staco_trackd0pvunbiased", &mu_staco_trackd0pvunbiased, &b_mu_staco_trackd0pvunbiased);
   fChain->SetBranchAddress("mu_staco_trackz0pvunbiased", &mu_staco_trackz0pvunbiased, &b_mu_staco_trackz0pvunbiased);
   fChain->SetBranchAddress("mu_staco_tracksigd0pvunbiased", &mu_staco_tracksigd0pvunbiased, &b_mu_staco_tracksigd0pvunbiased);
   fChain->SetBranchAddress("mu_staco_tracksigz0pvunbiased", &mu_staco_tracksigz0pvunbiased, &b_mu_staco_tracksigz0pvunbiased);
   fChain->SetBranchAddress("mu_staco_type", &mu_staco_type, &b_mu_staco_type);
   fChain->SetBranchAddress("mu_staco_origin", &mu_staco_origin, &b_mu_staco_origin);
   fChain->SetBranchAddress("mu_staco_truth_dr", &mu_staco_truth_dr, &b_mu_staco_truth_dr);
   fChain->SetBranchAddress("mu_staco_truth_E", &mu_staco_truth_E, &b_mu_staco_truth_E);
   fChain->SetBranchAddress("mu_staco_truth_pt", &mu_staco_truth_pt, &b_mu_staco_truth_pt);
   fChain->SetBranchAddress("mu_staco_truth_eta", &mu_staco_truth_eta, &b_mu_staco_truth_eta);
   fChain->SetBranchAddress("mu_staco_truth_phi", &mu_staco_truth_phi, &b_mu_staco_truth_phi);
   fChain->SetBranchAddress("mu_staco_truth_type", &mu_staco_truth_type, &b_mu_staco_truth_type);
   fChain->SetBranchAddress("mu_staco_truth_status", &mu_staco_truth_status, &b_mu_staco_truth_status);
   fChain->SetBranchAddress("mu_staco_truth_barcode", &mu_staco_truth_barcode, &b_mu_staco_truth_barcode);
   fChain->SetBranchAddress("mu_staco_truth_mothertype", &mu_staco_truth_mothertype, &b_mu_staco_truth_mothertype);
   fChain->SetBranchAddress("mu_staco_truth_motherbarcode", &mu_staco_truth_motherbarcode, &b_mu_staco_truth_motherbarcode);
   fChain->SetBranchAddress("mu_staco_truth_matched", &mu_staco_truth_matched, &b_mu_staco_truth_matched);
   fChain->SetBranchAddress("mu_staco_EFCB_dr", &mu_staco_EFCB_dr, &b_mu_staco_EFCB_dr);
   fChain->SetBranchAddress("mu_staco_EFCB_n", &mu_staco_EFCB_n, &b_mu_staco_EFCB_n);
   fChain->SetBranchAddress("mu_staco_EFCB_MuonType", &mu_staco_EFCB_MuonType, &b_mu_staco_EFCB_MuonType);
   fChain->SetBranchAddress("mu_staco_EFCB_pt", &mu_staco_EFCB_pt, &b_mu_staco_EFCB_pt);
   fChain->SetBranchAddress("mu_staco_EFCB_eta", &mu_staco_EFCB_eta, &b_mu_staco_EFCB_eta);
   fChain->SetBranchAddress("mu_staco_EFCB_phi", &mu_staco_EFCB_phi, &b_mu_staco_EFCB_phi);
   fChain->SetBranchAddress("mu_staco_EFCB_hasCB", &mu_staco_EFCB_hasCB, &b_mu_staco_EFCB_hasCB);
   fChain->SetBranchAddress("mu_staco_EFCB_matched", &mu_staco_EFCB_matched, &b_mu_staco_EFCB_matched);
   fChain->SetBranchAddress("mu_staco_EFMG_dr", &mu_staco_EFMG_dr, &b_mu_staco_EFMG_dr);
   fChain->SetBranchAddress("mu_staco_EFMG_n", &mu_staco_EFMG_n, &b_mu_staco_EFMG_n);
   fChain->SetBranchAddress("mu_staco_EFMG_MuonType", &mu_staco_EFMG_MuonType, &b_mu_staco_EFMG_MuonType);
   fChain->SetBranchAddress("mu_staco_EFMG_pt", &mu_staco_EFMG_pt, &b_mu_staco_EFMG_pt);
   fChain->SetBranchAddress("mu_staco_EFMG_eta", &mu_staco_EFMG_eta, &b_mu_staco_EFMG_eta);
   fChain->SetBranchAddress("mu_staco_EFMG_phi", &mu_staco_EFMG_phi, &b_mu_staco_EFMG_phi);
   fChain->SetBranchAddress("mu_staco_EFMG_hasMG", &mu_staco_EFMG_hasMG, &b_mu_staco_EFMG_hasMG);
   fChain->SetBranchAddress("mu_staco_EFMG_matched", &mu_staco_EFMG_matched, &b_mu_staco_EFMG_matched);
   fChain->SetBranchAddress("mu_staco_EFME_dr", &mu_staco_EFME_dr, &b_mu_staco_EFME_dr);
   fChain->SetBranchAddress("mu_staco_EFME_n", &mu_staco_EFME_n, &b_mu_staco_EFME_n);
   fChain->SetBranchAddress("mu_staco_EFME_MuonType", &mu_staco_EFME_MuonType, &b_mu_staco_EFME_MuonType);
   fChain->SetBranchAddress("mu_staco_EFME_pt", &mu_staco_EFME_pt, &b_mu_staco_EFME_pt);
   fChain->SetBranchAddress("mu_staco_EFME_eta", &mu_staco_EFME_eta, &b_mu_staco_EFME_eta);
   fChain->SetBranchAddress("mu_staco_EFME_phi", &mu_staco_EFME_phi, &b_mu_staco_EFME_phi);
   fChain->SetBranchAddress("mu_staco_EFME_hasME", &mu_staco_EFME_hasME, &b_mu_staco_EFME_hasME);
   fChain->SetBranchAddress("mu_staco_EFME_matched", &mu_staco_EFME_matched, &b_mu_staco_EFME_matched);
   fChain->SetBranchAddress("mu_staco_L2CB_dr", &mu_staco_L2CB_dr, &b_mu_staco_L2CB_dr);
   fChain->SetBranchAddress("mu_staco_L2CB_pt", &mu_staco_L2CB_pt, &b_mu_staco_L2CB_pt);
   fChain->SetBranchAddress("mu_staco_L2CB_eta", &mu_staco_L2CB_eta, &b_mu_staco_L2CB_eta);
   fChain->SetBranchAddress("mu_staco_L2CB_phi", &mu_staco_L2CB_phi, &b_mu_staco_L2CB_phi);
   fChain->SetBranchAddress("mu_staco_L2CB_id_pt", &mu_staco_L2CB_id_pt, &b_mu_staco_L2CB_id_pt);
   fChain->SetBranchAddress("mu_staco_L2CB_ms_pt", &mu_staco_L2CB_ms_pt, &b_mu_staco_L2CB_ms_pt);
   fChain->SetBranchAddress("mu_staco_L2CB_nPixHits", &mu_staco_L2CB_nPixHits, &b_mu_staco_L2CB_nPixHits);
   fChain->SetBranchAddress("mu_staco_L2CB_nSCTHits", &mu_staco_L2CB_nSCTHits, &b_mu_staco_L2CB_nSCTHits);
   fChain->SetBranchAddress("mu_staco_L2CB_nTRTHits", &mu_staco_L2CB_nTRTHits, &b_mu_staco_L2CB_nTRTHits);
   fChain->SetBranchAddress("mu_staco_L2CB_nTRTHighTHits", &mu_staco_L2CB_nTRTHighTHits, &b_mu_staco_L2CB_nTRTHighTHits);
   fChain->SetBranchAddress("mu_staco_L2CB_matched", &mu_staco_L2CB_matched, &b_mu_staco_L2CB_matched);
   fChain->SetBranchAddress("mu_staco_L1_dr", &mu_staco_L1_dr, &b_mu_staco_L1_dr);
   fChain->SetBranchAddress("mu_staco_L1_pt", &mu_staco_L1_pt, &b_mu_staco_L1_pt);
   fChain->SetBranchAddress("mu_staco_L1_eta", &mu_staco_L1_eta, &b_mu_staco_L1_eta);
   fChain->SetBranchAddress("mu_staco_L1_phi", &mu_staco_L1_phi, &b_mu_staco_L1_phi);
   fChain->SetBranchAddress("mu_staco_L1_thrNumber", &mu_staco_L1_thrNumber, &b_mu_staco_L1_thrNumber);
   fChain->SetBranchAddress("mu_staco_L1_RoINumber", &mu_staco_L1_RoINumber, &b_mu_staco_L1_RoINumber);
   fChain->SetBranchAddress("mu_staco_L1_sectorAddress", &mu_staco_L1_sectorAddress, &b_mu_staco_L1_sectorAddress);
   fChain->SetBranchAddress("mu_staco_L1_firstCandidate", &mu_staco_L1_firstCandidate, &b_mu_staco_L1_firstCandidate);
   fChain->SetBranchAddress("mu_staco_L1_moreCandInRoI", &mu_staco_L1_moreCandInRoI, &b_mu_staco_L1_moreCandInRoI);
   fChain->SetBranchAddress("mu_staco_L1_moreCandInSector", &mu_staco_L1_moreCandInSector, &b_mu_staco_L1_moreCandInSector);
   fChain->SetBranchAddress("mu_staco_L1_source", &mu_staco_L1_source, &b_mu_staco_L1_source);
   fChain->SetBranchAddress("mu_staco_L1_hemisphere", &mu_staco_L1_hemisphere, &b_mu_staco_L1_hemisphere);
   fChain->SetBranchAddress("mu_staco_L1_charge", &mu_staco_L1_charge, &b_mu_staco_L1_charge);
   fChain->SetBranchAddress("mu_staco_L1_vetoed", &mu_staco_L1_vetoed, &b_mu_staco_L1_vetoed);
   fChain->SetBranchAddress("mu_staco_L1_matched", &mu_staco_L1_matched, &b_mu_staco_L1_matched);
   fChain->SetBranchAddress("mu_muid_n", &mu_muid_n, &b_mu_muid_n);
   fChain->SetBranchAddress("mu_muid_E", &mu_muid_E, &b_mu_muid_E);
   fChain->SetBranchAddress("mu_muid_pt", &mu_muid_pt, &b_mu_muid_pt);
   fChain->SetBranchAddress("mu_muid_m", &mu_muid_m, &b_mu_muid_m);
   fChain->SetBranchAddress("mu_muid_eta", &mu_muid_eta, &b_mu_muid_eta);
   fChain->SetBranchAddress("mu_muid_phi", &mu_muid_phi, &b_mu_muid_phi);
   fChain->SetBranchAddress("mu_muid_px", &mu_muid_px, &b_mu_muid_px);
   fChain->SetBranchAddress("mu_muid_py", &mu_muid_py, &b_mu_muid_py);
   fChain->SetBranchAddress("mu_muid_pz", &mu_muid_pz, &b_mu_muid_pz);
   fChain->SetBranchAddress("mu_muid_charge", &mu_muid_charge, &b_mu_muid_charge);
   fChain->SetBranchAddress("mu_muid_allauthor", &mu_muid_allauthor, &b_mu_muid_allauthor);
   fChain->SetBranchAddress("mu_muid_author", &mu_muid_author, &b_mu_muid_author);
   fChain->SetBranchAddress("mu_muid_beta", &mu_muid_beta, &b_mu_muid_beta);
   fChain->SetBranchAddress("mu_muid_isMuonLikelihood", &mu_muid_isMuonLikelihood, &b_mu_muid_isMuonLikelihood);
   fChain->SetBranchAddress("mu_muid_matchchi2", &mu_muid_matchchi2, &b_mu_muid_matchchi2);
   fChain->SetBranchAddress("mu_muid_matchndof", &mu_muid_matchndof, &b_mu_muid_matchndof);
   fChain->SetBranchAddress("mu_muid_etcone20", &mu_muid_etcone20, &b_mu_muid_etcone20);
   fChain->SetBranchAddress("mu_muid_etcone30", &mu_muid_etcone30, &b_mu_muid_etcone30);
   fChain->SetBranchAddress("mu_muid_etcone40", &mu_muid_etcone40, &b_mu_muid_etcone40);
   fChain->SetBranchAddress("mu_muid_nucone20", &mu_muid_nucone20, &b_mu_muid_nucone20);
   fChain->SetBranchAddress("mu_muid_nucone30", &mu_muid_nucone30, &b_mu_muid_nucone30);
   fChain->SetBranchAddress("mu_muid_nucone40", &mu_muid_nucone40, &b_mu_muid_nucone40);
   fChain->SetBranchAddress("mu_muid_ptcone20", &mu_muid_ptcone20, &b_mu_muid_ptcone20);
   fChain->SetBranchAddress("mu_muid_ptcone30", &mu_muid_ptcone30, &b_mu_muid_ptcone30);
   fChain->SetBranchAddress("mu_muid_ptcone40", &mu_muid_ptcone40, &b_mu_muid_ptcone40);
   fChain->SetBranchAddress("mu_muid_etconeNoEm10", &mu_muid_etconeNoEm10, &b_mu_muid_etconeNoEm10);
   fChain->SetBranchAddress("mu_muid_etconeNoEm20", &mu_muid_etconeNoEm20, &b_mu_muid_etconeNoEm20);
   fChain->SetBranchAddress("mu_muid_etconeNoEm30", &mu_muid_etconeNoEm30, &b_mu_muid_etconeNoEm30);
   fChain->SetBranchAddress("mu_muid_etconeNoEm40", &mu_muid_etconeNoEm40, &b_mu_muid_etconeNoEm40);
   fChain->SetBranchAddress("mu_muid_scatteringCurvatureSignificance", &mu_muid_scatteringCurvatureSignificance, &b_mu_muid_scatteringCurvatureSignificance);
   fChain->SetBranchAddress("mu_muid_scatteringNeighbourSignificance", &mu_muid_scatteringNeighbourSignificance, &b_mu_muid_scatteringNeighbourSignificance);
   fChain->SetBranchAddress("mu_muid_momentumBalanceSignificance", &mu_muid_momentumBalanceSignificance, &b_mu_muid_momentumBalanceSignificance);
   fChain->SetBranchAddress("mu_muid_energyLossPar", &mu_muid_energyLossPar, &b_mu_muid_energyLossPar);
   fChain->SetBranchAddress("mu_muid_energyLossErr", &mu_muid_energyLossErr, &b_mu_muid_energyLossErr);
   fChain->SetBranchAddress("mu_muid_etCore", &mu_muid_etCore, &b_mu_muid_etCore);
   fChain->SetBranchAddress("mu_muid_energyLossType", &mu_muid_energyLossType, &b_mu_muid_energyLossType);
   fChain->SetBranchAddress("mu_muid_caloMuonIdTag", &mu_muid_caloMuonIdTag, &b_mu_muid_caloMuonIdTag);
   fChain->SetBranchAddress("mu_muid_caloLRLikelihood", &mu_muid_caloLRLikelihood, &b_mu_muid_caloLRLikelihood);
   fChain->SetBranchAddress("mu_muid_bestMatch", &mu_muid_bestMatch, &b_mu_muid_bestMatch);
   fChain->SetBranchAddress("mu_muid_isStandAloneMuon", &mu_muid_isStandAloneMuon, &b_mu_muid_isStandAloneMuon);
   fChain->SetBranchAddress("mu_muid_isCombinedMuon", &mu_muid_isCombinedMuon, &b_mu_muid_isCombinedMuon);
   fChain->SetBranchAddress("mu_muid_isLowPtReconstructedMuon", &mu_muid_isLowPtReconstructedMuon, &b_mu_muid_isLowPtReconstructedMuon);
   fChain->SetBranchAddress("mu_muid_isSegmentTaggedMuon", &mu_muid_isSegmentTaggedMuon, &b_mu_muid_isSegmentTaggedMuon);
   fChain->SetBranchAddress("mu_muid_isCaloMuonId", &mu_muid_isCaloMuonId, &b_mu_muid_isCaloMuonId);
   fChain->SetBranchAddress("mu_muid_alsoFoundByLowPt", &mu_muid_alsoFoundByLowPt, &b_mu_muid_alsoFoundByLowPt);
   fChain->SetBranchAddress("mu_muid_alsoFoundByCaloMuonId", &mu_muid_alsoFoundByCaloMuonId, &b_mu_muid_alsoFoundByCaloMuonId);
   fChain->SetBranchAddress("mu_muid_isSiliconAssociatedForwardMuon", &mu_muid_isSiliconAssociatedForwardMuon, &b_mu_muid_isSiliconAssociatedForwardMuon);
   fChain->SetBranchAddress("mu_muid_loose", &mu_muid_loose, &b_mu_muid_loose);
   fChain->SetBranchAddress("mu_muid_medium", &mu_muid_medium, &b_mu_muid_medium);
   fChain->SetBranchAddress("mu_muid_tight", &mu_muid_tight, &b_mu_muid_tight);
   fChain->SetBranchAddress("mu_muid_d0_exPV", &mu_muid_d0_exPV, &b_mu_muid_d0_exPV);
   fChain->SetBranchAddress("mu_muid_z0_exPV", &mu_muid_z0_exPV, &b_mu_muid_z0_exPV);
   fChain->SetBranchAddress("mu_muid_phi_exPV", &mu_muid_phi_exPV, &b_mu_muid_phi_exPV);
   fChain->SetBranchAddress("mu_muid_theta_exPV", &mu_muid_theta_exPV, &b_mu_muid_theta_exPV);
   fChain->SetBranchAddress("mu_muid_qoverp_exPV", &mu_muid_qoverp_exPV, &b_mu_muid_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_cb_d0_exPV", &mu_muid_cb_d0_exPV, &b_mu_muid_cb_d0_exPV);
   fChain->SetBranchAddress("mu_muid_cb_z0_exPV", &mu_muid_cb_z0_exPV, &b_mu_muid_cb_z0_exPV);
   fChain->SetBranchAddress("mu_muid_cb_phi_exPV", &mu_muid_cb_phi_exPV, &b_mu_muid_cb_phi_exPV);
   fChain->SetBranchAddress("mu_muid_cb_theta_exPV", &mu_muid_cb_theta_exPV, &b_mu_muid_cb_theta_exPV);
   fChain->SetBranchAddress("mu_muid_cb_qoverp_exPV", &mu_muid_cb_qoverp_exPV, &b_mu_muid_cb_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_id_d0_exPV", &mu_muid_id_d0_exPV, &b_mu_muid_id_d0_exPV);
   fChain->SetBranchAddress("mu_muid_id_z0_exPV", &mu_muid_id_z0_exPV, &b_mu_muid_id_z0_exPV);
   fChain->SetBranchAddress("mu_muid_id_phi_exPV", &mu_muid_id_phi_exPV, &b_mu_muid_id_phi_exPV);
   fChain->SetBranchAddress("mu_muid_id_theta_exPV", &mu_muid_id_theta_exPV, &b_mu_muid_id_theta_exPV);
   fChain->SetBranchAddress("mu_muid_id_qoverp_exPV", &mu_muid_id_qoverp_exPV, &b_mu_muid_id_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_me_d0_exPV", &mu_muid_me_d0_exPV, &b_mu_muid_me_d0_exPV);
   fChain->SetBranchAddress("mu_muid_me_z0_exPV", &mu_muid_me_z0_exPV, &b_mu_muid_me_z0_exPV);
   fChain->SetBranchAddress("mu_muid_me_phi_exPV", &mu_muid_me_phi_exPV, &b_mu_muid_me_phi_exPV);
   fChain->SetBranchAddress("mu_muid_me_theta_exPV", &mu_muid_me_theta_exPV, &b_mu_muid_me_theta_exPV);
   fChain->SetBranchAddress("mu_muid_me_qoverp_exPV", &mu_muid_me_qoverp_exPV, &b_mu_muid_me_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_ie_d0_exPV", &mu_muid_ie_d0_exPV, &b_mu_muid_ie_d0_exPV);
   fChain->SetBranchAddress("mu_muid_ie_z0_exPV", &mu_muid_ie_z0_exPV, &b_mu_muid_ie_z0_exPV);
   fChain->SetBranchAddress("mu_muid_ie_phi_exPV", &mu_muid_ie_phi_exPV, &b_mu_muid_ie_phi_exPV);
   fChain->SetBranchAddress("mu_muid_ie_theta_exPV", &mu_muid_ie_theta_exPV, &b_mu_muid_ie_theta_exPV);
   fChain->SetBranchAddress("mu_muid_ie_qoverp_exPV", &mu_muid_ie_qoverp_exPV, &b_mu_muid_ie_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_SpaceTime_detID", &mu_muid_SpaceTime_detID, &b_mu_muid_SpaceTime_detID);
   fChain->SetBranchAddress("mu_muid_SpaceTime_t", &mu_muid_SpaceTime_t, &b_mu_muid_SpaceTime_t);
   fChain->SetBranchAddress("mu_muid_SpaceTime_tError", &mu_muid_SpaceTime_tError, &b_mu_muid_SpaceTime_tError);
   fChain->SetBranchAddress("mu_muid_SpaceTime_weight", &mu_muid_SpaceTime_weight, &b_mu_muid_SpaceTime_weight);
   fChain->SetBranchAddress("mu_muid_SpaceTime_x", &mu_muid_SpaceTime_x, &b_mu_muid_SpaceTime_x);
   fChain->SetBranchAddress("mu_muid_SpaceTime_y", &mu_muid_SpaceTime_y, &b_mu_muid_SpaceTime_y);
   fChain->SetBranchAddress("mu_muid_SpaceTime_z", &mu_muid_SpaceTime_z, &b_mu_muid_SpaceTime_z);
   fChain->SetBranchAddress("mu_muid_cov_d0_exPV", &mu_muid_cov_d0_exPV, &b_mu_muid_cov_d0_exPV);
   fChain->SetBranchAddress("mu_muid_cov_z0_exPV", &mu_muid_cov_z0_exPV, &b_mu_muid_cov_z0_exPV);
   fChain->SetBranchAddress("mu_muid_cov_phi_exPV", &mu_muid_cov_phi_exPV, &b_mu_muid_cov_phi_exPV);
   fChain->SetBranchAddress("mu_muid_cov_theta_exPV", &mu_muid_cov_theta_exPV, &b_mu_muid_cov_theta_exPV);
   fChain->SetBranchAddress("mu_muid_cov_qoverp_exPV", &mu_muid_cov_qoverp_exPV, &b_mu_muid_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_cov_d0_z0_exPV", &mu_muid_cov_d0_z0_exPV, &b_mu_muid_cov_d0_z0_exPV);
   fChain->SetBranchAddress("mu_muid_cov_d0_phi_exPV", &mu_muid_cov_d0_phi_exPV, &b_mu_muid_cov_d0_phi_exPV);
   fChain->SetBranchAddress("mu_muid_cov_d0_theta_exPV", &mu_muid_cov_d0_theta_exPV, &b_mu_muid_cov_d0_theta_exPV);
   fChain->SetBranchAddress("mu_muid_cov_d0_qoverp_exPV", &mu_muid_cov_d0_qoverp_exPV, &b_mu_muid_cov_d0_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_cov_z0_phi_exPV", &mu_muid_cov_z0_phi_exPV, &b_mu_muid_cov_z0_phi_exPV);
   fChain->SetBranchAddress("mu_muid_cov_z0_theta_exPV", &mu_muid_cov_z0_theta_exPV, &b_mu_muid_cov_z0_theta_exPV);
   fChain->SetBranchAddress("mu_muid_cov_z0_qoverp_exPV", &mu_muid_cov_z0_qoverp_exPV, &b_mu_muid_cov_z0_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_cov_phi_theta_exPV", &mu_muid_cov_phi_theta_exPV, &b_mu_muid_cov_phi_theta_exPV);
   fChain->SetBranchAddress("mu_muid_cov_phi_qoverp_exPV", &mu_muid_cov_phi_qoverp_exPV, &b_mu_muid_cov_phi_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_cov_theta_qoverp_exPV", &mu_muid_cov_theta_qoverp_exPV, &b_mu_muid_cov_theta_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_id_cov_d0_exPV", &mu_muid_id_cov_d0_exPV, &b_mu_muid_id_cov_d0_exPV);
   fChain->SetBranchAddress("mu_muid_id_cov_z0_exPV", &mu_muid_id_cov_z0_exPV, &b_mu_muid_id_cov_z0_exPV);
   fChain->SetBranchAddress("mu_muid_id_cov_phi_exPV", &mu_muid_id_cov_phi_exPV, &b_mu_muid_id_cov_phi_exPV);
   fChain->SetBranchAddress("mu_muid_id_cov_theta_exPV", &mu_muid_id_cov_theta_exPV, &b_mu_muid_id_cov_theta_exPV);
   fChain->SetBranchAddress("mu_muid_id_cov_qoverp_exPV", &mu_muid_id_cov_qoverp_exPV, &b_mu_muid_id_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_me_cov_d0_exPV", &mu_muid_me_cov_d0_exPV, &b_mu_muid_me_cov_d0_exPV);
   fChain->SetBranchAddress("mu_muid_me_cov_z0_exPV", &mu_muid_me_cov_z0_exPV, &b_mu_muid_me_cov_z0_exPV);
   fChain->SetBranchAddress("mu_muid_me_cov_phi_exPV", &mu_muid_me_cov_phi_exPV, &b_mu_muid_me_cov_phi_exPV);
   fChain->SetBranchAddress("mu_muid_me_cov_theta_exPV", &mu_muid_me_cov_theta_exPV, &b_mu_muid_me_cov_theta_exPV);
   fChain->SetBranchAddress("mu_muid_me_cov_qoverp_exPV", &mu_muid_me_cov_qoverp_exPV, &b_mu_muid_me_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_muid_ms_d0", &mu_muid_ms_d0, &b_mu_muid_ms_d0);
   fChain->SetBranchAddress("mu_muid_ms_z0", &mu_muid_ms_z0, &b_mu_muid_ms_z0);
   fChain->SetBranchAddress("mu_muid_ms_phi", &mu_muid_ms_phi, &b_mu_muid_ms_phi);
   fChain->SetBranchAddress("mu_muid_ms_theta", &mu_muid_ms_theta, &b_mu_muid_ms_theta);
   fChain->SetBranchAddress("mu_muid_ms_qoverp", &mu_muid_ms_qoverp, &b_mu_muid_ms_qoverp);
   fChain->SetBranchAddress("mu_muid_id_d0", &mu_muid_id_d0, &b_mu_muid_id_d0);
   fChain->SetBranchAddress("mu_muid_id_z0", &mu_muid_id_z0, &b_mu_muid_id_z0);
   fChain->SetBranchAddress("mu_muid_id_phi", &mu_muid_id_phi, &b_mu_muid_id_phi);
   fChain->SetBranchAddress("mu_muid_id_theta", &mu_muid_id_theta, &b_mu_muid_id_theta);
   fChain->SetBranchAddress("mu_muid_id_qoverp", &mu_muid_id_qoverp, &b_mu_muid_id_qoverp);
   fChain->SetBranchAddress("mu_muid_me_d0", &mu_muid_me_d0, &b_mu_muid_me_d0);
   fChain->SetBranchAddress("mu_muid_me_z0", &mu_muid_me_z0, &b_mu_muid_me_z0);
   fChain->SetBranchAddress("mu_muid_me_phi", &mu_muid_me_phi, &b_mu_muid_me_phi);
   fChain->SetBranchAddress("mu_muid_me_theta", &mu_muid_me_theta, &b_mu_muid_me_theta);
   fChain->SetBranchAddress("mu_muid_me_qoverp", &mu_muid_me_qoverp, &b_mu_muid_me_qoverp);
   fChain->SetBranchAddress("mu_muid_ie_d0", &mu_muid_ie_d0, &b_mu_muid_ie_d0);
   fChain->SetBranchAddress("mu_muid_ie_z0", &mu_muid_ie_z0, &b_mu_muid_ie_z0);
   fChain->SetBranchAddress("mu_muid_ie_phi", &mu_muid_ie_phi, &b_mu_muid_ie_phi);
   fChain->SetBranchAddress("mu_muid_ie_theta", &mu_muid_ie_theta, &b_mu_muid_ie_theta);
   fChain->SetBranchAddress("mu_muid_ie_qoverp", &mu_muid_ie_qoverp, &b_mu_muid_ie_qoverp);
   fChain->SetBranchAddress("mu_muid_nOutliersOnTrack", &mu_muid_nOutliersOnTrack, &b_mu_muid_nOutliersOnTrack);
   fChain->SetBranchAddress("mu_muid_nBLHits", &mu_muid_nBLHits, &b_mu_muid_nBLHits);
   fChain->SetBranchAddress("mu_muid_nPixHits", &mu_muid_nPixHits, &b_mu_muid_nPixHits);
   fChain->SetBranchAddress("mu_muid_nSCTHits", &mu_muid_nSCTHits, &b_mu_muid_nSCTHits);
   fChain->SetBranchAddress("mu_muid_nTRTHits", &mu_muid_nTRTHits, &b_mu_muid_nTRTHits);
   fChain->SetBranchAddress("mu_muid_nTRTHighTHits", &mu_muid_nTRTHighTHits, &b_mu_muid_nTRTHighTHits);
   fChain->SetBranchAddress("mu_muid_nBLSharedHits", &mu_muid_nBLSharedHits, &b_mu_muid_nBLSharedHits);
   fChain->SetBranchAddress("mu_muid_nPixSharedHits", &mu_muid_nPixSharedHits, &b_mu_muid_nPixSharedHits);
   fChain->SetBranchAddress("mu_muid_nPixHoles", &mu_muid_nPixHoles, &b_mu_muid_nPixHoles);
   fChain->SetBranchAddress("mu_muid_nSCTSharedHits", &mu_muid_nSCTSharedHits, &b_mu_muid_nSCTSharedHits);
   fChain->SetBranchAddress("mu_muid_nSCTHoles", &mu_muid_nSCTHoles, &b_mu_muid_nSCTHoles);
   fChain->SetBranchAddress("mu_muid_nTRTOutliers", &mu_muid_nTRTOutliers, &b_mu_muid_nTRTOutliers);
   fChain->SetBranchAddress("mu_muid_nTRTHighTOutliers", &mu_muid_nTRTHighTOutliers, &b_mu_muid_nTRTHighTOutliers);
   fChain->SetBranchAddress("mu_muid_nGangedPixels", &mu_muid_nGangedPixels, &b_mu_muid_nGangedPixels);
   fChain->SetBranchAddress("mu_muid_nPixelDeadSensors", &mu_muid_nPixelDeadSensors, &b_mu_muid_nPixelDeadSensors);
   fChain->SetBranchAddress("mu_muid_nSCTDeadSensors", &mu_muid_nSCTDeadSensors, &b_mu_muid_nSCTDeadSensors);
   fChain->SetBranchAddress("mu_muid_nTRTDeadStraws", &mu_muid_nTRTDeadStraws, &b_mu_muid_nTRTDeadStraws);
   fChain->SetBranchAddress("mu_muid_expectBLayerHit", &mu_muid_expectBLayerHit, &b_mu_muid_expectBLayerHit);
   fChain->SetBranchAddress("mu_muid_nMDTHits", &mu_muid_nMDTHits, &b_mu_muid_nMDTHits);
   fChain->SetBranchAddress("mu_muid_nMDTHoles", &mu_muid_nMDTHoles, &b_mu_muid_nMDTHoles);
   fChain->SetBranchAddress("mu_muid_nCSCEtaHits", &mu_muid_nCSCEtaHits, &b_mu_muid_nCSCEtaHits);
   fChain->SetBranchAddress("mu_muid_nCSCEtaHoles", &mu_muid_nCSCEtaHoles, &b_mu_muid_nCSCEtaHoles);
   fChain->SetBranchAddress("mu_muid_nCSCUnspoiledEtaHits", &mu_muid_nCSCUnspoiledEtaHits, &b_mu_muid_nCSCUnspoiledEtaHits);
   fChain->SetBranchAddress("mu_muid_nCSCPhiHits", &mu_muid_nCSCPhiHits, &b_mu_muid_nCSCPhiHits);
   fChain->SetBranchAddress("mu_muid_nCSCPhiHoles", &mu_muid_nCSCPhiHoles, &b_mu_muid_nCSCPhiHoles);
   fChain->SetBranchAddress("mu_muid_nRPCEtaHits", &mu_muid_nRPCEtaHits, &b_mu_muid_nRPCEtaHits);
   fChain->SetBranchAddress("mu_muid_nRPCEtaHoles", &mu_muid_nRPCEtaHoles, &b_mu_muid_nRPCEtaHoles);
   fChain->SetBranchAddress("mu_muid_nRPCPhiHits", &mu_muid_nRPCPhiHits, &b_mu_muid_nRPCPhiHits);
   fChain->SetBranchAddress("mu_muid_nRPCPhiHoles", &mu_muid_nRPCPhiHoles, &b_mu_muid_nRPCPhiHoles);
   fChain->SetBranchAddress("mu_muid_nTGCEtaHits", &mu_muid_nTGCEtaHits, &b_mu_muid_nTGCEtaHits);
   fChain->SetBranchAddress("mu_muid_nTGCEtaHoles", &mu_muid_nTGCEtaHoles, &b_mu_muid_nTGCEtaHoles);
   fChain->SetBranchAddress("mu_muid_nTGCPhiHits", &mu_muid_nTGCPhiHits, &b_mu_muid_nTGCPhiHits);
   fChain->SetBranchAddress("mu_muid_nTGCPhiHoles", &mu_muid_nTGCPhiHoles, &b_mu_muid_nTGCPhiHoles);
   fChain->SetBranchAddress("mu_muid_nprecisionLayers", &mu_muid_nprecisionLayers, &b_mu_muid_nprecisionLayers);
   fChain->SetBranchAddress("mu_muid_nprecisionHoleLayers", &mu_muid_nprecisionHoleLayers, &b_mu_muid_nprecisionHoleLayers);
   fChain->SetBranchAddress("mu_muid_nphiLayers", &mu_muid_nphiLayers, &b_mu_muid_nphiLayers);
   fChain->SetBranchAddress("mu_muid_ntrigEtaLayers", &mu_muid_ntrigEtaLayers, &b_mu_muid_ntrigEtaLayers);
   fChain->SetBranchAddress("mu_muid_nphiHoleLayers", &mu_muid_nphiHoleLayers, &b_mu_muid_nphiHoleLayers);
   fChain->SetBranchAddress("mu_muid_ntrigEtaHoleLayers", &mu_muid_ntrigEtaHoleLayers, &b_mu_muid_ntrigEtaHoleLayers);
   fChain->SetBranchAddress("mu_muid_nMDTBIHits", &mu_muid_nMDTBIHits, &b_mu_muid_nMDTBIHits);
   fChain->SetBranchAddress("mu_muid_nMDTBMHits", &mu_muid_nMDTBMHits, &b_mu_muid_nMDTBMHits);
   fChain->SetBranchAddress("mu_muid_nMDTBOHits", &mu_muid_nMDTBOHits, &b_mu_muid_nMDTBOHits);
   fChain->SetBranchAddress("mu_muid_nMDTBEEHits", &mu_muid_nMDTBEEHits, &b_mu_muid_nMDTBEEHits);
   fChain->SetBranchAddress("mu_muid_nMDTBIS78Hits", &mu_muid_nMDTBIS78Hits, &b_mu_muid_nMDTBIS78Hits);
   fChain->SetBranchAddress("mu_muid_nMDTEIHits", &mu_muid_nMDTEIHits, &b_mu_muid_nMDTEIHits);
   fChain->SetBranchAddress("mu_muid_nMDTEMHits", &mu_muid_nMDTEMHits, &b_mu_muid_nMDTEMHits);
   fChain->SetBranchAddress("mu_muid_nMDTEOHits", &mu_muid_nMDTEOHits, &b_mu_muid_nMDTEOHits);
   fChain->SetBranchAddress("mu_muid_nMDTEEHits", &mu_muid_nMDTEEHits, &b_mu_muid_nMDTEEHits);
   fChain->SetBranchAddress("mu_muid_nRPCLayer1EtaHits", &mu_muid_nRPCLayer1EtaHits, &b_mu_muid_nRPCLayer1EtaHits);
   fChain->SetBranchAddress("mu_muid_nRPCLayer2EtaHits", &mu_muid_nRPCLayer2EtaHits, &b_mu_muid_nRPCLayer2EtaHits);
   fChain->SetBranchAddress("mu_muid_nRPCLayer3EtaHits", &mu_muid_nRPCLayer3EtaHits, &b_mu_muid_nRPCLayer3EtaHits);
   fChain->SetBranchAddress("mu_muid_nRPCLayer1PhiHits", &mu_muid_nRPCLayer1PhiHits, &b_mu_muid_nRPCLayer1PhiHits);
   fChain->SetBranchAddress("mu_muid_nRPCLayer2PhiHits", &mu_muid_nRPCLayer2PhiHits, &b_mu_muid_nRPCLayer2PhiHits);
   fChain->SetBranchAddress("mu_muid_nRPCLayer3PhiHits", &mu_muid_nRPCLayer3PhiHits, &b_mu_muid_nRPCLayer3PhiHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer1EtaHits", &mu_muid_nTGCLayer1EtaHits, &b_mu_muid_nTGCLayer1EtaHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer2EtaHits", &mu_muid_nTGCLayer2EtaHits, &b_mu_muid_nTGCLayer2EtaHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer3EtaHits", &mu_muid_nTGCLayer3EtaHits, &b_mu_muid_nTGCLayer3EtaHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer4EtaHits", &mu_muid_nTGCLayer4EtaHits, &b_mu_muid_nTGCLayer4EtaHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer1PhiHits", &mu_muid_nTGCLayer1PhiHits, &b_mu_muid_nTGCLayer1PhiHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer2PhiHits", &mu_muid_nTGCLayer2PhiHits, &b_mu_muid_nTGCLayer2PhiHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer3PhiHits", &mu_muid_nTGCLayer3PhiHits, &b_mu_muid_nTGCLayer3PhiHits);
   fChain->SetBranchAddress("mu_muid_nTGCLayer4PhiHits", &mu_muid_nTGCLayer4PhiHits, &b_mu_muid_nTGCLayer4PhiHits);
   fChain->SetBranchAddress("mu_muid_barrelSectors", &mu_muid_barrelSectors, &b_mu_muid_barrelSectors);
   fChain->SetBranchAddress("mu_muid_endcapSectors", &mu_muid_endcapSectors, &b_mu_muid_endcapSectors);
   fChain->SetBranchAddress("mu_muid_trackd0", &mu_muid_trackd0, &b_mu_muid_trackd0);
   fChain->SetBranchAddress("mu_muid_trackz0", &mu_muid_trackz0, &b_mu_muid_trackz0);
   fChain->SetBranchAddress("mu_muid_trackphi", &mu_muid_trackphi, &b_mu_muid_trackphi);
   fChain->SetBranchAddress("mu_muid_tracktheta", &mu_muid_tracktheta, &b_mu_muid_tracktheta);
   fChain->SetBranchAddress("mu_muid_trackqoverp", &mu_muid_trackqoverp, &b_mu_muid_trackqoverp);
   fChain->SetBranchAddress("mu_muid_trackcov_d0", &mu_muid_trackcov_d0, &b_mu_muid_trackcov_d0);
   fChain->SetBranchAddress("mu_muid_trackcov_z0", &mu_muid_trackcov_z0, &b_mu_muid_trackcov_z0);
   fChain->SetBranchAddress("mu_muid_trackcov_phi", &mu_muid_trackcov_phi, &b_mu_muid_trackcov_phi);
   fChain->SetBranchAddress("mu_muid_trackcov_theta", &mu_muid_trackcov_theta, &b_mu_muid_trackcov_theta);
   fChain->SetBranchAddress("mu_muid_trackcov_qoverp", &mu_muid_trackcov_qoverp, &b_mu_muid_trackcov_qoverp);
   fChain->SetBranchAddress("mu_muid_trackcov_d0_z0", &mu_muid_trackcov_d0_z0, &b_mu_muid_trackcov_d0_z0);
   fChain->SetBranchAddress("mu_muid_trackcov_d0_phi", &mu_muid_trackcov_d0_phi, &b_mu_muid_trackcov_d0_phi);
   fChain->SetBranchAddress("mu_muid_trackcov_d0_theta", &mu_muid_trackcov_d0_theta, &b_mu_muid_trackcov_d0_theta);
   fChain->SetBranchAddress("mu_muid_trackcov_d0_qoverp", &mu_muid_trackcov_d0_qoverp, &b_mu_muid_trackcov_d0_qoverp);
   fChain->SetBranchAddress("mu_muid_trackcov_z0_phi", &mu_muid_trackcov_z0_phi, &b_mu_muid_trackcov_z0_phi);
   fChain->SetBranchAddress("mu_muid_trackcov_z0_theta", &mu_muid_trackcov_z0_theta, &b_mu_muid_trackcov_z0_theta);
   fChain->SetBranchAddress("mu_muid_trackcov_z0_qoverp", &mu_muid_trackcov_z0_qoverp, &b_mu_muid_trackcov_z0_qoverp);
   fChain->SetBranchAddress("mu_muid_trackcov_phi_theta", &mu_muid_trackcov_phi_theta, &b_mu_muid_trackcov_phi_theta);
   fChain->SetBranchAddress("mu_muid_trackcov_phi_qoverp", &mu_muid_trackcov_phi_qoverp, &b_mu_muid_trackcov_phi_qoverp);
   fChain->SetBranchAddress("mu_muid_trackcov_theta_qoverp", &mu_muid_trackcov_theta_qoverp, &b_mu_muid_trackcov_theta_qoverp);
   fChain->SetBranchAddress("mu_muid_trackfitchi2", &mu_muid_trackfitchi2, &b_mu_muid_trackfitchi2);
   fChain->SetBranchAddress("mu_muid_trackfitndof", &mu_muid_trackfitndof, &b_mu_muid_trackfitndof);
   fChain->SetBranchAddress("mu_muid_hastrack", &mu_muid_hastrack, &b_mu_muid_hastrack);
   fChain->SetBranchAddress("mu_muid_trackd0beam", &mu_muid_trackd0beam, &b_mu_muid_trackd0beam);
   fChain->SetBranchAddress("mu_muid_trackz0beam", &mu_muid_trackz0beam, &b_mu_muid_trackz0beam);
   fChain->SetBranchAddress("mu_muid_tracksigd0beam", &mu_muid_tracksigd0beam, &b_mu_muid_tracksigd0beam);
   fChain->SetBranchAddress("mu_muid_tracksigz0beam", &mu_muid_tracksigz0beam, &b_mu_muid_tracksigz0beam);
   fChain->SetBranchAddress("mu_muid_trackd0pv", &mu_muid_trackd0pv, &b_mu_muid_trackd0pv);
   fChain->SetBranchAddress("mu_muid_trackz0pv", &mu_muid_trackz0pv, &b_mu_muid_trackz0pv);
   fChain->SetBranchAddress("mu_muid_tracksigd0pv", &mu_muid_tracksigd0pv, &b_mu_muid_tracksigd0pv);
   fChain->SetBranchAddress("mu_muid_tracksigz0pv", &mu_muid_tracksigz0pv, &b_mu_muid_tracksigz0pv);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_d0_biasedpvunbiased", &mu_muid_trackIPEstimate_d0_biasedpvunbiased, &b_mu_muid_trackIPEstimate_d0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_z0_biasedpvunbiased", &mu_muid_trackIPEstimate_z0_biasedpvunbiased, &b_mu_muid_trackIPEstimate_z0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_sigd0_biasedpvunbiased", &mu_muid_trackIPEstimate_sigd0_biasedpvunbiased, &b_mu_muid_trackIPEstimate_sigd0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_sigz0_biasedpvunbiased", &mu_muid_trackIPEstimate_sigz0_biasedpvunbiased, &b_mu_muid_trackIPEstimate_sigz0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_d0_unbiasedpvunbiased", &mu_muid_trackIPEstimate_d0_unbiasedpvunbiased, &b_mu_muid_trackIPEstimate_d0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_z0_unbiasedpvunbiased", &mu_muid_trackIPEstimate_z0_unbiasedpvunbiased, &b_mu_muid_trackIPEstimate_z0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased", &mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased, &b_mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased", &mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased, &b_mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_muid_trackd0pvunbiased", &mu_muid_trackd0pvunbiased, &b_mu_muid_trackd0pvunbiased);
   fChain->SetBranchAddress("mu_muid_trackz0pvunbiased", &mu_muid_trackz0pvunbiased, &b_mu_muid_trackz0pvunbiased);
   fChain->SetBranchAddress("mu_muid_tracksigd0pvunbiased", &mu_muid_tracksigd0pvunbiased, &b_mu_muid_tracksigd0pvunbiased);
   fChain->SetBranchAddress("mu_muid_tracksigz0pvunbiased", &mu_muid_tracksigz0pvunbiased, &b_mu_muid_tracksigz0pvunbiased);
   fChain->SetBranchAddress("mu_muid_type", &mu_muid_type, &b_mu_muid_type);
   fChain->SetBranchAddress("mu_muid_origin", &mu_muid_origin, &b_mu_muid_origin);
   fChain->SetBranchAddress("mu_muid_truth_dr", &mu_muid_truth_dr, &b_mu_muid_truth_dr);
   fChain->SetBranchAddress("mu_muid_truth_E", &mu_muid_truth_E, &b_mu_muid_truth_E);
   fChain->SetBranchAddress("mu_muid_truth_pt", &mu_muid_truth_pt, &b_mu_muid_truth_pt);
   fChain->SetBranchAddress("mu_muid_truth_eta", &mu_muid_truth_eta, &b_mu_muid_truth_eta);
   fChain->SetBranchAddress("mu_muid_truth_phi", &mu_muid_truth_phi, &b_mu_muid_truth_phi);
   fChain->SetBranchAddress("mu_muid_truth_type", &mu_muid_truth_type, &b_mu_muid_truth_type);
   fChain->SetBranchAddress("mu_muid_truth_status", &mu_muid_truth_status, &b_mu_muid_truth_status);
   fChain->SetBranchAddress("mu_muid_truth_barcode", &mu_muid_truth_barcode, &b_mu_muid_truth_barcode);
   fChain->SetBranchAddress("mu_muid_truth_mothertype", &mu_muid_truth_mothertype, &b_mu_muid_truth_mothertype);
   fChain->SetBranchAddress("mu_muid_truth_motherbarcode", &mu_muid_truth_motherbarcode, &b_mu_muid_truth_motherbarcode);
   fChain->SetBranchAddress("mu_muid_truth_matched", &mu_muid_truth_matched, &b_mu_muid_truth_matched);
   fChain->SetBranchAddress("mu_muid_EFCB_dr", &mu_muid_EFCB_dr, &b_mu_muid_EFCB_dr);
   fChain->SetBranchAddress("mu_muid_EFCB_n", &mu_muid_EFCB_n, &b_mu_muid_EFCB_n);
   fChain->SetBranchAddress("mu_muid_EFCB_MuonType", &mu_muid_EFCB_MuonType, &b_mu_muid_EFCB_MuonType);
   fChain->SetBranchAddress("mu_muid_EFCB_pt", &mu_muid_EFCB_pt, &b_mu_muid_EFCB_pt);
   fChain->SetBranchAddress("mu_muid_EFCB_eta", &mu_muid_EFCB_eta, &b_mu_muid_EFCB_eta);
   fChain->SetBranchAddress("mu_muid_EFCB_phi", &mu_muid_EFCB_phi, &b_mu_muid_EFCB_phi);
   fChain->SetBranchAddress("mu_muid_EFCB_hasCB", &mu_muid_EFCB_hasCB, &b_mu_muid_EFCB_hasCB);
   fChain->SetBranchAddress("mu_muid_EFCB_matched", &mu_muid_EFCB_matched, &b_mu_muid_EFCB_matched);
   fChain->SetBranchAddress("mu_muid_EFMG_dr", &mu_muid_EFMG_dr, &b_mu_muid_EFMG_dr);
   fChain->SetBranchAddress("mu_muid_EFMG_n", &mu_muid_EFMG_n, &b_mu_muid_EFMG_n);
   fChain->SetBranchAddress("mu_muid_EFMG_MuonType", &mu_muid_EFMG_MuonType, &b_mu_muid_EFMG_MuonType);
   fChain->SetBranchAddress("mu_muid_EFMG_pt", &mu_muid_EFMG_pt, &b_mu_muid_EFMG_pt);
   fChain->SetBranchAddress("mu_muid_EFMG_eta", &mu_muid_EFMG_eta, &b_mu_muid_EFMG_eta);
   fChain->SetBranchAddress("mu_muid_EFMG_phi", &mu_muid_EFMG_phi, &b_mu_muid_EFMG_phi);
   fChain->SetBranchAddress("mu_muid_EFMG_hasMG", &mu_muid_EFMG_hasMG, &b_mu_muid_EFMG_hasMG);
   fChain->SetBranchAddress("mu_muid_EFMG_matched", &mu_muid_EFMG_matched, &b_mu_muid_EFMG_matched);
   fChain->SetBranchAddress("mu_muid_EFME_dr", &mu_muid_EFME_dr, &b_mu_muid_EFME_dr);
   fChain->SetBranchAddress("mu_muid_EFME_n", &mu_muid_EFME_n, &b_mu_muid_EFME_n);
   fChain->SetBranchAddress("mu_muid_EFME_MuonType", &mu_muid_EFME_MuonType, &b_mu_muid_EFME_MuonType);
   fChain->SetBranchAddress("mu_muid_EFME_pt", &mu_muid_EFME_pt, &b_mu_muid_EFME_pt);
   fChain->SetBranchAddress("mu_muid_EFME_eta", &mu_muid_EFME_eta, &b_mu_muid_EFME_eta);
   fChain->SetBranchAddress("mu_muid_EFME_phi", &mu_muid_EFME_phi, &b_mu_muid_EFME_phi);
   fChain->SetBranchAddress("mu_muid_EFME_hasME", &mu_muid_EFME_hasME, &b_mu_muid_EFME_hasME);
   fChain->SetBranchAddress("mu_muid_EFME_matched", &mu_muid_EFME_matched, &b_mu_muid_EFME_matched);
   fChain->SetBranchAddress("mu_muid_L2CB_dr", &mu_muid_L2CB_dr, &b_mu_muid_L2CB_dr);
   fChain->SetBranchAddress("mu_muid_L2CB_pt", &mu_muid_L2CB_pt, &b_mu_muid_L2CB_pt);
   fChain->SetBranchAddress("mu_muid_L2CB_eta", &mu_muid_L2CB_eta, &b_mu_muid_L2CB_eta);
   fChain->SetBranchAddress("mu_muid_L2CB_phi", &mu_muid_L2CB_phi, &b_mu_muid_L2CB_phi);
   fChain->SetBranchAddress("mu_muid_L2CB_id_pt", &mu_muid_L2CB_id_pt, &b_mu_muid_L2CB_id_pt);
   fChain->SetBranchAddress("mu_muid_L2CB_ms_pt", &mu_muid_L2CB_ms_pt, &b_mu_muid_L2CB_ms_pt);
   fChain->SetBranchAddress("mu_muid_L2CB_nPixHits", &mu_muid_L2CB_nPixHits, &b_mu_muid_L2CB_nPixHits);
   fChain->SetBranchAddress("mu_muid_L2CB_nSCTHits", &mu_muid_L2CB_nSCTHits, &b_mu_muid_L2CB_nSCTHits);
   fChain->SetBranchAddress("mu_muid_L2CB_nTRTHits", &mu_muid_L2CB_nTRTHits, &b_mu_muid_L2CB_nTRTHits);
   fChain->SetBranchAddress("mu_muid_L2CB_nTRTHighTHits", &mu_muid_L2CB_nTRTHighTHits, &b_mu_muid_L2CB_nTRTHighTHits);
   fChain->SetBranchAddress("mu_muid_L2CB_matched", &mu_muid_L2CB_matched, &b_mu_muid_L2CB_matched);
   fChain->SetBranchAddress("mu_muid_L1_dr", &mu_muid_L1_dr, &b_mu_muid_L1_dr);
   fChain->SetBranchAddress("mu_muid_L1_pt", &mu_muid_L1_pt, &b_mu_muid_L1_pt);
   fChain->SetBranchAddress("mu_muid_L1_eta", &mu_muid_L1_eta, &b_mu_muid_L1_eta);
   fChain->SetBranchAddress("mu_muid_L1_phi", &mu_muid_L1_phi, &b_mu_muid_L1_phi);
   fChain->SetBranchAddress("mu_muid_L1_thrNumber", &mu_muid_L1_thrNumber, &b_mu_muid_L1_thrNumber);
   fChain->SetBranchAddress("mu_muid_L1_RoINumber", &mu_muid_L1_RoINumber, &b_mu_muid_L1_RoINumber);
   fChain->SetBranchAddress("mu_muid_L1_sectorAddress", &mu_muid_L1_sectorAddress, &b_mu_muid_L1_sectorAddress);
   fChain->SetBranchAddress("mu_muid_L1_firstCandidate", &mu_muid_L1_firstCandidate, &b_mu_muid_L1_firstCandidate);
   fChain->SetBranchAddress("mu_muid_L1_moreCandInRoI", &mu_muid_L1_moreCandInRoI, &b_mu_muid_L1_moreCandInRoI);
   fChain->SetBranchAddress("mu_muid_L1_moreCandInSector", &mu_muid_L1_moreCandInSector, &b_mu_muid_L1_moreCandInSector);
   fChain->SetBranchAddress("mu_muid_L1_source", &mu_muid_L1_source, &b_mu_muid_L1_source);
   fChain->SetBranchAddress("mu_muid_L1_hemisphere", &mu_muid_L1_hemisphere, &b_mu_muid_L1_hemisphere);
   fChain->SetBranchAddress("mu_muid_L1_charge", &mu_muid_L1_charge, &b_mu_muid_L1_charge);
   fChain->SetBranchAddress("mu_muid_L1_vetoed", &mu_muid_L1_vetoed, &b_mu_muid_L1_vetoed);
   fChain->SetBranchAddress("mu_muid_L1_matched", &mu_muid_L1_matched, &b_mu_muid_L1_matched);
   fChain->SetBranchAddress("muid_n", &muid_n, &b_muid_n);
   fChain->SetBranchAddress("muid_nScatters", &muid_nScatters, &b_muid_nScatters);
   fChain->SetBranchAddress("muid_scatSignificance", &muid_scatSignificance, &b_muid_scatSignificance);
   fChain->SetBranchAddress("muid_neighbourSignificance", &muid_neighbourSignificance, &b_muid_neighbourSignificance);
   fChain->SetBranchAddress("muid_eta", &muid_eta, &b_muid_eta);
   fChain->SetBranchAddress("muid_probability", &muid_probability, &b_muid_probability);
   fChain->SetBranchAddress("muid_barcode", &muid_barcode, &b_muid_barcode);
   fChain->SetBranchAddress("muid_index", &muid_index, &b_muid_index);
   fChain->SetBranchAddress("mu_n", &mu_n, &b_mu_n);
   fChain->SetBranchAddress("mu_E", &mu_E, &b_mu_E);
   fChain->SetBranchAddress("mu_pt", &mu_pt, &b_mu_pt);
   fChain->SetBranchAddress("mu_m", &mu_m, &b_mu_m);
   fChain->SetBranchAddress("mu_eta", &mu_eta, &b_mu_eta);
   fChain->SetBranchAddress("mu_phi", &mu_phi, &b_mu_phi);
   fChain->SetBranchAddress("mu_px", &mu_px, &b_mu_px);
   fChain->SetBranchAddress("mu_py", &mu_py, &b_mu_py);
   fChain->SetBranchAddress("mu_pz", &mu_pz, &b_mu_pz);
   fChain->SetBranchAddress("mu_charge", &mu_charge, &b_mu_charge);
   fChain->SetBranchAddress("mu_allauthor", &mu_allauthor, &b_mu_allauthor);
   fChain->SetBranchAddress("mu_author", &mu_author, &b_mu_author);
   fChain->SetBranchAddress("mu_beta", &mu_beta, &b_mu_beta);
   fChain->SetBranchAddress("mu_isMuonLikelihood", &mu_isMuonLikelihood, &b_mu_isMuonLikelihood);
   fChain->SetBranchAddress("mu_matchchi2", &mu_matchchi2, &b_mu_matchchi2);
   fChain->SetBranchAddress("mu_matchndof", &mu_matchndof, &b_mu_matchndof);
   fChain->SetBranchAddress("mu_etcone20", &mu_etcone20, &b_mu_etcone20);
   fChain->SetBranchAddress("mu_etcone30", &mu_etcone30, &b_mu_etcone30);
   fChain->SetBranchAddress("mu_etcone40", &mu_etcone40, &b_mu_etcone40);
   fChain->SetBranchAddress("mu_nucone20", &mu_nucone20, &b_mu_nucone20);
   fChain->SetBranchAddress("mu_nucone30", &mu_nucone30, &b_mu_nucone30);
   fChain->SetBranchAddress("mu_nucone40", &mu_nucone40, &b_mu_nucone40);
   fChain->SetBranchAddress("mu_ptcone20", &mu_ptcone20, &b_mu_ptcone20);
   fChain->SetBranchAddress("mu_ptcone30", &mu_ptcone30, &b_mu_ptcone30);
   fChain->SetBranchAddress("mu_ptcone40", &mu_ptcone40, &b_mu_ptcone40);
   fChain->SetBranchAddress("mu_etconeNoEm10", &mu_etconeNoEm10, &b_mu_etconeNoEm10);
   fChain->SetBranchAddress("mu_etconeNoEm20", &mu_etconeNoEm20, &b_mu_etconeNoEm20);
   fChain->SetBranchAddress("mu_etconeNoEm30", &mu_etconeNoEm30, &b_mu_etconeNoEm30);
   fChain->SetBranchAddress("mu_etconeNoEm40", &mu_etconeNoEm40, &b_mu_etconeNoEm40);
   fChain->SetBranchAddress("mu_scatteringCurvatureSignificance", &mu_scatteringCurvatureSignificance, &b_mu_scatteringCurvatureSignificance);
   fChain->SetBranchAddress("mu_scatteringNeighbourSignificance", &mu_scatteringNeighbourSignificance, &b_mu_scatteringNeighbourSignificance);
   fChain->SetBranchAddress("mu_momentumBalanceSignificance", &mu_momentumBalanceSignificance, &b_mu_momentumBalanceSignificance);
   fChain->SetBranchAddress("mu_energyLossPar", &mu_energyLossPar, &b_mu_energyLossPar);
   fChain->SetBranchAddress("mu_energyLossErr", &mu_energyLossErr, &b_mu_energyLossErr);
   fChain->SetBranchAddress("mu_etCore", &mu_etCore, &b_mu_etCore);
   fChain->SetBranchAddress("mu_energyLossType", &mu_energyLossType, &b_mu_energyLossType);
   fChain->SetBranchAddress("mu_caloMuonIdTag", &mu_caloMuonIdTag, &b_mu_caloMuonIdTag);
   fChain->SetBranchAddress("mu_caloLRLikelihood", &mu_caloLRLikelihood, &b_mu_caloLRLikelihood);
   fChain->SetBranchAddress("mu_bestMatch", &mu_bestMatch, &b_mu_bestMatch);
   fChain->SetBranchAddress("mu_isStandAloneMuon", &mu_isStandAloneMuon, &b_mu_isStandAloneMuon);
   fChain->SetBranchAddress("mu_isCombinedMuon", &mu_isCombinedMuon, &b_mu_isCombinedMuon);
   fChain->SetBranchAddress("mu_isLowPtReconstructedMuon", &mu_isLowPtReconstructedMuon, &b_mu_isLowPtReconstructedMuon);
   fChain->SetBranchAddress("mu_isSegmentTaggedMuon", &mu_isSegmentTaggedMuon, &b_mu_isSegmentTaggedMuon);
   fChain->SetBranchAddress("mu_isCaloMuonId", &mu_isCaloMuonId, &b_mu_isCaloMuonId);
   fChain->SetBranchAddress("mu_alsoFoundByLowPt", &mu_alsoFoundByLowPt, &b_mu_alsoFoundByLowPt);
   fChain->SetBranchAddress("mu_alsoFoundByCaloMuonId", &mu_alsoFoundByCaloMuonId, &b_mu_alsoFoundByCaloMuonId);
   fChain->SetBranchAddress("mu_isSiliconAssociatedForwardMuon", &mu_isSiliconAssociatedForwardMuon, &b_mu_isSiliconAssociatedForwardMuon);
   fChain->SetBranchAddress("mu_loose", &mu_loose, &b_mu_loose);
   fChain->SetBranchAddress("mu_medium", &mu_medium, &b_mu_medium);
   fChain->SetBranchAddress("mu_tight", &mu_tight, &b_mu_tight);
   fChain->SetBranchAddress("mu_d0_exPV", &mu_d0_exPV, &b_mu_d0_exPV);
   fChain->SetBranchAddress("mu_z0_exPV", &mu_z0_exPV, &b_mu_z0_exPV);
   fChain->SetBranchAddress("mu_phi_exPV", &mu_phi_exPV, &b_mu_phi_exPV);
   fChain->SetBranchAddress("mu_theta_exPV", &mu_theta_exPV, &b_mu_theta_exPV);
   fChain->SetBranchAddress("mu_qoverp_exPV", &mu_qoverp_exPV, &b_mu_qoverp_exPV);
   fChain->SetBranchAddress("mu_cb_d0_exPV", &mu_cb_d0_exPV, &b_mu_cb_d0_exPV);
   fChain->SetBranchAddress("mu_cb_z0_exPV", &mu_cb_z0_exPV, &b_mu_cb_z0_exPV);
   fChain->SetBranchAddress("mu_cb_phi_exPV", &mu_cb_phi_exPV, &b_mu_cb_phi_exPV);
   fChain->SetBranchAddress("mu_cb_theta_exPV", &mu_cb_theta_exPV, &b_mu_cb_theta_exPV);
   fChain->SetBranchAddress("mu_cb_qoverp_exPV", &mu_cb_qoverp_exPV, &b_mu_cb_qoverp_exPV);
   fChain->SetBranchAddress("mu_id_d0_exPV", &mu_id_d0_exPV, &b_mu_id_d0_exPV);
   fChain->SetBranchAddress("mu_id_z0_exPV", &mu_id_z0_exPV, &b_mu_id_z0_exPV);
   fChain->SetBranchAddress("mu_id_phi_exPV", &mu_id_phi_exPV, &b_mu_id_phi_exPV);
   fChain->SetBranchAddress("mu_id_theta_exPV", &mu_id_theta_exPV, &b_mu_id_theta_exPV);
   fChain->SetBranchAddress("mu_id_qoverp_exPV", &mu_id_qoverp_exPV, &b_mu_id_qoverp_exPV);
   fChain->SetBranchAddress("mu_me_d0_exPV", &mu_me_d0_exPV, &b_mu_me_d0_exPV);
   fChain->SetBranchAddress("mu_me_z0_exPV", &mu_me_z0_exPV, &b_mu_me_z0_exPV);
   fChain->SetBranchAddress("mu_me_phi_exPV", &mu_me_phi_exPV, &b_mu_me_phi_exPV);
   fChain->SetBranchAddress("mu_me_theta_exPV", &mu_me_theta_exPV, &b_mu_me_theta_exPV);
   fChain->SetBranchAddress("mu_me_qoverp_exPV", &mu_me_qoverp_exPV, &b_mu_me_qoverp_exPV);
   fChain->SetBranchAddress("mu_ie_d0_exPV", &mu_ie_d0_exPV, &b_mu_ie_d0_exPV);
   fChain->SetBranchAddress("mu_ie_z0_exPV", &mu_ie_z0_exPV, &b_mu_ie_z0_exPV);
   fChain->SetBranchAddress("mu_ie_phi_exPV", &mu_ie_phi_exPV, &b_mu_ie_phi_exPV);
   fChain->SetBranchAddress("mu_ie_theta_exPV", &mu_ie_theta_exPV, &b_mu_ie_theta_exPV);
   fChain->SetBranchAddress("mu_ie_qoverp_exPV", &mu_ie_qoverp_exPV, &b_mu_ie_qoverp_exPV);
   fChain->SetBranchAddress("mu_SpaceTime_detID", &mu_SpaceTime_detID, &b_mu_SpaceTime_detID);
   fChain->SetBranchAddress("mu_SpaceTime_t", &mu_SpaceTime_t, &b_mu_SpaceTime_t);
   fChain->SetBranchAddress("mu_SpaceTime_tError", &mu_SpaceTime_tError, &b_mu_SpaceTime_tError);
   fChain->SetBranchAddress("mu_SpaceTime_weight", &mu_SpaceTime_weight, &b_mu_SpaceTime_weight);
   fChain->SetBranchAddress("mu_SpaceTime_x", &mu_SpaceTime_x, &b_mu_SpaceTime_x);
   fChain->SetBranchAddress("mu_SpaceTime_y", &mu_SpaceTime_y, &b_mu_SpaceTime_y);
   fChain->SetBranchAddress("mu_SpaceTime_z", &mu_SpaceTime_z, &b_mu_SpaceTime_z);
   fChain->SetBranchAddress("mu_cov_d0_exPV", &mu_cov_d0_exPV, &b_mu_cov_d0_exPV);
   fChain->SetBranchAddress("mu_cov_z0_exPV", &mu_cov_z0_exPV, &b_mu_cov_z0_exPV);
   fChain->SetBranchAddress("mu_cov_phi_exPV", &mu_cov_phi_exPV, &b_mu_cov_phi_exPV);
   fChain->SetBranchAddress("mu_cov_theta_exPV", &mu_cov_theta_exPV, &b_mu_cov_theta_exPV);
   fChain->SetBranchAddress("mu_cov_qoverp_exPV", &mu_cov_qoverp_exPV, &b_mu_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_cov_d0_z0_exPV", &mu_cov_d0_z0_exPV, &b_mu_cov_d0_z0_exPV);
   fChain->SetBranchAddress("mu_cov_d0_phi_exPV", &mu_cov_d0_phi_exPV, &b_mu_cov_d0_phi_exPV);
   fChain->SetBranchAddress("mu_cov_d0_theta_exPV", &mu_cov_d0_theta_exPV, &b_mu_cov_d0_theta_exPV);
   fChain->SetBranchAddress("mu_cov_d0_qoverp_exPV", &mu_cov_d0_qoverp_exPV, &b_mu_cov_d0_qoverp_exPV);
   fChain->SetBranchAddress("mu_cov_z0_phi_exPV", &mu_cov_z0_phi_exPV, &b_mu_cov_z0_phi_exPV);
   fChain->SetBranchAddress("mu_cov_z0_theta_exPV", &mu_cov_z0_theta_exPV, &b_mu_cov_z0_theta_exPV);
   fChain->SetBranchAddress("mu_cov_z0_qoverp_exPV", &mu_cov_z0_qoverp_exPV, &b_mu_cov_z0_qoverp_exPV);
   fChain->SetBranchAddress("mu_cov_phi_theta_exPV", &mu_cov_phi_theta_exPV, &b_mu_cov_phi_theta_exPV);
   fChain->SetBranchAddress("mu_cov_phi_qoverp_exPV", &mu_cov_phi_qoverp_exPV, &b_mu_cov_phi_qoverp_exPV);
   fChain->SetBranchAddress("mu_cov_theta_qoverp_exPV", &mu_cov_theta_qoverp_exPV, &b_mu_cov_theta_qoverp_exPV);
   fChain->SetBranchAddress("mu_id_cov_d0_exPV", &mu_id_cov_d0_exPV, &b_mu_id_cov_d0_exPV);
   fChain->SetBranchAddress("mu_id_cov_z0_exPV", &mu_id_cov_z0_exPV, &b_mu_id_cov_z0_exPV);
   fChain->SetBranchAddress("mu_id_cov_phi_exPV", &mu_id_cov_phi_exPV, &b_mu_id_cov_phi_exPV);
   fChain->SetBranchAddress("mu_id_cov_theta_exPV", &mu_id_cov_theta_exPV, &b_mu_id_cov_theta_exPV);
   fChain->SetBranchAddress("mu_id_cov_qoverp_exPV", &mu_id_cov_qoverp_exPV, &b_mu_id_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_me_cov_d0_exPV", &mu_me_cov_d0_exPV, &b_mu_me_cov_d0_exPV);
   fChain->SetBranchAddress("mu_me_cov_z0_exPV", &mu_me_cov_z0_exPV, &b_mu_me_cov_z0_exPV);
   fChain->SetBranchAddress("mu_me_cov_phi_exPV", &mu_me_cov_phi_exPV, &b_mu_me_cov_phi_exPV);
   fChain->SetBranchAddress("mu_me_cov_theta_exPV", &mu_me_cov_theta_exPV, &b_mu_me_cov_theta_exPV);
   fChain->SetBranchAddress("mu_me_cov_qoverp_exPV", &mu_me_cov_qoverp_exPV, &b_mu_me_cov_qoverp_exPV);
   fChain->SetBranchAddress("mu_ms_d0", &mu_ms_d0, &b_mu_ms_d0);
   fChain->SetBranchAddress("mu_ms_z0", &mu_ms_z0, &b_mu_ms_z0);
   fChain->SetBranchAddress("mu_ms_phi", &mu_ms_phi, &b_mu_ms_phi);
   fChain->SetBranchAddress("mu_ms_theta", &mu_ms_theta, &b_mu_ms_theta);
   fChain->SetBranchAddress("mu_ms_qoverp", &mu_ms_qoverp, &b_mu_ms_qoverp);
   fChain->SetBranchAddress("mu_id_d0", &mu_id_d0, &b_mu_id_d0);
   fChain->SetBranchAddress("mu_id_z0", &mu_id_z0, &b_mu_id_z0);
   fChain->SetBranchAddress("mu_id_phi", &mu_id_phi, &b_mu_id_phi);
   fChain->SetBranchAddress("mu_id_theta", &mu_id_theta, &b_mu_id_theta);
   fChain->SetBranchAddress("mu_id_qoverp", &mu_id_qoverp, &b_mu_id_qoverp);
   fChain->SetBranchAddress("mu_me_d0", &mu_me_d0, &b_mu_me_d0);
   fChain->SetBranchAddress("mu_me_z0", &mu_me_z0, &b_mu_me_z0);
   fChain->SetBranchAddress("mu_me_phi", &mu_me_phi, &b_mu_me_phi);
   fChain->SetBranchAddress("mu_me_theta", &mu_me_theta, &b_mu_me_theta);
   fChain->SetBranchAddress("mu_me_qoverp", &mu_me_qoverp, &b_mu_me_qoverp);
   fChain->SetBranchAddress("mu_ie_d0", &mu_ie_d0, &b_mu_ie_d0);
   fChain->SetBranchAddress("mu_ie_z0", &mu_ie_z0, &b_mu_ie_z0);
   fChain->SetBranchAddress("mu_ie_phi", &mu_ie_phi, &b_mu_ie_phi);
   fChain->SetBranchAddress("mu_ie_theta", &mu_ie_theta, &b_mu_ie_theta);
   fChain->SetBranchAddress("mu_ie_qoverp", &mu_ie_qoverp, &b_mu_ie_qoverp);
   fChain->SetBranchAddress("mu_nOutliersOnTrack", &mu_nOutliersOnTrack, &b_mu_nOutliersOnTrack);
   fChain->SetBranchAddress("mu_nBLHits", &mu_nBLHits, &b_mu_nBLHits);
   fChain->SetBranchAddress("mu_nPixHits", &mu_nPixHits, &b_mu_nPixHits);
   fChain->SetBranchAddress("mu_nSCTHits", &mu_nSCTHits, &b_mu_nSCTHits);
   fChain->SetBranchAddress("mu_nTRTHits", &mu_nTRTHits, &b_mu_nTRTHits);
   fChain->SetBranchAddress("mu_nTRTHighTHits", &mu_nTRTHighTHits, &b_mu_nTRTHighTHits);
   fChain->SetBranchAddress("mu_nBLSharedHits", &mu_nBLSharedHits, &b_mu_nBLSharedHits);
   fChain->SetBranchAddress("mu_nPixSharedHits", &mu_nPixSharedHits, &b_mu_nPixSharedHits);
   fChain->SetBranchAddress("mu_nPixHoles", &mu_nPixHoles, &b_mu_nPixHoles);
   fChain->SetBranchAddress("mu_nSCTSharedHits", &mu_nSCTSharedHits, &b_mu_nSCTSharedHits);
   fChain->SetBranchAddress("mu_nSCTHoles", &mu_nSCTHoles, &b_mu_nSCTHoles);
   fChain->SetBranchAddress("mu_nTRTOutliers", &mu_nTRTOutliers, &b_mu_nTRTOutliers);
   fChain->SetBranchAddress("mu_nTRTHighTOutliers", &mu_nTRTHighTOutliers, &b_mu_nTRTHighTOutliers);
   fChain->SetBranchAddress("mu_nGangedPixels", &mu_nGangedPixels, &b_mu_nGangedPixels);
   fChain->SetBranchAddress("mu_nPixelDeadSensors", &mu_nPixelDeadSensors, &b_mu_nPixelDeadSensors);
   fChain->SetBranchAddress("mu_nSCTDeadSensors", &mu_nSCTDeadSensors, &b_mu_nSCTDeadSensors);
   fChain->SetBranchAddress("mu_nTRTDeadStraws", &mu_nTRTDeadStraws, &b_mu_nTRTDeadStraws);
   fChain->SetBranchAddress("mu_expectBLayerHit", &mu_expectBLayerHit, &b_mu_expectBLayerHit);
   fChain->SetBranchAddress("mu_nMDTHits", &mu_nMDTHits, &b_mu_nMDTHits);
   fChain->SetBranchAddress("mu_nMDTHoles", &mu_nMDTHoles, &b_mu_nMDTHoles);
   fChain->SetBranchAddress("mu_nCSCEtaHits", &mu_nCSCEtaHits, &b_mu_nCSCEtaHits);
   fChain->SetBranchAddress("mu_nCSCEtaHoles", &mu_nCSCEtaHoles, &b_mu_nCSCEtaHoles);
   fChain->SetBranchAddress("mu_nCSCUnspoiledEtaHits", &mu_nCSCUnspoiledEtaHits, &b_mu_nCSCUnspoiledEtaHits);
   fChain->SetBranchAddress("mu_nCSCPhiHits", &mu_nCSCPhiHits, &b_mu_nCSCPhiHits);
   fChain->SetBranchAddress("mu_nCSCPhiHoles", &mu_nCSCPhiHoles, &b_mu_nCSCPhiHoles);
   fChain->SetBranchAddress("mu_nRPCEtaHits", &mu_nRPCEtaHits, &b_mu_nRPCEtaHits);
   fChain->SetBranchAddress("mu_nRPCEtaHoles", &mu_nRPCEtaHoles, &b_mu_nRPCEtaHoles);
   fChain->SetBranchAddress("mu_nRPCPhiHits", &mu_nRPCPhiHits, &b_mu_nRPCPhiHits);
   fChain->SetBranchAddress("mu_nRPCPhiHoles", &mu_nRPCPhiHoles, &b_mu_nRPCPhiHoles);
   fChain->SetBranchAddress("mu_nTGCEtaHits", &mu_nTGCEtaHits, &b_mu_nTGCEtaHits);
   fChain->SetBranchAddress("mu_nTGCEtaHoles", &mu_nTGCEtaHoles, &b_mu_nTGCEtaHoles);
   fChain->SetBranchAddress("mu_nTGCPhiHits", &mu_nTGCPhiHits, &b_mu_nTGCPhiHits);
   fChain->SetBranchAddress("mu_nTGCPhiHoles", &mu_nTGCPhiHoles, &b_mu_nTGCPhiHoles);
   fChain->SetBranchAddress("mu_nprecisionLayers", &mu_nprecisionLayers, &b_mu_nprecisionLayers);
   fChain->SetBranchAddress("mu_nprecisionHoleLayers", &mu_nprecisionHoleLayers, &b_mu_nprecisionHoleLayers);
   fChain->SetBranchAddress("mu_nphiLayers", &mu_nphiLayers, &b_mu_nphiLayers);
   fChain->SetBranchAddress("mu_ntrigEtaLayers", &mu_ntrigEtaLayers, &b_mu_ntrigEtaLayers);
   fChain->SetBranchAddress("mu_nphiHoleLayers", &mu_nphiHoleLayers, &b_mu_nphiHoleLayers);
   fChain->SetBranchAddress("mu_ntrigEtaHoleLayers", &mu_ntrigEtaHoleLayers, &b_mu_ntrigEtaHoleLayers);
   fChain->SetBranchAddress("mu_nMDTBIHits", &mu_nMDTBIHits, &b_mu_nMDTBIHits);
   fChain->SetBranchAddress("mu_nMDTBMHits", &mu_nMDTBMHits, &b_mu_nMDTBMHits);
   fChain->SetBranchAddress("mu_nMDTBOHits", &mu_nMDTBOHits, &b_mu_nMDTBOHits);
   fChain->SetBranchAddress("mu_nMDTBEEHits", &mu_nMDTBEEHits, &b_mu_nMDTBEEHits);
   fChain->SetBranchAddress("mu_nMDTBIS78Hits", &mu_nMDTBIS78Hits, &b_mu_nMDTBIS78Hits);
   fChain->SetBranchAddress("mu_nMDTEIHits", &mu_nMDTEIHits, &b_mu_nMDTEIHits);
   fChain->SetBranchAddress("mu_nMDTEMHits", &mu_nMDTEMHits, &b_mu_nMDTEMHits);
   fChain->SetBranchAddress("mu_nMDTEOHits", &mu_nMDTEOHits, &b_mu_nMDTEOHits);
   fChain->SetBranchAddress("mu_nMDTEEHits", &mu_nMDTEEHits, &b_mu_nMDTEEHits);
   fChain->SetBranchAddress("mu_nRPCLayer1EtaHits", &mu_nRPCLayer1EtaHits, &b_mu_nRPCLayer1EtaHits);
   fChain->SetBranchAddress("mu_nRPCLayer2EtaHits", &mu_nRPCLayer2EtaHits, &b_mu_nRPCLayer2EtaHits);
   fChain->SetBranchAddress("mu_nRPCLayer3EtaHits", &mu_nRPCLayer3EtaHits, &b_mu_nRPCLayer3EtaHits);
   fChain->SetBranchAddress("mu_nRPCLayer1PhiHits", &mu_nRPCLayer1PhiHits, &b_mu_nRPCLayer1PhiHits);
   fChain->SetBranchAddress("mu_nRPCLayer2PhiHits", &mu_nRPCLayer2PhiHits, &b_mu_nRPCLayer2PhiHits);
   fChain->SetBranchAddress("mu_nRPCLayer3PhiHits", &mu_nRPCLayer3PhiHits, &b_mu_nRPCLayer3PhiHits);
   fChain->SetBranchAddress("mu_nTGCLayer1EtaHits", &mu_nTGCLayer1EtaHits, &b_mu_nTGCLayer1EtaHits);
   fChain->SetBranchAddress("mu_nTGCLayer2EtaHits", &mu_nTGCLayer2EtaHits, &b_mu_nTGCLayer2EtaHits);
   fChain->SetBranchAddress("mu_nTGCLayer3EtaHits", &mu_nTGCLayer3EtaHits, &b_mu_nTGCLayer3EtaHits);
   fChain->SetBranchAddress("mu_nTGCLayer4EtaHits", &mu_nTGCLayer4EtaHits, &b_mu_nTGCLayer4EtaHits);
   fChain->SetBranchAddress("mu_nTGCLayer1PhiHits", &mu_nTGCLayer1PhiHits, &b_mu_nTGCLayer1PhiHits);
   fChain->SetBranchAddress("mu_nTGCLayer2PhiHits", &mu_nTGCLayer2PhiHits, &b_mu_nTGCLayer2PhiHits);
   fChain->SetBranchAddress("mu_nTGCLayer3PhiHits", &mu_nTGCLayer3PhiHits, &b_mu_nTGCLayer3PhiHits);
   fChain->SetBranchAddress("mu_nTGCLayer4PhiHits", &mu_nTGCLayer4PhiHits, &b_mu_nTGCLayer4PhiHits);
   fChain->SetBranchAddress("mu_barrelSectors", &mu_barrelSectors, &b_mu_barrelSectors);
   fChain->SetBranchAddress("mu_endcapSectors", &mu_endcapSectors, &b_mu_endcapSectors);
   fChain->SetBranchAddress("mu_trackd0", &mu_trackd0, &b_mu_trackd0);
   fChain->SetBranchAddress("mu_trackz0", &mu_trackz0, &b_mu_trackz0);
   fChain->SetBranchAddress("mu_trackphi", &mu_trackphi, &b_mu_trackphi);
   fChain->SetBranchAddress("mu_tracktheta", &mu_tracktheta, &b_mu_tracktheta);
   fChain->SetBranchAddress("mu_trackqoverp", &mu_trackqoverp, &b_mu_trackqoverp);
   fChain->SetBranchAddress("mu_trackcov_d0", &mu_trackcov_d0, &b_mu_trackcov_d0);
   fChain->SetBranchAddress("mu_trackcov_z0", &mu_trackcov_z0, &b_mu_trackcov_z0);
   fChain->SetBranchAddress("mu_trackcov_phi", &mu_trackcov_phi, &b_mu_trackcov_phi);
   fChain->SetBranchAddress("mu_trackcov_theta", &mu_trackcov_theta, &b_mu_trackcov_theta);
   fChain->SetBranchAddress("mu_trackcov_qoverp", &mu_trackcov_qoverp, &b_mu_trackcov_qoverp);
   fChain->SetBranchAddress("mu_trackcov_d0_z0", &mu_trackcov_d0_z0, &b_mu_trackcov_d0_z0);
   fChain->SetBranchAddress("mu_trackcov_d0_phi", &mu_trackcov_d0_phi, &b_mu_trackcov_d0_phi);
   fChain->SetBranchAddress("mu_trackcov_d0_theta", &mu_trackcov_d0_theta, &b_mu_trackcov_d0_theta);
   fChain->SetBranchAddress("mu_trackcov_d0_qoverp", &mu_trackcov_d0_qoverp, &b_mu_trackcov_d0_qoverp);
   fChain->SetBranchAddress("mu_trackcov_z0_phi", &mu_trackcov_z0_phi, &b_mu_trackcov_z0_phi);
   fChain->SetBranchAddress("mu_trackcov_z0_theta", &mu_trackcov_z0_theta, &b_mu_trackcov_z0_theta);
   fChain->SetBranchAddress("mu_trackcov_z0_qoverp", &mu_trackcov_z0_qoverp, &b_mu_trackcov_z0_qoverp);
   fChain->SetBranchAddress("mu_trackcov_phi_theta", &mu_trackcov_phi_theta, &b_mu_trackcov_phi_theta);
   fChain->SetBranchAddress("mu_trackcov_phi_qoverp", &mu_trackcov_phi_qoverp, &b_mu_trackcov_phi_qoverp);
   fChain->SetBranchAddress("mu_trackcov_theta_qoverp", &mu_trackcov_theta_qoverp, &b_mu_trackcov_theta_qoverp);
   fChain->SetBranchAddress("mu_trackfitchi2", &mu_trackfitchi2, &b_mu_trackfitchi2);
   fChain->SetBranchAddress("mu_trackfitndof", &mu_trackfitndof, &b_mu_trackfitndof);
   fChain->SetBranchAddress("mu_hastrack", &mu_hastrack, &b_mu_hastrack);
   fChain->SetBranchAddress("mu_trackd0beam", &mu_trackd0beam, &b_mu_trackd0beam);
   fChain->SetBranchAddress("mu_trackz0beam", &mu_trackz0beam, &b_mu_trackz0beam);
   fChain->SetBranchAddress("mu_tracksigd0beam", &mu_tracksigd0beam, &b_mu_tracksigd0beam);
   fChain->SetBranchAddress("mu_tracksigz0beam", &mu_tracksigz0beam, &b_mu_tracksigz0beam);
   fChain->SetBranchAddress("mu_trackd0pv", &mu_trackd0pv, &b_mu_trackd0pv);
   fChain->SetBranchAddress("mu_trackz0pv", &mu_trackz0pv, &b_mu_trackz0pv);
   fChain->SetBranchAddress("mu_tracksigd0pv", &mu_tracksigd0pv, &b_mu_tracksigd0pv);
   fChain->SetBranchAddress("mu_tracksigz0pv", &mu_tracksigz0pv, &b_mu_tracksigz0pv);
   fChain->SetBranchAddress("mu_trackIPEstimate_d0_biasedpvunbiased", &mu_trackIPEstimate_d0_biasedpvunbiased, &b_mu_trackIPEstimate_d0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_z0_biasedpvunbiased", &mu_trackIPEstimate_z0_biasedpvunbiased, &b_mu_trackIPEstimate_z0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_sigd0_biasedpvunbiased", &mu_trackIPEstimate_sigd0_biasedpvunbiased, &b_mu_trackIPEstimate_sigd0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_sigz0_biasedpvunbiased", &mu_trackIPEstimate_sigz0_biasedpvunbiased, &b_mu_trackIPEstimate_sigz0_biasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_d0_unbiasedpvunbiased", &mu_trackIPEstimate_d0_unbiasedpvunbiased, &b_mu_trackIPEstimate_d0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_z0_unbiasedpvunbiased", &mu_trackIPEstimate_z0_unbiasedpvunbiased, &b_mu_trackIPEstimate_z0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_sigd0_unbiasedpvunbiased", &mu_trackIPEstimate_sigd0_unbiasedpvunbiased, &b_mu_trackIPEstimate_sigd0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_trackIPEstimate_sigz0_unbiasedpvunbiased", &mu_trackIPEstimate_sigz0_unbiasedpvunbiased, &b_mu_trackIPEstimate_sigz0_unbiasedpvunbiased);
   fChain->SetBranchAddress("mu_trackd0pvunbiased", &mu_trackd0pvunbiased, &b_mu_trackd0pvunbiased);
   fChain->SetBranchAddress("mu_trackz0pvunbiased", &mu_trackz0pvunbiased, &b_mu_trackz0pvunbiased);
   fChain->SetBranchAddress("mu_tracksigd0pvunbiased", &mu_tracksigd0pvunbiased, &b_mu_tracksigd0pvunbiased);
   fChain->SetBranchAddress("mu_tracksigz0pvunbiased", &mu_tracksigz0pvunbiased, &b_mu_tracksigz0pvunbiased);
   fChain->SetBranchAddress("mu_type", &mu_type, &b_mu_type);
   fChain->SetBranchAddress("mu_origin", &mu_origin, &b_mu_origin);
   fChain->SetBranchAddress("mu_truth_dr", &mu_truth_dr, &b_mu_truth_dr);
   fChain->SetBranchAddress("mu_truth_E", &mu_truth_E, &b_mu_truth_E);
   fChain->SetBranchAddress("mu_truth_pt", &mu_truth_pt, &b_mu_truth_pt);
   fChain->SetBranchAddress("mu_truth_eta", &mu_truth_eta, &b_mu_truth_eta);
   fChain->SetBranchAddress("mu_truth_phi", &mu_truth_phi, &b_mu_truth_phi);
   fChain->SetBranchAddress("mu_truth_type", &mu_truth_type, &b_mu_truth_type);
   fChain->SetBranchAddress("mu_truth_status", &mu_truth_status, &b_mu_truth_status);
   fChain->SetBranchAddress("mu_truth_barcode", &mu_truth_barcode, &b_mu_truth_barcode);
   fChain->SetBranchAddress("mu_truth_mothertype", &mu_truth_mothertype, &b_mu_truth_mothertype);
   fChain->SetBranchAddress("mu_truth_motherbarcode", &mu_truth_motherbarcode, &b_mu_truth_motherbarcode);
   fChain->SetBranchAddress("mu_truth_matched", &mu_truth_matched, &b_mu_truth_matched);
   fChain->SetBranchAddress("mu_EFCB_dr", &mu_EFCB_dr, &b_mu_EFCB_dr);
   fChain->SetBranchAddress("mu_EFCB_n", &mu_EFCB_n, &b_mu_EFCB_n);
   fChain->SetBranchAddress("mu_EFCB_MuonType", &mu_EFCB_MuonType, &b_mu_EFCB_MuonType);
   fChain->SetBranchAddress("mu_EFCB_pt", &mu_EFCB_pt, &b_mu_EFCB_pt);
   fChain->SetBranchAddress("mu_EFCB_eta", &mu_EFCB_eta, &b_mu_EFCB_eta);
   fChain->SetBranchAddress("mu_EFCB_phi", &mu_EFCB_phi, &b_mu_EFCB_phi);
   fChain->SetBranchAddress("mu_EFCB_hasCB", &mu_EFCB_hasCB, &b_mu_EFCB_hasCB);
   fChain->SetBranchAddress("mu_EFCB_matched", &mu_EFCB_matched, &b_mu_EFCB_matched);
   fChain->SetBranchAddress("mu_EFMG_dr", &mu_EFMG_dr, &b_mu_EFMG_dr);
   fChain->SetBranchAddress("mu_EFMG_n", &mu_EFMG_n, &b_mu_EFMG_n);
   fChain->SetBranchAddress("mu_EFMG_MuonType", &mu_EFMG_MuonType, &b_mu_EFMG_MuonType);
   fChain->SetBranchAddress("mu_EFMG_pt", &mu_EFMG_pt, &b_mu_EFMG_pt);
   fChain->SetBranchAddress("mu_EFMG_eta", &mu_EFMG_eta, &b_mu_EFMG_eta);
   fChain->SetBranchAddress("mu_EFMG_phi", &mu_EFMG_phi, &b_mu_EFMG_phi);
   fChain->SetBranchAddress("mu_EFMG_hasMG", &mu_EFMG_hasMG, &b_mu_EFMG_hasMG);
   fChain->SetBranchAddress("mu_EFMG_matched", &mu_EFMG_matched, &b_mu_EFMG_matched);
   fChain->SetBranchAddress("mu_EFME_dr", &mu_EFME_dr, &b_mu_EFME_dr);
   fChain->SetBranchAddress("mu_EFME_n", &mu_EFME_n, &b_mu_EFME_n);
   fChain->SetBranchAddress("mu_EFME_MuonType", &mu_EFME_MuonType, &b_mu_EFME_MuonType);
   fChain->SetBranchAddress("mu_EFME_pt", &mu_EFME_pt, &b_mu_EFME_pt);
   fChain->SetBranchAddress("mu_EFME_eta", &mu_EFME_eta, &b_mu_EFME_eta);
   fChain->SetBranchAddress("mu_EFME_phi", &mu_EFME_phi, &b_mu_EFME_phi);
   fChain->SetBranchAddress("mu_EFME_hasME", &mu_EFME_hasME, &b_mu_EFME_hasME);
   fChain->SetBranchAddress("mu_EFME_matched", &mu_EFME_matched, &b_mu_EFME_matched);
   fChain->SetBranchAddress("mu_L2CB_dr", &mu_L2CB_dr, &b_mu_L2CB_dr);
   fChain->SetBranchAddress("mu_L2CB_pt", &mu_L2CB_pt, &b_mu_L2CB_pt);
   fChain->SetBranchAddress("mu_L2CB_eta", &mu_L2CB_eta, &b_mu_L2CB_eta);
   fChain->SetBranchAddress("mu_L2CB_phi", &mu_L2CB_phi, &b_mu_L2CB_phi);
   fChain->SetBranchAddress("mu_L2CB_id_pt", &mu_L2CB_id_pt, &b_mu_L2CB_id_pt);
   fChain->SetBranchAddress("mu_L2CB_ms_pt", &mu_L2CB_ms_pt, &b_mu_L2CB_ms_pt);
   fChain->SetBranchAddress("mu_L2CB_nPixHits", &mu_L2CB_nPixHits, &b_mu_L2CB_nPixHits);
   fChain->SetBranchAddress("mu_L2CB_nSCTHits", &mu_L2CB_nSCTHits, &b_mu_L2CB_nSCTHits);
   fChain->SetBranchAddress("mu_L2CB_nTRTHits", &mu_L2CB_nTRTHits, &b_mu_L2CB_nTRTHits);
   fChain->SetBranchAddress("mu_L2CB_nTRTHighTHits", &mu_L2CB_nTRTHighTHits, &b_mu_L2CB_nTRTHighTHits);
   fChain->SetBranchAddress("mu_L2CB_matched", &mu_L2CB_matched, &b_mu_L2CB_matched);
   fChain->SetBranchAddress("mu_L1_dr", &mu_L1_dr, &b_mu_L1_dr);
   fChain->SetBranchAddress("mu_L1_pt", &mu_L1_pt, &b_mu_L1_pt);
   fChain->SetBranchAddress("mu_L1_eta", &mu_L1_eta, &b_mu_L1_eta);
   fChain->SetBranchAddress("mu_L1_phi", &mu_L1_phi, &b_mu_L1_phi);
   fChain->SetBranchAddress("mu_L1_thrNumber", &mu_L1_thrNumber, &b_mu_L1_thrNumber);
   fChain->SetBranchAddress("mu_L1_RoINumber", &mu_L1_RoINumber, &b_mu_L1_RoINumber);
   fChain->SetBranchAddress("mu_L1_sectorAddress", &mu_L1_sectorAddress, &b_mu_L1_sectorAddress);
   fChain->SetBranchAddress("mu_L1_firstCandidate", &mu_L1_firstCandidate, &b_mu_L1_firstCandidate);
   fChain->SetBranchAddress("mu_L1_moreCandInRoI", &mu_L1_moreCandInRoI, &b_mu_L1_moreCandInRoI);
   fChain->SetBranchAddress("mu_L1_moreCandInSector", &mu_L1_moreCandInSector, &b_mu_L1_moreCandInSector);
   fChain->SetBranchAddress("mu_L1_source", &mu_L1_source, &b_mu_L1_source);
   fChain->SetBranchAddress("mu_L1_hemisphere", &mu_L1_hemisphere, &b_mu_L1_hemisphere);
   fChain->SetBranchAddress("mu_L1_charge", &mu_L1_charge, &b_mu_L1_charge);
   fChain->SetBranchAddress("mu_L1_vetoed", &mu_L1_vetoed, &b_mu_L1_vetoed);
   fChain->SetBranchAddress("mu_L1_matched", &mu_L1_matched, &b_mu_L1_matched);
   fChain->SetBranchAddress("trig_DB_SMK", &trig_DB_SMK, &b_trig_DB_SMK);
   fChain->SetBranchAddress("trig_DB_L1PSK", &trig_DB_L1PSK, &b_trig_DB_L1PSK);
   fChain->SetBranchAddress("trig_DB_HLTPSK", &trig_DB_HLTPSK, &b_trig_DB_HLTPSK);
   fChain->SetBranchAddress("trig_L1_TAV", &trig_L1_TAV, &b_trig_L1_TAV);
   fChain->SetBranchAddress("trig_L2_passedPhysics", &trig_L2_passedPhysics, &b_trig_L2_passedPhysics);
   fChain->SetBranchAddress("trig_EF_passedPhysics", &trig_EF_passedPhysics, &b_trig_EF_passedPhysics);
   fChain->SetBranchAddress("trig_L1_TBP", &trig_L1_TBP, &b_trig_L1_TBP);
   fChain->SetBranchAddress("trig_L1_TAP", &trig_L1_TAP, &b_trig_L1_TAP);
   fChain->SetBranchAddress("trig_L2_passedRaw", &trig_L2_passedRaw, &b_trig_L2_passedRaw);
   fChain->SetBranchAddress("trig_EF_passedRaw", &trig_EF_passedRaw, &b_trig_EF_passedRaw);
   fChain->SetBranchAddress("trig_L2_truncated", &trig_L2_truncated, &b_trig_L2_truncated);
   fChain->SetBranchAddress("trig_EF_truncated", &trig_EF_truncated, &b_trig_EF_truncated);
   fChain->SetBranchAddress("trig_L2_resurrected", &trig_L2_resurrected, &b_trig_L2_resurrected);
   fChain->SetBranchAddress("trig_EF_resurrected", &trig_EF_resurrected, &b_trig_EF_resurrected);
   fChain->SetBranchAddress("trig_L2_passedThrough", &trig_L2_passedThrough, &b_trig_L2_passedThrough);
   fChain->SetBranchAddress("trig_EF_passedThrough", &trig_EF_passedThrough, &b_trig_EF_passedThrough);
   fChain->SetBranchAddress("trig_L2_wasPrescaled", &trig_L2_wasPrescaled, &b_trig_L2_wasPrescaled);
   fChain->SetBranchAddress("trig_L2_wasResurrected", &trig_L2_wasResurrected, &b_trig_L2_wasResurrected);
   fChain->SetBranchAddress("trig_EF_wasPrescaled", &trig_EF_wasPrescaled, &b_trig_EF_wasPrescaled);
   fChain->SetBranchAddress("trig_EF_wasResurrected", &trig_EF_wasResurrected, &b_trig_EF_wasResurrected);
   fChain->SetBranchAddress("trig_L1_jet_n", &trig_L1_jet_n, &b_trig_L1_jet_n);
   fChain->SetBranchAddress("trig_L1_jet_eta", &trig_L1_jet_eta, &b_trig_L1_jet_eta);
   fChain->SetBranchAddress("trig_L1_jet_phi", &trig_L1_jet_phi, &b_trig_L1_jet_phi);
   fChain->SetBranchAddress("trig_L1_jet_thrNames", &trig_L1_jet_thrNames, &b_trig_L1_jet_thrNames);
   fChain->SetBranchAddress("trig_L1_jet_thrValues", &trig_L1_jet_thrValues, &b_trig_L1_jet_thrValues);
   fChain->SetBranchAddress("trig_L1_jet_thrPattern", &trig_L1_jet_thrPattern, &b_trig_L1_jet_thrPattern);
   fChain->SetBranchAddress("trig_L1_jet_RoIWord", &trig_L1_jet_RoIWord, &b_trig_L1_jet_RoIWord);
   fChain->SetBranchAddress("trig_L1_jet_et4x4", &trig_L1_jet_et4x4, &b_trig_L1_jet_et4x4);
   fChain->SetBranchAddress("trig_L1_jet_et6x6", &trig_L1_jet_et6x6, &b_trig_L1_jet_et6x6);
   fChain->SetBranchAddress("trig_L1_jet_et8x8", &trig_L1_jet_et8x8, &b_trig_L1_jet_et8x8);
   fChain->SetBranchAddress("trig_L1_emtau_n", &trig_L1_emtau_n, &b_trig_L1_emtau_n);
   fChain->SetBranchAddress("trig_L1_emtau_eta", &trig_L1_emtau_eta, &b_trig_L1_emtau_eta);
   fChain->SetBranchAddress("trig_L1_emtau_phi", &trig_L1_emtau_phi, &b_trig_L1_emtau_phi);
   fChain->SetBranchAddress("trig_L1_emtau_thrNames", &trig_L1_emtau_thrNames, &b_trig_L1_emtau_thrNames);
   fChain->SetBranchAddress("trig_L1_emtau_thrValues", &trig_L1_emtau_thrValues, &b_trig_L1_emtau_thrValues);
   fChain->SetBranchAddress("trig_L1_emtau_core", &trig_L1_emtau_core, &b_trig_L1_emtau_core);
   fChain->SetBranchAddress("trig_L1_emtau_EMClus", &trig_L1_emtau_EMClus, &b_trig_L1_emtau_EMClus);
   fChain->SetBranchAddress("trig_L1_emtau_tauClus", &trig_L1_emtau_tauClus, &b_trig_L1_emtau_tauClus);
   fChain->SetBranchAddress("trig_L1_emtau_EMIsol", &trig_L1_emtau_EMIsol, &b_trig_L1_emtau_EMIsol);
   fChain->SetBranchAddress("trig_L1_emtau_hadIsol", &trig_L1_emtau_hadIsol, &b_trig_L1_emtau_hadIsol);
   fChain->SetBranchAddress("trig_L1_emtau_hadCore", &trig_L1_emtau_hadCore, &b_trig_L1_emtau_hadCore);
   fChain->SetBranchAddress("trig_L1_emtau_thrPattern", &trig_L1_emtau_thrPattern, &b_trig_L1_emtau_thrPattern);
   fChain->SetBranchAddress("trig_L1_emtau_RoIWord", &trig_L1_emtau_RoIWord, &b_trig_L1_emtau_RoIWord);
   fChain->SetBranchAddress("trig_L1_mu_n", &trig_L1_mu_n, &b_trig_L1_mu_n);
   fChain->SetBranchAddress("trig_L1_mu_pt", &trig_L1_mu_pt, &b_trig_L1_mu_pt);
   fChain->SetBranchAddress("trig_L1_mu_eta", &trig_L1_mu_eta, &b_trig_L1_mu_eta);
   fChain->SetBranchAddress("trig_L1_mu_phi", &trig_L1_mu_phi, &b_trig_L1_mu_phi);
   fChain->SetBranchAddress("trig_L1_mu_thrName", &trig_L1_mu_thrName, &b_trig_L1_mu_thrName);
   fChain->SetBranchAddress("trig_L1_mu_thrNumber", &trig_L1_mu_thrNumber, &b_trig_L1_mu_thrNumber);
   fChain->SetBranchAddress("trig_L1_mu_RoINumber", &trig_L1_mu_RoINumber, &b_trig_L1_mu_RoINumber);
   fChain->SetBranchAddress("trig_L1_mu_sectorAddress", &trig_L1_mu_sectorAddress, &b_trig_L1_mu_sectorAddress);
   fChain->SetBranchAddress("trig_L1_mu_firstCandidate", &trig_L1_mu_firstCandidate, &b_trig_L1_mu_firstCandidate);
   fChain->SetBranchAddress("trig_L1_mu_moreCandInRoI", &trig_L1_mu_moreCandInRoI, &b_trig_L1_mu_moreCandInRoI);
   fChain->SetBranchAddress("trig_L1_mu_moreCandInSector", &trig_L1_mu_moreCandInSector, &b_trig_L1_mu_moreCandInSector);
   fChain->SetBranchAddress("trig_L1_mu_source", &trig_L1_mu_source, &b_trig_L1_mu_source);
   fChain->SetBranchAddress("trig_L1_mu_hemisphere", &trig_L1_mu_hemisphere, &b_trig_L1_mu_hemisphere);
   fChain->SetBranchAddress("trig_L1_mu_charge", &trig_L1_mu_charge, &b_trig_L1_mu_charge);
   fChain->SetBranchAddress("trig_L1_mu_vetoed", &trig_L1_mu_vetoed, &b_trig_L1_mu_vetoed);
   fChain->SetBranchAddress("trig_L1_mu_RoIWord", &trig_L1_mu_RoIWord, &b_trig_L1_mu_RoIWord);
   fChain->SetBranchAddress("trig_EF_jet_n", &trig_EF_jet_n, &b_trig_EF_jet_n);
   fChain->SetBranchAddress("trig_EF_jet_E", &trig_EF_jet_E, &b_trig_EF_jet_E);
   fChain->SetBranchAddress("trig_EF_jet_pt", &trig_EF_jet_pt, &b_trig_EF_jet_pt);
   fChain->SetBranchAddress("trig_EF_jet_m", &trig_EF_jet_m, &b_trig_EF_jet_m);
   fChain->SetBranchAddress("trig_EF_jet_eta", &trig_EF_jet_eta, &b_trig_EF_jet_eta);
   fChain->SetBranchAddress("trig_EF_jet_phi", &trig_EF_jet_phi, &b_trig_EF_jet_phi);
   fChain->SetBranchAddress("trig_EF_jet_a4tcem", &trig_EF_jet_a4tcem, &b_trig_EF_jet_a4tcem);
   fChain->SetBranchAddress("trig_EF_jet_a2tcem", &trig_EF_jet_a2tcem, &b_trig_EF_jet_a2tcem);
   fChain->SetBranchAddress("trig_EF_jet_a4tchad", &trig_EF_jet_a4tchad, &b_trig_EF_jet_a4tchad);
   fChain->SetBranchAddress("trig_EF_jet_a4hi", &trig_EF_jet_a4hi, &b_trig_EF_jet_a4hi);
   fChain->SetBranchAddress("trig_EF_jet_a2hi", &trig_EF_jet_a2hi, &b_trig_EF_jet_a2hi);
   fChain->SetBranchAddress("trig_EF_jet_RoIword", &trig_EF_jet_RoIword, &b_trig_EF_jet_RoIword);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5", &trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5, &b_trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5_L1TE90", &trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5_L1TE90, &b_trig_EF_jet_EF_2j10_a4hi_EFFS_2L1J5_L1TE90);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE100", &trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE100, &b_trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE100);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE90", &trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE90, &b_trig_EF_jet_EF_2j10_a4hi_EFFS_L1TE90);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_2j10_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j10_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_deta40_L2mbMbts", &trig_EF_jet_EF_2j10_a4hi_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j10_a4hi_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_eta50_deta40", &trig_EF_jet_EF_2j10_a4hi_eta50_deta40, &b_trig_EF_jet_EF_2j10_a4hi_eta50_deta40);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4hi_eta50_deta40_L2mbMbts", &trig_EF_jet_EF_2j10_a4hi_eta50_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j10_a4hi_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_deta40_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_deta40_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_deta40_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts", &trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_deta40_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_deta40_L2te_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_deta40_L2te_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_deta40_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts", &trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0", &trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0, &b_trig_EF_jet_EF_2j10_a4tchad_eta50_deta40_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4hi_EFFS_2L1J5", &trig_EF_jet_EF_2j15_a4hi_EFFS_2L1J5, &b_trig_EF_jet_EF_2j15_a4hi_EFFS_2L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_2j15_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j15_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4hi_deta40_L2mbMbts", &trig_EF_jet_EF_2j15_a4hi_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j15_a4hi_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4hi_eta50_deta40", &trig_EF_jet_EF_2j15_a4hi_eta50_deta40, &b_trig_EF_jet_EF_2j15_a4hi_eta50_deta40);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4hi_eta50_deta40_L2mbMbts", &trig_EF_jet_EF_2j15_a4hi_eta50_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j15_a4hi_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_2j15_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_2j15_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_2j15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_L2FS", &trig_EF_jet_EF_2j15_a4tchad_L2FS, &b_trig_EF_jet_EF_2j15_a4tchad_L2FS);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_deta40_L2mbMbts", &trig_EF_jet_EF_2j15_a4tchad_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j15_a4tchad_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j15_a4tchad_eta50_deta40_L2mbMbts", &trig_EF_jet_EF_2j15_a4tchad_eta50_deta40_L2mbMbts, &b_trig_EF_jet_EF_2j15_a4tchad_eta50_deta40_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j20_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_2j20_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j20_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j20_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_2j20_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j20_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j7_a4hi_EFFS_2L1J5", &trig_EF_jet_EF_2j7_a4hi_EFFS_2L1J5, &b_trig_EF_jet_EF_2j7_a4hi_EFFS_2L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j7_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_2j7_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j7_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_2j7_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_2j7_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_2j7_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_3j15_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_3j15_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_3j15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_3j15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_3j15_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_3j15_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_3j15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_3j15_a4tchad_L2FS", &trig_EF_jet_EF_3j15_a4tchad_L2FS, &b_trig_EF_jet_EF_3j15_a4tchad_L2FS);
   fChain->SetBranchAddress("trig_EF_jet_EF_3j15_a4tchad_L2FS_2L1J5", &trig_EF_jet_EF_3j15_a4tchad_L2FS_2L1J5, &b_trig_EF_jet_EF_3j15_a4tchad_L2FS_2L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4hi_EFFS_L1FJ0", &trig_EF_jet_EF_fj10_a4hi_EFFS_L1FJ0, &b_trig_EF_jet_EF_fj10_a4hi_EFFS_L1FJ0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_fj10_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_fj10_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4tchad_EFFS_L1FJ0", &trig_EF_jet_EF_fj10_a4tchad_EFFS_L1FJ0, &b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L1FJ0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_fj10_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj10_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_fj10_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_fj10_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4hi_EFFS_L1FJ0", &trig_EF_jet_EF_fj15_a4hi_EFFS_L1FJ0, &b_trig_EF_jet_EF_fj15_a4hi_EFFS_L1FJ0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_fj15_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_fj15_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4tchad_EFFS_L1FJ0", &trig_EF_jet_EF_fj15_a4tchad_EFFS_L1FJ0, &b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L1FJ0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_fj15_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj15_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_fj15_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_fj15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj7_a4hi_EFFS_L1FJ0", &trig_EF_jet_EF_fj7_a4hi_EFFS_L1FJ0, &b_trig_EF_jet_EF_fj7_a4hi_EFFS_L1FJ0);
   fChain->SetBranchAddress("trig_EF_jet_EF_fj7_a4tchad_EFFS_L1FJ0", &trig_EF_jet_EF_fj7_a4tchad_EFFS_L1FJ0, &b_trig_EF_jet_EF_fj7_a4tchad_EFFS_L1FJ0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j100_a4hi_EFFS_L1J20", &trig_EF_jet_EF_j100_a4hi_EFFS_L1J20, &b_trig_EF_jet_EF_j100_a4hi_EFFS_L1J20);
   fChain->SetBranchAddress("trig_EF_jet_EF_j100_a4tchad_EFFS_L1J20", &trig_EF_jet_EF_j100_a4tchad_EFFS_L1J20, &b_trig_EF_jet_EF_j100_a4tchad_EFFS_L1J20);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4hi_EFFS_L1EM3", &trig_EF_jet_EF_j10_a4hi_EFFS_L1EM3, &b_trig_EF_jet_EF_j10_a4hi_EFFS_L1EM3);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4hi_EFFS_L1J5", &trig_EF_jet_EF_j10_a4hi_EFFS_L1J5, &b_trig_EF_jet_EF_j10_a4hi_EFFS_L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4hi_EFFS_L1TAU3", &trig_EF_jet_EF_j10_a4hi_EFFS_L1TAU3, &b_trig_EF_jet_EF_j10_a4hi_EFFS_L1TAU3);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4hi_EFFS_L1TE100", &trig_EF_jet_EF_j10_a4hi_EFFS_L1TE100, &b_trig_EF_jet_EF_j10_a4hi_EFFS_L1TE100);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4hi_EFFS_L1TE90", &trig_EF_jet_EF_j10_a4hi_EFFS_L1TE90, &b_trig_EF_jet_EF_j10_a4hi_EFFS_L1TE90);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_j10_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j10_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4tchad_EFFS_L1J5", &trig_EF_jet_EF_j10_a4tchad_EFFS_L1J5, &b_trig_EF_jet_EF_j10_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_j10_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_j10_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_j10_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_j10_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_j10_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_u0uchad_LArNoiseBurst", &trig_EF_jet_EF_j10_u0uchad_LArNoiseBurst, &b_trig_EF_jet_EF_j10_u0uchad_LArNoiseBurst);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_u0uchad_empty_LArNoiseBurst", &trig_EF_jet_EF_j10_u0uchad_empty_LArNoiseBurst, &b_trig_EF_jet_EF_j10_u0uchad_empty_LArNoiseBurst);
   fChain->SetBranchAddress("trig_EF_jet_EF_j10_u0uchad_firstempty_LArNoiseBurst", &trig_EF_jet_EF_j10_u0uchad_firstempty_LArNoiseBurst, &b_trig_EF_jet_EF_j10_u0uchad_firstempty_LArNoiseBurst);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_Ecorr", &trig_EF_jet_EF_j15_Ecorr, &b_trig_EF_jet_EF_j15_Ecorr);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_j15_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j15_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_j15_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_j15_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_j15_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_j15_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_j15_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j15_a4tj_EFFS_L1ZDC", &trig_EF_jet_EF_j15_a4tj_EFFS_L1ZDC, &b_trig_EF_jet_EF_j15_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_Ecorr", &trig_EF_jet_EF_j20_Ecorr, &b_trig_EF_jet_EF_j20_Ecorr);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4hi_EFFS_L1J10", &trig_EF_jet_EF_j20_a4hi_EFFS_L1J10, &b_trig_EF_jet_EF_j20_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_j20_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j20_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4tchad_EFFS_L1J5", &trig_EF_jet_EF_j20_a4tchad_EFFS_L1J5, &b_trig_EF_jet_EF_j20_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_j20_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_j20_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_j20_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_j20_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_j20_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j20_a4tj_EFFS_L1ZDC", &trig_EF_jet_EF_j20_a4tj_EFFS_L1ZDC, &b_trig_EF_jet_EF_j20_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4hi_EFFS_L1J10", &trig_EF_jet_EF_j30_a4hi_EFFS_L1J10, &b_trig_EF_jet_EF_j30_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_j30_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j30_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4tchad_EFFS_L1J5", &trig_EF_jet_EF_j30_a4tchad_EFFS_L1J5, &b_trig_EF_jet_EF_j30_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4tchad_EFFS_L1RD0", &trig_EF_jet_EF_j30_a4tchad_EFFS_L1RD0, &b_trig_EF_jet_EF_j30_a4tchad_EFFS_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0", &trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0, &b_trig_EF_jet_EF_j30_a4tchad_EFFS_L2mbMbts_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_a4tchad_EFFS_L2te_L1RD0", &trig_EF_jet_EF_j30_a4tchad_EFFS_L2te_L1RD0, &b_trig_EF_jet_EF_j30_a4tchad_EFFS_L2te_L1RD0);
   fChain->SetBranchAddress("trig_EF_jet_EF_j30_u0uchad_empty_LArNoiseBurst", &trig_EF_jet_EF_j30_u0uchad_empty_LArNoiseBurst, &b_trig_EF_jet_EF_j30_u0uchad_empty_LArNoiseBurst);
   fChain->SetBranchAddress("trig_EF_jet_EF_j40_a4hi_EFFS_L1J10", &trig_EF_jet_EF_j40_a4hi_EFFS_L1J10, &b_trig_EF_jet_EF_j40_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j40_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_j40_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j40_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j40_a4tchad_EFFS_L1J5", &trig_EF_jet_EF_j40_a4tchad_EFFS_L1J5, &b_trig_EF_jet_EF_j40_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_j40_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j40_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j40_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j40_a4tj_EFFS_L1ZDC", &trig_EF_jet_EF_j40_a4tj_EFFS_L1ZDC, &b_trig_EF_jet_EF_j40_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("trig_EF_jet_EF_j50_a4hi_EFFS_L1J10", &trig_EF_jet_EF_j50_a4hi_EFFS_L1J10, &b_trig_EF_jet_EF_j50_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j50_a4hi_EFFS_L2mbMbts", &trig_EF_jet_EF_j50_a4hi_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j50_a4hi_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j50_a4tchad_EFFS_L1J10", &trig_EF_jet_EF_j50_a4tchad_EFFS_L1J10, &b_trig_EF_jet_EF_j50_a4tchad_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j50_a4tchad_EFFS_L1J15", &trig_EF_jet_EF_j50_a4tchad_EFFS_L1J15, &b_trig_EF_jet_EF_j50_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j50_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j50_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j50_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j60_a4hi_EFFS_L1J15", &trig_EF_jet_EF_j60_a4hi_EFFS_L1J15, &b_trig_EF_jet_EF_j60_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j60_a4tchad_EFFS_L1J10", &trig_EF_jet_EF_j60_a4tchad_EFFS_L1J10, &b_trig_EF_jet_EF_j60_a4tchad_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j60_a4tchad_EFFS_L1J15", &trig_EF_jet_EF_j60_a4tchad_EFFS_L1J15, &b_trig_EF_jet_EF_j60_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j75_a4hi_EFFS_L1J10", &trig_EF_jet_EF_j75_a4hi_EFFS_L1J10, &b_trig_EF_jet_EF_j75_a4hi_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j75_a4hi_EFFS_L1J15", &trig_EF_jet_EF_j75_a4hi_EFFS_L1J15, &b_trig_EF_jet_EF_j75_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j75_a4tchad_EFFS_L1J10", &trig_EF_jet_EF_j75_a4tchad_EFFS_L1J10, &b_trig_EF_jet_EF_j75_a4tchad_EFFS_L1J10);
   fChain->SetBranchAddress("trig_EF_jet_EF_j75_a4tchad_EFFS_L1J15", &trig_EF_jet_EF_j75_a4tchad_EFFS_L1J15, &b_trig_EF_jet_EF_j75_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j75_a4tj_EFFS_L1ZDC", &trig_EF_jet_EF_j75_a4tj_EFFS_L1ZDC, &b_trig_EF_jet_EF_j75_a4tj_EFFS_L1ZDC);
   fChain->SetBranchAddress("trig_EF_jet_EF_j7_a4tchad_EFFS_L1J5", &trig_EF_jet_EF_j7_a4tchad_EFFS_L1J5, &b_trig_EF_jet_EF_j7_a4tchad_EFFS_L1J5);
   fChain->SetBranchAddress("trig_EF_jet_EF_j7_a4tchad_EFFS_L2mbMbts", &trig_EF_jet_EF_j7_a4tchad_EFFS_L2mbMbts, &b_trig_EF_jet_EF_j7_a4tchad_EFFS_L2mbMbts);
   fChain->SetBranchAddress("trig_EF_jet_EF_j80_a4hi_EFFS_L1J15", &trig_EF_jet_EF_j80_a4hi_EFFS_L1J15, &b_trig_EF_jet_EF_j80_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j80_a4tchad_EFFS_L1J15", &trig_EF_jet_EF_j80_a4tchad_EFFS_L1J15, &b_trig_EF_jet_EF_j80_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j90_a4hi_EFFS_L1J15", &trig_EF_jet_EF_j90_a4hi_EFFS_L1J15, &b_trig_EF_jet_EF_j90_a4hi_EFFS_L1J15);
   fChain->SetBranchAddress("trig_EF_jet_EF_j90_a4tchad_EFFS_L1J15", &trig_EF_jet_EF_j90_a4tchad_EFFS_L1J15, &b_trig_EF_jet_EF_j90_a4tchad_EFFS_L1J15);
   fChain->SetBranchAddress("trig_L1_esum_thrNames", &trig_L1_esum_thrNames, &b_trig_L1_esum_thrNames);
   fChain->SetBranchAddress("trig_L1_esum_ExMiss", &trig_L1_esum_ExMiss, &b_trig_L1_esum_ExMiss);
   fChain->SetBranchAddress("trig_L1_esum_EyMiss", &trig_L1_esum_EyMiss, &b_trig_L1_esum_EyMiss);
   fChain->SetBranchAddress("trig_L1_esum_energyT", &trig_L1_esum_energyT, &b_trig_L1_esum_energyT);
   fChain->SetBranchAddress("trig_L1_esum_overflowX", &trig_L1_esum_overflowX, &b_trig_L1_esum_overflowX);
   fChain->SetBranchAddress("trig_L1_esum_overflowY", &trig_L1_esum_overflowY, &b_trig_L1_esum_overflowY);
   fChain->SetBranchAddress("trig_L1_esum_overflowT", &trig_L1_esum_overflowT, &b_trig_L1_esum_overflowT);
   fChain->SetBranchAddress("trig_L1_esum_RoIWord0", &trig_L1_esum_RoIWord0, &b_trig_L1_esum_RoIWord0);
   fChain->SetBranchAddress("trig_L1_esum_RoIWord1", &trig_L1_esum_RoIWord1, &b_trig_L1_esum_RoIWord1);
   fChain->SetBranchAddress("trig_L1_esum_RoIWord2", &trig_L1_esum_RoIWord2, &b_trig_L1_esum_RoIWord2);
   fChain->SetBranchAddress("trig_EF_met_MEx", &trig_EF_met_MEx, &b_trig_EF_met_MEx);
   fChain->SetBranchAddress("trig_EF_met_MEy", &trig_EF_met_MEy, &b_trig_EF_met_MEy);
   fChain->SetBranchAddress("trig_EF_met_MEz", &trig_EF_met_MEz, &b_trig_EF_met_MEz);
   fChain->SetBranchAddress("trig_EF_met_sumEt", &trig_EF_met_sumEt, &b_trig_EF_met_sumEt);
   fChain->SetBranchAddress("trig_EF_met_sumE", &trig_EF_met_sumE, &b_trig_EF_met_sumE);
   fChain->SetBranchAddress("trig_EF_met_flag", &trig_EF_met_flag, &b_trig_EF_met_flag);
   fChain->SetBranchAddress("trig_EF_met_nameOfComponent", &trig_EF_met_nameOfComponent, &b_trig_EF_met_nameOfComponent);
   fChain->SetBranchAddress("trig_EF_met_MExComponent", &trig_EF_met_MExComponent, &b_trig_EF_met_MExComponent);
   fChain->SetBranchAddress("trig_EF_met_MEyComponent", &trig_EF_met_MEyComponent, &b_trig_EF_met_MEyComponent);
   fChain->SetBranchAddress("trig_EF_met_MEzComponent", &trig_EF_met_MEzComponent, &b_trig_EF_met_MEzComponent);
   fChain->SetBranchAddress("trig_EF_met_sumEtComponent", &trig_EF_met_sumEtComponent, &b_trig_EF_met_sumEtComponent);
   fChain->SetBranchAddress("trig_EF_met_sumEComponent", &trig_EF_met_sumEComponent, &b_trig_EF_met_sumEComponent);
   fChain->SetBranchAddress("trig_EF_met_componentCalib0", &trig_EF_met_componentCalib0, &b_trig_EF_met_componentCalib0);
   fChain->SetBranchAddress("trig_EF_met_componentCalib1", &trig_EF_met_componentCalib1, &b_trig_EF_met_componentCalib1);
   fChain->SetBranchAddress("trig_EF_met_sumOfSigns", &trig_EF_met_sumOfSigns, &b_trig_EF_met_sumOfSigns);
   fChain->SetBranchAddress("trig_EF_met_usedChannels", &trig_EF_met_usedChannels, &b_trig_EF_met_usedChannels);
   fChain->SetBranchAddress("trig_EF_met_status", &trig_EF_met_status, &b_trig_EF_met_status);
   fChain->SetBranchAddress("trig_EF_ph_n", &trig_EF_ph_n, &b_trig_EF_ph_n);
   fChain->SetBranchAddress("trig_EF_ph_E", &trig_EF_ph_E, &b_trig_EF_ph_E);
   fChain->SetBranchAddress("trig_EF_ph_Et", &trig_EF_ph_Et, &b_trig_EF_ph_Et);
   fChain->SetBranchAddress("trig_EF_ph_pt", &trig_EF_ph_pt, &b_trig_EF_ph_pt);
   fChain->SetBranchAddress("trig_EF_ph_m", &trig_EF_ph_m, &b_trig_EF_ph_m);
   fChain->SetBranchAddress("trig_EF_ph_eta", &trig_EF_ph_eta, &b_trig_EF_ph_eta);
   fChain->SetBranchAddress("trig_EF_ph_phi", &trig_EF_ph_phi, &b_trig_EF_ph_phi);
   fChain->SetBranchAddress("trig_EF_ph_px", &trig_EF_ph_px, &b_trig_EF_ph_px);
   fChain->SetBranchAddress("trig_EF_ph_py", &trig_EF_ph_py, &b_trig_EF_ph_py);
   fChain->SetBranchAddress("trig_EF_ph_pz", &trig_EF_ph_pz, &b_trig_EF_ph_pz);
   fChain->SetBranchAddress("trig_EF_ph_author", &trig_EF_ph_author, &b_trig_EF_ph_author);
   fChain->SetBranchAddress("trig_EF_ph_isRecovered", &trig_EF_ph_isRecovered, &b_trig_EF_ph_isRecovered);
   fChain->SetBranchAddress("trig_EF_ph_isEM", &trig_EF_ph_isEM, &b_trig_EF_ph_isEM);
   fChain->SetBranchAddress("trig_EF_ph_isEMLoose", &trig_EF_ph_isEMLoose, &b_trig_EF_ph_isEMLoose);
   fChain->SetBranchAddress("trig_EF_ph_isEMMedium", &trig_EF_ph_isEMMedium, &b_trig_EF_ph_isEMMedium);
   fChain->SetBranchAddress("trig_EF_ph_isEMTight", &trig_EF_ph_isEMTight, &b_trig_EF_ph_isEMTight);
   fChain->SetBranchAddress("trig_EF_ph_convFlag", &trig_EF_ph_convFlag, &b_trig_EF_ph_convFlag);
   fChain->SetBranchAddress("trig_EF_ph_isConv", &trig_EF_ph_isConv, &b_trig_EF_ph_isConv);
   fChain->SetBranchAddress("trig_EF_ph_nConv", &trig_EF_ph_nConv, &b_trig_EF_ph_nConv);
   fChain->SetBranchAddress("trig_EF_ph_nSingleTrackConv", &trig_EF_ph_nSingleTrackConv, &b_trig_EF_ph_nSingleTrackConv);
   fChain->SetBranchAddress("trig_EF_ph_nDoubleTrackConv", &trig_EF_ph_nDoubleTrackConv, &b_trig_EF_ph_nDoubleTrackConv);
   fChain->SetBranchAddress("trig_EF_ph_loose", &trig_EF_ph_loose, &b_trig_EF_ph_loose);
   fChain->SetBranchAddress("trig_EF_ph_looseIso", &trig_EF_ph_looseIso, &b_trig_EF_ph_looseIso);
   fChain->SetBranchAddress("trig_EF_ph_tight", &trig_EF_ph_tight, &b_trig_EF_ph_tight);
   fChain->SetBranchAddress("trig_EF_ph_tightIso", &trig_EF_ph_tightIso, &b_trig_EF_ph_tightIso);
   fChain->SetBranchAddress("trig_EF_ph_looseAR", &trig_EF_ph_looseAR, &b_trig_EF_ph_looseAR);
   fChain->SetBranchAddress("trig_EF_ph_looseARIso", &trig_EF_ph_looseARIso, &b_trig_EF_ph_looseARIso);
   fChain->SetBranchAddress("trig_EF_ph_tightAR", &trig_EF_ph_tightAR, &b_trig_EF_ph_tightAR);
   fChain->SetBranchAddress("trig_EF_ph_tightARIso", &trig_EF_ph_tightARIso, &b_trig_EF_ph_tightARIso);
   fChain->SetBranchAddress("trig_EF_ph_Ethad", &trig_EF_ph_Ethad, &b_trig_EF_ph_Ethad);
   fChain->SetBranchAddress("trig_EF_ph_Ethad1", &trig_EF_ph_Ethad1, &b_trig_EF_ph_Ethad1);
   fChain->SetBranchAddress("trig_EF_ph_E033", &trig_EF_ph_E033, &b_trig_EF_ph_E033);
   fChain->SetBranchAddress("trig_EF_ph_f1", &trig_EF_ph_f1, &b_trig_EF_ph_f1);
   fChain->SetBranchAddress("trig_EF_ph_f1core", &trig_EF_ph_f1core, &b_trig_EF_ph_f1core);
   fChain->SetBranchAddress("trig_EF_ph_Emins1", &trig_EF_ph_Emins1, &b_trig_EF_ph_Emins1);
   fChain->SetBranchAddress("trig_EF_ph_fside", &trig_EF_ph_fside, &b_trig_EF_ph_fside);
   fChain->SetBranchAddress("trig_EF_ph_Emax2", &trig_EF_ph_Emax2, &b_trig_EF_ph_Emax2);
   fChain->SetBranchAddress("trig_EF_ph_ws3", &trig_EF_ph_ws3, &b_trig_EF_ph_ws3);
   fChain->SetBranchAddress("trig_EF_ph_wstot", &trig_EF_ph_wstot, &b_trig_EF_ph_wstot);
   fChain->SetBranchAddress("trig_EF_ph_E132", &trig_EF_ph_E132, &b_trig_EF_ph_E132);
   fChain->SetBranchAddress("trig_EF_ph_E1152", &trig_EF_ph_E1152, &b_trig_EF_ph_E1152);
   fChain->SetBranchAddress("trig_EF_ph_emaxs1", &trig_EF_ph_emaxs1, &b_trig_EF_ph_emaxs1);
   fChain->SetBranchAddress("trig_EF_ph_deltaEs", &trig_EF_ph_deltaEs, &b_trig_EF_ph_deltaEs);
   fChain->SetBranchAddress("trig_EF_ph_E233", &trig_EF_ph_E233, &b_trig_EF_ph_E233);
   fChain->SetBranchAddress("trig_EF_ph_E237", &trig_EF_ph_E237, &b_trig_EF_ph_E237);
   fChain->SetBranchAddress("trig_EF_ph_E277", &trig_EF_ph_E277, &b_trig_EF_ph_E277);
   fChain->SetBranchAddress("trig_EF_ph_weta2", &trig_EF_ph_weta2, &b_trig_EF_ph_weta2);
   fChain->SetBranchAddress("trig_EF_ph_f3", &trig_EF_ph_f3, &b_trig_EF_ph_f3);
   fChain->SetBranchAddress("trig_EF_ph_f3core", &trig_EF_ph_f3core, &b_trig_EF_ph_f3core);
   fChain->SetBranchAddress("trig_EF_ph_rphiallcalo", &trig_EF_ph_rphiallcalo, &b_trig_EF_ph_rphiallcalo);
   fChain->SetBranchAddress("trig_EF_ph_Etcone45", &trig_EF_ph_Etcone45, &b_trig_EF_ph_Etcone45);
   fChain->SetBranchAddress("trig_EF_ph_Etcone15", &trig_EF_ph_Etcone15, &b_trig_EF_ph_Etcone15);
   fChain->SetBranchAddress("trig_EF_ph_Etcone20", &trig_EF_ph_Etcone20, &b_trig_EF_ph_Etcone20);
   fChain->SetBranchAddress("trig_EF_ph_Etcone25", &trig_EF_ph_Etcone25, &b_trig_EF_ph_Etcone25);
   fChain->SetBranchAddress("trig_EF_ph_Etcone30", &trig_EF_ph_Etcone30, &b_trig_EF_ph_Etcone30);
   fChain->SetBranchAddress("trig_EF_ph_Etcone35", &trig_EF_ph_Etcone35, &b_trig_EF_ph_Etcone35);
   fChain->SetBranchAddress("trig_EF_ph_Etcone40", &trig_EF_ph_Etcone40, &b_trig_EF_ph_Etcone40);
   fChain->SetBranchAddress("trig_EF_ph_ptcone20", &trig_EF_ph_ptcone20, &b_trig_EF_ph_ptcone20);
   fChain->SetBranchAddress("trig_EF_ph_ptcone30", &trig_EF_ph_ptcone30, &b_trig_EF_ph_ptcone30);
   fChain->SetBranchAddress("trig_EF_ph_ptcone40", &trig_EF_ph_ptcone40, &b_trig_EF_ph_ptcone40);
   fChain->SetBranchAddress("trig_EF_ph_convanglematch", &trig_EF_ph_convanglematch, &b_trig_EF_ph_convanglematch);
   fChain->SetBranchAddress("trig_EF_ph_convtrackmatch", &trig_EF_ph_convtrackmatch, &b_trig_EF_ph_convtrackmatch);
   fChain->SetBranchAddress("trig_EF_ph_hasconv", &trig_EF_ph_hasconv, &b_trig_EF_ph_hasconv);
   fChain->SetBranchAddress("trig_EF_ph_convvtxx", &trig_EF_ph_convvtxx, &b_trig_EF_ph_convvtxx);
   fChain->SetBranchAddress("trig_EF_ph_convvtxy", &trig_EF_ph_convvtxy, &b_trig_EF_ph_convvtxy);
   fChain->SetBranchAddress("trig_EF_ph_convvtxz", &trig_EF_ph_convvtxz, &b_trig_EF_ph_convvtxz);
   fChain->SetBranchAddress("trig_EF_ph_Rconv", &trig_EF_ph_Rconv, &b_trig_EF_ph_Rconv);
   fChain->SetBranchAddress("trig_EF_ph_zconv", &trig_EF_ph_zconv, &b_trig_EF_ph_zconv);
   fChain->SetBranchAddress("trig_EF_ph_convvtxchi2", &trig_EF_ph_convvtxchi2, &b_trig_EF_ph_convvtxchi2);
   fChain->SetBranchAddress("trig_EF_ph_pt1conv", &trig_EF_ph_pt1conv, &b_trig_EF_ph_pt1conv);
   fChain->SetBranchAddress("trig_EF_ph_convtrk1nBLHits", &trig_EF_ph_convtrk1nBLHits, &b_trig_EF_ph_convtrk1nBLHits);
   fChain->SetBranchAddress("trig_EF_ph_convtrk1nPixHits", &trig_EF_ph_convtrk1nPixHits, &b_trig_EF_ph_convtrk1nPixHits);
   fChain->SetBranchAddress("trig_EF_ph_convtrk1nSCTHits", &trig_EF_ph_convtrk1nSCTHits, &b_trig_EF_ph_convtrk1nSCTHits);
   fChain->SetBranchAddress("trig_EF_ph_convtrk1nTRTHits", &trig_EF_ph_convtrk1nTRTHits, &b_trig_EF_ph_convtrk1nTRTHits);
   fChain->SetBranchAddress("trig_EF_ph_pt2conv", &trig_EF_ph_pt2conv, &b_trig_EF_ph_pt2conv);
   fChain->SetBranchAddress("trig_EF_ph_convtrk2nBLHits", &trig_EF_ph_convtrk2nBLHits, &b_trig_EF_ph_convtrk2nBLHits);
   fChain->SetBranchAddress("trig_EF_ph_convtrk2nPixHits", &trig_EF_ph_convtrk2nPixHits, &b_trig_EF_ph_convtrk2nPixHits);
   fChain->SetBranchAddress("trig_EF_ph_convtrk2nSCTHits", &trig_EF_ph_convtrk2nSCTHits, &b_trig_EF_ph_convtrk2nSCTHits);
   fChain->SetBranchAddress("trig_EF_ph_convtrk2nTRTHits", &trig_EF_ph_convtrk2nTRTHits, &b_trig_EF_ph_convtrk2nTRTHits);
   fChain->SetBranchAddress("trig_EF_ph_ptconv", &trig_EF_ph_ptconv, &b_trig_EF_ph_ptconv);
   fChain->SetBranchAddress("trig_EF_ph_pzconv", &trig_EF_ph_pzconv, &b_trig_EF_ph_pzconv);
   fChain->SetBranchAddress("trig_EF_ph_reta", &trig_EF_ph_reta, &b_trig_EF_ph_reta);
   fChain->SetBranchAddress("trig_EF_ph_rphi", &trig_EF_ph_rphi, &b_trig_EF_ph_rphi);
   fChain->SetBranchAddress("trig_EF_ph_cl_E", &trig_EF_ph_cl_E, &b_trig_EF_ph_cl_E);
   fChain->SetBranchAddress("trig_EF_ph_cl_pt", &trig_EF_ph_cl_pt, &b_trig_EF_ph_cl_pt);
   fChain->SetBranchAddress("trig_EF_ph_cl_eta", &trig_EF_ph_cl_eta, &b_trig_EF_ph_cl_eta);
   fChain->SetBranchAddress("trig_EF_ph_cl_phi", &trig_EF_ph_cl_phi, &b_trig_EF_ph_cl_phi);
   fChain->SetBranchAddress("trig_EF_ph_cl_etas2", &trig_EF_ph_cl_etas2, &b_trig_EF_ph_cl_etas2);
   fChain->SetBranchAddress("trig_EF_el_n", &trig_EF_el_n, &b_trig_EF_el_n);
   fChain->SetBranchAddress("trig_EF_el_E", &trig_EF_el_E, &b_trig_EF_el_E);
   fChain->SetBranchAddress("trig_EF_el_Et", &trig_EF_el_Et, &b_trig_EF_el_Et);
   fChain->SetBranchAddress("trig_EF_el_pt", &trig_EF_el_pt, &b_trig_EF_el_pt);
   fChain->SetBranchAddress("trig_EF_el_m", &trig_EF_el_m, &b_trig_EF_el_m);
   fChain->SetBranchAddress("trig_EF_el_eta", &trig_EF_el_eta, &b_trig_EF_el_eta);
   fChain->SetBranchAddress("trig_EF_el_phi", &trig_EF_el_phi, &b_trig_EF_el_phi);
   fChain->SetBranchAddress("trig_EF_el_px", &trig_EF_el_px, &b_trig_EF_el_px);
   fChain->SetBranchAddress("trig_EF_el_py", &trig_EF_el_py, &b_trig_EF_el_py);
   fChain->SetBranchAddress("trig_EF_el_pz", &trig_EF_el_pz, &b_trig_EF_el_pz);
   fChain->SetBranchAddress("trig_EF_el_charge", &trig_EF_el_charge, &b_trig_EF_el_charge);
   fChain->SetBranchAddress("trig_EF_el_author", &trig_EF_el_author, &b_trig_EF_el_author);
   fChain->SetBranchAddress("trig_EF_el_isEM", &trig_EF_el_isEM, &b_trig_EF_el_isEM);
   fChain->SetBranchAddress("trig_EF_el_isEMLoose", &trig_EF_el_isEMLoose, &b_trig_EF_el_isEMLoose);
   fChain->SetBranchAddress("trig_EF_el_isEMMedium", &trig_EF_el_isEMMedium, &b_trig_EF_el_isEMMedium);
   fChain->SetBranchAddress("trig_EF_el_isEMTight", &trig_EF_el_isEMTight, &b_trig_EF_el_isEMTight);
   fChain->SetBranchAddress("trig_EF_el_loose", &trig_EF_el_loose, &b_trig_EF_el_loose);
   fChain->SetBranchAddress("trig_EF_el_looseIso", &trig_EF_el_looseIso, &b_trig_EF_el_looseIso);
   fChain->SetBranchAddress("trig_EF_el_medium", &trig_EF_el_medium, &b_trig_EF_el_medium);
   fChain->SetBranchAddress("trig_EF_el_mediumIso", &trig_EF_el_mediumIso, &b_trig_EF_el_mediumIso);
   fChain->SetBranchAddress("trig_EF_el_mediumWithoutTrack", &trig_EF_el_mediumWithoutTrack, &b_trig_EF_el_mediumWithoutTrack);
   fChain->SetBranchAddress("trig_EF_el_mediumIsoWithoutTrack", &trig_EF_el_mediumIsoWithoutTrack, &b_trig_EF_el_mediumIsoWithoutTrack);
   fChain->SetBranchAddress("trig_EF_el_tight", &trig_EF_el_tight, &b_trig_EF_el_tight);
   fChain->SetBranchAddress("trig_EF_el_tightIso", &trig_EF_el_tightIso, &b_trig_EF_el_tightIso);
   fChain->SetBranchAddress("trig_EF_el_tightWithoutTrack", &trig_EF_el_tightWithoutTrack, &b_trig_EF_el_tightWithoutTrack);
   fChain->SetBranchAddress("trig_EF_el_tightIsoWithoutTrack", &trig_EF_el_tightIsoWithoutTrack, &b_trig_EF_el_tightIsoWithoutTrack);
   fChain->SetBranchAddress("trig_EF_el_loosePP", &trig_EF_el_loosePP, &b_trig_EF_el_loosePP);
   fChain->SetBranchAddress("trig_EF_el_loosePPIso", &trig_EF_el_loosePPIso, &b_trig_EF_el_loosePPIso);
   fChain->SetBranchAddress("trig_EF_el_mediumPP", &trig_EF_el_mediumPP, &b_trig_EF_el_mediumPP);
   fChain->SetBranchAddress("trig_EF_el_mediumPPIso", &trig_EF_el_mediumPPIso, &b_trig_EF_el_mediumPPIso);
   fChain->SetBranchAddress("trig_EF_el_tightPP", &trig_EF_el_tightPP, &b_trig_EF_el_tightPP);
   fChain->SetBranchAddress("trig_EF_el_tightPPIso", &trig_EF_el_tightPPIso, &b_trig_EF_el_tightPPIso);
   fChain->SetBranchAddress("trig_EF_el_Ethad", &trig_EF_el_Ethad, &b_trig_EF_el_Ethad);
   fChain->SetBranchAddress("trig_EF_el_Ethad1", &trig_EF_el_Ethad1, &b_trig_EF_el_Ethad1);
   fChain->SetBranchAddress("trig_EF_el_f1", &trig_EF_el_f1, &b_trig_EF_el_f1);
   fChain->SetBranchAddress("trig_EF_el_f1core", &trig_EF_el_f1core, &b_trig_EF_el_f1core);
   fChain->SetBranchAddress("trig_EF_el_Emins1", &trig_EF_el_Emins1, &b_trig_EF_el_Emins1);
   fChain->SetBranchAddress("trig_EF_el_fside", &trig_EF_el_fside, &b_trig_EF_el_fside);
   fChain->SetBranchAddress("trig_EF_el_Emax2", &trig_EF_el_Emax2, &b_trig_EF_el_Emax2);
   fChain->SetBranchAddress("trig_EF_el_ws3", &trig_EF_el_ws3, &b_trig_EF_el_ws3);
   fChain->SetBranchAddress("trig_EF_el_wstot", &trig_EF_el_wstot, &b_trig_EF_el_wstot);
   fChain->SetBranchAddress("trig_EF_el_emaxs1", &trig_EF_el_emaxs1, &b_trig_EF_el_emaxs1);
   fChain->SetBranchAddress("trig_EF_el_deltaEs", &trig_EF_el_deltaEs, &b_trig_EF_el_deltaEs);
   fChain->SetBranchAddress("trig_EF_el_E233", &trig_EF_el_E233, &b_trig_EF_el_E233);
   fChain->SetBranchAddress("trig_EF_el_E237", &trig_EF_el_E237, &b_trig_EF_el_E237);
   fChain->SetBranchAddress("trig_EF_el_E277", &trig_EF_el_E277, &b_trig_EF_el_E277);
   fChain->SetBranchAddress("trig_EF_el_weta2", &trig_EF_el_weta2, &b_trig_EF_el_weta2);
   fChain->SetBranchAddress("trig_EF_el_f3", &trig_EF_el_f3, &b_trig_EF_el_f3);
   fChain->SetBranchAddress("trig_EF_el_f3core", &trig_EF_el_f3core, &b_trig_EF_el_f3core);
   fChain->SetBranchAddress("trig_EF_el_rphiallcalo", &trig_EF_el_rphiallcalo, &b_trig_EF_el_rphiallcalo);
   fChain->SetBranchAddress("trig_EF_el_Etcone45", &trig_EF_el_Etcone45, &b_trig_EF_el_Etcone45);
   fChain->SetBranchAddress("trig_EF_el_Etcone15", &trig_EF_el_Etcone15, &b_trig_EF_el_Etcone15);
   fChain->SetBranchAddress("trig_EF_el_Etcone20", &trig_EF_el_Etcone20, &b_trig_EF_el_Etcone20);
   fChain->SetBranchAddress("trig_EF_el_Etcone25", &trig_EF_el_Etcone25, &b_trig_EF_el_Etcone25);
   fChain->SetBranchAddress("trig_EF_el_Etcone30", &trig_EF_el_Etcone30, &b_trig_EF_el_Etcone30);
   fChain->SetBranchAddress("trig_EF_el_Etcone35", &trig_EF_el_Etcone35, &b_trig_EF_el_Etcone35);
   fChain->SetBranchAddress("trig_EF_el_Etcone40", &trig_EF_el_Etcone40, &b_trig_EF_el_Etcone40);
   fChain->SetBranchAddress("trig_EF_el_ptcone20", &trig_EF_el_ptcone20, &b_trig_EF_el_ptcone20);
   fChain->SetBranchAddress("trig_EF_el_ptcone30", &trig_EF_el_ptcone30, &b_trig_EF_el_ptcone30);
   fChain->SetBranchAddress("trig_EF_el_ptcone40", &trig_EF_el_ptcone40, &b_trig_EF_el_ptcone40);
   fChain->SetBranchAddress("trig_EF_el_pos7", &trig_EF_el_pos7, &b_trig_EF_el_pos7);
   fChain->SetBranchAddress("trig_EF_el_etacorrmag", &trig_EF_el_etacorrmag, &b_trig_EF_el_etacorrmag);
   fChain->SetBranchAddress("trig_EF_el_deltaeta1", &trig_EF_el_deltaeta1, &b_trig_EF_el_deltaeta1);
   fChain->SetBranchAddress("trig_EF_el_deltaeta2", &trig_EF_el_deltaeta2, &b_trig_EF_el_deltaeta2);
   fChain->SetBranchAddress("trig_EF_el_deltaphi2", &trig_EF_el_deltaphi2, &b_trig_EF_el_deltaphi2);
   fChain->SetBranchAddress("trig_EF_el_expectHitInBLayer", &trig_EF_el_expectHitInBLayer, &b_trig_EF_el_expectHitInBLayer);
   fChain->SetBranchAddress("trig_EF_el_trackd0_physics", &trig_EF_el_trackd0_physics, &b_trig_EF_el_trackd0_physics);
   fChain->SetBranchAddress("trig_EF_el_reta", &trig_EF_el_reta, &b_trig_EF_el_reta);
   fChain->SetBranchAddress("trig_EF_el_rphi", &trig_EF_el_rphi, &b_trig_EF_el_rphi);
   fChain->SetBranchAddress("trig_EF_el_EtringnoisedR03sig2", &trig_EF_el_EtringnoisedR03sig2, &b_trig_EF_el_EtringnoisedR03sig2);
   fChain->SetBranchAddress("trig_EF_el_EtringnoisedR03sig3", &trig_EF_el_EtringnoisedR03sig3, &b_trig_EF_el_EtringnoisedR03sig3);
   fChain->SetBranchAddress("trig_EF_el_EtringnoisedR03sig4", &trig_EF_el_EtringnoisedR03sig4, &b_trig_EF_el_EtringnoisedR03sig4);
   fChain->SetBranchAddress("trig_EF_el_isolationlikelihoodjets", &trig_EF_el_isolationlikelihoodjets, &b_trig_EF_el_isolationlikelihoodjets);
   fChain->SetBranchAddress("trig_EF_el_isolationlikelihoodhqelectrons", &trig_EF_el_isolationlikelihoodhqelectrons, &b_trig_EF_el_isolationlikelihoodhqelectrons);
   fChain->SetBranchAddress("trig_EF_el_electronweight", &trig_EF_el_electronweight, &b_trig_EF_el_electronweight);
   fChain->SetBranchAddress("trig_EF_el_electronbgweight", &trig_EF_el_electronbgweight, &b_trig_EF_el_electronbgweight);
   fChain->SetBranchAddress("trig_EF_el_softeweight", &trig_EF_el_softeweight, &b_trig_EF_el_softeweight);
   fChain->SetBranchAddress("trig_EF_el_softebgweight", &trig_EF_el_softebgweight, &b_trig_EF_el_softebgweight);
   fChain->SetBranchAddress("trig_EF_el_neuralnet", &trig_EF_el_neuralnet, &b_trig_EF_el_neuralnet);
   fChain->SetBranchAddress("trig_EF_el_Hmatrix", &trig_EF_el_Hmatrix, &b_trig_EF_el_Hmatrix);
   fChain->SetBranchAddress("trig_EF_el_Hmatrix5", &trig_EF_el_Hmatrix5, &b_trig_EF_el_Hmatrix5);
   fChain->SetBranchAddress("trig_EF_el_adaboost", &trig_EF_el_adaboost, &b_trig_EF_el_adaboost);
   fChain->SetBranchAddress("trig_EF_el_softeneuralnet", &trig_EF_el_softeneuralnet, &b_trig_EF_el_softeneuralnet);
   fChain->SetBranchAddress("trig_EF_el_zvertex", &trig_EF_el_zvertex, &b_trig_EF_el_zvertex);
   fChain->SetBranchAddress("trig_EF_el_errz", &trig_EF_el_errz, &b_trig_EF_el_errz);
   fChain->SetBranchAddress("trig_EF_el_etap", &trig_EF_el_etap, &b_trig_EF_el_etap);
   fChain->SetBranchAddress("trig_EF_el_depth", &trig_EF_el_depth, &b_trig_EF_el_depth);
   fChain->SetBranchAddress("trig_EF_el_Es0", &trig_EF_el_Es0, &b_trig_EF_el_Es0);
   fChain->SetBranchAddress("trig_EF_el_etas0", &trig_EF_el_etas0, &b_trig_EF_el_etas0);
   fChain->SetBranchAddress("trig_EF_el_phis0", &trig_EF_el_phis0, &b_trig_EF_el_phis0);
   fChain->SetBranchAddress("trig_EF_el_Es1", &trig_EF_el_Es1, &b_trig_EF_el_Es1);
   fChain->SetBranchAddress("trig_EF_el_etas1", &trig_EF_el_etas1, &b_trig_EF_el_etas1);
   fChain->SetBranchAddress("trig_EF_el_phis1", &trig_EF_el_phis1, &b_trig_EF_el_phis1);
   fChain->SetBranchAddress("trig_EF_el_Es2", &trig_EF_el_Es2, &b_trig_EF_el_Es2);
   fChain->SetBranchAddress("trig_EF_el_etas2", &trig_EF_el_etas2, &b_trig_EF_el_etas2);
   fChain->SetBranchAddress("trig_EF_el_phis2", &trig_EF_el_phis2, &b_trig_EF_el_phis2);
   fChain->SetBranchAddress("trig_EF_el_Es3", &trig_EF_el_Es3, &b_trig_EF_el_Es3);
   fChain->SetBranchAddress("trig_EF_el_etas3", &trig_EF_el_etas3, &b_trig_EF_el_etas3);
   fChain->SetBranchAddress("trig_EF_el_phis3", &trig_EF_el_phis3, &b_trig_EF_el_phis3);
   fChain->SetBranchAddress("trig_EF_el_cl_E", &trig_EF_el_cl_E, &b_trig_EF_el_cl_E);
   fChain->SetBranchAddress("trig_EF_el_cl_pt", &trig_EF_el_cl_pt, &b_trig_EF_el_cl_pt);
   fChain->SetBranchAddress("trig_EF_el_cl_eta", &trig_EF_el_cl_eta, &b_trig_EF_el_cl_eta);
   fChain->SetBranchAddress("trig_EF_el_cl_phi", &trig_EF_el_cl_phi, &b_trig_EF_el_cl_phi);
   fChain->SetBranchAddress("trig_EF_el_trackd0", &trig_EF_el_trackd0, &b_trig_EF_el_trackd0);
   fChain->SetBranchAddress("trig_EF_el_trackz0", &trig_EF_el_trackz0, &b_trig_EF_el_trackz0);
   fChain->SetBranchAddress("trig_EF_el_trackphi", &trig_EF_el_trackphi, &b_trig_EF_el_trackphi);
   fChain->SetBranchAddress("trig_EF_el_tracktheta", &trig_EF_el_tracktheta, &b_trig_EF_el_tracktheta);
   fChain->SetBranchAddress("trig_EF_el_trackqoverp", &trig_EF_el_trackqoverp, &b_trig_EF_el_trackqoverp);
   fChain->SetBranchAddress("trig_EF_el_trackpt", &trig_EF_el_trackpt, &b_trig_EF_el_trackpt);
   fChain->SetBranchAddress("trig_EF_el_tracketa", &trig_EF_el_tracketa, &b_trig_EF_el_tracketa);
   fChain->SetBranchAddress("trig_EF_el_trackfitchi2", &trig_EF_el_trackfitchi2, &b_trig_EF_el_trackfitchi2);
   fChain->SetBranchAddress("trig_EF_el_trackfitndof", &trig_EF_el_trackfitndof, &b_trig_EF_el_trackfitndof);
   fChain->SetBranchAddress("trig_EF_el_nBLHits", &trig_EF_el_nBLHits, &b_trig_EF_el_nBLHits);
   fChain->SetBranchAddress("trig_EF_el_nPixHits", &trig_EF_el_nPixHits, &b_trig_EF_el_nPixHits);
   fChain->SetBranchAddress("trig_EF_el_nSCTHits", &trig_EF_el_nSCTHits, &b_trig_EF_el_nSCTHits);
   fChain->SetBranchAddress("trig_EF_el_nTRTHits", &trig_EF_el_nTRTHits, &b_trig_EF_el_nTRTHits);
   fChain->SetBranchAddress("trig_EF_el_nTRTHighTHits", &trig_EF_el_nTRTHighTHits, &b_trig_EF_el_nTRTHighTHits);
   fChain->SetBranchAddress("trig_EF_el_nTRTXenonHits", &trig_EF_el_nTRTXenonHits, &b_trig_EF_el_nTRTXenonHits);
   fChain->SetBranchAddress("trig_EF_el_nPixHoles", &trig_EF_el_nPixHoles, &b_trig_EF_el_nPixHoles);
   fChain->SetBranchAddress("trig_EF_el_nSCTHoles", &trig_EF_el_nSCTHoles, &b_trig_EF_el_nSCTHoles);
   fChain->SetBranchAddress("trig_EF_el_nTRTHoles", &trig_EF_el_nTRTHoles, &b_trig_EF_el_nTRTHoles);
   fChain->SetBranchAddress("trig_EF_el_nPixelDeadSensors", &trig_EF_el_nPixelDeadSensors, &b_trig_EF_el_nPixelDeadSensors);
   fChain->SetBranchAddress("trig_EF_el_nSCTDeadSensors", &trig_EF_el_nSCTDeadSensors, &b_trig_EF_el_nSCTDeadSensors);
   fChain->SetBranchAddress("trig_EF_el_nBLSharedHits", &trig_EF_el_nBLSharedHits, &b_trig_EF_el_nBLSharedHits);
   fChain->SetBranchAddress("trig_EF_el_nPixSharedHits", &trig_EF_el_nPixSharedHits, &b_trig_EF_el_nPixSharedHits);
   fChain->SetBranchAddress("trig_EF_el_nSCTSharedHits", &trig_EF_el_nSCTSharedHits, &b_trig_EF_el_nSCTSharedHits);
   fChain->SetBranchAddress("trig_EF_el_nBLayerSplitHits", &trig_EF_el_nBLayerSplitHits, &b_trig_EF_el_nBLayerSplitHits);
   fChain->SetBranchAddress("trig_EF_el_nPixSplitHits", &trig_EF_el_nPixSplitHits, &b_trig_EF_el_nPixSplitHits);
   fChain->SetBranchAddress("trig_EF_el_nBLayerOutliers", &trig_EF_el_nBLayerOutliers, &b_trig_EF_el_nBLayerOutliers);
   fChain->SetBranchAddress("trig_EF_el_nPixelOutliers", &trig_EF_el_nPixelOutliers, &b_trig_EF_el_nPixelOutliers);
   fChain->SetBranchAddress("trig_EF_el_nSCTOutliers", &trig_EF_el_nSCTOutliers, &b_trig_EF_el_nSCTOutliers);
   fChain->SetBranchAddress("trig_EF_el_nTRTOutliers", &trig_EF_el_nTRTOutliers, &b_trig_EF_el_nTRTOutliers);
   fChain->SetBranchAddress("trig_EF_el_nTRTHighTOutliers", &trig_EF_el_nTRTHighTOutliers, &b_trig_EF_el_nTRTHighTOutliers);
   fChain->SetBranchAddress("trig_EF_el_expectBLayerHit", &trig_EF_el_expectBLayerHit, &b_trig_EF_el_expectBLayerHit);
   fChain->SetBranchAddress("trig_EF_el_nSiHits", &trig_EF_el_nSiHits, &b_trig_EF_el_nSiHits);
   fChain->SetBranchAddress("trig_EF_el_TRTHighTHitsRatio", &trig_EF_el_TRTHighTHitsRatio, &b_trig_EF_el_TRTHighTHitsRatio);
   fChain->SetBranchAddress("trig_EF_el_TRTHighTOutliersRatio", &trig_EF_el_TRTHighTOutliersRatio, &b_trig_EF_el_TRTHighTOutliersRatio);
   fChain->SetBranchAddress("trig_EF_el_pixeldEdx", &trig_EF_el_pixeldEdx, &b_trig_EF_el_pixeldEdx);
   fChain->SetBranchAddress("trig_EF_el_nGoodHitsPixeldEdx", &trig_EF_el_nGoodHitsPixeldEdx, &b_trig_EF_el_nGoodHitsPixeldEdx);
   fChain->SetBranchAddress("trig_EF_el_massPixeldEdx", &trig_EF_el_massPixeldEdx, &b_trig_EF_el_massPixeldEdx);
   fChain->SetBranchAddress("trig_EF_el_likelihoodsPixeldEdx", &trig_EF_el_likelihoodsPixeldEdx, &b_trig_EF_el_likelihoodsPixeldEdx);
   fChain->SetBranchAddress("trig_EF_el_eProbabilityComb", &trig_EF_el_eProbabilityComb, &b_trig_EF_el_eProbabilityComb);
   fChain->SetBranchAddress("trig_EF_el_eProbabilityHT", &trig_EF_el_eProbabilityHT, &b_trig_EF_el_eProbabilityHT);
   fChain->SetBranchAddress("trig_EF_el_eProbabilityToT", &trig_EF_el_eProbabilityToT, &b_trig_EF_el_eProbabilityToT);
   fChain->SetBranchAddress("trig_EF_el_eProbabilityBrem", &trig_EF_el_eProbabilityBrem, &b_trig_EF_el_eProbabilityBrem);
   fChain->SetBranchAddress("trig_EF_el_vertweight", &trig_EF_el_vertweight, &b_trig_EF_el_vertweight);
   fChain->SetBranchAddress("trig_EF_el_vertx", &trig_EF_el_vertx, &b_trig_EF_el_vertx);
   fChain->SetBranchAddress("trig_EF_el_verty", &trig_EF_el_verty, &b_trig_EF_el_verty);
   fChain->SetBranchAddress("trig_EF_el_vertz", &trig_EF_el_vertz, &b_trig_EF_el_vertz);
   fChain->SetBranchAddress("trig_EF_el_hastrack", &trig_EF_el_hastrack, &b_trig_EF_el_hastrack);
   fChain->SetBranchAddress("trig_EF_trigmuonef_n", &trig_EF_trigmuonef_n, &b_trig_EF_trigmuonef_n);
   fChain->SetBranchAddress("trig_EF_trigmuonef_effs15", &trig_EF_trigmuonef_effs15, &b_trig_EF_trigmuonef_effs15);
   fChain->SetBranchAddress("trig_EF_trigmuonef_effs18", &trig_EF_trigmuonef_effs18, &b_trig_EF_trigmuonef_effs18);
   fChain->SetBranchAddress("trig_EF_trigmuonef_effs24", &trig_EF_trigmuonef_effs24, &b_trig_EF_trigmuonef_effs24);
   fChain->SetBranchAddress("trig_EF_trigmuonef_RoINum", &trig_EF_trigmuonef_RoINum, &b_trig_EF_trigmuonef_RoINum);
   fChain->SetBranchAddress("trig_EF_trigmuonef_NSegments", &trig_EF_trigmuonef_NSegments, &b_trig_EF_trigmuonef_NSegments);
   fChain->SetBranchAddress("trig_EF_trigmuonef_NMdtHits", &trig_EF_trigmuonef_NMdtHits, &b_trig_EF_trigmuonef_NMdtHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_NRpcHits", &trig_EF_trigmuonef_NRpcHits, &b_trig_EF_trigmuonef_NRpcHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_NTgcHits", &trig_EF_trigmuonef_NTgcHits, &b_trig_EF_trigmuonef_NTgcHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_NCscHits", &trig_EF_trigmuonef_NCscHits, &b_trig_EF_trigmuonef_NCscHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_EtaPreviousLevel", &trig_EF_trigmuonef_EtaPreviousLevel, &b_trig_EF_trigmuonef_EtaPreviousLevel);
   fChain->SetBranchAddress("trig_EF_trigmuonef_PhiPreviousLevel", &trig_EF_trigmuonef_PhiPreviousLevel, &b_trig_EF_trigmuonef_PhiPreviousLevel);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_n", &trig_EF_trigmuonef_track_n, &b_trig_EF_trigmuonef_track_n);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MuonType", &trig_EF_trigmuonef_track_MuonType, &b_trig_EF_trigmuonef_track_MuonType);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_pt", &trig_EF_trigmuonef_track_MS_pt, &b_trig_EF_trigmuonef_track_MS_pt);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_eta", &trig_EF_trigmuonef_track_MS_eta, &b_trig_EF_trigmuonef_track_MS_eta);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_phi", &trig_EF_trigmuonef_track_MS_phi, &b_trig_EF_trigmuonef_track_MS_phi);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_charge", &trig_EF_trigmuonef_track_MS_charge, &b_trig_EF_trigmuonef_track_MS_charge);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_d0", &trig_EF_trigmuonef_track_MS_d0, &b_trig_EF_trigmuonef_track_MS_d0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_z0", &trig_EF_trigmuonef_track_MS_z0, &b_trig_EF_trigmuonef_track_MS_z0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_chi2", &trig_EF_trigmuonef_track_MS_chi2, &b_trig_EF_trigmuonef_track_MS_chi2);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_chi2prob", &trig_EF_trigmuonef_track_MS_chi2prob, &b_trig_EF_trigmuonef_track_MS_chi2prob);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_posX", &trig_EF_trigmuonef_track_MS_posX, &b_trig_EF_trigmuonef_track_MS_posX);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_posY", &trig_EF_trigmuonef_track_MS_posY, &b_trig_EF_trigmuonef_track_MS_posY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_posZ", &trig_EF_trigmuonef_track_MS_posZ, &b_trig_EF_trigmuonef_track_MS_posZ);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NRpcHitsPhi", &trig_EF_trigmuonef_track_MS_NRpcHitsPhi, &b_trig_EF_trigmuonef_track_MS_NRpcHitsPhi);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NTgcHitsPhi", &trig_EF_trigmuonef_track_MS_NTgcHitsPhi, &b_trig_EF_trigmuonef_track_MS_NTgcHitsPhi);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NCscHitsPhi", &trig_EF_trigmuonef_track_MS_NCscHitsPhi, &b_trig_EF_trigmuonef_track_MS_NCscHitsPhi);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NRpcHitsEta", &trig_EF_trigmuonef_track_MS_NRpcHitsEta, &b_trig_EF_trigmuonef_track_MS_NRpcHitsEta);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NTgcHitsEta", &trig_EF_trigmuonef_track_MS_NTgcHitsEta, &b_trig_EF_trigmuonef_track_MS_NTgcHitsEta);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NCscHitsEta", &trig_EF_trigmuonef_track_MS_NCscHitsEta, &b_trig_EF_trigmuonef_track_MS_NCscHitsEta);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_NMdtHits", &trig_EF_trigmuonef_track_MS_NMdtHits, &b_trig_EF_trigmuonef_track_MS_NMdtHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_MS_hasMS", &trig_EF_trigmuonef_track_MS_hasMS, &b_trig_EF_trigmuonef_track_MS_hasMS);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_pt", &trig_EF_trigmuonef_track_SA_pt, &b_trig_EF_trigmuonef_track_SA_pt);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_eta", &trig_EF_trigmuonef_track_SA_eta, &b_trig_EF_trigmuonef_track_SA_eta);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_phi", &trig_EF_trigmuonef_track_SA_phi, &b_trig_EF_trigmuonef_track_SA_phi);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_charge", &trig_EF_trigmuonef_track_SA_charge, &b_trig_EF_trigmuonef_track_SA_charge);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_d0", &trig_EF_trigmuonef_track_SA_d0, &b_trig_EF_trigmuonef_track_SA_d0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_z0", &trig_EF_trigmuonef_track_SA_z0, &b_trig_EF_trigmuonef_track_SA_z0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_chi2", &trig_EF_trigmuonef_track_SA_chi2, &b_trig_EF_trigmuonef_track_SA_chi2);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_chi2prob", &trig_EF_trigmuonef_track_SA_chi2prob, &b_trig_EF_trigmuonef_track_SA_chi2prob);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_posX", &trig_EF_trigmuonef_track_SA_posX, &b_trig_EF_trigmuonef_track_SA_posX);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_posY", &trig_EF_trigmuonef_track_SA_posY, &b_trig_EF_trigmuonef_track_SA_posY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_posZ", &trig_EF_trigmuonef_track_SA_posZ, &b_trig_EF_trigmuonef_track_SA_posZ);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_SA_hasSA", &trig_EF_trigmuonef_track_SA_hasSA, &b_trig_EF_trigmuonef_track_SA_hasSA);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_pt", &trig_EF_trigmuonef_track_CB_pt, &b_trig_EF_trigmuonef_track_CB_pt);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_eta", &trig_EF_trigmuonef_track_CB_eta, &b_trig_EF_trigmuonef_track_CB_eta);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_phi", &trig_EF_trigmuonef_track_CB_phi, &b_trig_EF_trigmuonef_track_CB_phi);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_charge", &trig_EF_trigmuonef_track_CB_charge, &b_trig_EF_trigmuonef_track_CB_charge);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_d0", &trig_EF_trigmuonef_track_CB_d0, &b_trig_EF_trigmuonef_track_CB_d0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_z0", &trig_EF_trigmuonef_track_CB_z0, &b_trig_EF_trigmuonef_track_CB_z0);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_chi2", &trig_EF_trigmuonef_track_CB_chi2, &b_trig_EF_trigmuonef_track_CB_chi2);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_chi2prob", &trig_EF_trigmuonef_track_CB_chi2prob, &b_trig_EF_trigmuonef_track_CB_chi2prob);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_posX", &trig_EF_trigmuonef_track_CB_posX, &b_trig_EF_trigmuonef_track_CB_posX);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_posY", &trig_EF_trigmuonef_track_CB_posY, &b_trig_EF_trigmuonef_track_CB_posY);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_posZ", &trig_EF_trigmuonef_track_CB_posZ, &b_trig_EF_trigmuonef_track_CB_posZ);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_matchChi2", &trig_EF_trigmuonef_track_CB_matchChi2, &b_trig_EF_trigmuonef_track_CB_matchChi2);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_NIdSctHits", &trig_EF_trigmuonef_track_CB_NIdSctHits, &b_trig_EF_trigmuonef_track_CB_NIdSctHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_NIdPixelHits", &trig_EF_trigmuonef_track_CB_NIdPixelHits, &b_trig_EF_trigmuonef_track_CB_NIdPixelHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_NTrtHits", &trig_EF_trigmuonef_track_CB_NTrtHits, &b_trig_EF_trigmuonef_track_CB_NTrtHits);
   fChain->SetBranchAddress("trig_EF_trigmuonef_track_CB_hasCB", &trig_EF_trigmuonef_track_CB_hasCB, &b_trig_EF_trigmuonef_track_CB_hasCB);
   fChain->SetBranchAddress("bcmRDO_n", &bcmRDO_n, &b_bcmRDO_n);
   fChain->SetBranchAddress("bcmRDO_channel", &bcmRDO_channel, &b_bcmRDO_channel);
   fChain->SetBranchAddress("bcmRDO_nhits", &bcmRDO_nhits, &b_bcmRDO_nhits);
   fChain->SetBranchAddress("bcmRDO_pulse1pos", &bcmRDO_pulse1pos, &b_bcmRDO_pulse1pos);
   fChain->SetBranchAddress("bcmRDO_pulse1width", &bcmRDO_pulse1width, &b_bcmRDO_pulse1width);
   fChain->SetBranchAddress("bcmRDO_pulse2pos", &bcmRDO_pulse2pos, &b_bcmRDO_pulse2pos);
   fChain->SetBranchAddress("bcmRDO_pulse2width", &bcmRDO_pulse2width, &b_bcmRDO_pulse2width);
   fChain->SetBranchAddress("bcmRDO_lvl1a", &bcmRDO_lvl1a, &b_bcmRDO_lvl1a);
   fChain->SetBranchAddress("bcmRDO_bcid", &bcmRDO_bcid, &b_bcmRDO_bcid);
   fChain->SetBranchAddress("bcmRDO_lvl1id", &bcmRDO_lvl1id, &b_bcmRDO_lvl1id);
   fChain->SetBranchAddress("ctpRDO_nBC", &ctpRDO_nBC, &b_ctpRDO_nBC);
   fChain->SetBranchAddress("ctpRDO_lvl1aBC", &ctpRDO_lvl1aBC, &b_ctpRDO_lvl1aBC);
   fChain->SetBranchAddress("ctpRDO_time_s", &ctpRDO_time_s, &b_ctpRDO_time_s);
   fChain->SetBranchAddress("ctpRDO_time_ns", &ctpRDO_time_ns, &b_ctpRDO_time_ns);
   fChain->SetBranchAddress("ctpRDO_pit", &ctpRDO_pit, &b_ctpRDO_pit);
   fChain->SetBranchAddress("ctpRDO_tbp", &ctpRDO_tbp, &b_ctpRDO_tbp);
   fChain->SetBranchAddress("ctpRDO_tap", &ctpRDO_tap, &b_ctpRDO_tap);
   fChain->SetBranchAddress("ctpRDO_tav", &ctpRDO_tav, &b_ctpRDO_tav);
   fChain->SetBranchAddress("ctp_decisionTypeWord", &ctp_decisionTypeWord, &b_ctp_decisionTypeWord);
   fChain->SetBranchAddress("ctp_decisionItems", &ctp_decisionItems, &b_ctp_decisionItems);
   fChain->SetBranchAddress("ctp_decisionWords", &ctp_decisionWords, &b_ctp_decisionWords);
   fChain->SetBranchAddress("ctp_nDecisionItems", &ctp_nDecisionItems, &b_ctp_nDecisionItems);
   fChain->SetBranchAddress("mbtsLvl2_nElements", &mbtsLvl2_nElements, &b_mbtsLvl2_nElements);
   fChain->SetBranchAddress("mbtsLvl2_energies", &mbtsLvl2_energies, &b_mbtsLvl2_energies);
   fChain->SetBranchAddress("mbtsLvl2_ntimes", &mbtsLvl2_ntimes, &b_mbtsLvl2_ntimes);
   fChain->SetBranchAddress("mbtsLvl2_times", &mbtsLvl2_times, &b_mbtsLvl2_times);
   fChain->SetBranchAddress("lvl2_sp_nElements", &lvl2_sp_nElements, &b_lvl2_sp_nElements);
   fChain->SetBranchAddress("lvl2_sp_hPixelClusTotBins", &lvl2_sp_hPixelClusTotBins, &b_lvl2_sp_hPixelClusTotBins);
   fChain->SetBranchAddress("lvl2_sp_hPixelClusTotMin", &lvl2_sp_hPixelClusTotMin, &b_lvl2_sp_hPixelClusTotMin);
   fChain->SetBranchAddress("lvl2_sp_hPixelClusTotMax", &lvl2_sp_hPixelClusTotMax, &b_lvl2_sp_hPixelClusTotMax);
   fChain->SetBranchAddress("lvl2_sp_hPixelClusSizeBins", &lvl2_sp_hPixelClusSizeBins, &b_lvl2_sp_hPixelClusSizeBins);
   fChain->SetBranchAddress("lvl2_sp_hPixelClusSizeMin", &lvl2_sp_hPixelClusSizeMin, &b_lvl2_sp_hPixelClusSizeMin);
   fChain->SetBranchAddress("lvl2_sp_hPixelClusSizeMax", &lvl2_sp_hPixelClusSizeMax, &b_lvl2_sp_hPixelClusSizeMax);
   fChain->SetBranchAddress("lvl2_sp_pixelClusEndcapC_contents", &lvl2_sp_pixelClusEndcapC_contents, &b_lvl2_sp_pixelClusEndcapC_contents);
   fChain->SetBranchAddress("lvl2_sp_pixelClusBarrel_contents", &lvl2_sp_pixelClusBarrel_contents, &b_lvl2_sp_pixelClusBarrel_contents);
   fChain->SetBranchAddress("lvl2_sp_pixelClusEndcapA_contents", &lvl2_sp_pixelClusEndcapA_contents, &b_lvl2_sp_pixelClusEndcapA_contents);
   fChain->SetBranchAddress("lvl2_sp_droppedPixelModuleIds", &lvl2_sp_droppedPixelModuleIds, &b_lvl2_sp_droppedPixelModuleIds);
   fChain->SetBranchAddress("lvl2_sp_sctSpEndcapC", &lvl2_sp_sctSpEndcapC, &b_lvl2_sp_sctSpEndcapC);
   fChain->SetBranchAddress("lvl2_sp_sctSpBarrel", &lvl2_sp_sctSpBarrel, &b_lvl2_sp_sctSpBarrel);
   fChain->SetBranchAddress("lvl2_sp_sctSpEndcapA", &lvl2_sp_sctSpEndcapA, &b_lvl2_sp_sctSpEndcapA);
   fChain->SetBranchAddress("lvl2_sp_droppedSctModuleIds", &lvl2_sp_droppedSctModuleIds, &b_lvl2_sp_droppedSctModuleIds);
   fChain->SetBranchAddress("lvl2_mbTrt_nElements", &lvl2_mbTrt_nElements, &b_lvl2_mbTrt_nElements);
   fChain->SetBranchAddress("lvl2_mbTrt_hTotBins", &lvl2_mbTrt_hTotBins, &b_lvl2_mbTrt_hTotBins);
   fChain->SetBranchAddress("lvl2_mbTrt_hTotMin", &lvl2_mbTrt_hTotMin, &b_lvl2_mbTrt_hTotMin);
   fChain->SetBranchAddress("lvl2_mbTrt_hTotMax", &lvl2_mbTrt_hTotMax, &b_lvl2_mbTrt_hTotMax);
   fChain->SetBranchAddress("lvl2_mbTrt_endcapC_contents", &lvl2_mbTrt_endcapC_contents, &b_lvl2_mbTrt_endcapC_contents);
   fChain->SetBranchAddress("lvl2_mbTrt_barrel_contents", &lvl2_mbTrt_barrel_contents, &b_lvl2_mbTrt_barrel_contents);
   fChain->SetBranchAddress("lvl2_mbTrt_endcapA_contents", &lvl2_mbTrt_endcapA_contents, &b_lvl2_mbTrt_endcapA_contents);
   fChain->SetBranchAddress("ef_trk_nElements", &ef_trk_nElements, &b_ef_trk_nElements);
   fChain->SetBranchAddress("ef_trk_hZ0Bins", &ef_trk_hZ0Bins, &b_ef_trk_hZ0Bins);
   fChain->SetBranchAddress("ef_trk_hZ0Min", &ef_trk_hZ0Min, &b_ef_trk_hZ0Min);
   fChain->SetBranchAddress("ef_trk_hZ0Max", &ef_trk_hZ0Max, &b_ef_trk_hZ0Max);
   fChain->SetBranchAddress("ef_trk_hPtBins", &ef_trk_hPtBins, &b_ef_trk_hPtBins);
   fChain->SetBranchAddress("ef_trk_hPtMin", &ef_trk_hPtMin, &b_ef_trk_hPtMin);
   fChain->SetBranchAddress("ef_trk_hPtMax", &ef_trk_hPtMax, &b_ef_trk_hPtMax);
   fChain->SetBranchAddress("ef_trk_hEtaBins", &ef_trk_hEtaBins, &b_ef_trk_hEtaBins);
   fChain->SetBranchAddress("ef_trk_hEtaMin", &ef_trk_hEtaMin, &b_ef_trk_hEtaMin);
   fChain->SetBranchAddress("ef_trk_hEtaMax", &ef_trk_hEtaMax, &b_ef_trk_hEtaMax);
   fChain->SetBranchAddress("ef_trk_hPhiBins", &ef_trk_hPhiBins, &b_ef_trk_hPhiBins);
   fChain->SetBranchAddress("ef_trk_hPhiMin", &ef_trk_hPhiMin, &b_ef_trk_hPhiMin);
   fChain->SetBranchAddress("ef_trk_hPhiMax", &ef_trk_hPhiMax, &b_ef_trk_hPhiMax);
   fChain->SetBranchAddress("ef_trk_z0_pt_contents", &ef_trk_z0_pt_contents, &b_ef_trk_z0_pt_contents);
   fChain->SetBranchAddress("ef_trk_eta_phi_contents", &ef_trk_eta_phi_contents, &b_ef_trk_eta_phi_contents);
   fChain->SetBranchAddress("trig_L2_jet_n", &trig_L2_jet_n, &b_trig_L2_jet_n);
   fChain->SetBranchAddress("trig_L2_jet_E", &trig_L2_jet_E, &b_trig_L2_jet_E);
   fChain->SetBranchAddress("trig_L2_jet_eta", &trig_L2_jet_eta, &b_trig_L2_jet_eta);
   fChain->SetBranchAddress("trig_L2_jet_phi", &trig_L2_jet_phi, &b_trig_L2_jet_phi);
   fChain->SetBranchAddress("trig_L2_jet_RoIWord", &trig_L2_jet_RoIWord, &b_trig_L2_jet_RoIWord);
   fChain->SetBranchAddress("trig_L2_jet_InputType", &trig_L2_jet_InputType, &b_trig_L2_jet_InputType);
   fChain->SetBranchAddress("trig_L2_jet_OutputType", &trig_L2_jet_OutputType, &b_trig_L2_jet_OutputType);
   fChain->SetBranchAddress("trig_L2_jet_counter", &trig_L2_jet_counter, &b_trig_L2_jet_counter);
   fChain->SetBranchAddress("trig_L2_jet_c4cchad", &trig_L2_jet_c4cchad, &b_trig_L2_jet_c4cchad);
   fChain->SetBranchAddress("trig_L2_jet_c4ccem", &trig_L2_jet_c4ccem, &b_trig_L2_jet_c4ccem);
   fChain->SetBranchAddress("trig_L2_jet_c4uchad", &trig_L2_jet_c4uchad, &b_trig_L2_jet_c4uchad);
   fChain->SetBranchAddress("trig_L2_jet_ehad0", &trig_L2_jet_ehad0, &b_trig_L2_jet_ehad0);
   fChain->SetBranchAddress("trig_L2_jet_eem0", &trig_L2_jet_eem0, &b_trig_L2_jet_eem0);
   fChain->SetBranchAddress("trig_L2_jet_nLeadingCells", &trig_L2_jet_nLeadingCells, &b_trig_L2_jet_nLeadingCells);
   fChain->SetBranchAddress("trig_L2_jet_hecf", &trig_L2_jet_hecf, &b_trig_L2_jet_hecf);
   fChain->SetBranchAddress("trig_L2_jet_jetQuality", &trig_L2_jet_jetQuality, &b_trig_L2_jet_jetQuality);
   fChain->SetBranchAddress("trig_L2_jet_emf", &trig_L2_jet_emf, &b_trig_L2_jet_emf);
   fChain->SetBranchAddress("trig_L2_jet_jetTimeCells", &trig_L2_jet_jetTimeCells, &b_trig_L2_jet_jetTimeCells);
   fChain->SetBranchAddress("vx_n", &vx_n, &b_vx_n);
   fChain->SetBranchAddress("vx_x", &vx_x, &b_vx_x);
   fChain->SetBranchAddress("vx_y", &vx_y, &b_vx_y);
   fChain->SetBranchAddress("vx_z", &vx_z, &b_vx_z);
   fChain->SetBranchAddress("vx_err_x", &vx_err_x, &b_vx_err_x);
   fChain->SetBranchAddress("vx_err_y", &vx_err_y, &b_vx_err_y);
   fChain->SetBranchAddress("vx_err_z", &vx_err_z, &b_vx_err_z);
   fChain->SetBranchAddress("vx_cov_xy", &vx_cov_xy, &b_vx_cov_xy);
   fChain->SetBranchAddress("vx_cov_xz", &vx_cov_xz, &b_vx_cov_xz);
   fChain->SetBranchAddress("vx_cov_yz", &vx_cov_yz, &b_vx_cov_yz);
   fChain->SetBranchAddress("vx_type", &vx_type, &b_vx_type);
   fChain->SetBranchAddress("vx_chi2", &vx_chi2, &b_vx_chi2);
   fChain->SetBranchAddress("vx_ndof", &vx_ndof, &b_vx_ndof);
   fChain->SetBranchAddress("vx_px", &vx_px, &b_vx_px);
   fChain->SetBranchAddress("vx_py", &vx_py, &b_vx_py);
   fChain->SetBranchAddress("vx_pz", &vx_pz, &b_vx_pz);
   fChain->SetBranchAddress("vx_E", &vx_E, &b_vx_E);
   fChain->SetBranchAddress("vx_m", &vx_m, &b_vx_m);
   fChain->SetBranchAddress("vx_nTracks", &vx_nTracks, &b_vx_nTracks);
   fChain->SetBranchAddress("vx_sumPt", &vx_sumPt, &b_vx_sumPt);
   fChain->SetBranchAddress("vx_trk_weight", &vx_trk_weight, &b_vx_trk_weight);
   fChain->SetBranchAddress("vx_trk_n", &vx_trk_n, &b_vx_trk_n);
   fChain->SetBranchAddress("vx_trk_index", &vx_trk_index, &b_vx_trk_index);
   fChain->SetBranchAddress("el_n", &el_n, &b_el_n);
   fChain->SetBranchAddress("el_E", &el_E, &b_el_E);
   fChain->SetBranchAddress("el_Et", &el_Et, &b_el_Et);
   fChain->SetBranchAddress("el_pt", &el_pt, &b_el_pt);
   fChain->SetBranchAddress("el_m", &el_m, &b_el_m);
   fChain->SetBranchAddress("el_eta", &el_eta, &b_el_eta);
   fChain->SetBranchAddress("el_phi", &el_phi, &b_el_phi);
   fChain->SetBranchAddress("el_px", &el_px, &b_el_px);
   fChain->SetBranchAddress("el_py", &el_py, &b_el_py);
   fChain->SetBranchAddress("el_pz", &el_pz, &b_el_pz);
   fChain->SetBranchAddress("el_charge", &el_charge, &b_el_charge);
   fChain->SetBranchAddress("el_author", &el_author, &b_el_author);
   fChain->SetBranchAddress("el_isEM", &el_isEM, &b_el_isEM);
   fChain->SetBranchAddress("el_isEMLoose", &el_isEMLoose, &b_el_isEMLoose);
   fChain->SetBranchAddress("el_isEMMedium", &el_isEMMedium, &b_el_isEMMedium);
   fChain->SetBranchAddress("el_isEMTight", &el_isEMTight, &b_el_isEMTight);
   fChain->SetBranchAddress("el_OQ", &el_OQ, &b_el_OQ);
   fChain->SetBranchAddress("el_convFlag", &el_convFlag, &b_el_convFlag);
   fChain->SetBranchAddress("el_isConv", &el_isConv, &b_el_isConv);
   fChain->SetBranchAddress("el_nConv", &el_nConv, &b_el_nConv);
   fChain->SetBranchAddress("el_nSingleTrackConv", &el_nSingleTrackConv, &b_el_nSingleTrackConv);
   fChain->SetBranchAddress("el_nDoubleTrackConv", &el_nDoubleTrackConv, &b_el_nDoubleTrackConv);
   fChain->SetBranchAddress("el_type", &el_type, &b_el_type);
   fChain->SetBranchAddress("el_origin", &el_origin, &b_el_origin);
   fChain->SetBranchAddress("el_typebkg", &el_typebkg, &b_el_typebkg);
   fChain->SetBranchAddress("el_originbkg", &el_originbkg, &b_el_originbkg);
   fChain->SetBranchAddress("el_mediumWithoutTrack", &el_mediumWithoutTrack, &b_el_mediumWithoutTrack);
   fChain->SetBranchAddress("el_mediumIsoWithoutTrack", &el_mediumIsoWithoutTrack, &b_el_mediumIsoWithoutTrack);
   fChain->SetBranchAddress("el_tightWithoutTrack", &el_tightWithoutTrack, &b_el_tightWithoutTrack);
   fChain->SetBranchAddress("el_tightIsoWithoutTrack", &el_tightIsoWithoutTrack, &b_el_tightIsoWithoutTrack);
   fChain->SetBranchAddress("el_loose", &el_loose, &b_el_loose);
   fChain->SetBranchAddress("el_looseIso", &el_looseIso, &b_el_looseIso);
   fChain->SetBranchAddress("el_medium", &el_medium, &b_el_medium);
   fChain->SetBranchAddress("el_mediumIso", &el_mediumIso, &b_el_mediumIso);
   fChain->SetBranchAddress("el_tight", &el_tight, &b_el_tight);
   fChain->SetBranchAddress("el_tightIso", &el_tightIso, &b_el_tightIso);
   fChain->SetBranchAddress("el_loosePP", &el_loosePP, &b_el_loosePP);
   fChain->SetBranchAddress("el_loosePPIso", &el_loosePPIso, &b_el_loosePPIso);
   fChain->SetBranchAddress("el_mediumPP", &el_mediumPP, &b_el_mediumPP);
   fChain->SetBranchAddress("el_mediumPPIso", &el_mediumPPIso, &b_el_mediumPPIso);
   fChain->SetBranchAddress("el_tightPP", &el_tightPP, &b_el_tightPP);
   fChain->SetBranchAddress("el_tightPPIso", &el_tightPPIso, &b_el_tightPPIso);
   fChain->SetBranchAddress("el_goodOQ", &el_goodOQ, &b_el_goodOQ);
   fChain->SetBranchAddress("el_Ethad", &el_Ethad, &b_el_Ethad);
   fChain->SetBranchAddress("el_Ethad1", &el_Ethad1, &b_el_Ethad1);
   fChain->SetBranchAddress("el_f1", &el_f1, &b_el_f1);
   fChain->SetBranchAddress("el_f1core", &el_f1core, &b_el_f1core);
   fChain->SetBranchAddress("el_Emins1", &el_Emins1, &b_el_Emins1);
   fChain->SetBranchAddress("el_fside", &el_fside, &b_el_fside);
   fChain->SetBranchAddress("el_Emax2", &el_Emax2, &b_el_Emax2);
   fChain->SetBranchAddress("el_ws3", &el_ws3, &b_el_ws3);
   fChain->SetBranchAddress("el_wstot", &el_wstot, &b_el_wstot);
   fChain->SetBranchAddress("el_emaxs1", &el_emaxs1, &b_el_emaxs1);
   fChain->SetBranchAddress("el_deltaEs", &el_deltaEs, &b_el_deltaEs);
   fChain->SetBranchAddress("el_E233", &el_E233, &b_el_E233);
   fChain->SetBranchAddress("el_E237", &el_E237, &b_el_E237);
   fChain->SetBranchAddress("el_E277", &el_E277, &b_el_E277);
   fChain->SetBranchAddress("el_weta2", &el_weta2, &b_el_weta2);
   fChain->SetBranchAddress("el_f3", &el_f3, &b_el_f3);
   fChain->SetBranchAddress("el_f3core", &el_f3core, &b_el_f3core);
   fChain->SetBranchAddress("el_rphiallcalo", &el_rphiallcalo, &b_el_rphiallcalo);
   fChain->SetBranchAddress("el_Etcone45", &el_Etcone45, &b_el_Etcone45);
   fChain->SetBranchAddress("el_Etcone15", &el_Etcone15, &b_el_Etcone15);
   fChain->SetBranchAddress("el_Etcone20", &el_Etcone20, &b_el_Etcone20);
   fChain->SetBranchAddress("el_Etcone25", &el_Etcone25, &b_el_Etcone25);
   fChain->SetBranchAddress("el_Etcone30", &el_Etcone30, &b_el_Etcone30);
   fChain->SetBranchAddress("el_Etcone35", &el_Etcone35, &b_el_Etcone35);
   fChain->SetBranchAddress("el_Etcone40", &el_Etcone40, &b_el_Etcone40);
   fChain->SetBranchAddress("el_ptcone20", &el_ptcone20, &b_el_ptcone20);
   fChain->SetBranchAddress("el_ptcone30", &el_ptcone30, &b_el_ptcone30);
   fChain->SetBranchAddress("el_ptcone40", &el_ptcone40, &b_el_ptcone40);
   fChain->SetBranchAddress("el_nucone20", &el_nucone20, &b_el_nucone20);
   fChain->SetBranchAddress("el_nucone30", &el_nucone30, &b_el_nucone30);
   fChain->SetBranchAddress("el_nucone40", &el_nucone40, &b_el_nucone40);
   fChain->SetBranchAddress("el_Etcone15_pt_corrected", &el_Etcone15_pt_corrected, &b_el_Etcone15_pt_corrected);
   fChain->SetBranchAddress("el_Etcone20_pt_corrected", &el_Etcone20_pt_corrected, &b_el_Etcone20_pt_corrected);
   fChain->SetBranchAddress("el_Etcone25_pt_corrected", &el_Etcone25_pt_corrected, &b_el_Etcone25_pt_corrected);
   fChain->SetBranchAddress("el_Etcone30_pt_corrected", &el_Etcone30_pt_corrected, &b_el_Etcone30_pt_corrected);
   fChain->SetBranchAddress("el_Etcone35_pt_corrected", &el_Etcone35_pt_corrected, &b_el_Etcone35_pt_corrected);
   fChain->SetBranchAddress("el_Etcone40_pt_corrected", &el_Etcone40_pt_corrected, &b_el_Etcone40_pt_corrected);
   fChain->SetBranchAddress("el_convanglematch", &el_convanglematch, &b_el_convanglematch);
   fChain->SetBranchAddress("el_convtrackmatch", &el_convtrackmatch, &b_el_convtrackmatch);
   fChain->SetBranchAddress("el_pos7", &el_pos7, &b_el_pos7);
   fChain->SetBranchAddress("el_etacorrmag", &el_etacorrmag, &b_el_etacorrmag);
   fChain->SetBranchAddress("el_deltaeta1", &el_deltaeta1, &b_el_deltaeta1);
   fChain->SetBranchAddress("el_deltaeta2", &el_deltaeta2, &b_el_deltaeta2);
   fChain->SetBranchAddress("el_deltaphi2", &el_deltaphi2, &b_el_deltaphi2);
   fChain->SetBranchAddress("el_deltaphiRescaled", &el_deltaphiRescaled, &b_el_deltaphiRescaled);
   fChain->SetBranchAddress("el_deltaPhiFromLast", &el_deltaPhiFromLast, &b_el_deltaPhiFromLast);
   fChain->SetBranchAddress("el_deltaPhiRot", &el_deltaPhiRot, &b_el_deltaPhiRot);
   fChain->SetBranchAddress("el_expectHitInBLayer", &el_expectHitInBLayer, &b_el_expectHitInBLayer);
   fChain->SetBranchAddress("el_trackd0_physics", &el_trackd0_physics, &b_el_trackd0_physics);
   fChain->SetBranchAddress("el_etaSampling1", &el_etaSampling1, &b_el_etaSampling1);
   fChain->SetBranchAddress("el_reta", &el_reta, &b_el_reta);
   fChain->SetBranchAddress("el_rphi", &el_rphi, &b_el_rphi);
   fChain->SetBranchAddress("el_topoEtcone20", &el_topoEtcone20, &b_el_topoEtcone20);
   fChain->SetBranchAddress("el_topoEtcone30", &el_topoEtcone30, &b_el_topoEtcone30);
   fChain->SetBranchAddress("el_topoEtcone40", &el_topoEtcone40, &b_el_topoEtcone40);
   fChain->SetBranchAddress("el_materialTraversed", &el_materialTraversed, &b_el_materialTraversed);
   fChain->SetBranchAddress("el_EtringnoisedR03sig2", &el_EtringnoisedR03sig2, &b_el_EtringnoisedR03sig2);
   fChain->SetBranchAddress("el_EtringnoisedR03sig3", &el_EtringnoisedR03sig3, &b_el_EtringnoisedR03sig3);
   fChain->SetBranchAddress("el_EtringnoisedR03sig4", &el_EtringnoisedR03sig4, &b_el_EtringnoisedR03sig4);
   fChain->SetBranchAddress("el_ptcone20_zpv05", &el_ptcone20_zpv05, &b_el_ptcone20_zpv05);
   fChain->SetBranchAddress("el_ptcone30_zpv05", &el_ptcone30_zpv05, &b_el_ptcone30_zpv05);
   fChain->SetBranchAddress("el_ptcone40_zpv05", &el_ptcone40_zpv05, &b_el_ptcone40_zpv05);
   fChain->SetBranchAddress("el_nucone20_zpv05", &el_nucone20_zpv05, &b_el_nucone20_zpv05);
   fChain->SetBranchAddress("el_nucone30_zpv05", &el_nucone30_zpv05, &b_el_nucone30_zpv05);
   fChain->SetBranchAddress("el_nucone40_zpv05", &el_nucone40_zpv05, &b_el_nucone40_zpv05);
   fChain->SetBranchAddress("el_isolationlikelihoodjets", &el_isolationlikelihoodjets, &b_el_isolationlikelihoodjets);
   fChain->SetBranchAddress("el_isolationlikelihoodhqelectrons", &el_isolationlikelihoodhqelectrons, &b_el_isolationlikelihoodhqelectrons);
   fChain->SetBranchAddress("el_electronweight", &el_electronweight, &b_el_electronweight);
   fChain->SetBranchAddress("el_electronbgweight", &el_electronbgweight, &b_el_electronbgweight);
   fChain->SetBranchAddress("el_softeweight", &el_softeweight, &b_el_softeweight);
   fChain->SetBranchAddress("el_softebgweight", &el_softebgweight, &b_el_softebgweight);
   fChain->SetBranchAddress("el_neuralnet", &el_neuralnet, &b_el_neuralnet);
   fChain->SetBranchAddress("el_Hmatrix", &el_Hmatrix, &b_el_Hmatrix);
   fChain->SetBranchAddress("el_Hmatrix5", &el_Hmatrix5, &b_el_Hmatrix5);
   fChain->SetBranchAddress("el_adaboost", &el_adaboost, &b_el_adaboost);
   fChain->SetBranchAddress("el_softeneuralnet", &el_softeneuralnet, &b_el_softeneuralnet);
   fChain->SetBranchAddress("el_ringernn", &el_ringernn, &b_el_ringernn);
   fChain->SetBranchAddress("el_zvertex", &el_zvertex, &b_el_zvertex);
   fChain->SetBranchAddress("el_errz", &el_errz, &b_el_errz);
   fChain->SetBranchAddress("el_etap", &el_etap, &b_el_etap);
   fChain->SetBranchAddress("el_depth", &el_depth, &b_el_depth);
   fChain->SetBranchAddress("el_refittedTrack_n", &el_refittedTrack_n, &b_el_refittedTrack_n);
   fChain->SetBranchAddress("el_refittedTrack_author", &el_refittedTrack_author, &b_el_refittedTrack_author);
   fChain->SetBranchAddress("el_refittedTrack_chi2", &el_refittedTrack_chi2, &b_el_refittedTrack_chi2);
   fChain->SetBranchAddress("el_refittedTrack_hasBrem", &el_refittedTrack_hasBrem, &b_el_refittedTrack_hasBrem);
   fChain->SetBranchAddress("el_refittedTrack_bremRadius", &el_refittedTrack_bremRadius, &b_el_refittedTrack_bremRadius);
   fChain->SetBranchAddress("el_refittedTrack_bremZ", &el_refittedTrack_bremZ, &b_el_refittedTrack_bremZ);
   fChain->SetBranchAddress("el_refittedTrack_bremRadiusErr", &el_refittedTrack_bremRadiusErr, &b_el_refittedTrack_bremRadiusErr);
   fChain->SetBranchAddress("el_refittedTrack_bremZErr", &el_refittedTrack_bremZErr, &b_el_refittedTrack_bremZErr);
   fChain->SetBranchAddress("el_refittedTrack_bremFitStatus", &el_refittedTrack_bremFitStatus, &b_el_refittedTrack_bremFitStatus);
   fChain->SetBranchAddress("el_refittedTrack_qoverp", &el_refittedTrack_qoverp, &b_el_refittedTrack_qoverp);
   fChain->SetBranchAddress("el_refittedTrack_d0", &el_refittedTrack_d0, &b_el_refittedTrack_d0);
   fChain->SetBranchAddress("el_refittedTrack_z0", &el_refittedTrack_z0, &b_el_refittedTrack_z0);
   fChain->SetBranchAddress("el_refittedTrack_theta", &el_refittedTrack_theta, &b_el_refittedTrack_theta);
   fChain->SetBranchAddress("el_refittedTrack_phi", &el_refittedTrack_phi, &b_el_refittedTrack_phi);
   fChain->SetBranchAddress("el_refittedTrack_LMqoverp", &el_refittedTrack_LMqoverp, &b_el_refittedTrack_LMqoverp);
   fChain->SetBranchAddress("el_refittedTrack_covd0", &el_refittedTrack_covd0, &b_el_refittedTrack_covd0);
   fChain->SetBranchAddress("el_refittedTrack_covz0", &el_refittedTrack_covz0, &b_el_refittedTrack_covz0);
   fChain->SetBranchAddress("el_refittedTrack_covphi", &el_refittedTrack_covphi, &b_el_refittedTrack_covphi);
   fChain->SetBranchAddress("el_refittedTrack_covtheta", &el_refittedTrack_covtheta, &b_el_refittedTrack_covtheta);
   fChain->SetBranchAddress("el_refittedTrack_covqoverp", &el_refittedTrack_covqoverp, &b_el_refittedTrack_covqoverp);
   fChain->SetBranchAddress("el_refittedTrack_covd0z0", &el_refittedTrack_covd0z0, &b_el_refittedTrack_covd0z0);
   fChain->SetBranchAddress("el_refittedTrack_covz0phi", &el_refittedTrack_covz0phi, &b_el_refittedTrack_covz0phi);
   fChain->SetBranchAddress("el_refittedTrack_covz0theta", &el_refittedTrack_covz0theta, &b_el_refittedTrack_covz0theta);
   fChain->SetBranchAddress("el_refittedTrack_covz0qoverp", &el_refittedTrack_covz0qoverp, &b_el_refittedTrack_covz0qoverp);
   fChain->SetBranchAddress("el_refittedTrack_covd0phi", &el_refittedTrack_covd0phi, &b_el_refittedTrack_covd0phi);
   fChain->SetBranchAddress("el_refittedTrack_covd0theta", &el_refittedTrack_covd0theta, &b_el_refittedTrack_covd0theta);
   fChain->SetBranchAddress("el_refittedTrack_covd0qoverp", &el_refittedTrack_covd0qoverp, &b_el_refittedTrack_covd0qoverp);
   fChain->SetBranchAddress("el_refittedTrack_covphitheta", &el_refittedTrack_covphitheta, &b_el_refittedTrack_covphitheta);
   fChain->SetBranchAddress("el_refittedTrack_covphiqoverp", &el_refittedTrack_covphiqoverp, &b_el_refittedTrack_covphiqoverp);
   fChain->SetBranchAddress("el_refittedTrack_covthetaqoverp", &el_refittedTrack_covthetaqoverp, &b_el_refittedTrack_covthetaqoverp);
   fChain->SetBranchAddress("el_refittedTrack_d0_wrtBL", &el_refittedTrack_d0_wrtBL, &b_el_refittedTrack_d0_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_z0_wrtBL", &el_refittedTrack_z0_wrtBL, &b_el_refittedTrack_z0_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_phi_wrtBL", &el_refittedTrack_phi_wrtBL, &b_el_refittedTrack_phi_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_theta_wrtBL", &el_refittedTrack_theta_wrtBL, &b_el_refittedTrack_theta_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_qoverp_wrtBL", &el_refittedTrack_qoverp_wrtBL, &b_el_refittedTrack_qoverp_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_d0_err_wrtBL", &el_refittedTrack_d0_err_wrtBL, &b_el_refittedTrack_d0_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_z0_err_wrtBL", &el_refittedTrack_z0_err_wrtBL, &b_el_refittedTrack_z0_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_phi_err_wrtBL", &el_refittedTrack_phi_err_wrtBL, &b_el_refittedTrack_phi_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_theta_err_wrtBL", &el_refittedTrack_theta_err_wrtBL, &b_el_refittedTrack_theta_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_qoverp_err_wrtBL", &el_refittedTrack_qoverp_err_wrtBL, &b_el_refittedTrack_qoverp_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_d0_z0_err_wrtBL", &el_refittedTrack_d0_z0_err_wrtBL, &b_el_refittedTrack_d0_z0_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_d0_phi_err_wrtBL", &el_refittedTrack_d0_phi_err_wrtBL, &b_el_refittedTrack_d0_phi_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_d0_theta_err_wrtBL", &el_refittedTrack_d0_theta_err_wrtBL, &b_el_refittedTrack_d0_theta_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_d0_qoverp_err_wrtBL", &el_refittedTrack_d0_qoverp_err_wrtBL, &b_el_refittedTrack_d0_qoverp_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_z0_phi_err_wrtBL", &el_refittedTrack_z0_phi_err_wrtBL, &b_el_refittedTrack_z0_phi_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_z0_theta_err_wrtBL", &el_refittedTrack_z0_theta_err_wrtBL, &b_el_refittedTrack_z0_theta_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_z0_qoverp_err_wrtBL", &el_refittedTrack_z0_qoverp_err_wrtBL, &b_el_refittedTrack_z0_qoverp_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_phi_theta_err_wrtBL", &el_refittedTrack_phi_theta_err_wrtBL, &b_el_refittedTrack_phi_theta_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_phi_qoverp_err_wrtBL", &el_refittedTrack_phi_qoverp_err_wrtBL, &b_el_refittedTrack_phi_qoverp_err_wrtBL);
   fChain->SetBranchAddress("el_refittedTrack_theta_qoverp_err_wrtBL", &el_refittedTrack_theta_qoverp_err_wrtBL, &b_el_refittedTrack_theta_qoverp_err_wrtBL);
   fChain->SetBranchAddress("el_Es0", &el_Es0, &b_el_Es0);
   fChain->SetBranchAddress("el_etas0", &el_etas0, &b_el_etas0);
   fChain->SetBranchAddress("el_phis0", &el_phis0, &b_el_phis0);
   fChain->SetBranchAddress("el_Es1", &el_Es1, &b_el_Es1);
   fChain->SetBranchAddress("el_etas1", &el_etas1, &b_el_etas1);
   fChain->SetBranchAddress("el_phis1", &el_phis1, &b_el_phis1);
   fChain->SetBranchAddress("el_Es2", &el_Es2, &b_el_Es2);
   fChain->SetBranchAddress("el_etas2", &el_etas2, &b_el_etas2);
   fChain->SetBranchAddress("el_phis2", &el_phis2, &b_el_phis2);
   fChain->SetBranchAddress("el_Es3", &el_Es3, &b_el_Es3);
   fChain->SetBranchAddress("el_etas3", &el_etas3, &b_el_etas3);
   fChain->SetBranchAddress("el_phis3", &el_phis3, &b_el_phis3);
   fChain->SetBranchAddress("el_E_PreSamplerB", &el_E_PreSamplerB, &b_el_E_PreSamplerB);
   fChain->SetBranchAddress("el_E_EMB1", &el_E_EMB1, &b_el_E_EMB1);
   fChain->SetBranchAddress("el_E_EMB2", &el_E_EMB2, &b_el_E_EMB2);
   fChain->SetBranchAddress("el_E_EMB3", &el_E_EMB3, &b_el_E_EMB3);
   fChain->SetBranchAddress("el_E_PreSamplerE", &el_E_PreSamplerE, &b_el_E_PreSamplerE);
   fChain->SetBranchAddress("el_E_EME1", &el_E_EME1, &b_el_E_EME1);
   fChain->SetBranchAddress("el_E_EME2", &el_E_EME2, &b_el_E_EME2);
   fChain->SetBranchAddress("el_E_EME3", &el_E_EME3, &b_el_E_EME3);
   fChain->SetBranchAddress("el_E_HEC0", &el_E_HEC0, &b_el_E_HEC0);
   fChain->SetBranchAddress("el_E_HEC1", &el_E_HEC1, &b_el_E_HEC1);
   fChain->SetBranchAddress("el_E_HEC2", &el_E_HEC2, &b_el_E_HEC2);
   fChain->SetBranchAddress("el_E_HEC3", &el_E_HEC3, &b_el_E_HEC3);
   fChain->SetBranchAddress("el_E_TileBar0", &el_E_TileBar0, &b_el_E_TileBar0);
   fChain->SetBranchAddress("el_E_TileBar1", &el_E_TileBar1, &b_el_E_TileBar1);
   fChain->SetBranchAddress("el_E_TileBar2", &el_E_TileBar2, &b_el_E_TileBar2);
   fChain->SetBranchAddress("el_E_TileGap1", &el_E_TileGap1, &b_el_E_TileGap1);
   fChain->SetBranchAddress("el_E_TileGap2", &el_E_TileGap2, &b_el_E_TileGap2);
   fChain->SetBranchAddress("el_E_TileGap3", &el_E_TileGap3, &b_el_E_TileGap3);
   fChain->SetBranchAddress("el_E_TileExt0", &el_E_TileExt0, &b_el_E_TileExt0);
   fChain->SetBranchAddress("el_E_TileExt1", &el_E_TileExt1, &b_el_E_TileExt1);
   fChain->SetBranchAddress("el_E_TileExt2", &el_E_TileExt2, &b_el_E_TileExt2);
   fChain->SetBranchAddress("el_E_FCAL0", &el_E_FCAL0, &b_el_E_FCAL0);
   fChain->SetBranchAddress("el_E_FCAL1", &el_E_FCAL1, &b_el_E_FCAL1);
   fChain->SetBranchAddress("el_E_FCAL2", &el_E_FCAL2, &b_el_E_FCAL2);
   fChain->SetBranchAddress("el_cl_E", &el_cl_E, &b_el_cl_E);
   fChain->SetBranchAddress("el_cl_pt", &el_cl_pt, &b_el_cl_pt);
   fChain->SetBranchAddress("el_cl_eta", &el_cl_eta, &b_el_cl_eta);
   fChain->SetBranchAddress("el_cl_phi", &el_cl_phi, &b_el_cl_phi);
   fChain->SetBranchAddress("el_cl_etaCalo", &el_cl_etaCalo, &b_el_cl_etaCalo);
   fChain->SetBranchAddress("el_cl_phiCalo", &el_cl_phiCalo, &b_el_cl_phiCalo);
   fChain->SetBranchAddress("el_firstEdens", &el_firstEdens, &b_el_firstEdens);
   fChain->SetBranchAddress("el_cellmaxfrac", &el_cellmaxfrac, &b_el_cellmaxfrac);
   fChain->SetBranchAddress("el_longitudinal", &el_longitudinal, &b_el_longitudinal);
   fChain->SetBranchAddress("el_secondlambda", &el_secondlambda, &b_el_secondlambda);
   fChain->SetBranchAddress("el_lateral", &el_lateral, &b_el_lateral);
   fChain->SetBranchAddress("el_secondR", &el_secondR, &b_el_secondR);
   fChain->SetBranchAddress("el_centerlambda", &el_centerlambda, &b_el_centerlambda);
   fChain->SetBranchAddress("el_rawcl_Es0", &el_rawcl_Es0, &b_el_rawcl_Es0);
   fChain->SetBranchAddress("el_rawcl_etas0", &el_rawcl_etas0, &b_el_rawcl_etas0);
   fChain->SetBranchAddress("el_rawcl_phis0", &el_rawcl_phis0, &b_el_rawcl_phis0);
   fChain->SetBranchAddress("el_rawcl_Es1", &el_rawcl_Es1, &b_el_rawcl_Es1);
   fChain->SetBranchAddress("el_rawcl_etas1", &el_rawcl_etas1, &b_el_rawcl_etas1);
   fChain->SetBranchAddress("el_rawcl_phis1", &el_rawcl_phis1, &b_el_rawcl_phis1);
   fChain->SetBranchAddress("el_rawcl_Es2", &el_rawcl_Es2, &b_el_rawcl_Es2);
   fChain->SetBranchAddress("el_rawcl_etas2", &el_rawcl_etas2, &b_el_rawcl_etas2);
   fChain->SetBranchAddress("el_rawcl_phis2", &el_rawcl_phis2, &b_el_rawcl_phis2);
   fChain->SetBranchAddress("el_rawcl_Es3", &el_rawcl_Es3, &b_el_rawcl_Es3);
   fChain->SetBranchAddress("el_rawcl_etas3", &el_rawcl_etas3, &b_el_rawcl_etas3);
   fChain->SetBranchAddress("el_rawcl_phis3", &el_rawcl_phis3, &b_el_rawcl_phis3);
   fChain->SetBranchAddress("el_rawcl_E", &el_rawcl_E, &b_el_rawcl_E);
   fChain->SetBranchAddress("el_rawcl_pt", &el_rawcl_pt, &b_el_rawcl_pt);
   fChain->SetBranchAddress("el_rawcl_eta", &el_rawcl_eta, &b_el_rawcl_eta);
   fChain->SetBranchAddress("el_rawcl_phi", &el_rawcl_phi, &b_el_rawcl_phi);
   fChain->SetBranchAddress("el_trackd0", &el_trackd0, &b_el_trackd0);
   fChain->SetBranchAddress("el_trackz0", &el_trackz0, &b_el_trackz0);
   fChain->SetBranchAddress("el_trackphi", &el_trackphi, &b_el_trackphi);
   fChain->SetBranchAddress("el_tracktheta", &el_tracktheta, &b_el_tracktheta);
   fChain->SetBranchAddress("el_trackqoverp", &el_trackqoverp, &b_el_trackqoverp);
   fChain->SetBranchAddress("el_trackpt", &el_trackpt, &b_el_trackpt);
   fChain->SetBranchAddress("el_tracketa", &el_tracketa, &b_el_tracketa);
   fChain->SetBranchAddress("el_trackcov_d0", &el_trackcov_d0, &b_el_trackcov_d0);
   fChain->SetBranchAddress("el_trackcov_z0", &el_trackcov_z0, &b_el_trackcov_z0);
   fChain->SetBranchAddress("el_trackcov_phi", &el_trackcov_phi, &b_el_trackcov_phi);
   fChain->SetBranchAddress("el_trackcov_theta", &el_trackcov_theta, &b_el_trackcov_theta);
   fChain->SetBranchAddress("el_trackcov_qoverp", &el_trackcov_qoverp, &b_el_trackcov_qoverp);
   fChain->SetBranchAddress("el_trackcov_d0_z0", &el_trackcov_d0_z0, &b_el_trackcov_d0_z0);
   fChain->SetBranchAddress("el_trackcov_d0_phi", &el_trackcov_d0_phi, &b_el_trackcov_d0_phi);
   fChain->SetBranchAddress("el_trackcov_d0_theta", &el_trackcov_d0_theta, &b_el_trackcov_d0_theta);
   fChain->SetBranchAddress("el_trackcov_d0_qoverp", &el_trackcov_d0_qoverp, &b_el_trackcov_d0_qoverp);
   fChain->SetBranchAddress("el_trackcov_z0_phi", &el_trackcov_z0_phi, &b_el_trackcov_z0_phi);
   fChain->SetBranchAddress("el_trackcov_z0_theta", &el_trackcov_z0_theta, &b_el_trackcov_z0_theta);
   fChain->SetBranchAddress("el_trackcov_z0_qoverp", &el_trackcov_z0_qoverp, &b_el_trackcov_z0_qoverp);
   fChain->SetBranchAddress("el_trackcov_phi_theta", &el_trackcov_phi_theta, &b_el_trackcov_phi_theta);
   fChain->SetBranchAddress("el_trackcov_phi_qoverp", &el_trackcov_phi_qoverp, &b_el_trackcov_phi_qoverp);
   fChain->SetBranchAddress("el_trackcov_theta_qoverp", &el_trackcov_theta_qoverp, &b_el_trackcov_theta_qoverp);
   fChain->SetBranchAddress("el_trackfitchi2", &el_trackfitchi2, &b_el_trackfitchi2);
   fChain->SetBranchAddress("el_trackfitndof", &el_trackfitndof, &b_el_trackfitndof);
   fChain->SetBranchAddress("el_nBLHits", &el_nBLHits, &b_el_nBLHits);
   fChain->SetBranchAddress("el_nPixHits", &el_nPixHits, &b_el_nPixHits);
   fChain->SetBranchAddress("el_nSCTHits", &el_nSCTHits, &b_el_nSCTHits);
   fChain->SetBranchAddress("el_nTRTHits", &el_nTRTHits, &b_el_nTRTHits);
   fChain->SetBranchAddress("el_nTRTHighTHits", &el_nTRTHighTHits, &b_el_nTRTHighTHits);
   fChain->SetBranchAddress("el_nTRTXenonHits", &el_nTRTXenonHits, &b_el_nTRTXenonHits);
   fChain->SetBranchAddress("el_nPixHoles", &el_nPixHoles, &b_el_nPixHoles);
   fChain->SetBranchAddress("el_nSCTHoles", &el_nSCTHoles, &b_el_nSCTHoles);
   fChain->SetBranchAddress("el_nTRTHoles", &el_nTRTHoles, &b_el_nTRTHoles);
   fChain->SetBranchAddress("el_nPixelDeadSensors", &el_nPixelDeadSensors, &b_el_nPixelDeadSensors);
   fChain->SetBranchAddress("el_nSCTDeadSensors", &el_nSCTDeadSensors, &b_el_nSCTDeadSensors);
   fChain->SetBranchAddress("el_nBLSharedHits", &el_nBLSharedHits, &b_el_nBLSharedHits);
   fChain->SetBranchAddress("el_nPixSharedHits", &el_nPixSharedHits, &b_el_nPixSharedHits);
   fChain->SetBranchAddress("el_nSCTSharedHits", &el_nSCTSharedHits, &b_el_nSCTSharedHits);
   fChain->SetBranchAddress("el_nBLayerSplitHits", &el_nBLayerSplitHits, &b_el_nBLayerSplitHits);
   fChain->SetBranchAddress("el_nPixSplitHits", &el_nPixSplitHits, &b_el_nPixSplitHits);
   fChain->SetBranchAddress("el_nBLayerOutliers", &el_nBLayerOutliers, &b_el_nBLayerOutliers);
   fChain->SetBranchAddress("el_nPixelOutliers", &el_nPixelOutliers, &b_el_nPixelOutliers);
   fChain->SetBranchAddress("el_nSCTOutliers", &el_nSCTOutliers, &b_el_nSCTOutliers);
   fChain->SetBranchAddress("el_nTRTOutliers", &el_nTRTOutliers, &b_el_nTRTOutliers);
   fChain->SetBranchAddress("el_nTRTHighTOutliers", &el_nTRTHighTOutliers, &b_el_nTRTHighTOutliers);
   fChain->SetBranchAddress("el_nContribPixelLayers", &el_nContribPixelLayers, &b_el_nContribPixelLayers);
   fChain->SetBranchAddress("el_nGangedPixels", &el_nGangedPixels, &b_el_nGangedPixels);
   fChain->SetBranchAddress("el_nGangedFlaggedFakes", &el_nGangedFlaggedFakes, &b_el_nGangedFlaggedFakes);
   fChain->SetBranchAddress("el_nPixelSpoiltHits", &el_nPixelSpoiltHits, &b_el_nPixelSpoiltHits);
   fChain->SetBranchAddress("el_nSCTDoubleHoles", &el_nSCTDoubleHoles, &b_el_nSCTDoubleHoles);
   fChain->SetBranchAddress("el_nSCTSpoiltHits", &el_nSCTSpoiltHits, &b_el_nSCTSpoiltHits);
   fChain->SetBranchAddress("el_expectBLayerHit", &el_expectBLayerHit, &b_el_expectBLayerHit);
   fChain->SetBranchAddress("el_nSiHits", &el_nSiHits, &b_el_nSiHits);
   fChain->SetBranchAddress("el_TRTHighTHitsRatio", &el_TRTHighTHitsRatio, &b_el_TRTHighTHitsRatio);
   fChain->SetBranchAddress("el_TRTHighTOutliersRatio", &el_TRTHighTOutliersRatio, &b_el_TRTHighTOutliersRatio);
   fChain->SetBranchAddress("el_pixeldEdx", &el_pixeldEdx, &b_el_pixeldEdx);
   fChain->SetBranchAddress("el_nGoodHitsPixeldEdx", &el_nGoodHitsPixeldEdx, &b_el_nGoodHitsPixeldEdx);
   fChain->SetBranchAddress("el_massPixeldEdx", &el_massPixeldEdx, &b_el_massPixeldEdx);
   fChain->SetBranchAddress("el_likelihoodsPixeldEdx", &el_likelihoodsPixeldEdx, &b_el_likelihoodsPixeldEdx);
   fChain->SetBranchAddress("el_eProbabilityComb", &el_eProbabilityComb, &b_el_eProbabilityComb);
   fChain->SetBranchAddress("el_eProbabilityHT", &el_eProbabilityHT, &b_el_eProbabilityHT);
   fChain->SetBranchAddress("el_eProbabilityToT", &el_eProbabilityToT, &b_el_eProbabilityToT);
   fChain->SetBranchAddress("el_eProbabilityBrem", &el_eProbabilityBrem, &b_el_eProbabilityBrem);
   fChain->SetBranchAddress("el_vertweight", &el_vertweight, &b_el_vertweight);
   fChain->SetBranchAddress("el_vertx", &el_vertx, &b_el_vertx);
   fChain->SetBranchAddress("el_verty", &el_verty, &b_el_verty);
   fChain->SetBranchAddress("el_vertz", &el_vertz, &b_el_vertz);
   fChain->SetBranchAddress("el_trackd0beam", &el_trackd0beam, &b_el_trackd0beam);
   fChain->SetBranchAddress("el_trackz0beam", &el_trackz0beam, &b_el_trackz0beam);
   fChain->SetBranchAddress("el_tracksigd0beam", &el_tracksigd0beam, &b_el_tracksigd0beam);
   fChain->SetBranchAddress("el_tracksigz0beam", &el_tracksigz0beam, &b_el_tracksigz0beam);
   fChain->SetBranchAddress("el_trackd0pv", &el_trackd0pv, &b_el_trackd0pv);
   fChain->SetBranchAddress("el_trackz0pv", &el_trackz0pv, &b_el_trackz0pv);
   fChain->SetBranchAddress("el_tracksigd0pv", &el_tracksigd0pv, &b_el_tracksigd0pv);
   fChain->SetBranchAddress("el_tracksigz0pv", &el_tracksigz0pv, &b_el_tracksigz0pv);
   fChain->SetBranchAddress("el_trackIPEstimate_d0_biasedpvunbiased", &el_trackIPEstimate_d0_biasedpvunbiased, &b_el_trackIPEstimate_d0_biasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_z0_biasedpvunbiased", &el_trackIPEstimate_z0_biasedpvunbiased, &b_el_trackIPEstimate_z0_biasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_sigd0_biasedpvunbiased", &el_trackIPEstimate_sigd0_biasedpvunbiased, &b_el_trackIPEstimate_sigd0_biasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_sigz0_biasedpvunbiased", &el_trackIPEstimate_sigz0_biasedpvunbiased, &b_el_trackIPEstimate_sigz0_biasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_d0_unbiasedpvunbiased", &el_trackIPEstimate_d0_unbiasedpvunbiased, &b_el_trackIPEstimate_d0_unbiasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_z0_unbiasedpvunbiased", &el_trackIPEstimate_z0_unbiasedpvunbiased, &b_el_trackIPEstimate_z0_unbiasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_sigd0_unbiasedpvunbiased", &el_trackIPEstimate_sigd0_unbiasedpvunbiased, &b_el_trackIPEstimate_sigd0_unbiasedpvunbiased);
   fChain->SetBranchAddress("el_trackIPEstimate_sigz0_unbiasedpvunbiased", &el_trackIPEstimate_sigz0_unbiasedpvunbiased, &b_el_trackIPEstimate_sigz0_unbiasedpvunbiased);
   fChain->SetBranchAddress("el_trackd0pvunbiased", &el_trackd0pvunbiased, &b_el_trackd0pvunbiased);
   fChain->SetBranchAddress("el_trackz0pvunbiased", &el_trackz0pvunbiased, &b_el_trackz0pvunbiased);
   fChain->SetBranchAddress("el_tracksigd0pvunbiased", &el_tracksigd0pvunbiased, &b_el_tracksigd0pvunbiased);
   fChain->SetBranchAddress("el_tracksigz0pvunbiased", &el_tracksigz0pvunbiased, &b_el_tracksigz0pvunbiased);
   fChain->SetBranchAddress("el_Unrefittedtrack_d0", &el_Unrefittedtrack_d0, &b_el_Unrefittedtrack_d0);
   fChain->SetBranchAddress("el_Unrefittedtrack_z0", &el_Unrefittedtrack_z0, &b_el_Unrefittedtrack_z0);
   fChain->SetBranchAddress("el_Unrefittedtrack_phi", &el_Unrefittedtrack_phi, &b_el_Unrefittedtrack_phi);
   fChain->SetBranchAddress("el_Unrefittedtrack_theta", &el_Unrefittedtrack_theta, &b_el_Unrefittedtrack_theta);
   fChain->SetBranchAddress("el_Unrefittedtrack_qoverp", &el_Unrefittedtrack_qoverp, &b_el_Unrefittedtrack_qoverp);
   fChain->SetBranchAddress("el_Unrefittedtrack_pt", &el_Unrefittedtrack_pt, &b_el_Unrefittedtrack_pt);
   fChain->SetBranchAddress("el_Unrefittedtrack_eta", &el_Unrefittedtrack_eta, &b_el_Unrefittedtrack_eta);
   fChain->SetBranchAddress("el_theta_LM", &el_theta_LM, &b_el_theta_LM);
   fChain->SetBranchAddress("el_qoverp_LM", &el_qoverp_LM, &b_el_qoverp_LM);
   fChain->SetBranchAddress("el_locX_LM", &el_locX_LM, &b_el_locX_LM);
   fChain->SetBranchAddress("el_locY_LM", &el_locY_LM, &b_el_locY_LM);
   fChain->SetBranchAddress("el_phi_LM", &el_phi_LM, &b_el_phi_LM);
   fChain->SetBranchAddress("el_theta_err_LM", &el_theta_err_LM, &b_el_theta_err_LM);
   fChain->SetBranchAddress("el_qoverp_err_LM", &el_qoverp_err_LM, &b_el_qoverp_err_LM);
   fChain->SetBranchAddress("el_locX_err_LM", &el_locX_err_LM, &b_el_locX_err_LM);
   fChain->SetBranchAddress("el_locY_err_LM", &el_locY_err_LM, &b_el_locY_err_LM);
   fChain->SetBranchAddress("el_phi_err_LM", &el_phi_err_LM, &b_el_phi_err_LM);
   fChain->SetBranchAddress("el_locX_locY_err_LM", &el_locX_locY_err_LM, &b_el_locX_locY_err_LM);
   fChain->SetBranchAddress("el_locX_phi_err_LM", &el_locX_phi_err_LM, &b_el_locX_phi_err_LM);
   fChain->SetBranchAddress("el_locX_theta_err_LM", &el_locX_theta_err_LM, &b_el_locX_theta_err_LM);
   fChain->SetBranchAddress("el_locX_qoverp_err_LM", &el_locX_qoverp_err_LM, &b_el_locX_qoverp_err_LM);
   fChain->SetBranchAddress("el_locY_phi_err_LM", &el_locY_phi_err_LM, &b_el_locY_phi_err_LM);
   fChain->SetBranchAddress("el_locY_theta_err_LM", &el_locY_theta_err_LM, &b_el_locY_theta_err_LM);
   fChain->SetBranchAddress("el_locY_qoverp_err_LM", &el_locY_qoverp_err_LM, &b_el_locY_qoverp_err_LM);
   fChain->SetBranchAddress("el_phi_theta_err_LM", &el_phi_theta_err_LM, &b_el_phi_theta_err_LM);
   fChain->SetBranchAddress("el_phi_qoverp_err_LM", &el_phi_qoverp_err_LM, &b_el_phi_qoverp_err_LM);
   fChain->SetBranchAddress("el_theta_qoverp_err_LM", &el_theta_qoverp_err_LM, &b_el_theta_qoverp_err_LM);
   fChain->SetBranchAddress("el_hastrack", &el_hastrack, &b_el_hastrack);
   fChain->SetBranchAddress("el_deltaEmax2", &el_deltaEmax2, &b_el_deltaEmax2);
   fChain->SetBranchAddress("el_calibHitsShowerDepth", &el_calibHitsShowerDepth, &b_el_calibHitsShowerDepth);
   fChain->SetBranchAddress("el_isIso", &el_isIso, &b_el_isIso);
   fChain->SetBranchAddress("el_mvaptcone20", &el_mvaptcone20, &b_el_mvaptcone20);
   fChain->SetBranchAddress("el_mvaptcone30", &el_mvaptcone30, &b_el_mvaptcone30);
   fChain->SetBranchAddress("el_mvaptcone40", &el_mvaptcone40, &b_el_mvaptcone40);
   fChain->SetBranchAddress("el_CaloPointing_eta", &el_CaloPointing_eta, &b_el_CaloPointing_eta);
   fChain->SetBranchAddress("el_CaloPointing_sigma_eta", &el_CaloPointing_sigma_eta, &b_el_CaloPointing_sigma_eta);
   fChain->SetBranchAddress("el_CaloPointing_zvertex", &el_CaloPointing_zvertex, &b_el_CaloPointing_zvertex);
   fChain->SetBranchAddress("el_CaloPointing_sigma_zvertex", &el_CaloPointing_sigma_zvertex, &b_el_CaloPointing_sigma_zvertex);
   fChain->SetBranchAddress("el_HPV_eta", &el_HPV_eta, &b_el_HPV_eta);
   fChain->SetBranchAddress("el_HPV_sigma_eta", &el_HPV_sigma_eta, &b_el_HPV_sigma_eta);
   fChain->SetBranchAddress("el_HPV_zvertex", &el_HPV_zvertex, &b_el_HPV_zvertex);
   fChain->SetBranchAddress("el_HPV_sigma_zvertex", &el_HPV_sigma_zvertex, &b_el_HPV_sigma_zvertex);
   fChain->SetBranchAddress("el_truth_bremSi", &el_truth_bremSi, &b_el_truth_bremSi);
   fChain->SetBranchAddress("el_truth_bremLoc", &el_truth_bremLoc, &b_el_truth_bremLoc);
   fChain->SetBranchAddress("el_truth_sumbrem", &el_truth_sumbrem, &b_el_truth_sumbrem);
   fChain->SetBranchAddress("el_topoEtcone60", &el_topoEtcone60, &b_el_topoEtcone60);
   fChain->SetBranchAddress("el_ES0_real", &el_ES0_real, &b_el_ES0_real);
   fChain->SetBranchAddress("el_ES1_real", &el_ES1_real, &b_el_ES1_real);
   fChain->SetBranchAddress("el_ES2_real", &el_ES2_real, &b_el_ES2_real);
   fChain->SetBranchAddress("el_ES3_real", &el_ES3_real, &b_el_ES3_real);
   fChain->SetBranchAddress("el_EcellS0", &el_EcellS0, &b_el_EcellS0);
   fChain->SetBranchAddress("el_etacellS0", &el_etacellS0, &b_el_etacellS0);
   fChain->SetBranchAddress("el_Etcone40_ED_corrected", &el_Etcone40_ED_corrected, &b_el_Etcone40_ED_corrected);
   fChain->SetBranchAddress("el_Etcone40_corrected", &el_Etcone40_corrected, &b_el_Etcone40_corrected);
   fChain->SetBranchAddress("el_topoEtcone20_corrected", &el_topoEtcone20_corrected, &b_el_topoEtcone20_corrected);
   fChain->SetBranchAddress("el_topoEtcone30_corrected", &el_topoEtcone30_corrected, &b_el_topoEtcone30_corrected);
   fChain->SetBranchAddress("el_topoEtcone40_corrected", &el_topoEtcone40_corrected, &b_el_topoEtcone40_corrected);
   fChain->SetBranchAddress("el_ED_median", &el_ED_median, &b_el_ED_median);
   fChain->SetBranchAddress("el_ED_sigma", &el_ED_sigma, &b_el_ED_sigma);
   fChain->SetBranchAddress("el_ED_Njets", &el_ED_Njets, &b_el_ED_Njets);
   fChain->SetBranchAddress("el_EF_dr", &el_EF_dr, &b_el_EF_dr);
   fChain->SetBranchAddress("el_EF_index", &el_EF_index, &b_el_EF_index);
   fChain->SetBranchAddress("el_L2_dr", &el_L2_dr, &b_el_L2_dr);
   fChain->SetBranchAddress("el_L1_dr", &el_L1_dr, &b_el_L1_dr);
   fChain->SetBranchAddress("el_L1_index", &el_L1_index, &b_el_L1_index);
   fChain->SetBranchAddress("ph_n", &ph_n, &b_ph_n);
   fChain->SetBranchAddress("ph_E", &ph_E, &b_ph_E);
   fChain->SetBranchAddress("ph_Et", &ph_Et, &b_ph_Et);
   fChain->SetBranchAddress("ph_pt", &ph_pt, &b_ph_pt);
   fChain->SetBranchAddress("ph_m", &ph_m, &b_ph_m);
   fChain->SetBranchAddress("ph_eta", &ph_eta, &b_ph_eta);
   fChain->SetBranchAddress("ph_phi", &ph_phi, &b_ph_phi);
   fChain->SetBranchAddress("ph_px", &ph_px, &b_ph_px);
   fChain->SetBranchAddress("ph_py", &ph_py, &b_ph_py);
   fChain->SetBranchAddress("ph_pz", &ph_pz, &b_ph_pz);
   fChain->SetBranchAddress("ph_author", &ph_author, &b_ph_author);
   fChain->SetBranchAddress("ph_isRecovered", &ph_isRecovered, &b_ph_isRecovered);
   fChain->SetBranchAddress("ph_isEM", &ph_isEM, &b_ph_isEM);
   fChain->SetBranchAddress("ph_isEMLoose", &ph_isEMLoose, &b_ph_isEMLoose);
   fChain->SetBranchAddress("ph_isEMMedium", &ph_isEMMedium, &b_ph_isEMMedium);
   fChain->SetBranchAddress("ph_isEMTight", &ph_isEMTight, &b_ph_isEMTight);
   fChain->SetBranchAddress("ph_OQ", &ph_OQ, &b_ph_OQ);
   fChain->SetBranchAddress("ph_convFlag", &ph_convFlag, &b_ph_convFlag);
   fChain->SetBranchAddress("ph_isConv", &ph_isConv, &b_ph_isConv);
   fChain->SetBranchAddress("ph_nConv", &ph_nConv, &b_ph_nConv);
   fChain->SetBranchAddress("ph_nSingleTrackConv", &ph_nSingleTrackConv, &b_ph_nSingleTrackConv);
   fChain->SetBranchAddress("ph_nDoubleTrackConv", &ph_nDoubleTrackConv, &b_ph_nDoubleTrackConv);
   fChain->SetBranchAddress("ph_type", &ph_type, &b_ph_type);
   fChain->SetBranchAddress("ph_origin", &ph_origin, &b_ph_origin);
   fChain->SetBranchAddress("ph_truth_deltaRRecPhoton", &ph_truth_deltaRRecPhoton, &b_ph_truth_deltaRRecPhoton);
   fChain->SetBranchAddress("ph_truth_E", &ph_truth_E, &b_ph_truth_E);
   fChain->SetBranchAddress("ph_truth_pt", &ph_truth_pt, &b_ph_truth_pt);
   fChain->SetBranchAddress("ph_truth_eta", &ph_truth_eta, &b_ph_truth_eta);
   fChain->SetBranchAddress("ph_truth_phi", &ph_truth_phi, &b_ph_truth_phi);
   fChain->SetBranchAddress("ph_truth_type", &ph_truth_type, &b_ph_truth_type);
   fChain->SetBranchAddress("ph_truth_status", &ph_truth_status, &b_ph_truth_status);
   fChain->SetBranchAddress("ph_truth_barcode", &ph_truth_barcode, &b_ph_truth_barcode);
   fChain->SetBranchAddress("ph_truth_mothertype", &ph_truth_mothertype, &b_ph_truth_mothertype);
   fChain->SetBranchAddress("ph_truth_motherbarcode", &ph_truth_motherbarcode, &b_ph_truth_motherbarcode);
   fChain->SetBranchAddress("ph_truth_matched", &ph_truth_matched, &b_ph_truth_matched);
   fChain->SetBranchAddress("ph_loose", &ph_loose, &b_ph_loose);
   fChain->SetBranchAddress("ph_looseIso", &ph_looseIso, &b_ph_looseIso);
   fChain->SetBranchAddress("ph_tight", &ph_tight, &b_ph_tight);
   fChain->SetBranchAddress("ph_tightIso", &ph_tightIso, &b_ph_tightIso);
   fChain->SetBranchAddress("ph_looseAR", &ph_looseAR, &b_ph_looseAR);
   fChain->SetBranchAddress("ph_looseARIso", &ph_looseARIso, &b_ph_looseARIso);
   fChain->SetBranchAddress("ph_tightAR", &ph_tightAR, &b_ph_tightAR);
   fChain->SetBranchAddress("ph_tightARIso", &ph_tightARIso, &b_ph_tightARIso);
   fChain->SetBranchAddress("ph_goodOQ", &ph_goodOQ, &b_ph_goodOQ);
   fChain->SetBranchAddress("ph_Ethad", &ph_Ethad, &b_ph_Ethad);
   fChain->SetBranchAddress("ph_Ethad1", &ph_Ethad1, &b_ph_Ethad1);
   fChain->SetBranchAddress("ph_E033", &ph_E033, &b_ph_E033);
   fChain->SetBranchAddress("ph_f1", &ph_f1, &b_ph_f1);
   fChain->SetBranchAddress("ph_f1core", &ph_f1core, &b_ph_f1core);
   fChain->SetBranchAddress("ph_Emins1", &ph_Emins1, &b_ph_Emins1);
   fChain->SetBranchAddress("ph_fside", &ph_fside, &b_ph_fside);
   fChain->SetBranchAddress("ph_Emax2", &ph_Emax2, &b_ph_Emax2);
   fChain->SetBranchAddress("ph_ws3", &ph_ws3, &b_ph_ws3);
   fChain->SetBranchAddress("ph_wstot", &ph_wstot, &b_ph_wstot);
   fChain->SetBranchAddress("ph_E132", &ph_E132, &b_ph_E132);
   fChain->SetBranchAddress("ph_E1152", &ph_E1152, &b_ph_E1152);
   fChain->SetBranchAddress("ph_emaxs1", &ph_emaxs1, &b_ph_emaxs1);
   fChain->SetBranchAddress("ph_deltaEs", &ph_deltaEs, &b_ph_deltaEs);
   fChain->SetBranchAddress("ph_E233", &ph_E233, &b_ph_E233);
   fChain->SetBranchAddress("ph_E237", &ph_E237, &b_ph_E237);
   fChain->SetBranchAddress("ph_E277", &ph_E277, &b_ph_E277);
   fChain->SetBranchAddress("ph_weta2", &ph_weta2, &b_ph_weta2);
   fChain->SetBranchAddress("ph_f3", &ph_f3, &b_ph_f3);
   fChain->SetBranchAddress("ph_f3core", &ph_f3core, &b_ph_f3core);
   fChain->SetBranchAddress("ph_rphiallcalo", &ph_rphiallcalo, &b_ph_rphiallcalo);
   fChain->SetBranchAddress("ph_Etcone45", &ph_Etcone45, &b_ph_Etcone45);
   fChain->SetBranchAddress("ph_Etcone15", &ph_Etcone15, &b_ph_Etcone15);
   fChain->SetBranchAddress("ph_Etcone20", &ph_Etcone20, &b_ph_Etcone20);
   fChain->SetBranchAddress("ph_Etcone25", &ph_Etcone25, &b_ph_Etcone25);
   fChain->SetBranchAddress("ph_Etcone30", &ph_Etcone30, &b_ph_Etcone30);
   fChain->SetBranchAddress("ph_Etcone35", &ph_Etcone35, &b_ph_Etcone35);
   fChain->SetBranchAddress("ph_Etcone40", &ph_Etcone40, &b_ph_Etcone40);
   fChain->SetBranchAddress("ph_ptcone20", &ph_ptcone20, &b_ph_ptcone20);
   fChain->SetBranchAddress("ph_ptcone30", &ph_ptcone30, &b_ph_ptcone30);
   fChain->SetBranchAddress("ph_ptcone40", &ph_ptcone40, &b_ph_ptcone40);
   fChain->SetBranchAddress("ph_nucone20", &ph_nucone20, &b_ph_nucone20);
   fChain->SetBranchAddress("ph_nucone30", &ph_nucone30, &b_ph_nucone30);
   fChain->SetBranchAddress("ph_nucone40", &ph_nucone40, &b_ph_nucone40);
   fChain->SetBranchAddress("ph_Etcone15_pt_corrected", &ph_Etcone15_pt_corrected, &b_ph_Etcone15_pt_corrected);
   fChain->SetBranchAddress("ph_Etcone20_pt_corrected", &ph_Etcone20_pt_corrected, &b_ph_Etcone20_pt_corrected);
   fChain->SetBranchAddress("ph_Etcone25_pt_corrected", &ph_Etcone25_pt_corrected, &b_ph_Etcone25_pt_corrected);
   fChain->SetBranchAddress("ph_Etcone30_pt_corrected", &ph_Etcone30_pt_corrected, &b_ph_Etcone30_pt_corrected);
   fChain->SetBranchAddress("ph_Etcone35_pt_corrected", &ph_Etcone35_pt_corrected, &b_ph_Etcone35_pt_corrected);
   fChain->SetBranchAddress("ph_Etcone40_pt_corrected", &ph_Etcone40_pt_corrected, &b_ph_Etcone40_pt_corrected);
   fChain->SetBranchAddress("ph_convanglematch", &ph_convanglematch, &b_ph_convanglematch);
   fChain->SetBranchAddress("ph_convtrackmatch", &ph_convtrackmatch, &b_ph_convtrackmatch);
   fChain->SetBranchAddress("ph_hasconv", &ph_hasconv, &b_ph_hasconv);
   fChain->SetBranchAddress("ph_convvtxx", &ph_convvtxx, &b_ph_convvtxx);
   fChain->SetBranchAddress("ph_convvtxy", &ph_convvtxy, &b_ph_convvtxy);
   fChain->SetBranchAddress("ph_convvtxz", &ph_convvtxz, &b_ph_convvtxz);
   fChain->SetBranchAddress("ph_Rconv", &ph_Rconv, &b_ph_Rconv);
   fChain->SetBranchAddress("ph_zconv", &ph_zconv, &b_ph_zconv);
   fChain->SetBranchAddress("ph_convvtxchi2", &ph_convvtxchi2, &b_ph_convvtxchi2);
   fChain->SetBranchAddress("ph_pt1conv", &ph_pt1conv, &b_ph_pt1conv);
   fChain->SetBranchAddress("ph_convtrk1nBLHits", &ph_convtrk1nBLHits, &b_ph_convtrk1nBLHits);
   fChain->SetBranchAddress("ph_convtrk1nPixHits", &ph_convtrk1nPixHits, &b_ph_convtrk1nPixHits);
   fChain->SetBranchAddress("ph_convtrk1nSCTHits", &ph_convtrk1nSCTHits, &b_ph_convtrk1nSCTHits);
   fChain->SetBranchAddress("ph_convtrk1nTRTHits", &ph_convtrk1nTRTHits, &b_ph_convtrk1nTRTHits);
   fChain->SetBranchAddress("ph_pt2conv", &ph_pt2conv, &b_ph_pt2conv);
   fChain->SetBranchAddress("ph_convtrk2nBLHits", &ph_convtrk2nBLHits, &b_ph_convtrk2nBLHits);
   fChain->SetBranchAddress("ph_convtrk2nPixHits", &ph_convtrk2nPixHits, &b_ph_convtrk2nPixHits);
   fChain->SetBranchAddress("ph_convtrk2nSCTHits", &ph_convtrk2nSCTHits, &b_ph_convtrk2nSCTHits);
   fChain->SetBranchAddress("ph_convtrk2nTRTHits", &ph_convtrk2nTRTHits, &b_ph_convtrk2nTRTHits);
   fChain->SetBranchAddress("ph_ptconv", &ph_ptconv, &b_ph_ptconv);
   fChain->SetBranchAddress("ph_pzconv", &ph_pzconv, &b_ph_pzconv);
   fChain->SetBranchAddress("ph_reta", &ph_reta, &b_ph_reta);
   fChain->SetBranchAddress("ph_rphi", &ph_rphi, &b_ph_rphi);
   fChain->SetBranchAddress("ph_topoEtcone20", &ph_topoEtcone20, &b_ph_topoEtcone20);
   fChain->SetBranchAddress("ph_topoEtcone30", &ph_topoEtcone30, &b_ph_topoEtcone30);
   fChain->SetBranchAddress("ph_topoEtcone40", &ph_topoEtcone40, &b_ph_topoEtcone40);
   fChain->SetBranchAddress("ph_materialTraversed", &ph_materialTraversed, &b_ph_materialTraversed);
   fChain->SetBranchAddress("ph_EtringnoisedR03sig2", &ph_EtringnoisedR03sig2, &b_ph_EtringnoisedR03sig2);
   fChain->SetBranchAddress("ph_EtringnoisedR03sig3", &ph_EtringnoisedR03sig3, &b_ph_EtringnoisedR03sig3);
   fChain->SetBranchAddress("ph_EtringnoisedR03sig4", &ph_EtringnoisedR03sig4, &b_ph_EtringnoisedR03sig4);
   fChain->SetBranchAddress("ph_ptcone20_zpv05", &ph_ptcone20_zpv05, &b_ph_ptcone20_zpv05);
   fChain->SetBranchAddress("ph_ptcone30_zpv05", &ph_ptcone30_zpv05, &b_ph_ptcone30_zpv05);
   fChain->SetBranchAddress("ph_ptcone40_zpv05", &ph_ptcone40_zpv05, &b_ph_ptcone40_zpv05);
   fChain->SetBranchAddress("ph_nucone20_zpv05", &ph_nucone20_zpv05, &b_ph_nucone20_zpv05);
   fChain->SetBranchAddress("ph_nucone30_zpv05", &ph_nucone30_zpv05, &b_ph_nucone30_zpv05);
   fChain->SetBranchAddress("ph_nucone40_zpv05", &ph_nucone40_zpv05, &b_ph_nucone40_zpv05);
   fChain->SetBranchAddress("ph_isolationlikelihoodjets", &ph_isolationlikelihoodjets, &b_ph_isolationlikelihoodjets);
   fChain->SetBranchAddress("ph_isolationlikelihoodhqelectrons", &ph_isolationlikelihoodhqelectrons, &b_ph_isolationlikelihoodhqelectrons);
   fChain->SetBranchAddress("ph_loglikelihood", &ph_loglikelihood, &b_ph_loglikelihood);
   fChain->SetBranchAddress("ph_photonweight", &ph_photonweight, &b_ph_photonweight);
   fChain->SetBranchAddress("ph_photonbgweight", &ph_photonbgweight, &b_ph_photonbgweight);
   fChain->SetBranchAddress("ph_neuralnet", &ph_neuralnet, &b_ph_neuralnet);
   fChain->SetBranchAddress("ph_Hmatrix", &ph_Hmatrix, &b_ph_Hmatrix);
   fChain->SetBranchAddress("ph_Hmatrix5", &ph_Hmatrix5, &b_ph_Hmatrix5);
   fChain->SetBranchAddress("ph_adaboost", &ph_adaboost, &b_ph_adaboost);
   fChain->SetBranchAddress("ph_ringernn", &ph_ringernn, &b_ph_ringernn);
   fChain->SetBranchAddress("ph_zvertex", &ph_zvertex, &b_ph_zvertex);
   fChain->SetBranchAddress("ph_errz", &ph_errz, &b_ph_errz);
   fChain->SetBranchAddress("ph_etap", &ph_etap, &b_ph_etap);
   fChain->SetBranchAddress("ph_depth", &ph_depth, &b_ph_depth);
   fChain->SetBranchAddress("ph_cl_E", &ph_cl_E, &b_ph_cl_E);
   fChain->SetBranchAddress("ph_cl_pt", &ph_cl_pt, &b_ph_cl_pt);
   fChain->SetBranchAddress("ph_cl_eta", &ph_cl_eta, &b_ph_cl_eta);
   fChain->SetBranchAddress("ph_cl_phi", &ph_cl_phi, &b_ph_cl_phi);
   fChain->SetBranchAddress("ph_cl_etaCalo", &ph_cl_etaCalo, &b_ph_cl_etaCalo);
   fChain->SetBranchAddress("ph_cl_phiCalo", &ph_cl_phiCalo, &b_ph_cl_phiCalo);
   fChain->SetBranchAddress("ph_Es0", &ph_Es0, &b_ph_Es0);
   fChain->SetBranchAddress("ph_etas0", &ph_etas0, &b_ph_etas0);
   fChain->SetBranchAddress("ph_phis0", &ph_phis0, &b_ph_phis0);
   fChain->SetBranchAddress("ph_Es1", &ph_Es1, &b_ph_Es1);
   fChain->SetBranchAddress("ph_etas1", &ph_etas1, &b_ph_etas1);
   fChain->SetBranchAddress("ph_phis1", &ph_phis1, &b_ph_phis1);
   fChain->SetBranchAddress("ph_Es2", &ph_Es2, &b_ph_Es2);
   fChain->SetBranchAddress("ph_etas2", &ph_etas2, &b_ph_etas2);
   fChain->SetBranchAddress("ph_phis2", &ph_phis2, &b_ph_phis2);
   fChain->SetBranchAddress("ph_Es3", &ph_Es3, &b_ph_Es3);
   fChain->SetBranchAddress("ph_etas3", &ph_etas3, &b_ph_etas3);
   fChain->SetBranchAddress("ph_phis3", &ph_phis3, &b_ph_phis3);
   fChain->SetBranchAddress("ph_rawcl_Es0", &ph_rawcl_Es0, &b_ph_rawcl_Es0);
   fChain->SetBranchAddress("ph_rawcl_etas0", &ph_rawcl_etas0, &b_ph_rawcl_etas0);
   fChain->SetBranchAddress("ph_rawcl_phis0", &ph_rawcl_phis0, &b_ph_rawcl_phis0);
   fChain->SetBranchAddress("ph_rawcl_Es1", &ph_rawcl_Es1, &b_ph_rawcl_Es1);
   fChain->SetBranchAddress("ph_rawcl_etas1", &ph_rawcl_etas1, &b_ph_rawcl_etas1);
   fChain->SetBranchAddress("ph_rawcl_phis1", &ph_rawcl_phis1, &b_ph_rawcl_phis1);
   fChain->SetBranchAddress("ph_rawcl_Es2", &ph_rawcl_Es2, &b_ph_rawcl_Es2);
   fChain->SetBranchAddress("ph_rawcl_etas2", &ph_rawcl_etas2, &b_ph_rawcl_etas2);
   fChain->SetBranchAddress("ph_rawcl_phis2", &ph_rawcl_phis2, &b_ph_rawcl_phis2);
   fChain->SetBranchAddress("ph_rawcl_Es3", &ph_rawcl_Es3, &b_ph_rawcl_Es3);
   fChain->SetBranchAddress("ph_rawcl_etas3", &ph_rawcl_etas3, &b_ph_rawcl_etas3);
   fChain->SetBranchAddress("ph_rawcl_phis3", &ph_rawcl_phis3, &b_ph_rawcl_phis3);
   fChain->SetBranchAddress("ph_rawcl_E", &ph_rawcl_E, &b_ph_rawcl_E);
   fChain->SetBranchAddress("ph_rawcl_pt", &ph_rawcl_pt, &b_ph_rawcl_pt);
   fChain->SetBranchAddress("ph_rawcl_eta", &ph_rawcl_eta, &b_ph_rawcl_eta);
   fChain->SetBranchAddress("ph_rawcl_phi", &ph_rawcl_phi, &b_ph_rawcl_phi);
   fChain->SetBranchAddress("ph_convMatchDeltaEta1", &ph_convMatchDeltaEta1, &b_ph_convMatchDeltaEta1);
   fChain->SetBranchAddress("ph_convMatchDeltaEta2", &ph_convMatchDeltaEta2, &b_ph_convMatchDeltaEta2);
   fChain->SetBranchAddress("ph_convMatchDeltaPhi1", &ph_convMatchDeltaPhi1, &b_ph_convMatchDeltaPhi1);
   fChain->SetBranchAddress("ph_convMatchDeltaPhi2", &ph_convMatchDeltaPhi2, &b_ph_convMatchDeltaPhi2);
   fChain->SetBranchAddress("ph_rings_E", &ph_rings_E, &b_ph_rings_E);
   fChain->SetBranchAddress("ph_vx_n", &ph_vx_n, &b_ph_vx_n);
   fChain->SetBranchAddress("ph_vx_x", &ph_vx_x, &b_ph_vx_x);
   fChain->SetBranchAddress("ph_vx_y", &ph_vx_y, &b_ph_vx_y);
   fChain->SetBranchAddress("ph_vx_z", &ph_vx_z, &b_ph_vx_z);
   fChain->SetBranchAddress("ph_vx_px", &ph_vx_px, &b_ph_vx_px);
   fChain->SetBranchAddress("ph_vx_py", &ph_vx_py, &b_ph_vx_py);
   fChain->SetBranchAddress("ph_vx_pz", &ph_vx_pz, &b_ph_vx_pz);
   fChain->SetBranchAddress("ph_vx_E", &ph_vx_E, &b_ph_vx_E);
   fChain->SetBranchAddress("ph_vx_m", &ph_vx_m, &b_ph_vx_m);
   fChain->SetBranchAddress("ph_vx_nTracks", &ph_vx_nTracks, &b_ph_vx_nTracks);
   fChain->SetBranchAddress("ph_vx_sumPt", &ph_vx_sumPt, &b_ph_vx_sumPt);
   fChain->SetBranchAddress("ph_vx_convTrk_weight", &ph_vx_convTrk_weight, &b_ph_vx_convTrk_weight);
   fChain->SetBranchAddress("ph_vx_convTrk_n", &ph_vx_convTrk_n, &b_ph_vx_convTrk_n);
   fChain->SetBranchAddress("ph_vx_convTrk_fitter", &ph_vx_convTrk_fitter, &b_ph_vx_convTrk_fitter);
   fChain->SetBranchAddress("ph_vx_convTrk_patternReco1", &ph_vx_convTrk_patternReco1, &b_ph_vx_convTrk_patternReco1);
   fChain->SetBranchAddress("ph_vx_convTrk_patternReco2", &ph_vx_convTrk_patternReco2, &b_ph_vx_convTrk_patternReco2);
   fChain->SetBranchAddress("ph_vx_convTrk_trackProperties", &ph_vx_convTrk_trackProperties, &b_ph_vx_convTrk_trackProperties);
   fChain->SetBranchAddress("ph_vx_convTrk_particleHypothesis", &ph_vx_convTrk_particleHypothesis, &b_ph_vx_convTrk_particleHypothesis);
   fChain->SetBranchAddress("ph_vx_convTrk_nBLHits", &ph_vx_convTrk_nBLHits, &b_ph_vx_convTrk_nBLHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixHits", &ph_vx_convTrk_nPixHits, &b_ph_vx_convTrk_nPixHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTHits", &ph_vx_convTrk_nSCTHits, &b_ph_vx_convTrk_nSCTHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTHits", &ph_vx_convTrk_nTRTHits, &b_ph_vx_convTrk_nTRTHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTHighTHits", &ph_vx_convTrk_nTRTHighTHits, &b_ph_vx_convTrk_nTRTHighTHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTXenonHits", &ph_vx_convTrk_nTRTXenonHits, &b_ph_vx_convTrk_nTRTXenonHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixHoles", &ph_vx_convTrk_nPixHoles, &b_ph_vx_convTrk_nPixHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTHoles", &ph_vx_convTrk_nSCTHoles, &b_ph_vx_convTrk_nSCTHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTHoles", &ph_vx_convTrk_nTRTHoles, &b_ph_vx_convTrk_nTRTHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixelDeadSensors", &ph_vx_convTrk_nPixelDeadSensors, &b_ph_vx_convTrk_nPixelDeadSensors);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTDeadSensors", &ph_vx_convTrk_nSCTDeadSensors, &b_ph_vx_convTrk_nSCTDeadSensors);
   fChain->SetBranchAddress("ph_vx_convTrk_nBLSharedHits", &ph_vx_convTrk_nBLSharedHits, &b_ph_vx_convTrk_nBLSharedHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixSharedHits", &ph_vx_convTrk_nPixSharedHits, &b_ph_vx_convTrk_nPixSharedHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTSharedHits", &ph_vx_convTrk_nSCTSharedHits, &b_ph_vx_convTrk_nSCTSharedHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nBLayerSplitHits", &ph_vx_convTrk_nBLayerSplitHits, &b_ph_vx_convTrk_nBLayerSplitHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixSplitHits", &ph_vx_convTrk_nPixSplitHits, &b_ph_vx_convTrk_nPixSplitHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nBLayerOutliers", &ph_vx_convTrk_nBLayerOutliers, &b_ph_vx_convTrk_nBLayerOutliers);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixelOutliers", &ph_vx_convTrk_nPixelOutliers, &b_ph_vx_convTrk_nPixelOutliers);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTOutliers", &ph_vx_convTrk_nSCTOutliers, &b_ph_vx_convTrk_nSCTOutliers);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTOutliers", &ph_vx_convTrk_nTRTOutliers, &b_ph_vx_convTrk_nTRTOutliers);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTHighTOutliers", &ph_vx_convTrk_nTRTHighTOutliers, &b_ph_vx_convTrk_nTRTHighTOutliers);
   fChain->SetBranchAddress("ph_vx_convTrk_nContribPixelLayers", &ph_vx_convTrk_nContribPixelLayers, &b_ph_vx_convTrk_nContribPixelLayers);
   fChain->SetBranchAddress("ph_vx_convTrk_nGangedPixels", &ph_vx_convTrk_nGangedPixels, &b_ph_vx_convTrk_nGangedPixels);
   fChain->SetBranchAddress("ph_vx_convTrk_nGangedFlaggedFakes", &ph_vx_convTrk_nGangedFlaggedFakes, &b_ph_vx_convTrk_nGangedFlaggedFakes);
   fChain->SetBranchAddress("ph_vx_convTrk_nPixelSpoiltHits", &ph_vx_convTrk_nPixelSpoiltHits, &b_ph_vx_convTrk_nPixelSpoiltHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTDoubleHoles", &ph_vx_convTrk_nSCTDoubleHoles, &b_ph_vx_convTrk_nSCTDoubleHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nSCTSpoiltHits", &ph_vx_convTrk_nSCTSpoiltHits, &b_ph_vx_convTrk_nSCTSpoiltHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTDeadStraws", &ph_vx_convTrk_nTRTDeadStraws, &b_ph_vx_convTrk_nTRTDeadStraws);
   fChain->SetBranchAddress("ph_vx_convTrk_nTRTTubeHits", &ph_vx_convTrk_nTRTTubeHits, &b_ph_vx_convTrk_nTRTTubeHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nOutliersOnTrack", &ph_vx_convTrk_nOutliersOnTrack, &b_ph_vx_convTrk_nOutliersOnTrack);
   fChain->SetBranchAddress("ph_vx_convTrk_standardDeviationOfChi2OS", &ph_vx_convTrk_standardDeviationOfChi2OS, &b_ph_vx_convTrk_standardDeviationOfChi2OS);
   fChain->SetBranchAddress("ph_vx_convTrk_expectBLayerHit", &ph_vx_convTrk_expectBLayerHit, &b_ph_vx_convTrk_expectBLayerHit);
   fChain->SetBranchAddress("ph_vx_convTrk_nMDTHits", &ph_vx_convTrk_nMDTHits, &b_ph_vx_convTrk_nMDTHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nCSCEtaHits", &ph_vx_convTrk_nCSCEtaHits, &b_ph_vx_convTrk_nCSCEtaHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nCSCPhiHits", &ph_vx_convTrk_nCSCPhiHits, &b_ph_vx_convTrk_nCSCPhiHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nRPCEtaHits", &ph_vx_convTrk_nRPCEtaHits, &b_ph_vx_convTrk_nRPCEtaHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nRPCPhiHits", &ph_vx_convTrk_nRPCPhiHits, &b_ph_vx_convTrk_nRPCPhiHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nTGCEtaHits", &ph_vx_convTrk_nTGCEtaHits, &b_ph_vx_convTrk_nTGCEtaHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nTGCPhiHits", &ph_vx_convTrk_nTGCPhiHits, &b_ph_vx_convTrk_nTGCPhiHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nMdtHoles", &ph_vx_convTrk_nMdtHoles, &b_ph_vx_convTrk_nMdtHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nCscEtaHoles", &ph_vx_convTrk_nCscEtaHoles, &b_ph_vx_convTrk_nCscEtaHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nCscPhiHoles", &ph_vx_convTrk_nCscPhiHoles, &b_ph_vx_convTrk_nCscPhiHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nRpcEtaHoles", &ph_vx_convTrk_nRpcEtaHoles, &b_ph_vx_convTrk_nRpcEtaHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nRpcPhiHoles", &ph_vx_convTrk_nRpcPhiHoles, &b_ph_vx_convTrk_nRpcPhiHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nTgcEtaHoles", &ph_vx_convTrk_nTgcEtaHoles, &b_ph_vx_convTrk_nTgcEtaHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nTgcPhiHoles", &ph_vx_convTrk_nTgcPhiHoles, &b_ph_vx_convTrk_nTgcPhiHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_nHits", &ph_vx_convTrk_nHits, &b_ph_vx_convTrk_nHits);
   fChain->SetBranchAddress("ph_vx_convTrk_nHoles", &ph_vx_convTrk_nHoles, &b_ph_vx_convTrk_nHoles);
   fChain->SetBranchAddress("ph_vx_convTrk_hitPattern", &ph_vx_convTrk_hitPattern, &b_ph_vx_convTrk_hitPattern);
   fChain->SetBranchAddress("ph_vx_convTrk_nSiHits", &ph_vx_convTrk_nSiHits, &b_ph_vx_convTrk_nSiHits);
   fChain->SetBranchAddress("ph_vx_convTrk_TRTHighTHitsRatio", &ph_vx_convTrk_TRTHighTHitsRatio, &b_ph_vx_convTrk_TRTHighTHitsRatio);
   fChain->SetBranchAddress("ph_vx_convTrk_TRTHighTOutliersRatio", &ph_vx_convTrk_TRTHighTOutliersRatio, &b_ph_vx_convTrk_TRTHighTOutliersRatio);
   fChain->SetBranchAddress("ph_vx_convTrk_eProbabilityComb", &ph_vx_convTrk_eProbabilityComb, &b_ph_vx_convTrk_eProbabilityComb);
   fChain->SetBranchAddress("ph_vx_convTrk_eProbabilityHT", &ph_vx_convTrk_eProbabilityHT, &b_ph_vx_convTrk_eProbabilityHT);
   fChain->SetBranchAddress("ph_vx_convTrk_eProbabilityToT", &ph_vx_convTrk_eProbabilityToT, &b_ph_vx_convTrk_eProbabilityToT);
   fChain->SetBranchAddress("ph_vx_convTrk_eProbabilityBrem", &ph_vx_convTrk_eProbabilityBrem, &b_ph_vx_convTrk_eProbabilityBrem);
   fChain->SetBranchAddress("ph_vx_convTrk_chi2", &ph_vx_convTrk_chi2, &b_ph_vx_convTrk_chi2);
   fChain->SetBranchAddress("ph_vx_convTrk_ndof", &ph_vx_convTrk_ndof, &b_ph_vx_convTrk_ndof);
   fChain->SetBranchAddress("ph_truth_isConv", &ph_truth_isConv, &b_ph_truth_isConv);
   fChain->SetBranchAddress("ph_truth_isBrem", &ph_truth_isBrem, &b_ph_truth_isBrem);
   fChain->SetBranchAddress("ph_truth_isFromHardProc", &ph_truth_isFromHardProc, &b_ph_truth_isFromHardProc);
   fChain->SetBranchAddress("ph_truth_isPhotonFromHardProc", &ph_truth_isPhotonFromHardProc, &b_ph_truth_isPhotonFromHardProc);
   fChain->SetBranchAddress("ph_truth_Rconv", &ph_truth_Rconv, &b_ph_truth_Rconv);
   fChain->SetBranchAddress("ph_truth_zconv", &ph_truth_zconv, &b_ph_truth_zconv);
   fChain->SetBranchAddress("ph_deltaEmax2", &ph_deltaEmax2, &b_ph_deltaEmax2);
   fChain->SetBranchAddress("ph_calibHitsShowerDepth", &ph_calibHitsShowerDepth, &b_ph_calibHitsShowerDepth);
   fChain->SetBranchAddress("ph_isIso", &ph_isIso, &b_ph_isIso);
   fChain->SetBranchAddress("ph_mvaptcone20", &ph_mvaptcone20, &b_ph_mvaptcone20);
   fChain->SetBranchAddress("ph_mvaptcone30", &ph_mvaptcone30, &b_ph_mvaptcone30);
   fChain->SetBranchAddress("ph_mvaptcone40", &ph_mvaptcone40, &b_ph_mvaptcone40);
   fChain->SetBranchAddress("ph_topoEtcone60", &ph_topoEtcone60, &b_ph_topoEtcone60);
   fChain->SetBranchAddress("ph_vx_Chi2", &ph_vx_Chi2, &b_ph_vx_Chi2);
   fChain->SetBranchAddress("ph_vx_Dcottheta", &ph_vx_Dcottheta, &b_ph_vx_Dcottheta);
   fChain->SetBranchAddress("ph_vx_Dphi", &ph_vx_Dphi, &b_ph_vx_Dphi);
   fChain->SetBranchAddress("ph_vx_Dist", &ph_vx_Dist, &b_ph_vx_Dist);
   fChain->SetBranchAddress("ph_vx_DR1R2", &ph_vx_DR1R2, &b_ph_vx_DR1R2);
   fChain->SetBranchAddress("ph_CaloPointing_eta", &ph_CaloPointing_eta, &b_ph_CaloPointing_eta);
   fChain->SetBranchAddress("ph_CaloPointing_sigma_eta", &ph_CaloPointing_sigma_eta, &b_ph_CaloPointing_sigma_eta);
   fChain->SetBranchAddress("ph_CaloPointing_zvertex", &ph_CaloPointing_zvertex, &b_ph_CaloPointing_zvertex);
   fChain->SetBranchAddress("ph_CaloPointing_sigma_zvertex", &ph_CaloPointing_sigma_zvertex, &b_ph_CaloPointing_sigma_zvertex);
   fChain->SetBranchAddress("ph_HPV_eta", &ph_HPV_eta, &b_ph_HPV_eta);
   fChain->SetBranchAddress("ph_HPV_sigma_eta", &ph_HPV_sigma_eta, &b_ph_HPV_sigma_eta);
   fChain->SetBranchAddress("ph_HPV_zvertex", &ph_HPV_zvertex, &b_ph_HPV_zvertex);
   fChain->SetBranchAddress("ph_HPV_sigma_zvertex", &ph_HPV_sigma_zvertex, &b_ph_HPV_sigma_zvertex);
   fChain->SetBranchAddress("ph_NN_passes", &ph_NN_passes, &b_ph_NN_passes);
   fChain->SetBranchAddress("ph_NN_discriminant", &ph_NN_discriminant, &b_ph_NN_discriminant);
   fChain->SetBranchAddress("ph_ES0_real", &ph_ES0_real, &b_ph_ES0_real);
   fChain->SetBranchAddress("ph_ES1_real", &ph_ES1_real, &b_ph_ES1_real);
   fChain->SetBranchAddress("ph_ES2_real", &ph_ES2_real, &b_ph_ES2_real);
   fChain->SetBranchAddress("ph_ES3_real", &ph_ES3_real, &b_ph_ES3_real);
   fChain->SetBranchAddress("ph_EcellS0", &ph_EcellS0, &b_ph_EcellS0);
   fChain->SetBranchAddress("ph_etacellS0", &ph_etacellS0, &b_ph_etacellS0);
   fChain->SetBranchAddress("ph_Etcone40_ED_corrected", &ph_Etcone40_ED_corrected, &b_ph_Etcone40_ED_corrected);
   fChain->SetBranchAddress("ph_Etcone40_corrected", &ph_Etcone40_corrected, &b_ph_Etcone40_corrected);
   fChain->SetBranchAddress("ph_topoEtcone20_corrected", &ph_topoEtcone20_corrected, &b_ph_topoEtcone20_corrected);
   fChain->SetBranchAddress("ph_topoEtcone30_corrected", &ph_topoEtcone30_corrected, &b_ph_topoEtcone30_corrected);
   fChain->SetBranchAddress("ph_topoEtcone40_corrected", &ph_topoEtcone40_corrected, &b_ph_topoEtcone40_corrected);
   fChain->SetBranchAddress("ph_ED_median", &ph_ED_median, &b_ph_ED_median);
   fChain->SetBranchAddress("ph_ED_sigma", &ph_ED_sigma, &b_ph_ED_sigma);
   fChain->SetBranchAddress("ph_ED_Njets", &ph_ED_Njets, &b_ph_ED_Njets);
   fChain->SetBranchAddress("ph_convIP", &ph_convIP, &b_ph_convIP);
   fChain->SetBranchAddress("ph_convIPRev", &ph_convIPRev, &b_ph_convIPRev);
   fChain->SetBranchAddress("ph_el_index", &ph_el_index, &b_ph_el_index);
   fChain->SetBranchAddress("ph_EF_dr", &ph_EF_dr, &b_ph_EF_dr);
   fChain->SetBranchAddress("ph_EF_index", &ph_EF_index, &b_ph_EF_index);
   fChain->SetBranchAddress("ph_L2_dr", &ph_L2_dr, &b_ph_L2_dr);
   fChain->SetBranchAddress("ph_L1_dr", &ph_L1_dr, &b_ph_L1_dr);
   fChain->SetBranchAddress("ph_L1_index", &ph_L1_index, &b_ph_L1_index);
   fChain->SetBranchAddress("mcevt_n", &mcevt_n, &b_mcevt_n);
   fChain->SetBranchAddress("mcevt_signal_process_id", &mcevt_signal_process_id, &b_mcevt_signal_process_id);
   fChain->SetBranchAddress("mcevt_event_number", &mcevt_event_number, &b_mcevt_event_number);
   fChain->SetBranchAddress("mcevt_event_scale", &mcevt_event_scale, &b_mcevt_event_scale);
   fChain->SetBranchAddress("mcevt_alphaQCD", &mcevt_alphaQCD, &b_mcevt_alphaQCD);
   fChain->SetBranchAddress("mcevt_alphaQED", &mcevt_alphaQED, &b_mcevt_alphaQED);
   fChain->SetBranchAddress("mcevt_pdf_id1", &mcevt_pdf_id1, &b_mcevt_pdf_id1);
   fChain->SetBranchAddress("mcevt_pdf_id2", &mcevt_pdf_id2, &b_mcevt_pdf_id2);
   fChain->SetBranchAddress("mcevt_pdf_x1", &mcevt_pdf_x1, &b_mcevt_pdf_x1);
   fChain->SetBranchAddress("mcevt_pdf_x2", &mcevt_pdf_x2, &b_mcevt_pdf_x2);
   fChain->SetBranchAddress("mcevt_pdf_scale", &mcevt_pdf_scale, &b_mcevt_pdf_scale);
   fChain->SetBranchAddress("mcevt_pdf1", &mcevt_pdf1, &b_mcevt_pdf1);
   fChain->SetBranchAddress("mcevt_pdf2", &mcevt_pdf2, &b_mcevt_pdf2);
   fChain->SetBranchAddress("mcevt_weight", &mcevt_weight, &b_mcevt_weight);
   fChain->SetBranchAddress("mcVx_n", &mcVx_n, &b_mcVx_n);
   fChain->SetBranchAddress("mcVx_x", &mcVx_x, &b_mcVx_x);
   fChain->SetBranchAddress("mcVx_y", &mcVx_y, &b_mcVx_y);
   fChain->SetBranchAddress("mcVx_z", &mcVx_z, &b_mcVx_z);
   fChain->SetBranchAddress("mc_n", &mc_n, &b_mc_n);
   fChain->SetBranchAddress("mc_gen_E", &mc_gen_E, &b_mc_gen_E);
   fChain->SetBranchAddress("mc_gen_pt", &mc_gen_pt, &b_mc_gen_pt);
   fChain->SetBranchAddress("mc_gen_eta", &mc_gen_eta, &b_mc_gen_eta);
   fChain->SetBranchAddress("mc_gen_phi", &mc_gen_phi, &b_mc_gen_phi);
   fChain->SetBranchAddress("mc_gen_type", &mc_gen_type, &b_mc_gen_type);
   fChain->SetBranchAddress("mc_gen_status", &mc_gen_status, &b_mc_gen_status);
   fChain->SetBranchAddress("mc_gen_barcode", &mc_gen_barcode, &b_mc_gen_barcode);
   fChain->SetBranchAddress("mc_gen_mothertype", &mc_gen_mothertype, &b_mc_gen_mothertype);
   fChain->SetBranchAddress("mc_gen_motherbarcode", &mc_gen_motherbarcode, &b_mc_gen_motherbarcode);
   fChain->SetBranchAddress("mc_perigee_ok", &mc_perigee_ok, &b_mc_perigee_ok);
   fChain->SetBranchAddress("mc_perigee_d0", &mc_perigee_d0, &b_mc_perigee_d0);
   fChain->SetBranchAddress("mc_perigee_z0", &mc_perigee_z0, &b_mc_perigee_z0);
   fChain->SetBranchAddress("mc_perigee_phi", &mc_perigee_phi, &b_mc_perigee_phi);
   fChain->SetBranchAddress("mc_perigee_theta", &mc_perigee_theta, &b_mc_perigee_theta);
   fChain->SetBranchAddress("mc_perigee_qoverp", &mc_perigee_qoverp, &b_mc_perigee_qoverp);
   fChain->SetBranchAddress("mc_charge", &mc_charge, &b_mc_charge);
   fChain->SetBranchAddress("mc_child_n", &mc_child_n, &b_mc_child_n);
   fChain->SetBranchAddress("mc_child_barcode", &mc_child_barcode, &b_mc_child_barcode);
   fChain->SetBranchAddress("mc_child_pdg", &mc_child_pdg, &b_mc_child_pdg);
   fChain->SetBranchAddress("mc_begVtx_x", &mc_begVtx_x, &b_mc_begVtx_x);
   fChain->SetBranchAddress("mc_begVtx_y", &mc_begVtx_y, &b_mc_begVtx_y);
   fChain->SetBranchAddress("mc_begVtx_z", &mc_begVtx_z, &b_mc_begVtx_z);
   fChain->SetBranchAddress("mc_begVtx_barcode", &mc_begVtx_barcode, &b_mc_begVtx_barcode);
   fChain->SetBranchAddress("mc_endVtx_x", &mc_endVtx_x, &b_mc_endVtx_x);
   fChain->SetBranchAddress("mc_endVtx_y", &mc_endVtx_y, &b_mc_endVtx_y);
   fChain->SetBranchAddress("mc_endVtx_z", &mc_endVtx_z, &b_mc_endVtx_z);
   fChain->SetBranchAddress("mc_endVtx_barcode", &mc_endVtx_barcode, &b_mc_endVtx_barcode);
   fChain->SetBranchAddress("mc_unstable_n", &mc_unstable_n, &b_mc_unstable_n);
   fChain->SetBranchAddress("mc_unstable_gen_pt", &mc_unstable_gen_pt, &b_mc_unstable_gen_pt);
   fChain->SetBranchAddress("mc_unstable_gen_eta", &mc_unstable_gen_eta, &b_mc_unstable_gen_eta);
   fChain->SetBranchAddress("mc_unstable_gen_phi", &mc_unstable_gen_phi, &b_mc_unstable_gen_phi);
   fChain->SetBranchAddress("mc_unstable_gen_energy", &mc_unstable_gen_energy, &b_mc_unstable_gen_energy);
   fChain->SetBranchAddress("mc_unstable_perigee_ok", &mc_unstable_perigee_ok, &b_mc_unstable_perigee_ok);
   fChain->SetBranchAddress("mc_unstable_perigee_d0", &mc_unstable_perigee_d0, &b_mc_unstable_perigee_d0);
   fChain->SetBranchAddress("mc_unstable_perigee_z0", &mc_unstable_perigee_z0, &b_mc_unstable_perigee_z0);
   fChain->SetBranchAddress("mc_unstable_perigee_phi", &mc_unstable_perigee_phi, &b_mc_unstable_perigee_phi);
   fChain->SetBranchAddress("mc_unstable_perigee_theta", &mc_unstable_perigee_theta, &b_mc_unstable_perigee_theta);
   fChain->SetBranchAddress("mc_unstable_perigee_qoverp", &mc_unstable_perigee_qoverp, &b_mc_unstable_perigee_qoverp);
   fChain->SetBranchAddress("mc_unstable_pdg", &mc_unstable_pdg, &b_mc_unstable_pdg);
   fChain->SetBranchAddress("mc_unstable_charge", &mc_unstable_charge, &b_mc_unstable_charge);
   fChain->SetBranchAddress("mc_unstable_barcode", &mc_unstable_barcode, &b_mc_unstable_barcode);
   fChain->SetBranchAddress("mc_unstable_status", &mc_unstable_status, &b_mc_unstable_status);
   fChain->SetBranchAddress("mc_unstable_mother_pdg", &mc_unstable_mother_pdg, &b_mc_unstable_mother_pdg);
   fChain->SetBranchAddress("mc_unstable_mother_barcode", &mc_unstable_mother_barcode, &b_mc_unstable_mother_barcode);
   fChain->SetBranchAddress("mc_unstable_child_n", &mc_unstable_child_n, &b_mc_unstable_child_n);
   fChain->SetBranchAddress("mc_unstable_child_barcode", &mc_unstable_child_barcode, &b_mc_unstable_child_barcode);
   fChain->SetBranchAddress("mc_unstable_begVtx_x", &mc_unstable_begVtx_x, &b_mc_unstable_begVtx_x);
   fChain->SetBranchAddress("mc_unstable_begVtx_y", &mc_unstable_begVtx_y, &b_mc_unstable_begVtx_y);
   fChain->SetBranchAddress("mc_unstable_begVtx_z", &mc_unstable_begVtx_z, &b_mc_unstable_begVtx_z);
   fChain->SetBranchAddress("mc_unstable_begVtx_barcode", &mc_unstable_begVtx_barcode, &b_mc_unstable_begVtx_barcode);
   fChain->SetBranchAddress("mc_unstable_endVtx_x", &mc_unstable_endVtx_x, &b_mc_unstable_endVtx_x);
   fChain->SetBranchAddress("mc_unstable_endVtx_y", &mc_unstable_endVtx_y, &b_mc_unstable_endVtx_y);
   fChain->SetBranchAddress("mc_unstable_endVtx_z", &mc_unstable_endVtx_z, &b_mc_unstable_endVtx_z);
   fChain->SetBranchAddress("mc_unstable_endVtx_barcode", &mc_unstable_endVtx_barcode, &b_mc_unstable_endVtx_barcode);
   Notify();
}

Bool_t MonteCarlo::Notify()
{
   // The Notify() function is called when a new file is opened. This
   // can be either for a new TTree in a TChain or when when a new TTree
   // is started when using PROOF. It is normally not necessary to make changes
   // to the generated code, but the routine can be extended by the
   // user if needed. The return value is currently not used.

   return kTRUE;
}

void MonteCarlo::Show(Long64_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t MonteCarlo::Cut(Long64_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
#endif // #ifdef MonteCarlo_cxx
